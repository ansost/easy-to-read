,Unnamed: 0.3,Unnamed: 0.2,Unnamed: 0.1,Unnamed: 0,sent-id,topic,phrase,phrase_number,genre,timestamp,user,phrase_tokenized,num_statements,statement_spans,english,amr,amr_prolog
0,0,0,0,0,989,alchemie,Eine sehr bekannte Alchemisten war Maria die Jüdin.,2_long,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=sehr 2:=bekannte 3:=Alchemisten 4:=war 5:=Maria 6:=die 7:=Jüdin.,1,,A very famous alchemist was Mary the Jewess.,"['# ::snt A very famous alchemist was Mary the Jewess.\n(a / alchemist\n      :domain (p / person\n            :name (n / name\n                  :op1 ""Mary""\n                  :op2 ""the""\n                  :op3 ""Jewess"")\n            :ARG1-of (f / fame-01\n                  :degree (v / very))))']","[a, attr-instance, alchemist, attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mary"", attr-op2, ""the"", attr-op3, ""jewess""], attr-arg1_of, [f, attr-instance, fame_01, attr-degree, [v, attr-instance, very]]]]"
1,1,1,1,1,990,alchemie,Alchemisten wollen etwas ver-bessern.,3_long,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alchemisten 1:=wollen 2:=etwas 3:=ver-bessern.,1,,Alchemists want to improve something.,['# ::snt Alchemists want to improve something.\n(w / want-01\n      :ARG0 (c / chemist)\n      :ARG1 (ii / improve-01\n            :ARG0chemist (s / something)))'],"[w, attr-instance, want_01, attr-arg0, [c, attr-instance, chemist], attr-arg1, [ii, attr-instance, improve_01, attr-arg0chemist, [s, attr-instance, something]]]"
2,2,2,2,2,991,alchemie,"Zum Beispiel, \newline wollen sie kranke Menschen gesund machen.",4_long,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Zum 1:=Beispiel, 2:=\newline 3:=wollen 4:=sie 5:=kranke 6:=Menschen 7:=gesund 8:=machen.",2,"[[3, 4], [5, 6, 7, 8]]","For example, \newline they want to make sick people healthy.","['# ::snt For example, \\newline they want to make sick people healthy.\n(e / exemplify-01\n      :ARG0 (w / want-01\n            :ARG0 (t / they)\n            :ARG1 (m / make-02\n                  :ARG0 t\n                  :ARG1 (h / healthy\n                        :domain (p / person\n                              :ARG1-of (s / sick-05))))))']","[e, attr-instance, exemplify_01, attr-arg0, [w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [m, attr-instance, make_02, attr-arg0, t, attr-arg1, [h, attr-instance, healthy, attr-domain, [p, attr-instance, person, attr-arg1_of, [s, attr-instance, sick_05]]]]]]"
3,3,3,3,3,992,alchemie,Alchemisten haben Athanoren benutzt.,5_long,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alchemisten 1:=haben 2:=Athanoren 3:=benutzt.,1,,Alchemists used athanors.,"['# ::snt Alchemists used athanors.\n(u / use-01\n      :ARG0 (c / chemist)\n      :ARG1 (p / product\n            :name (n / name\n                  :op1 ""Athanors"")))']","[u, attr-instance, use_01, attr-arg0, [c, attr-instance, chemist], attr-arg1, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""athanors""]]]"
4,4,4,4,4,993,alchemie,Sue haben Schwarz-pulver erfunden.,6_long,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sue 1:=haben 2:=Schwarz-pulver 3:=erfunden.,1,,Sue invented black powder.,"['# ::snt Sue invented black powder.\n(ii / invent-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Sue""))\n      :ARG1 (p2 / powder\n            :ARG1-of (b / black-04)))']","[ii, attr-instance, invent_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""sue""]], attr-arg1, [p2, attr-instance, powder, attr-arg1_of, [b, attr-instance, black_04]]]"
5,5,5,5,5,994,alchemie,Und sie haben Porzellan erfunden.,7_long,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=haben 3:=Porzellan 4:=erfunden.,1,,And they invented porcelain.,"['# ::snt And they invented porcelain.\n(a / and\n      :op2 (ii / invent-01\n            :ARG0 (t / they)\n            :ARG1 (p / product\n                  :name (n / name\n                        :op1 ""porcelain""))))']","[a, attr-instance, and, attr-op2, [ii, attr-instance, invent_01, attr-arg0, [t, attr-instance, they], attr-arg1, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""porcelain""]]]]"
6,6,6,6,6,995,alchemie,Alchemie ist ein arabisches Wort.,8_long,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alchemie 1:=ist 2:=ein 3:=arabisches 4:=Wort.,1,,Alchemy is an Arabic word.,"['# ::snt Alchemy is an Arabic word.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""Arabic""))\n      :domain (c / chemy))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""arabic""]], attr-domain, [c, attr-instance, chemy]]"
7,7,7,7,7,996,alchemie,Alchemie ist Chemie.,0_short,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alchemie 1:=ist 2:=Chemie.,1,,Alchemy is chemistry.,['# ::snt Alchemy is chemistry.\n(c / chemistry\n      :domain (a / alchemy))'],"[c, attr-instance, chemistry, attr-domain, [a, attr-instance, alchemy]]"
8,8,8,8,8,997,alchemie,Es werden Versuche und Experimente gemacht.,1_short,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=werden 2:=Versuche 3:=und 4:=Experimente 5:=gemacht.,2,"[[2], [4]]",Tests and experiments are carried out.,['# ::snt Tests and experiments are carried out.\n(c / carry-out-03\n      :ARG1 (a / and\n            :op1 (t / test-01)\n            :op2 (e / experiment-01)))'],"[c, attr-instance, carry_out_03, attr-arg1, [a, attr-instance, and, attr-op1, [t, attr-instance, test_01], attr-op2, [e, attr-instance, experiment_01]]]"
9,9,9,9,9,998,alchemie,Damit man versteht wie etwas funktioniert.,2_short,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=man 2:=versteht 3:=wie 4:=etwas 5:=funktioniert.,2,"[[0, 1, 2], [3, 4, 5]]",So that you understand how something works.,['# ::snt So that you understand how something works.\n(c / cause-01\n      :ARG1 (u / understand-01\n            :ARG0 (y / you)\n            :ARG1 (t / thing\n                  :manner-of (w / work-09\n                        :ARG1 (s / something)))))'],"[c, attr-instance, cause_01, attr-arg1, [u, attr-instance, understand_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-manner_of, [w, attr-instance, work_09, attr-arg1, [s, attr-instance, something]]]]]"
10,10,10,10,10,999,alchemie,Durch Alchemie entdeckt man neue Sachen.,3_short,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Durch 1:=Alchemie 2:=entdeckt 3:=man 4:=neue 5:=Sachen.,1,,Through alchemy you discover new things.,['# ::snt Through alchemy you discover new things.\n(d / discover-01\n      :ARG0 (y / you)\n      :ARG1 (t / thing\n            :ARG1-of (n / new-01))\n      :manner (a / alchemy))'],"[d, attr-instance, discover_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [n, attr-instance, new_01]], attr-manner, [a, attr-instance, alchemy]]"
11,11,11,11,11,1000,alchemie,Zum Beispiel wie man Porzellan macht.,4_short,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=wie 3:=man 4:=Porzellan 5:=macht.,1,,"For example, how to make porcelain.","['# ::snt For example, how to make porcelain.\n(e / exemplify-01\n      :ARG0 (t / thing\n            :manner-of (m / make-01\n                  :ARG1 (p / porcelain))))']","[e, attr-instance, exemplify_01, attr-arg0, [t, attr-instance, thing, attr-manner_of, [m, attr-instance, make_01, attr-arg1, [p, attr-instance, porcelain]]]]"
12,12,12,12,12,1001,alchemie,Oder wie man Gold macht.,5_short,Wissenschaft|Seiten_mit_defekten_Dateilinks,2022-10-03T06:15:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=wie 2:=man 3:=Gold 4:=macht.,1,,Or how to make gold.,['# ::snt Or how to make gold.\n(o / or\n      :op2 (t / thing\n            :manner-of (m / make-01\n                  :ARG1 (g / gold))))'],"[o, attr-instance, or, attr-op2, [t, attr-instance, thing, attr-manner_of, [m, attr-instance, make_01, attr-arg1, [g, attr-instance, gold]]]]"
13,13,13,13,13,1002,alcopop,Alkopops schmecken ähnlich wie Cola.,0_long,Ohne_Kategorie,2008-03-03T13:27:50Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Alkopops 1:=schmecken 2:=ähnlich 3:=wie 4:=Cola.,1,,Alcopops taste similar to cola.,['# ::snt Alcopops taste similar to cola.\n(t / taste-02\n      :ARG1 (a / alcohol)\n      :ARG2 (r / resemble-01\n            :ARG1 a\n            :ARG2 (c / cola)))'],"[t, attr-instance, taste_02, attr-arg1, [a, attr-instance, alcohol], attr-arg2, [r, attr-instance, resemble_01, attr-arg1, a, attr-arg2, [c, attr-instance, cola]]]"
14,14,14,14,14,1003,alcopop,Den Alkohol schmeckt man fast nicht.,1_long,Ohne_Kategorie,2008-03-03T13:27:50Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Den 1:=Alkohol 2:=schmeckt 3:=man 4:=fast 5:=nicht.,1,,You can hardly taste the alcohol.,['# ::snt You can hardly taste the alcohol.\n(p / possible-01\n      :ARG1 (t / taste-01\n            :ARG0 (y / you)\n            :ARG1 (a / alcohol)\n            :degree (h / hardly)))'],"[p, attr-instance, possible_01, attr-arg1, [t, attr-instance, taste_01, attr-arg0, [y, attr-instance, you], attr-arg1, [a, attr-instance, alcohol], attr-degree, [h, attr-instance, hardly]]]"
15,15,15,15,15,1004,alcopop,Meistens werden Alkopos in bunten Flaschen verkauft.,2_long,Ohne_Kategorie,2008-03-03T13:27:50Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Meistens 1:=werden 2:=Alkopos 3:=in 4:=bunten 5:=Flaschen 6:=verkauft.,2,"[[1, 2, 3, 6], [4]]",Alkopos are usually sold in colorful bottles.,"['# ::snt Alkopos are usually sold in colorful bottles.\n(s / sell-01\n      :ARG1 (p / product\n            :name (n / name\n                  :op1 ""Alkopos""))\n      :ARG4 (b / bottle\n            :mod (c / colorful))\n      :frequency (u / usual))']","[s, attr-instance, sell_01, attr-arg1, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""alkopos""]], attr-arg4, [b, attr-instance, bottle, attr-mod, [c, attr-instance, colorful]], attr-frequency, [u, attr-instance, usual]]"
16,16,16,16,16,1005,alcopop,Alcopop ist ein süßes Getränk.,0_short,Ohne_Kategorie,2008-03-03T13:27:50Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Alcopop 1:=ist 2:=ein 3:=süßes 4:=Getränk.,2,"[[0, 1, 4], [3]]",Alcopop is a sweet drink.,['# ::snt Alcopop is a sweet drink.\n(d / drink\n      :ARG1-of (s / sweet-05)\n      :domain (a / alcohol))'],"[d, attr-instance, drink, attr-arg1_of, [s, attr-instance, sweet_05], attr-domain, [a, attr-instance, alcohol]]"
17,17,17,17,17,1006,alcopop,In diesem Getränk ist Alkohol.,1_short,Ohne_Kategorie,2008-03-03T13:27:50Z,1165823e29d5567f66ef3bbbcbfabcad,0:=In 1:=diesem 2:=Getränk 3:=ist 4:=Alkohol.,1,,This drink contains alcohol.,['# ::snt This drink contains alcohol.\n(c / contain-01\n      :ARG0 (d / drink\n            :mod (t / this))\n      :ARG1 (a / alcohol))'],"[c, attr-instance, contain_01, attr-arg0, [d, attr-instance, drink, attr-mod, [t, attr-instance, this]], attr-arg1, [a, attr-instance, alcohol]]"
18,18,18,18,18,1007,aldous-huxley,Aldous Huxley kommt am 26. Juli 1894 auf die Welt.,0_long,Personen|Seiten_mit_defekten_Dateilinks,2022-01-31T17:31:47Z,e800bebc9060331edfac65e663a55570,0:=Aldous 1:=Huxley 2:=kommt 3:=am 4:=26. 5:=Juli 6:=1894 7:=auf 8:=die 9:=Welt.,1,,"Aldous Huxley was born on July 26, 1894.","['# ::snt Aldous Huxley was born on July 26, 1894.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Aldous""\n                  :op2 ""Huxley""))\n      :time (d / date-entity\n            :year 1894\n            :month 7\n            :day 26))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""aldous"", attr-op2, ""huxley""]], attr-time, [d, attr-instance, date_entity, attr-year, 1894, attr-month, 7, attr-day, 26]]"
19,19,19,19,22,1012,aldous-huxley,Aldous Huxley war ein Schrift-steller.,0_short,Personen|Seiten_mit_defekten_Dateilinks,2022-01-31T17:31:47Z,e800bebc9060331edfac65e663a55570,0:=Aldous 1:=Huxley 2:=war 3:=ein 4:=Schrift-steller.,1,,Aldous Huxley was a writer.,"['# ::snt Aldous Huxley was a writer.\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Aldous""\n                  :op2 ""Huxley"")))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""aldous"", attr-op2, ""huxley""]]]"
20,20,20,20,23,1013,aleppo,Aleppo ist eine sehr alte Stadt.,0_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Aleppo 1:=ist 2:=eine 3:=sehr 4:=alte 5:=Stadt.,2,"[[3, 4], [5]]",Aleppo is a very old city.,"['# ::snt Aleppo is a very old city.\n(c / city\n      :mod (o / old\n            :degree (v / very))\n      :domain (c2 / city\n            :name (n / name\n                  :op1 ""Aleppo"")))']","[c, attr-instance, city, attr-mod, [o, attr-instance, old, attr-degree, [v, attr-instance, very]], attr-domain, [c2, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""aleppo""]]]"
21,21,21,21,24,1014,aleppo,Menschen haben hier schon 3 Tausend Jahre vor Christus gelebt.,1_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Menschen 1:=haben 2:=hier 3:=schon 4:=3 5:=Tausend 6:=Jahre 7:=vor 8:=Christus 9:=gelebt.,1,,People lived here as early as 3 thousand years before Christ.,"['# ::snt People lived here as early as 3 thousand years before Christ.\n(l / live-01\n      :ARG0 (p / person)\n      :location (h / here)\n      :time (b / before\n            :op1 (p2 / person\n                  :name (n / name\n                        :op1 ""Christ""))\n            :quant (t / temporal-quantity\n                  :quant 3000\n                  :unit (y / year)\n                  :mod (e / early))))']","[l, attr-instance, live_01, attr-arg0, [p, attr-instance, person], attr-location, [h, attr-instance, here], attr-time, [b, attr-instance, before, attr-op1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""christ""]], attr-quant, [t, attr-instance, temporal_quantity, attr-quant, 3000, attr-unit, [y, attr-instance, year], attr-mod, [e, attr-instance, early]]]]"
22,22,22,22,25,1015,aleppo,"Im Jahr 2008 haben ungefähr 1,7 Millionen Menschen in Aleppo gewohnt.",2_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,"0:=Im 1:=Jahr 2:=2008 3:=haben 4:=ungefähr 5:=1,7 6:=Millionen 7:=Menschen 8:=in 9:=Aleppo 10:=gewohnt.",2,"[[0, 1, 2], [4, 5, 6]]","In 2008, approximately 1.7 million people lived in Aleppo.","['# ::snt In 2008, approximately 1.7 million people lived in Aleppo.\n(l / live-01\n      :ARG0 (p / person\n            :quant (a / approximately\n                  :op1 1700000))\n      :location (c / city\n            :name (n / name\n                  :op1 ""Aleppo""))\n      :time (d / date-entity\n            :year 2008))']","[l, attr-instance, live_01, attr-arg0, [p, attr-instance, person, attr-quant, [a, attr-instance, approximately, attr-op1, 1700000]], attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""aleppo""]], attr-time, [d, attr-instance, date_entity, attr-year, 2008]]"
23,23,23,23,26,1016,aleppo,Die meisten Menschen in Aleppo sind Araber und Kurden.,3_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=meisten 2:=Menschen 3:=in 4:=Aleppo 5:=sind 6:=Araber 7:=und 8:=Kurden.,2,"[[6], [8]]",Most people in Aleppo are Arabs and Kurds.,"['# ::snt Most people in Aleppo are Arabs and Kurds.\n(p / person\n      :quant (m / most)\n      :location (c / city\n            :name (n / name\n                  :op1 ""Aleppo""))\n      :consist-of (a / and\n            :op1 (p2 / person\n                  :mod (e / ethnic-group\n                        :name (n2 / name\n                              :op1 ""Arab"")))\n            :op2 (p3 / person\n                  :mod (e2 / ethnic-group\n                        :name (n3 / name\n                              :op1 ""Kurd"")))))']","[p, attr-instance, person, attr-quant, [m, attr-instance, most], attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""aleppo""]], attr-consist_of, [a, attr-instance, and, attr-op1, [p2, attr-instance, person, attr-mod, [e, attr-instance, ethnic_group, attr-name, [n2, attr-instance, name, attr-op1, ""arab""]]], attr-op2, [p3, attr-instance, person, attr-mod, [e2, attr-instance, ethnic_group, attr-name, [n3, attr-instance, name, attr-op1, ""kurd""]]]]]"
24,24,24,24,27,1017,aleppo,Das heißt: \newline Die meisten Menschen in Aleppo sind Muslime.,4_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Das 1:=heißt: 2:=\newline 3:=Die 4:=meisten 5:=Menschen 6:=in 7:=Aleppo 8:=sind 9:=Muslime.,1,,This means: \newline Most people in Aleppo are Muslims.,"['# ::snt This means: \\newline Most people in Aleppo are Muslims.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (r / religious-group\n            :name (n / name\n                  :op1 ""Muslim"")\n            :domain (p / person\n                  :quant (m2 / most)\n                  :location (c / city\n                        :name (n2 / name\n                              :op1 ""Aleppo""))))\n      :mod (n3 / newline))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""muslim""], attr-domain, [p, attr-instance, person, attr-quant, [m2, attr-instance, most], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""aleppo""]]]], attr-mod, [n3, attr-instance, newline]]"
25,25,25,25,28,1018,aleppo,In Aleppo gibt es auch Christ.,5_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=In 1:=Aleppo 2:=gibt 3:=es 4:=auch 5:=Christ.,1,,There are also Christians in Aleppo.,"['# ::snt There are also Christians in Aleppo.\n(p / person\n      :mod (r / religious-group\n            :name (n / name\n                  :op1 ""Christian""))\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""Aleppo""))\n      :mod (a / also))']","[p, attr-instance, person, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""christian""]], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""aleppo""]], attr-mod, [a, attr-instance, also]]"
26,26,26,26,29,1019,aleppo,Ungefähr 15 Prozent der Menschen in Aleppo sind Christen.,6_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Ungefähr 1:=15 2:=Prozent 3:=der 4:=Menschen 5:=in 6:=Aleppo 7:=sind 8:=Christen.,1,,About 15 percent of the people in Aleppo are Christians.,"['# ::snt About 15 percent of the people in Aleppo are Christians.\n(ii / include-91\n      :ARG1 (p / person\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Christian"")))\n      :ARG2 (p2 / person\n            :location (c / city\n                  :name (n2 / name\n                        :op1 ""Aleppo"")))\n      :ARG3 (a / about\n            :op1 (p3 / percentage-entity\n                  :value 15)))']","[ii, attr-instance, include_91, attr-arg1, [p, attr-instance, person, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""christian""]]], attr-arg2, [p2, attr-instance, person, attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""aleppo""]]], attr-arg3, [a, attr-instance, about, attr-op1, [p3, attr-instance, percentage_entity, attr-value, 15]]]"
27,27,27,27,30,1020,aleppo,Im Jahr 1952 hat ein Architekt neue Straßen geplant.,7_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Im 1:=Jahr 2:=1952 3:=hat 4:=ein 5:=Architekt 6:=neue 7:=Straßen 8:=geplant.,2,"[[0, 1, 2], [3, 5, 6, 7, 8]]",In 1952 an architect planned new streets.,['# ::snt In 1952 an architect planned new streets.\n(p / plan-01\n      :ARG0 (a / architect)\n      :ARG1 (s / street\n            :ARG1-of (n / new-01))\n      :time (d / date-entity\n            :year 1952))'],"[p, attr-instance, plan_01, attr-arg0, [a, attr-instance, architect], attr-arg1, [s, attr-instance, street, attr-arg1_of, [n, attr-instance, new_01]], attr-time, [d, attr-instance, date_entity, attr-year, 1952]]"
28,28,28,28,32,1022,aleppo,Ab dem Jahr 1970 waren Bau-arbeiter in der Alt-stadt.,9_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Ab 1:=dem 2:=Jahr 3:=1970 4:=waren 5:=Bau-arbeiter 6:=in 7:=der 8:=Alt-stadt.,2,"[[0, 1, 2, 3], [5, 6, 7, 8]]",From 1970 onwards there were construction workers in the old town.,['# ::snt From 1970 onwards there were construction workers in the old town.\n(b / be-located-at-91\n      :ARG1 (p / person\n            :ARG0-of (w / work-01\n                  :ARG1 (c / construct-01)))\n      :ARG2 (t / town\n            :mod (o / old))\n      :time (o2 / onwards\n            :op1 (d / date-entity\n                  :year 1970)))'],"[b, attr-instance, be_located_at_91, attr-arg1, [p, attr-instance, person, attr-arg0_of, [w, attr-instance, work_01, attr-arg1, [c, attr-instance, construct_01]]], attr-arg2, [t, attr-instance, town, attr-mod, [o, attr-instance, old]], attr-time, [o2, attr-instance, onwards, attr-op1, [d, attr-instance, date_entity, attr-year, 1970]]]"
29,29,29,29,33,1023,aleppo,Sie haben viele alte Häuser abgerissen.,10_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Sie 1:=haben 2:=viele 3:=alte 4:=Häuser 5:=abgerissen.,2,"[[0, 1, 4, 5], [2, 3]]",They demolished many old houses.,['# ::snt They demolished many old houses.\n(d / demolish-01\n      :ARG0 (t / they)\n      :ARG1 (h / house\n            :mod (o / old)\n            :quant (m / many)))'],"[d, attr-instance, demolish_01, attr-arg0, [t, attr-instance, they], attr-arg1, [h, attr-instance, house, attr-mod, [o, attr-instance, old], attr-quant, [m, attr-instance, many]]]"
30,30,30,30,34,1024,aleppo,"Und neue, moderne Wohn-blöcke gebaut.",11_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,"0:=Und 1:=neue, 2:=moderne 3:=Wohn-blöcke 4:=gebaut.",2,"[[2], [3]]","And new, modern apartment blocks were built.","['# ::snt And new, modern apartment blocks were built.\n(a / and\n      :op2 (b / build-01\n            :ARG1 (b2 / block\n                  :mod (a2 / apartment)\n                  :ARG1-of (n / new-01)\n                  :ARG1-of (m / modern-02))))']","[a, attr-instance, and, attr-op2, [b, attr-instance, build_01, attr-arg1, [b2, attr-instance, block, attr-mod, [a2, attr-instance, apartment], attr-arg1_of, [n, attr-instance, new_01], attr-arg1_of, [m, attr-instance, modern_02]]]]"
31,31,31,31,35,1025,aleppo,Im Jahr 1986 hat die UNESCO gesagt: \newline Die Alt-stadt von Aleppo ist jetzt Welt-kultur-erbe.,12_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Im 1:=Jahr 2:=1986 3:=hat 4:=die 5:=UNESCO 6:=gesagt: 7:=\newline 8:=Die 9:=Alt-stadt 10:=von 11:=Aleppo 12:=ist 13:=jetzt 14:=Welt-kultur-erbe.,4,"[[0, 1, 2], [3, 5, 6], [9, 10, 11, 12, 14], [13]]","In 1986, UNESCO said: \newline The Old City of Aleppo is now a World Heritage Site.","['# ::snt In 1986, UNESCO said:\n(s / say-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 ""UNESCO""))\n      :time (d / date-entity\n            :year 1986))', '# ::snt \\newline The Old City of Aleppo is now a World Heritage Site.\n(s / site\n      :mod (h / heritage\n            :mod (w / world))\n      :domain (c / city\n            :name (n / name\n                  :op1 ""Old""\n                  :op2 ""City"")\n            :location c\n            :name (n2 / name\n                  :op1 ""Aleppo""))\n      :time (n3 / now)\n      :mod (n4 / newline))']","[s, attr-instance, say_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""unesco""]], attr-time, [d, attr-instance, date_entity, attr-year, 1986]]"
32,32,32,32,36,1026,aleppo,In Syrien ist Bürger-krieg.,13_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=In 1:=Syrien 2:=ist 3:=Bürger-krieg.,1,,There is civil war in Syria.,"['# ::snt There is civil war in Syria.\n(w / war\n      :mod (c / civil)\n      :location (c2 / country\n            :name (n / name\n                  :op1 ""Syria"")))']","[w, attr-instance, war, attr-mod, [c, attr-instance, civil], attr-location, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""syria""]]]"
33,33,33,33,37,1028,aleppo,Viele Stadt-teile sind kaputt.,15_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Viele 1:=Stadt-teile 2:=sind 3:=kaputt.,1,,Many parts of the city are broken.,['# ::snt Many parts of the city are broken.\n(b / break-01\n      :ARG1 (p / part\n            :quant (m / many)\n            :part-of (c / city)))'],"[b, attr-instance, break_01, attr-arg1, [p, attr-instance, part, attr-quant, [m, attr-instance, many], attr-part_of, [c, attr-instance, city]]]"
34,34,34,34,38,1029,aleppo,Viele Bewohner sind geflüchtet.,16_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Viele 1:=Bewohner 2:=sind 3:=geflüchtet.,1,,Many residents have fled.,['# ::snt Many residents have fled.\n(f / flee-05\n      :ARG0 (p / person\n            :ARG0-of (r / reside-01)\n            :quant (m / many)))'],"[f, attr-instance, flee_05, attr-arg0, [p, attr-instance, person, attr-arg0_of, [r, attr-instance, reside_01], attr-quant, [m, attr-instance, many]]]"
35,35,35,35,39,1030,aleppo,Aleppo ist eine Stadt in Syrien.,0_short,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Aleppo 1:=ist 2:=eine 3:=Stadt 4:=in 5:=Syrien.,2,"[[0, 1, 3], [4, 5]]",Aleppo is a city in Syria.,"['# ::snt Aleppo is a city in Syria.\n(c / city\n      :domain (c2 / city\n            :name (n / name\n                  :op1 ""Aleppo""))\n      :location (c3 / country\n            :name (n2 / name\n                  :op1 ""Syria"")))']","[c, attr-instance, city, attr-domain, [c2, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""aleppo""]], attr-location, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""syria""]]]"
36,36,36,36,40,1031,aleppo,Aleppo ist die zweit-größte Stadt in Syrien.,1_short,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Aleppo 1:=ist 2:=die 3:=zweit-größte 4:=Stadt 5:=in 6:=Syrien.,2,"[[3, 4], [5, 6]]",Aleppo is the second largest city in Syria.,"['# ::snt Aleppo is the second largest city in Syria.\n(h / have-degree-91\n      :ARG1 (c / city\n            :name (n / name\n                  :op1 ""Aleppo""))\n      :ARG2 (l / large)\n      :ARG3 (m / most\n            :ord (o / ordinal-entity\n                  :value 2))\n      :ARG5 c\n      :location (c2 / country\n            :name (n2 / name\n                  :op1 ""Syria"")))']","[h, attr-instance, have_degree_91, attr-arg1, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""aleppo""]], attr-arg2, [l, attr-instance, large], attr-arg3, [m, attr-instance, most, attr-ord, [o, attr-instance, ordinal_entity, attr-value, 2]], attr-arg5, c, attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""syria""]]]"
37,37,37,37,41,1032,aleppo,Die größte Stadt in Syrien ist Damaskus.,2_short,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=größte 2:=Stadt 3:=in 4:=Syrien 5:=ist 6:=Damaskus.,3,"[[5, 6], [1], [3, 4]]",The largest city in Syria is Damascus.,"['# ::snt The largest city in Syria is Damascus.\n(h / have-degree-91\n      :ARG1 (c / city\n            :name (n / name\n                  :op1 ""Damascus"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""Syria"")))\n      :ARG2 (l / large)\n      :ARG3 (m / most))']","[h, attr-instance, have_degree_91, attr-arg1, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""damascus""], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""syria""]]], attr-arg2, [l, attr-instance, large], attr-arg3, [m, attr-instance, most]]"
38,38,38,38,42,1033,aleviten,Der Mann Ali ibn Abi Talib ist den Aleviten sehr wichtig.,0_long,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Der 1:=Mann 2:=Ali 3:=ibn 4:=Abi 5:=Talib 6:=ist 7:=den 8:=Aleviten 9:=sehr 10:=wichtig.,1,,The man Ali ibn Abi Talib is very important to the Alevis.,"['# ::snt The man Ali ibn Abi Talib is very important to the Alevis.\n(ii / important-01\n      :ARG1 (m / man\n            :name (n / name\n                  :op1 ""Ali""\n                  :op2 ""Bin""\n                  :op3 ""Abi""\n                  :op4 ""Talib""))\n      :ARG2 (r / religious-group\n            :name (n2 / name\n                  :op1 ""Alevis""))\n      :degree (v / very))']","[ii, attr-instance, important_01, attr-arg1, [m, attr-instance, man, attr-name, [n, attr-instance, name, attr-op1, ""ali"", attr-op2, ""bin"", attr-op3, ""abi"", attr-op4, ""talib""]], attr-arg2, [r, attr-instance, religious_group, attr-name, [n2, attr-instance, name, attr-op1, ""alevis""]], attr-degree, [v, attr-instance, very]]"
39,39,39,39,43,1034,aleviten,Dieser Mann ist der Schwieger-sohn von Mohammed.,1_long,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Dieser 1:=Mann 2:=ist 3:=der 4:=Schwieger-sohn 5:=von 6:=Mohammed.,1,,This man is the son-in-law of Mohammed.,"['# ::snt This man is the son-in-law of Mohammed.\n(h / have-rel-role-91\n      :ARG0 (m / man\n            :mod (t / this))\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Mohammed""))\n      :ARG2 (s / son-in-law))']","[h, attr-instance, have_rel_role_91, attr-arg0, [m, attr-instance, man, attr-mod, [t, attr-instance, this]], attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mohammed""]], attr-arg2, [s, attr-instance, son_in_law]]"
40,40,40,40,44,1035,aleviten,Die Religion der Aleviten ist etwas anders als die der meisten Muslime.,2_long,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Die 1:=Religion 2:=der 3:=Aleviten 4:=ist 5:=etwas 6:=anders 7:=als 8:=die 9:=der 10:=meisten 11:=Muslime.,1,,The religion of the Alevis is somewhat different from that of most Muslims.,"['# ::snt The religion of the Alevis is somewhat different from that of most Muslims.\n(d / differ-02\n      :ARG1 (r / religion\n            :poss (r2 / religious-group\n                  :name (n / name\n                        :op1 ""Alevis"")))\n      :ARG2 (r3 / religion\n            :poss (p / person\n                  :mod (r4 / religious-group\n                        :name (n2 / name\n                              :op1 ""Islam""))\n                  :quant (m / most)))\n      :degree (s / somewhat))']","[d, attr-instance, differ_02, attr-arg1, [r, attr-instance, religion, attr-poss, [r2, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""alevis""]]], attr-arg2, [r3, attr-instance, religion, attr-poss, [p, attr-instance, person, attr-mod, [r4, attr-instance, religious_group, attr-name, [n2, attr-instance, name, attr-op1, ""islam""]], attr-quant, [m, attr-instance, most]]], attr-degree, [s, attr-instance, somewhat]]"
41,41,41,41,45,1036,aleviten,Zum Beispiel tragen die meisten alevitischen Frauen kein Kopftuch.,3_long,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Zum 1:=Beispiel 2:=tragen 3:=die 4:=meisten 5:=alevitischen 6:=Frauen 7:=kein 8:=Kopftuch.,1,,"For example, most Alevi women do not wear a headscarf.","['# ::snt For example, most Alevi women do not wear a headscarf.\n(w / wear-01\n      :polarity -\n      :ARG0 (w2 / woman\n            :mod (c / city\n                  :name (n / name\n                        :op1 ""Alevi""))\n            :quant (m / most))\n      :ARG1 (h / headscarf)\n      :ARG0-of (e / exemplify-01))']","[w, attr-instance, wear_01, attr-polarity, negative, attr-arg0, [w2, attr-instance, woman, attr-mod, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""alevi""]], attr-quant, [m, attr-instance, most]], attr-arg1, [h, attr-instance, headscarf], attr-arg0_of, [e, attr-instance, exemplify_01]]"
42,42,42,42,46,1037,aleviten,Ungefähr ein Drittel der Menschen in der Türkei sind Aleviten.,4_long,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Ungefähr 1:=ein 2:=Drittel 3:=der 4:=Menschen 5:=in 6:=der 7:=Türkei 8:=sind 9:=Aleviten.,1,,About a third of the people in Turkey are Alevis.,"['# ::snt About a third of the people in Turkey are Alevis.\n(p / person\n      :mod (c / city\n            :name (n / name\n                  :op1 ""Alevis""))\n      :ARG1-of (ii / include-91\n            :ARG2 (p2 / person\n                  :location (c2 / country\n                        :name (n2 / name\n                              :op1 ""Turkey"")))\n            :ARG3 (a / about\n                  :op1 ""1/3"")))']","[p, attr-instance, person, attr-mod, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""alevis""]], attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [p2, attr-instance, person, attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""turkey""]]], attr-arg3, [a, attr-instance, about, attr-op1, ""1attr-instance3""]]]"
43,43,43,43,47,1038,aleviten,Die Aleviten sind eine Religions-gemeinschaft.,0_short,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Die 1:=Aleviten 2:=sind 3:=eine 4:=Religions-gemeinschaft.,1,,The Alevis are a religious community.,"['# ::snt The Alevis are a religious community.\n(c / community\n      :mod (r / religious)\n      :domain (r2 / religious-group\n            :name (n / name\n                  :op1 ""Alevis"")))']","[c, attr-instance, community, attr-mod, [r, attr-instance, religious], attr-domain, [r2, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""alevis""]]]"
44,44,44,44,48,1039,aleviten,Eine Religions-gemeinschaft sind mehrere Menschen.,1_short,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Eine 1:=Religions-gemeinschaft 2:=sind 3:=mehrere 4:=Menschen.,1,,A religious community consists of several people.,['# ::snt A religious community consists of several people.\n(c / consist-01\n      :ARG1 (c2 / community\n            :mod (r / religion))\n      :ARG2 (p / person\n            :quant (s / several)))'],"[c, attr-instance, consist_01, attr-arg1, [c2, attr-instance, community, attr-mod, [r, attr-instance, religion]], attr-arg2, [p, attr-instance, person, attr-quant, [s, attr-instance, several]]]"
45,45,45,45,49,1040,aleviten,Sie haben eine bestimmte Religion.,2_short,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Sie 1:=haben 2:=eine 3:=bestimmte 4:=Religion.,1,,They have a particular religion.,['# ::snt They have a particular religion.\n(h / have-03\n      :ARG0 (t / they)\n      :ARG1 (r / religion\n            :mod (p / particular)))'],"[h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [r, attr-instance, religion, attr-mod, [p, attr-instance, particular]]]"
46,46,46,46,50,1041,aleviten,Die Religions-gemeinschaft der Aleviten kommt aus der Türkei.,3_short,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Die 1:=Religions-gemeinschaft 2:=der 3:=Aleviten 4:=kommt 5:=aus 6:=der 7:=Türkei.,1,,The Alevi religious community comes from Turkey.,"['# ::snt The Alevi religious community comes from Turkey.\n(c / come-01\n      :ARG1 (c2 / community\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Alevi"")))\n      :ARG3 (c3 / country\n            :name (n2 / name\n                  :op1 ""Turkey"")))']","[c, attr-instance, come_01, attr-arg1, [c2, attr-instance, community, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""alevi""]]], attr-arg3, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""turkey""]]]"
47,47,47,47,51,1042,aleviten,Einige Aleviten sehen sich als Muslime.,4_short,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Einige 1:=Aleviten 2:=sehen 3:=sich 4:=als 5:=Muslime.,1,,Some Alevis see themselves as Muslims.,"['# ::snt Some Alevis see themselves as Muslims.\n(s / see-01\n      :ARG0 (p / person\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Alevi""))\n            :quant (s2 / some)\n            :ARG1-of s)\n      :ARG2 (p2 / person\n            :mod (r2 / religious-group\n                  :name (n2 / name\n                        :op1 ""Muslim""))))']","[s, attr-instance, see_01, attr-arg0, [p, attr-instance, person, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""alevi""]], attr-quant, [s2, attr-instance, some], attr-arg1_of, s], attr-arg2, [p2, attr-instance, person, attr-mod, [r2, attr-instance, religious_group, attr-name, [n2, attr-instance, name, attr-op1, ""muslim""]]]]"
48,48,48,48,52,1043,aleviten,Andere Aleviten sehen sich nicht als Muslime.,5_short,Religion,2008-02-02T09:57:28Z,e3afed0047b08059d0fada10f400c1e5,0:=Andere 1:=Aleviten 2:=sehen 3:=sich 4:=nicht 5:=als 6:=Muslime.,1,,Other Alevis do not see themselves as Muslims.,"['# ::snt Other Alevis do not see themselves as Muslims.\n(s / see-01\n      :polarity -\n      :ARG0 (p / person\n            :mod (o / other)\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Alevi"")))\n      :ARG1 p\n      :ARG2 (p2 / person\n            :mod (r2 / religious-group\n                  :name (n2 / name\n                        :op1 ""Islam""))))']","[s, attr-instance, see_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-mod, [o, attr-instance, other], attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""alevi""]]], attr-arg1, p, attr-arg2, [p2, attr-instance, person, attr-mod, [r2, attr-instance, religious_group, attr-name, [n2, attr-instance, name, attr-op1, ""islam""]]]]"
49,49,49,49,53,1044,alex-honnold,Er ist auf einen sehr großen Berg geklettert.,0_long,Sport|Personen|Seiten_mit_defekten_Dateilinks,2021-07-16T21:06:31Z,e54ca469914bc262b958dc327fbe1253,0:=Er 1:=ist 2:=auf 3:=einen 4:=sehr 5:=großen 6:=Berg 7:=geklettert.,2,"[[4, 5], [0, 1, 2, 7]]",He climbed a very big mountain.,['# ::snt He climbed a very big mountain.\n(c / climb-01\n      :ARG0 (h / he)\n      :ARG1 (m / mountain\n            :mod (b / big\n                  :degree (v / very))))'],"[c, attr-instance, climb_01, attr-arg0, [h, attr-instance, he], attr-arg1, [m, attr-instance, mountain, attr-mod, [b, attr-instance, big, attr-degree, [v, attr-instance, very]]]]"
50,50,50,50,54,1045,alex-honnold,Der Berg heißt: El Capitan.,1_long,Sport|Personen|Seiten_mit_defekten_Dateilinks,2021-07-16T21:06:31Z,e54ca469914bc262b958dc327fbe1253,0:=Der 1:=Berg 2:=heißt: 3:=El 4:=Capitan.,1,,The mountain is called: El Capitan.,"['# ::snt The mountain is called: El Capitan.\n(c / call-01\n      :ARG1 (m / mountain)\n      :ARG2 m\n      :name (n / name\n            :op1 ""El""\n            :op2 ""Capitan""))']","[c, attr-instance, call_01, attr-arg1, [m, attr-instance, mountain], attr-arg2, m, attr-name, [n, attr-instance, name, attr-op1, ""el"", attr-op2, ""capitan""]]"
51,51,51,51,55,1046,alex-honnold,Die Kletter-route ist fast 1000 Meter lang.,2_long,Sport|Personen|Seiten_mit_defekten_Dateilinks,2021-07-16T21:06:31Z,e54ca469914bc262b958dc327fbe1253,0:=Die 1:=Kletter-route 2:=ist 3:=fast 4:=1000 5:=Meter 6:=lang.,1,,The climbing route is almost 1000 meters long.,['# ::snt The climbing route is almost 1000 meters long.\n(l / long-03\n      :ARG1 (r / route\n            :path-of (c / climb-01))\n      :ARG2 (a / almost\n            :op1 (d / distance-quantity\n                  :quant 1000\n                  :unit (m / meter))))'],"[l, attr-instance, long_03, attr-arg1, [r, attr-instance, route, attr-path_of, [c, attr-instance, climb_01]], attr-arg2, [a, attr-instance, almost, attr-op1, [d, attr-instance, distance_quantity, attr-quant, 1000, attr-unit, [m, attr-instance, meter]]]]"
52,52,52,52,56,1047,alex-honnold,Über Alex Honnold gibt es einen Film.,3_long,Sport|Personen|Seiten_mit_defekten_Dateilinks,2021-07-16T21:06:31Z,e54ca469914bc262b958dc327fbe1253,0:=Über 1:=Alex 2:=Honnold 3:=gibt 4:=es 5:=einen 6:=Film.,1,,There is a film about Alex Honnold.,"['# ::snt There is a film about Alex Honnold.\n(f / film\n      :topic (p / person\n            :name (n / name\n                  :op1 ""Alex""\n                  :op2 ""Honnold"")))']","[f, attr-instance, film, attr-topic, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alex"", attr-op2, ""honnold""]]]"
53,53,53,53,57,1048,alex-honnold,Er heißt: Free Solo.,4_long,Sport|Personen|Seiten_mit_defekten_Dateilinks,2021-07-16T21:06:31Z,e54ca469914bc262b958dc327fbe1253,0:=Er 1:=heißt: 2:=Free 3:=Solo.,1,,It's called: Free Solo.,"[""# ::snt It's called: Free Solo.\n(c / call-01\n      :ARG1 (ii / it)\n      :ARG2 (f / free-04\n            :ARG3 (s / solo)))""]","[c, attr-instance, call_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [f, attr-instance, free_04, attr-arg3, [s, attr-instance, solo]]]"
54,54,54,54,58,1049,alex-honnold,Alex Honnold ist ein bekannter Free Solo Kletterer.,0_short,Sport|Personen|Seiten_mit_defekten_Dateilinks,2021-07-16T21:06:31Z,e54ca469914bc262b958dc327fbe1253,0:=Alex 1:=Honnold 2:=ist 3:=ein 4:=bekannter 5:=Free 6:=Solo 7:=Kletterer.,2,"[[4], [5, 6, 7]]",Alex Honnold is a well-known free solo climber.,"['# ::snt Alex Honnold is a well-known free solo climber.\n(k / know-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Alex""\n                  :op2 ""Honnold"")\n            :ARG0-of (c / climb-01\n                  :manner (s / solo)\n                  :ARG1-of (f / free-04)))\n      :degree (w / well))']","[k, attr-instance, know_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alex"", attr-op2, ""honnold""], attr-arg0_of, [c, attr-instance, climb_01, attr-manner, [s, attr-instance, solo], attr-arg1_of, [f, attr-instance, free_04]]], attr-degree, [w, attr-instance, well]]"
55,55,55,55,59,1050,alex-honnold,Er ist am 17. August 1985 geboren.,1_short,Sport|Personen|Seiten_mit_defekten_Dateilinks,2021-07-16T21:06:31Z,e54ca469914bc262b958dc327fbe1253,0:=Er 1:=ist 2:=am 3:=17. 4:=August 5:=1985 6:=geboren.,1,,"He was born on August 17, 1985.","['# ::snt He was born on August 17, 1985.\n(b / bear-02\n      :ARG1 (h / he)\n      :time (d / date-entity\n            :year 1985\n            :month 8\n            :day 17))']","[b, attr-instance, bear_02, attr-arg1, [h, attr-instance, he], attr-time, [d, attr-instance, date_entity, attr-year, 1985, attr-month, 8, attr-day, 17]]"
56,56,56,56,61,1052,alexander-graham-bell,Alexander Graham Bell kommt am 3. März 1847 auf die Welt.,0_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Alexander 1:=Graham 2:=Bell 3:=kommt 4:=am 5:=3. 6:=März 7:=1847 8:=auf 9:=die 10:=Welt.,1,,"Alexander Graham Bell was born on March 3, 1847.","['# ::snt Alexander Graham Bell was born on March 3, 1847.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Graham""\n                  :op3 ""Bell""))\n      :time (d / date-entity\n            :day 3\n            :month 3\n            :year 1847))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""graham"", attr-op3, ""bell""]], attr-time, [d, attr-instance, date_entity, attr-day, 3, attr-month, 3, attr-year, 1847]]"
57,57,57,57,63,1054,alexander-graham-bell,"Er stirbt am 2. August 1922. \newline In Baddeck, Kanada.",2_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Er 1:=stirbt 2:=am 3:=2. 4:=August 5:=1922. 6:=\newline 7:=In 8:=Baddeck, 9:=Kanada.",3,"[[2, 3, 4, 5], [7, 8], [9]]","He died on August 2, 1922. \newline In Baddeck, Canada.","['# ::snt He died on August 2, 1922.\n(d / die-01\n      :ARG1 (h / he)\n      :time (d2 / date-entity\n            :year 1922\n            :month 8\n            :day 2))', '# ::snt \\newline In Baddeck, Canada.\n(l / line\n      :location (c / city\n            :name (n / name\n                  :op1 ""Baddeck"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""Canada""))))']","[d, attr-instance, die_01, attr-arg1, [h, attr-instance, he], attr-time, [d2, attr-instance, date_entity, attr-year, 1922, attr-month, 8, attr-day, 2]]"
58,58,58,58,64,1055,alexander-graham-bell,Der Groß-vater von Alexander Graham Bell hat sich mit Sprech-technik beschäftigt.,3_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Groß-vater 2:=von 3:=Alexander 4:=Graham 5:=Bell 6:=hat 7:=sich 8:=mit 9:=Sprech-technik 10:=beschäftigt.,1,,Alexander Graham Bell's grandfather was involved in speech technology.,"['# ::snt Alexander Graham Bell\'s grandfather was involved in speech technology.\n(ii / involve-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 ""Alexander""\n                              :op2 ""Graham""\n                              :op3 ""Bell""))\n                  :ARG2 (g / grandfather)))\n      :ARG2 (t / technology\n            :mod (s / speak-01)))']","[ii, attr-instance, involve_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""graham"", attr-op3, ""bell""]], attr-arg2, [g, attr-instance, grandfather]]], attr-arg2, [t, attr-instance, technology, attr-mod, [s, attr-instance, speak_01]]]"
59,59,59,59,65,1056,alexander-graham-bell,Der Vater von Bell heißt Alexander Melville Bell.,4_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Vater 2:=von 3:=Bell 4:=heißt 5:=Alexander 6:=Melville 7:=Bell.,1,,Bell's father is Alexander Melville Bell.,"['# ::snt Bell\'s father is Alexander Melville Bell.\n(p / person\n      :name (n / name\n            :op1 ""Alexander""\n            :op2 ""Melville""\n            :op3 ""Bell"")\n      :ARG0-of (h / have-rel-role-91\n            :ARG1 (p2 / person\n                  :name (n2 / name\n                        :op1 ""Bell""))\n            :ARG2 (f / father)))']","[p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""melville"", attr-op3, ""bell""], attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""bell""]], attr-arg2, [f, attr-instance, father]]]"
60,60,60,60,66,1057,alexander-graham-bell,Der Vater von Bell war Professor für Rede-kunst und Vortrags-kunst.,5_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Vater 2:=von 3:=Bell 4:=war 5:=Professor 6:=für 7:=Rede-kunst 8:=und 9:=Vortrags-kunst.,3,"[[0, 1, 2, 3, 4], [6, 7], [6, 9]]",Bell's father was a professor of oratory and elocution.,"['# ::snt Bell\'s father was a professor of oratory and elocution.\n(h / have-org-role-91\n      :ARG0 (p / person\n            :ARG0-of (h2 / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 ""Bell""))\n                  :ARG2 (f / father)))\n      :ARG1 (p3 / professor\n            :topic (a / and\n                  :op1 (o / oratory)\n                  :op2 (e / elocution)))\n      :ARG2 f)']","[h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""bell""]], attr-arg2, [f, attr-instance, father]]], attr-arg1, [p3, attr-instance, professor, attr-topic, [a, attr-instance, and, attr-op1, [o, attr-instance, oratory], attr-op2, [e, attr-instance, elocution]]], attr-arg2, f]"
61,61,61,61,67,1058,alexander-graham-bell,Der Vater hat eine Laut-schrift erfunden.,6_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Vater 2:=hat 3:=eine 4:=Laut-schrift 5:=erfunden.,1,,The father invented a phonetic alphabet.,['# ::snt The father invented a phonetic alphabet.\n(ii / invent-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (f / father)))\n      :ARG1 (a / alphabet\n            :mod (p2 / phonetic)))'],"[ii, attr-instance, invent_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg2, [f, attr-instance, father]]], attr-arg1, [a, attr-instance, alphabet, attr-mod, [p2, attr-instance, phonetic]]]"
62,62,62,62,68,1059,alexander-graham-bell,Die Laut-schrift heißt Visible Speech.,7_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Laut-schrift 2:=heißt 3:=Visible 4:=Speech.,1,,The phonetic transcription is called Visible Speech.,['# ::snt The phonetic transcription is called Visible Speech.\n(c / call-01\n      :ARG1 (t / transcribe-01\n            :ARG2 (p / phonetic))\n      :ARG2 (s / speech\n            :ARG1-of (v / Visible-00)))'],"[c, attr-instance, call_01, attr-arg1, [t, attr-instance, transcribe_01, attr-arg2, [p, attr-instance, phonetic]], attr-arg2, [s, attr-instance, speech, attr-arg1_of, [v, attr-instance, visible_00]]]"
63,63,63,63,69,1060,alexander-graham-bell,Die Mutter von Bell heißt Eliza Symonds Bell.,8_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Mutter 2:=von 3:=Bell 4:=heißt 5:=Eliza 6:=Symonds 7:=Bell.,1,,Bell's mother is Eliza Symonds Bell.,"['# ::snt Bell\'s mother is Eliza Symonds Bell.\n(p / person\n      :name (n / name\n            :op1 ""Eliza""\n            :op2 ""Symonds""\n            :op3 ""Bell"")\n      :ARG0-of (h / have-rel-role-91\n            :ARG1 (p2 / person\n                  :name (n2 / name\n                        :op1 ""Bell""))\n            :ARG2 (m / mother)))']","[p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""eliza"", attr-op2, ""symonds"", attr-op3, ""bell""], attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""bell""]], attr-arg2, [m, attr-instance, mother]]]"
64,64,64,64,70,1061,alexander-graham-bell,Die Mutter war stark schwerhörig.,9_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Mutter 2:=war 3:=stark 4:=schwerhörig.,1,,The mother was severely hard of hearing.,['# ::snt The mother was severely hard of hearing.\n(h / hard-02\n      :ARG1 (h2 / hear-01\n            :ARG0 (p / person\n                  :ARG0-of (h3 / have-rel-role-91\n                        :ARG2 (m / mother))))\n      :degree (s / severe))'],"[h, attr-instance, hard_02, attr-arg1, [h2, attr-instance, hear_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h3, attr-instance, have_rel_role_91, attr-arg2, [m, attr-instance, mother]]]], attr-degree, [s, attr-instance, severe]]"
65,65,65,65,71,1062,alexander-graham-bell,Bell hat mit ihr mit einer tiefen Stimme gesprochen.,10_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Bell 1:=hat 2:=mit 3:=ihr 4:=mit 5:=einer 6:=tiefen 7:=Stimme 8:=gesprochen.,1,,Bell spoke to her in a deep voice.,"['# ::snt Bell spoke to her in a deep voice.\n(s / speak-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Bell""))\n      :ARG2 (s2 / she)\n      :manner (v / voice\n            :ARG1-of (d / deep-02)))']","[s, attr-instance, speak_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""bell""]], attr-arg2, [s2, attr-instance, she], attr-manner, [v, attr-instance, voice, attr-arg1_of, [d, attr-instance, deep_02]]]"
66,66,66,66,72,1063,alexander-graham-bell,Dann konnte sie ihn besser hören.,11_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Dann 1:=konnte 2:=sie 3:=ihn 4:=besser 5:=hören.,1,,Then she could hear him better.,['# ::snt Then she could hear him better.\n(p / possible-01\n      :ARG1 (h / hear-01\n            :ARG0 (s / she)\n            :ARG2 (h2 / he)\n            :ARG1-of (h3 / have-degree-91\n                  :ARG2 (g / good-02\n                        :ARG1 h)\n                  :ARG3 (m / more)))\n      :time (t / then))'],"[p, attr-instance, possible_01, attr-arg1, [h, attr-instance, hear_01, attr-arg0, [s, attr-instance, she], attr-arg2, [h2, attr-instance, he], attr-arg1_of, [h3, attr-instance, have_degree_91, attr-arg2, [g, attr-instance, good_02, attr-arg1, h], attr-arg3, [m, attr-instance, more]]], attr-time, [t, attr-instance, then]]"
67,67,67,67,73,1064,alexander-graham-bell,Bell studiert in Edinburgh.,12_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Bell 1:=studiert 2:=in 3:=Edinburgh.,1,,Bell studies in Edinburgh.,"['# ::snt Bell studies in Edinburgh.\n(s / study-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Bell""))\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""Edinburgh"")))']","[s, attr-instance, study_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""bell""]], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""edinburgh""]]]"
68,68,68,68,74,1065,alexander-graham-bell,Er studiert die Fächer Latein und Griechisch.,13_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=studiert 2:=die 3:=Fächer 4:=Latein 5:=und 6:=Griechisch.,2,"[[4], [6]]",He studies Latin and Greek.,"['# ::snt He studies Latin and Greek.\n(s / study-01\n      :ARG0 (h / he)\n      :ARG1 (a / and\n            :op1 (l / language\n                  :name (n / name\n                        :op1 ""Latin""))\n            :op2 (l2 / language\n                  :name (n2 / name\n                        :op1 ""Greek""))))']","[s, attr-instance, study_01, attr-arg0, [h, attr-instance, he], attr-arg1, [a, attr-instance, and, attr-op1, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""latin""]], attr-op2, [l2, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""greek""]]]]"
69,69,69,69,75,1066,alexander-graham-bell,Mit 17 Jahren wird Bell Lehrer.,14_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Mit 1:=17 2:=Jahren 3:=wird 4:=Bell 5:=Lehrer.,2,"[[0, 1, 2], [3, 4, 5]]","At the age of 17, Bell became a teacher.","['# ::snt At the age of 17, Bell became a teacher.\n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Bell"")\n            :age (t / temporal-quantity\n                  :quant 17\n                  :unit (y / year)))\n      :ARG2 (p2 / person\n            :ARG0-of (t2 / teach-01)))']","[b, attr-instance, become_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""bell""], attr-age, [t, attr-instance, temporal_quantity, attr-quant, 17, attr-unit, [y, attr-instance, year]]], attr-arg2, [p2, attr-instance, person, attr-arg0_of, [t2, attr-instance, teach_01]]]"
70,70,70,70,77,1068,alexander-graham-bell,In seiner Freizeit forscht er.,16_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=In 1:=seiner 2:=Freizeit 3:=forscht 4:=er.,1,,In his free time he does research.,['# ::snt In his free time he does research.\n(r / research-01\n      :ARG0 (h / he)\n      :time (t / time\n            :ARG1-of (f / free-04)\n            :poss h))'],"[r, attr-instance, research_01, attr-arg0, [h, attr-instance, he], attr-time, [t, attr-instance, time, attr-arg1_of, [f, attr-instance, free_04], attr-poss, h]]"
71,71,71,71,78,1069,alexander-graham-bell,Er forscht zum Thema Akustik.,17_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=forscht 2:=zum 3:=Thema 4:=Akustik.,1,,He researches acoustics.,['# ::snt He researches acoustics.\n(r / research-01\n      :ARG0 (h / he)\n      :ARG1 (a / acoustics))'],"[r, attr-instance, research_01, attr-arg0, [h, attr-instance, he], attr-arg1, [a, attr-instance, acoustics]]"
72,72,72,72,79,1070,alexander-graham-bell,Sein Vater unterrichtet in einer Universität in London.,18_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Sein 1:=Vater 2:=unterrichtet 3:=in 4:=einer 5:=Universität 6:=in 7:=London.,2,"[[3, 5], [6, 7]]",His father teaches at a university in London.,"['# ::snt His father teaches at a university in London.\n(t / teach-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (h2 / he)\n                  :ARG2 (f / father)))\n      :location (u / university\n            :location (c / city\n                  :name (n / name\n                        :op1 ""London""))))']","[t, attr-instance, teach_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, [h2, attr-instance, he], attr-arg2, [f, attr-instance, father]]], attr-location, [u, attr-instance, university, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""london""]]]]"
73,73,73,73,80,1071,alexander-graham-bell,Dort ist er Dozent für Sprach-technik.,19_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Dort 1:=ist 2:=er 3:=Dozent 4:=für 5:=Sprach-technik.,1,,There he is a lecturer in language technology.,['# ::snt There he is a lecturer in language technology.\n(l / lecture-01\n      :ARG0 (h / he)\n      :ARG2 (t / technology\n            :mod (l2 / language))\n      :location (t2 / there))'],"[l, attr-instance, lecture_01, attr-arg0, [h, attr-instance, he], attr-arg2, [t, attr-instance, technology, attr-mod, [l2, attr-instance, language]], attr-location, [t2, attr-instance, there]]"
74,74,74,74,81,1072,alexander-graham-bell,Er stellt seinen Sohn als Assistenten ein.,20_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=stellt 2:=seinen 3:=Sohn 4:=als 5:=Assistenten 6:=ein.,2,"[[2, 3], [4, 5]]",He hires his son as an assistant.,['# ::snt He hires his son as an assistant.\n(h / hire-01\n      :ARG0 (h2 / he)\n      :ARG1 (p / person\n            :ARG0-of (h3 / have-rel-role-91\n                  :ARG1 h2\n                  :ARG2 (s / son)))\n      :ARG2 (p2 / person\n            :ARG0-of (a / assist-01)))'],"[h, attr-instance, hire_01, attr-arg0, [h2, attr-instance, he], attr-arg1, [p, attr-instance, person, attr-arg0_of, [h3, attr-instance, have_rel_role_91, attr-arg1, h2, attr-arg2, [s, attr-instance, son]]], attr-arg2, [p2, attr-instance, person, attr-arg0_of, [a, attr-instance, assist_01]]]"
75,75,75,75,82,1073,alexander-graham-bell,Seit dem Jahr 1868 gibt Alexander Graham Bell Sprech-unterricht.,21_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Seit 1:=dem 2:=Jahr 3:=1868 4:=gibt 5:=Alexander 6:=Graham 7:=Bell 8:=Sprech-unterricht.,2,"[[0, 2, 3], [4, 5, 6, 7, 8]]",Alexander Graham Bell has been giving speaking lessons since 1868.,"['# ::snt Alexander Graham Bell has been giving speaking lessons since 1868.\n(t / teach-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Graham""\n                  :op3 ""Bell""))\n      :ARG1 (s / speak-01)\n      :time (s2 / since\n            :op1 (d / date-entity\n                  :year 1868)))']","[t, attr-instance, teach_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""graham"", attr-op3, ""bell""]], attr-arg1, [s, attr-instance, speak_01], attr-time, [s2, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-year, 1868]]]"
76,76,76,76,85,1076,alexander-graham-bell,Im Jahr 1870 zieht die Familie Bell nach Kanada.,24_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Im 1:=Jahr 2:=1870 3:=zieht 4:=die 5:=Familie 6:=Bell 7:=nach 8:=Kanada.,2,"[[0, 1, 2], [3, 5, 6, 7, 8]]",In 1870 the Bell family moved to Canada.,"['# ::snt In 1870 the Bell family moved to Canada.\n(m / move-01\n      :ARG0 (f / family\n            :name (n / name\n                  :op1 ""Bell""))\n      :ARG2 (c / country\n            :name (n2 / name\n                  :op1 ""Canada""))\n      :time (d / date-entity\n            :year 1870))']","[m, attr-instance, move_01, attr-arg0, [f, attr-instance, family, attr-name, [n, attr-instance, name, attr-op1, ""bell""]], attr-arg2, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""canada""]], attr-time, [d, attr-instance, date_entity, attr-year, 1870]]"
77,77,77,77,86,1077,alexander-graham-bell,Im Jahr 1871 wird Bell Gehörlosenlehrer.,25_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Im 1:=Jahr 2:=1871 3:=wird 4:=Bell 5:=Gehörlosenlehrer.,2,"[[0, 1, 2], [3, 4, 5]]","In 1871, Bell became a teacher for the deaf.","['# ::snt In 1871, Bell became a teacher for the deaf.\n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Bell""))\n      :ARG2 (p2 / person\n            :ARG0-of (t / teach-01\n                  :ARG2 (p3 / person\n                        :ARG0-of (d / deaf-02))))\n      :time (d2 / date-entity\n            :year 1870))']","[b, attr-instance, become_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""bell""]], attr-arg2, [p2, attr-instance, person, attr-arg0_of, [t, attr-instance, teach_01, attr-arg2, [p3, attr-instance, person, attr-arg0_of, [d, attr-instance, deaf_02]]]], attr-time, [d2, attr-instance, date_entity, attr-year, 1870]]"
78,78,78,78,88,1079,alexander-graham-bell,Vom Jahr 1873 bis zum Jahr 1877 ist Bell Professor.,27_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Vom 1:=Jahr 2:=1873 3:=bis 4:=zum 5:=Jahr 6:=1877 7:=ist 8:=Bell 9:=Professor.,2,"[[0, 1, 2], [3, 4, 5, 6]]",From 1873 to 1877 Bell was a professor.,"['# ::snt From 1873 to 1877 Bell was a professor.\n(h / have-org-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Bell""))\n      :ARG2 (p2 / professor)\n      :duration (d / date-interval\n            :op1 (d2 / date-entity\n                  :year 1873)\n            :op2 (d3 / date-entity\n                  :year 1877)))']","[h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""bell""]], attr-arg2, [p2, attr-instance, professor], attr-duration, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-year, 1873], attr-op2, [d3, attr-instance, date_entity, attr-year, 1877]]]"
79,79,79,79,89,1080,alexander-graham-bell,Er ist Professor für Sprech-technik und Physiologie der Stimme.,28_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=ist 2:=Professor 3:=für 4:=Sprech-technik 5:=und 6:=Physiologie 7:=der 8:=Stimme.,2,"[[4], [6, 8]]",He is a professor of speech technique and voice physiology.,['# ::snt He is a professor of speech technique and voice physiology.\n(h / have-org-role-91\n      :ARG0 (h2 / he)\n      :ARG2 (p / professor\n            :topic (a / and\n                  :op1 (t / technique\n                        :mod (s / speak-01))\n                  :op2 (p2 / physiology\n                        :mod (v / voice)))))'],"[h, attr-instance, have_org_role_91, attr-arg0, [h2, attr-instance, he], attr-arg2, [p, attr-instance, professor, attr-topic, [a, attr-instance, and, attr-op1, [t, attr-instance, technique, attr-mod, [s, attr-instance, speak_01]], attr-op2, [p2, attr-instance, physiology, attr-mod, [v, attr-instance, voice]]]]]"
80,80,80,80,91,1083,alexander-graham-bell,Sie haben sich an der Clarke School kennen gelernt.,31_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Sie 1:=haben 2:=sich 3:=an 4:=der 5:=Clarke 6:=School 7:=kennen 8:=gelernt.,1,,They met at the Clarke School.,"['# ::snt They met at the Clarke School.\n(m / meet-03\n      :ARG0 (t / they)\n      :location (s / school\n            :name (n / name\n                  :op1 ""Clarke""\n                  :op2 ""School"")))']","[m, attr-instance, meet_03, attr-arg0, [t, attr-instance, they], attr-location, [s, attr-instance, school, attr-name, [n, attr-instance, name, attr-op1, ""clarke"", attr-op2, ""school""]]]"
81,81,81,81,92,1085,alexander-graham-bell,Alexander Graham Bell ist einer der Erfinder vom Telefon.,0_short,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Alexander 1:=Graham 2:=Bell 3:=ist 4:=einer 5:=der 6:=Erfinder 7:=vom 8:=Telefon.,1,,Alexander Graham Bell is one of the inventors of the telephone.,"['# ::snt Alexander Graham Bell is one of the inventors of the telephone.\n(ii / include-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Graham""\n                  :op3 ""Bell""))\n      :ARG2 (ii2 / invent-01\n            :ARG1 (t / telephone)))']","[ii, attr-instance, include_91, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""graham"", attr-op3, ""bell""]], attr-arg2, [ii2, attr-instance, invent_01, attr-arg1, [t, attr-instance, telephone]]]"
82,82,82,82,93,1086,alexander-graham-bell,Alexander Graham Bell war ein Sprach-lehrer für Gehörlose.,1_short,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Alexander 1:=Graham 2:=Bell 3:=war 4:=ein 5:=Sprach-lehrer 6:=für 7:=Gehörlose.,1,,Alexander Graham Bell was a language teacher for the deaf.,"['# ::snt Alexander Graham Bell was a language teacher for the deaf.\n(p / person\n      :ARG0-of (t / teach-01\n            :ARG1 (l / language)\n            :ARG2 (p2 / person\n                  :ARG1-of (d / deaf-02)))\n      :domain (p3 / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Graham""\n                  :op3 ""Bell"")))']","[p, attr-instance, person, attr-arg0_of, [t, attr-instance, teach_01, attr-arg1, [l, attr-instance, language], attr-arg2, [p2, attr-instance, person, attr-arg1_of, [d, attr-instance, deaf_02]]], attr-domain, [p3, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""graham"", attr-op3, ""bell""]]]"
83,83,83,83,94,1087,alexander-mitscherlich,Alexander Mitscherlich kommt am 20. September 1908 auf die Welt.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-02-28T12:34:31Z,e800bebc9060331edfac65e663a55570,0:=Alexander 1:=Mitscherlich 2:=kommt 3:=am 4:=20. 5:=September 6:=1908 7:=auf 8:=die 9:=Welt.,1,,"Alexander Mitscherlich was born on September 20, 1908.","['# ::snt Alexander Mitscherlich was born on September 20, 1908.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Mitscherlich""))\n      :time (d / date-entity\n            :day 20\n            :month 9\n            :year 1908))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""mitscherlich""]], attr-time, [d, attr-instance, date_entity, attr-day, 20, attr-month, 9, attr-year, 1908]]"
84,84,84,84,96,1089,alexander-mitscherlich,"Er stirbt am 26. Juni 1982. \newline In Frankfurt am Main, Deutschland.",2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-02-28T12:34:31Z,e800bebc9060331edfac65e663a55570,"0:=Er 1:=stirbt 2:=am 3:=26. 4:=Juni 5:=1982. 6:=\newline 7:=In 8:=Frankfurt 9:=am 10:=Main, 11:=Deutschland.",3,"[[2, 3, 4, 5], [7, 8, 9, 10], [7, 11]]","He died on June 26, 1982. \newline In Frankfurt am Main, Germany.","['# ::snt He died on June 26, 1982.\n(d / die-01\n      :ARG1 (h / he)\n      :time (d2 / date-entity\n            :year 1982\n            :month 6\n            :day 26))', '# ::snt \\newline In Frankfurt am Main, Germany.\n(b / be-located-at-91\n      :ARG1 (l / line\n            :name (n / name\n                  :op1 ""Newline""))\n      :ARG2 (c / city\n            :name (n2 / name\n                  :op1 ""Frankfurt"")\n            :location (c2 / country\n                  :name (n3 / name\n                        :op1 ""Germany""))))']","[d, attr-instance, die_01, attr-arg1, [h, attr-instance, he], attr-time, [d2, attr-instance, date_entity, attr-year, 1982, attr-month, 6, attr-day, 26]]"
85,85,85,85,97,1090,alexander-mitscherlich,Alexander Mitscherlich war ein: • Arzt,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-02-28T12:34:31Z,e800bebc9060331edfac65e663a55570,0:=Alexander 1:=Mitscherlich 2:=war 3:=ein: 4:=• 5:=Arzt,1,,Alexander Mitscherlich was a: • Doctor,"['# ::snt Alexander Mitscherlich was a: • Doctor\n(p / person\n      :name (n / name\n            :op1 ""Alexander""\n            :op2 ""Mitscherlich"")\n      :ARG0-of (h / have-org-role-91\n            :ARG2 (d / doctor)))']","[p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""mitscherlich""], attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [d, attr-instance, doctor]]]"
86,86,86,86,98,1091,alexander-mitscherlich,Alexander Mitscherlich war ein: • Psychoanalytiker,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-02-28T12:34:31Z,e800bebc9060331edfac65e663a55570,0:=Alexander 1:=Mitscherlich 2:=war 3:=ein: 4:=• 5:=Psychoanalytiker,1,,Alexander Mitscherlich was a: • Psychoanalyst,"['# ::snt Alexander Mitscherlich was a: • Psychoanalyst\n(p / person\n      :name (n / name\n            :op1 ""Alexander""\n            :op2 ""Mitscherlich"")\n      :ARG0-of (h / have-org-role-91\n            :ARG2 (p2 / person\n                  :ARG0-of (p3 / psychoanalyze-01))))']","[p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""mitscherlich""], attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [p2, attr-instance, person, attr-arg0_of, [p3, attr-instance, psychoanalyze_01]]]]"
87,87,87,87,99,1092,alexander-mitscherlich,Alexander Mitscherlich war ein: • Hochschul-lehrer,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-02-28T12:34:31Z,e800bebc9060331edfac65e663a55570,0:=Alexander 1:=Mitscherlich 2:=war 3:=ein: 4:=• 5:=Hochschul-lehrer,1,,Alexander Mitscherlich was a: • University lecturer,"['# ::snt Alexander Mitscherlich was a: • University lecturer\n(p / person\n      :name (n / name\n            :op1 ""Alexander""\n            :op2 ""Mitscherlich"")\n      :ARG0-of (l / lecture-01\n            :location (u / university)))']","[p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""mitscherlich""], attr-arg0_of, [l, attr-instance, lecture_01, attr-location, [u, attr-instance, university]]]"
88,88,88,88,100,1093,alexander-mitscherlich,Alexander Mitscherlich war ein: • Schriftsteller,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-02-28T12:34:31Z,e800bebc9060331edfac65e663a55570,0:=Alexander 1:=Mitscherlich 2:=war 3:=ein: 4:=• 5:=Schriftsteller,1,,Alexander Mitscherlich was a: • Writer,"['# ::snt Alexander Mitscherlich was a: • Writer\n(p / person\n      :ARG0-of (w / write-01)\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Mitscherlich"")))']","[p, attr-instance, person, attr-arg0_of, [w, attr-instance, write_01], attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""mitscherlich""]]]"
89,89,89,89,101,1094,alexander-mitscherlich,Sein bekanntestes Buch heißt:,4_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-02-28T12:34:31Z,e800bebc9060331edfac65e663a55570,0:=Sein 1:=bekanntestes 2:=Buch 3:=heißt:,1,,His most famous book is called:,['# ::snt His most famous book is called:\n(c / call-01\n      :ARG1 (b / book\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (f / fame-01\n                        :ARG1 b)\n                  :ARG3 (m / most))\n            :poss (h2 / he)))'],"[c, attr-instance, call_01, attr-arg1, [b, attr-instance, book, attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [f, attr-instance, fame_01, attr-arg1, b], attr-arg3, [m, attr-instance, most]], attr-poss, [h2, attr-instance, he]]]"
90,90,90,90,103,1096,alexander-mitscherlich,Das Buch hat er zusammen mit seiner Frau Margarete Mitscherlich geschrieben.,6_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-02-28T12:34:31Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=Buch 2:=hat 3:=er 4:=zusammen 5:=mit 6:=seiner 7:=Frau 8:=Margarete 9:=Mitscherlich 10:=geschrieben.,3,"[[1, 2, 10], [4, 5, 6, 7], [7, 8, 9]]",He wrote the book together with his wife Margarete Mitscherlich.,"['# ::snt He wrote the book together with his wife Margarete Mitscherlich.\n(w / write-01\n      :ARG0 (h / he)\n      :ARG1 (b / book)\n      :accompanier (p / person\n            :name (n / name\n                  :op1 ""Margarete""\n                  :op2 ""Mitscherlich"")\n            :ARG0-of (h2 / have-rel-role-91\n                  :ARG1 h\n                  :ARG2 (w2 / wife))))']","[w, attr-instance, write_01, attr-arg0, [h, attr-instance, he], attr-arg1, [b, attr-instance, book], attr-accompanier, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""margarete"", attr-op2, ""mitscherlich""], attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, h, attr-arg2, [w2, attr-instance, wife]]]]"
91,91,91,91,104,1097,alexander-sergejewitsch-puschkin,Alexander Sergejewitsch Puschkin kommt am 6. Juni 1799 auf die Welt.,0_long,Personen|Seiten_mit_defekten_Dateilinks,2022-02-23T15:16:44Z,e800bebc9060331edfac65e663a55570,0:=Alexander 1:=Sergejewitsch 2:=Puschkin 3:=kommt 4:=am 5:=6. 6:=Juni 7:=1799 8:=auf 9:=die 10:=Welt.,1,,"Alexander Sergeyevich Pushkin was born on June 6, 1799.","['# ::snt Alexander Sergeyevich Pushkin was born on June 6, 1799.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Sergeevich""\n                  :op3 ""Pushkin""))\n      :time (d / date-entity\n            :year 1799\n            :month 6\n            :day 6))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""sergeevich"", attr-op3, ""pushkin""]], attr-time, [d, attr-instance, date_entity, attr-year, 1799, attr-month, 6, attr-day, 6]]"
92,92,92,92,106,1099,alexander-sergejewitsch-puschkin,"Er stirbt am  10. Februar 1837. \newline In Sankt Petersburg, Russland.",2_long,Personen|Seiten_mit_defekten_Dateilinks,2022-02-23T15:16:44Z,e800bebc9060331edfac65e663a55570,"0:=Er 1:=stirbt 2:=am 3:= 4:=10. 5:=Februar 6:=1837. 7:=\newline 8:=In 9:=Sankt 10:=Petersburg, 11:=Russland.",3,"[[2, 3, 4, 5, 6], [8, 9, 10], [8, 11]]","He died on February 10, 1837. \newline In Saint Petersburg, Russia.","['# ::snt He died on February 10, 1837.\n(d / die-01\n      :ARG1 (h / he)\n      :time (d2 / date-entity\n            :day 10\n            :month 2\n            :year 1837))', '# ::snt \\newline In Saint Petersburg, Russia.\n(b / be-located-at-91\n      :ARG1 (l / line)\n      :ARG2 (c / city\n            :name (n / name\n                  :op1 ""Saint""\n                  :op2 ""Petersburg"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""Russia""))))']","[d, attr-instance, die_01, attr-arg1, [h, attr-instance, he], attr-time, [d2, attr-instance, date_entity, attr-day, 10, attr-month, 2, attr-year, 1837]]"
93,93,93,93,107,1100,alexander-sergejewitsch-puschkin,Alexander Sergejewitsch Puschkin ist ein: \newline Schrift-steller \newline Dichter,0_short,Personen|Seiten_mit_defekten_Dateilinks,2022-02-23T15:16:44Z,e800bebc9060331edfac65e663a55570,0:=Alexander 1:=Sergejewitsch 2:=Puschkin 3:=ist 4:=ein: 5:=\newline 6:=Schrift-steller 7:=\newline 8:=Dichter,2,"[[6], [8]]",Alexander Sergeyevich Pushkin is a: \newline writer \newline poet,"['# ::snt Alexander Sergeyevich Pushkin is a: \\newline writer \\newline poet\n(p / poet\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Sergeevich""\n                  :op3 ""Pushkin""))\n      :mod (b / broadcast-program\n            :name n\n            :op1 ""Newline""\n            :mod-of p))']","[p, attr-instance, poet, attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""sergeevich"", attr-op3, ""pushkin""]], attr-mod, [b, attr-instance, broadcast_program, attr-name, n, attr-op1, ""newline"", attr-mod_of, p]]"
94,94,94,94,108,1101,alexander-sutherland-neill,Alexander Sutherland Neill  kommt am 17. Oktober 1883 auf die Welt.,0_long,Personen|Seiten_mit_defekten_Dateilinks,2022-02-28T11:47:20Z,e800bebc9060331edfac65e663a55570,0:=Alexander 1:=Sutherland 2:=Neill 3:= 4:=kommt 5:=am 6:=17. 7:=Oktober 8:=1883 9:=auf 10:=die 11:=Welt.,1,,"Alexander Sutherland Neill was born on October 17, 1883.","['# ::snt Alexander Sutherland Neill was born on October 17, 1883.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Sutherland""\n                  :op3 ""Neill""))\n      :time (d / date-entity\n            :day 17\n            :month 10\n            :year 1883))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""sutherland"", attr-op3, ""neill""]], attr-time, [d, attr-instance, date_entity, attr-day, 17, attr-month, 10, attr-year, 1883]]"
95,95,95,95,110,1103,alexander-sutherland-neill,"Er stirbt am 23. September 1973. \newline In Aldeburgh, Suffolk, England.",2_long,Personen|Seiten_mit_defekten_Dateilinks,2022-02-28T11:47:20Z,e800bebc9060331edfac65e663a55570,"0:=Er 1:=stirbt 2:=am 3:=23. 4:=September 5:=1973. 6:=\newline 7:=In 8:=Aldeburgh, 9:=Suffolk, 10:=England.",3,"[[2, 3, 4, 5], [7, 8, 9], [7, 10]]","He died on September 23, 1973. \newline In Aldeburgh, Suffolk, England.","['# ::snt He died on September 23, 1973.\n(d / die-01\n      :ARG1 (h / he)\n      :time (d2 / date-entity\n            :day 23\n            :month 9\n            :year 1973))', '# ::snt \\newline In Aldeburgh, Suffolk, England.\n(b / be-located-at-91\n      :ARG1 (l / line\n            :ARG1-of (n / new-01))\n      :ARG2 (c / city\n            :name (n2 / name\n                  :op1 ""Aldeburgh"")\n            :location (c2 / county\n                  :name (n3 / name\n                        :op1 ""Suffolk"")\n                  :location (c3 / country\n                        :name (n4 / name\n                              :op1 ""England"")))))']","[d, attr-instance, die_01, attr-arg1, [h, attr-instance, he], attr-time, [d2, attr-instance, date_entity, attr-day, 23, attr-month, 9, attr-year, 1973]]"
96,96,96,96,111,1104,alexander-sutherland-neill,Alexander Sutherland Neill war ein Pädagoge.,0_short,Personen|Seiten_mit_defekten_Dateilinks,2022-02-28T11:47:20Z,e800bebc9060331edfac65e663a55570,0:=Alexander 1:=Sutherland 2:=Neill 3:=war 4:=ein 5:=Pädagoge.,1,,Alexander Sutherland Neill was an educator.,"['# ::snt Alexander Sutherland Neill was an educator.\n(e / educate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Sutherland""\n                  :op3 ""Neill"")))']","[e, attr-instance, educate_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""sutherland"", attr-op3, ""neill""]]]"
97,97,97,97,112,1105,alexander-sutherland-neill,Er hat die Summerhill Schule geründet.,1_short,Personen|Seiten_mit_defekten_Dateilinks,2022-02-28T11:47:20Z,e800bebc9060331edfac65e663a55570,0:=Er 1:=hat 2:=die 3:=Summerhill 4:=Schule 5:=geründet.,1,,He founded the Summerhill School.,"['# ::snt He founded the Summerhill School.\n(f / found-01\n      :ARG0 (h / he)\n      :ARG1 (s / school\n            :name (n / name\n                  :op1 ""Summerhill""\n                  :op2 ""School"")))']","[f, attr-instance, found_01, attr-arg0, [h, attr-instance, he], attr-arg1, [s, attr-instance, school, attr-name, [n, attr-instance, name, attr-op1, ""summerhill"", attr-op2, ""school""]]]"
98,98,98,98,113,1106,alexander-tatarnikov,Im Jahr 2012 hat er eine neue Richtung der Kunst erfunden.,0_long,Personen|Hurraki:Überarbeiten,2014-08-18T13:39:55Z,cfb32d04a840c823f9a0d97071f81293,0:=Im 1:=Jahr 2:=2012 3:=hat 4:=er 5:=eine 6:=neue 7:=Richtung 8:=der 9:=Kunst 10:=erfunden.,2,"[[0, 1, 2], [3, 4, 6, 7, 8, 9, 10]]",In 2012 he invented a new direction in art.,['# ::snt In 2012 he invented a new direction in art.\n(ii / invent-01\n      :ARG0 (h / he)\n      :ARG1 (d / direction\n            :ARG1-of (n / new-01)\n            :topic (a / art))\n      :time (d2 / date-entity\n            :year 2012))'],"[ii, attr-instance, invent_01, attr-arg0, [h, attr-instance, he], attr-arg1, [d, attr-instance, direction, attr-arg1_of, [n, attr-instance, new_01], attr-topic, [a, attr-instance, art]], attr-time, [d2, attr-instance, date_entity, attr-year, 2012]]"
99,99,99,99,114,1108,alexander-tatarnikov,Diese Kunst ist bei vielen Menschen beliebt.,2_long,Personen|Hurraki:Überarbeiten,2014-08-18T13:39:55Z,cfb32d04a840c823f9a0d97071f81293,0:=Diese 1:=Kunst 2:=ist 3:=bei 4:=vielen 5:=Menschen 6:=beliebt.,1,,This art is popular with many people.,['# ::snt This art is popular with many people.\n(p / popular-02\n      :ARG1 (a / art\n            :mod (t / this))\n      :ARG2 (p2 / person\n            :quant (m / many)))'],"[p, attr-instance, popular_02, attr-arg1, [a, attr-instance, art, attr-mod, [t, attr-instance, this]], attr-arg2, [p2, attr-instance, person, attr-quant, [m, attr-instance, many]]]"
100,100,100,100,115,1109,alexander-tatarnikov,Er ist ein Künstler aus Russland.,0_short,Personen|Hurraki:Überarbeiten,2014-08-18T13:39:55Z,cfb32d04a840c823f9a0d97071f81293,0:=Er 1:=ist 2:=ein 3:=Künstler 4:=aus 5:=Russland.,2,"[[3], [4, 5]]",He is an artist from Russia.,"['# ::snt He is an artist from Russia.\n(a / artist\n      :domain (h / he)\n      :source (c / country\n            :name (n / name\n                  :op1 ""Russia"")))']","[a, attr-instance, artist, attr-domain, [h, attr-instance, he], attr-source, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""russia""]]]"
101,101,101,101,116,1110,algorithmus,Ein Algo-rithmus löst eine Aufgabe Schritt für Schritt.,0_long,Schule_und_Lernen|Computer|Internet|Seiten_mit_defekten_Dateilinks,2017-08-15T03:24:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Algo-rithmus 2:=löst 3:=eine 4:=Aufgabe 5:=Schritt 6:=für 7:=Schritt.,2,"[[1, 2, 4], [5, 6, 7]]",An algorithm solves a task step by step.,['# ::snt An algorithm solves a task step by step.\n(s / solve-01\n      :ARG0 (a / algorithm)\n      :ARG1 (t / task)\n      :manner (s2 / step-by-step))'],"[s, attr-instance, solve_01, attr-arg0, [a, attr-instance, algorithm], attr-arg1, [t, attr-instance, task], attr-manner, [s2, attr-instance, step_by_step]]"
102,102,102,102,117,1111,algorithmus,Das Gegenteil von einem Algorithmus ist eine Heuristik.,1_long,Schule_und_Lernen|Computer|Internet|Seiten_mit_defekten_Dateilinks,2017-08-15T03:24:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Gegenteil 2:=von 3:=einem 4:=Algorithmus 5:=ist 6:=eine 7:=Heuristik.,1,,The opposite of an algorithm is a heuristic.,['# ::snt The opposite of an algorithm is a heuristic.\n(h / heuristic\n      :domain (o / opposite-01\n            :ARG1 (a / algorithm)))'],"[h, attr-instance, heuristic, attr-domain, [o, attr-instance, opposite_01, attr-arg1, [a, attr-instance, algorithm]]]"
103,103,103,103,118,1112,algorithmus,Ein Algorithmus ist eine Reihen-folge.,0_short,Schule_und_Lernen|Computer|Internet|Seiten_mit_defekten_Dateilinks,2017-08-15T03:24:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Algorithmus 2:=ist 3:=eine 4:=Reihen-folge.,1,,An algorithm is a sequence.,['# ::snt An algorithm is a sequence.\n(s / sequence\n      :domain (a / algorithm))'],"[s, attr-instance, sequence, attr-domain, [a, attr-instance, algorithm]]"
104,104,104,104,119,1113,algorithmus,Mit einem Algo-rithmus kann man Probleme lösen.,1_short,Schule_und_Lernen|Computer|Internet|Seiten_mit_defekten_Dateilinks,2017-08-15T03:24:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Mit 1:=einem 2:=Algo-rithmus 3:=kann 4:=man 5:=Probleme 6:=lösen.,1,,With an algorithm you can solve problems.,['# ::snt With an algorithm you can solve problems.\n(p / possible-01\n      :ARG1 (s / solve-01\n            :ARG0 (y / you)\n            :ARG1 (p2 / problem)\n            :instrument (a / algorithm)))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, solve_01, attr-arg0, [y, attr-instance, you], attr-arg1, [p2, attr-instance, problem], attr-instrument, [a, attr-instance, algorithm]]]"
105,105,105,105,121,1117,alice-miller,"Sie stirbt am 14. April 2010. \newline In Saint-Rémy-de-Provence, Provence-Alpes-Côte d'Azur, Frankreich.",2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-03-02T14:11:08Z,e800bebc9060331edfac65e663a55570,"0:=Sie 1:=stirbt 2:=am 3:=14. 4:=April 5:=2010. 6:=\newline 7:=In 8:=Saint-Rémy-de-Provence, 9:=Provence-Alpes-Côte 10:=d'Azur, 11:=Frankreich.",4,"[[2, 3, 4, 5], [7, 8], [7, 9, 10], [7, 11]]","She died on April 14, 2010. \newline In Saint-Rémy-de-Provence, Provence-Alpes-Côte d'Azur, France.","['# ::snt She died on April 14, 2010.\n(d / die-01\n      :ARG1 (s / she)\n      :time (d2 / date-entity\n            :day 14\n            :month 4\n            :year 2010))', '# ::snt \\newline In Saint-Rémy-de-Provence, Provence-Alpes-Côte d\'Azur, France.\n(l / line\n      :ARG1-of (n / new-01)\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""Saint-Rémy-de-Provence"")\n            :location (p / province\n                  :name (n3 / name\n                        :op1 ""Provence-Alpes-Côte""\n                        :op2 ""d\'Azur"")\n                  :part-of (c2 / country\n                        :name (n4 / name\n                              :op1 ""France"")))))']","[d, attr-instance, die_01, attr-arg1, [s, attr-instance, she], attr-time, [d2, attr-instance, date_entity, attr-day, 14, attr-month, 4, attr-year, 2010]]"
106,106,106,106,122,1118,alice-miller,Millers Bücher kann man leichter verstehen.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-03-02T14:11:08Z,e800bebc9060331edfac65e663a55570,0:=Millers 1:=Bücher 2:=kann 3:=man 4:=leichter 5:=verstehen.,1,,Miller's books are easier to understand.,"['# ::snt Miller\'s books are easier to understand.\n(h / have-degree-91\n      :ARG1 (b / book\n            :poss (p / person\n                  :name (n / name\n                        :op1 ""Miller"")))\n      :ARG2 (e / easy-05\n            :ARG1 (u / understand-01\n                  :ARG1 b))\n      :ARG3 (m / more))']","[h, attr-instance, have_degree_91, attr-arg1, [b, attr-instance, book, attr-poss, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""miller""]]], attr-arg2, [e, attr-instance, easy_05, attr-arg1, [u, attr-instance, understand_01, attr-arg1, b]], attr-arg3, [m, attr-instance, more]]"
107,107,107,107,124,1120,alice-miller,Und kritisiert die Psychoanalyse.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-03-02T14:11:08Z,e800bebc9060331edfac65e663a55570,0:=Und 1:=kritisiert 2:=die 3:=Psychoanalyse.,1,,And criticizes psychoanalysis.,['# ::snt And criticizes psychoanalysis.\n(a / and\n      :op2 (c / criticize-01\n            :ARG1 (a2 / analyze-01\n                  :ARG1 (p / psycho))))'],"[a, attr-instance, and, attr-op2, [c, attr-instance, criticize_01, attr-arg1, [a2, attr-instance, analyze_01, attr-arg1, [p, attr-instance, psycho]]]]"
108,108,108,108,125,1121,alice-miller,Weil sie die Triebtheorie für eine Illusion hält.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-03-02T14:11:08Z,e800bebc9060331edfac65e663a55570,0:=Weil 1:=sie 2:=die 3:=Triebtheorie 4:=für 5:=eine 6:=Illusion 7:=hält.,1,,Because she believes that drive theory is an illusion.,['# ::snt Because she believes that drive theory is an illusion.\n(c / cause-01\n      :ARG0 (b / believe-01\n            :ARG0 (s / she)\n            :ARG1 (ii / illusion\n                  :domain (t / theory\n                        :mod (d / drive-01)))))'],"[c, attr-instance, cause_01, attr-arg0, [b, attr-instance, believe_01, attr-arg0, [s, attr-instance, she], attr-arg1, [ii, attr-instance, illusion, attr-domain, [t, attr-instance, theory, attr-mod, [d, attr-instance, drive_01]]]]]"
109,109,109,109,126,1122,alice-miller,Miller sagt: \newline  \newline Die Triebtheorie ist falsch.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-03-02T14:11:08Z,e800bebc9060331edfac65e663a55570,0:=Miller 1:=sagt: 2:=\newline 3:= 4:=\newline 5:=Die 6:=Triebtheorie 7:=ist 8:=falsch.,2,"[[0, 1], [6, 7, 8]]",Miller says: \newline \newline The drive theory is wrong.,"['# ::snt Miller says: \\newline \\newline The drive theory is wrong.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Miller""))\n      :ARG1 (w / wrong-04\n            :ARG1 (t / theory\n                  :topic (d / drive-01)))\n      :mod (l / line\n            :mod (n2 / newline)))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""miller""]], attr-arg1, [w, attr-instance, wrong_04, attr-arg1, [t, attr-instance, theory, attr-topic, [d, attr-instance, drive_01]]], attr-mod, [l, attr-instance, line, attr-mod, [n2, attr-instance, newline]]]"
110,110,110,110,127,1123,alice-miller,Ein Kindheits-trauma ist mehr als kindliche Fantasie.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-03-02T14:11:08Z,e800bebc9060331edfac65e663a55570,0:=Ein 1:=Kindheits-trauma 2:=ist 3:=mehr 4:=als 5:=kindliche 6:=Fantasie.,1,,A childhood trauma is more than a childish fantasy.,['# ::snt A childhood trauma is more than a childish fantasy.\n(h / have-quant-91\n      :ARG1 (t / trauma\n            :time (c / childhood))\n      :ARG3 (m / more)\n      :ARG4 (f / fantasy\n            :mod (c2 / childish)))'],"[h, attr-instance, have_quant_91, attr-arg1, [t, attr-instance, trauma, attr-time, [c, attr-instance, childhood]], attr-arg3, [m, attr-instance, more], attr-arg4, [f, attr-instance, fantasy, attr-mod, [c2, attr-instance, childish]]]"
111,111,111,111,129,1125,alice-miller,Alice Miller ist eine Psychologin.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-03-02T14:11:08Z,e800bebc9060331edfac65e663a55570,0:=Alice 1:=Miller 2:=ist 3:=eine 4:=Psychologin.,1,,Alice Miller is a psychologist.,"['# ::snt Alice Miller is a psychologist.\n(p / psychologist\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Alice""\n                  :op2 ""Miller"")))']","[p, attr-instance, psychologist, attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alice"", attr-op2, ""miller""]]]"
112,112,112,112,130,1126,alice-miller,Sie selbst sagt von sich: \newline  \newline Ich bin eine Kindheits-forscherin!,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-03-02T14:11:08Z,e800bebc9060331edfac65e663a55570,0:=Sie 1:=selbst 2:=sagt 3:=von 4:=sich: 5:=\newline 6:= 7:=\newline 8:=Ich 9:=bin 10:=eine 11:=Kindheits-forscherin!,2,"[[0, 1, 2, 3, 4], [8, 9, 11]]",She says of herself: \newline \newline I am a childhood researcher!,['# ::snt She says of herself: \\newline \\newline I am a childhood researcher!\n(s / say-01\n      :ARG0 (s2 / she)\n      :ARG1 (p / person\n            :ARG0-of (r / research-01\n                  :time (c / childhood))\n            :domain s2)\n      :ARG3 s2)'],"[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, she], attr-arg1, [p, attr-instance, person, attr-arg0_of, [r, attr-instance, research_01, attr-time, [c, attr-instance, childhood]], attr-domain, s2], attr-arg3, s2]"
113,113,113,113,131,1127,alice-miller,Sie beschreibt in ihren Büchern Kindes-misshandlung.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-03-02T14:11:08Z,e800bebc9060331edfac65e663a55570,0:=Sie 1:=beschreibt 2:=in 3:=ihren 4:=Büchern 5:=Kindes-misshandlung.,2,"[[0, 1, 5], [2, 3, 4]]",She describes child abuse in her books.,['# ::snt She describes child abuse in her books.\n(d / describe-01\n      :ARG0 (s / she)\n      :ARG1 (a / abuse-01\n            :ARG1 (c / child))\n      :medium (b / book\n            :poss s))'],"[d, attr-instance, describe_01, attr-arg0, [s, attr-instance, she], attr-arg1, [a, attr-instance, abuse_01, attr-arg1, [c, attr-instance, child]], attr-medium, [b, attr-instance, book, attr-poss, s]]"
114,114,114,114,133,1129,alkoholkrankheit,Viele Menschen trinken gern Getränke mit Alkohol.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Viele 1:=Menschen 2:=trinken 3:=gern 4:=Getränke 5:=mit 6:=Alkohol.,2,"[[0, 1, 2, 3], [5, 6]]",Many people enjoy drinking beverages containing alcohol.,['# ::snt Many people enjoy drinking beverages containing alcohol.\n(e / enjoy-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (d / drink-01\n            :ARG0 p\n            :ARG1 (b / beverage\n                  :ARG0-of (c / contain-01\n                        :ARG1 (a / alcohol)))))'],"[e, attr-instance, enjoy_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [d, attr-instance, drink_01, attr-arg0, p, attr-arg1, [b, attr-instance, beverage, attr-arg0_of, [c, attr-instance, contain_01, attr-arg1, [a, attr-instance, alcohol]]]]]"
115,115,115,115,134,1130,alkoholkrankheit,Das kann gefähr-lich sein.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Das 1:=kann 2:=gefähr-lich 3:=sein.,1,,It may be dangerous.,['# ::snt It may be dangerous.\n(p / possible-01\n      :ARG1 (e / endanger-01\n            :ARG0 (ii / it)))'],"[p, attr-instance, possible_01, attr-arg1, [e, attr-instance, endanger_01, attr-arg0, [ii, attr-instance, it]]]"
116,116,116,116,135,1131,alkoholkrankheit,Man kann abhängig werden vom Alkohol.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Man 1:=kann 2:=abhängig 3:=werden 4:=vom 5:=Alkohol.,2,"[[0, 1, 2, 3], [4, 5]]",You can become addicted to alcohol.,['# ::snt You can become addicted to alcohol.\n(p / possible-01\n      :ARG1 (b / become-01\n            :ARG1 (y / you)\n            :ARG2 (a / addict-01\n                  :ARG1 y\n                  :ARG2 (a2 / alcohol))))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, become_01, attr-arg1, [y, attr-instance, you], attr-arg2, [a, attr-instance, addict_01, attr-arg1, y, attr-arg2, [a2, attr-instance, alcohol]]]]"
117,117,117,117,136,1132,alkoholkrankheit,Das heißt:  \newline Man kann nicht aufhören mit Alkohol-trinken.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Das 1:=heißt: 2:= 3:=\newline 4:=Man 5:=kann 6:=nicht 7:=aufhören 8:=mit 9:=Alkohol-trinken.,1,,That means: \newline You can't stop drinking alcohol.,"[""# ::snt That means: \\newline You can't stop drinking alcohol.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (s / stop-01\n                  :ARG0 (y / you)\n                  :ARG1 (d / drink-01\n                        :ARG0 y\n                        :ARG1 (a / alcohol))))\n      :mod (n / newline))""]","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [s, attr-instance, stop_01, attr-arg0, [y, attr-instance, you], attr-arg1, [d, attr-instance, drink_01, attr-arg0, y, attr-arg1, [a, attr-instance, alcohol]]]], attr-mod, [n, attr-instance, newline]]"
118,118,118,118,137,1133,alkoholkrankheit,Man sagt dazu auch Sucht.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Man 1:=sagt 2:=dazu 3:=auch 4:=Sucht.,1,,It is also called addiction.,['# ::snt It is also called addiction.\n(c / call-01\n      :ARG1 (ii / it)\n      :ARG2 (a / addict-01)\n      :mod (a2 / also))'],"[c, attr-instance, call_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [a, attr-instance, addict_01], attr-mod, [a2, attr-instance, also]]"
119,119,119,119,138,1134,alkoholkrankheit,Die Alkohol-krankheit ist eine Krankheit.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Die 1:=Alkohol-krankheit 2:=ist 3:=eine 4:=Krankheit.,1,,Alcoholism is a disease.,['# ::snt Alcoholism is a disease.\n(d / disease\n      :domain (a / alcoholism))'],"[d, attr-instance, disease, attr-domain, [a, attr-instance, alcoholism]]"
120,120,120,120,139,1135,alkoholkrankheit,Menschen mit der Alkohol-krankheit nennt man: \newline Alkoholiker.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Menschen 1:=mit 2:=der 3:=Alkohol-krankheit 4:=nennt 5:=man: 6:=\newline 7:=Alkoholiker.,1,,People with alcohol addiction are called: \newline alcoholics.,['# ::snt People with alcohol addiction are called: \\newline alcoholics.\n(c / call-01\n      :ARG1 (p / person\n            :ARG0-of (a / addict-01\n                  :ARG2 (a2 / alcohol)))\n      :ARG2 (a3 / alcoholic\n            :mod (l / line\n                  :mod (n / newline))))'],"[c, attr-instance, call_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [a, attr-instance, addict_01, attr-arg2, [a2, attr-instance, alcohol]]], attr-arg2, [a3, attr-instance, alcoholic, attr-mod, [l, attr-instance, line, attr-mod, [n, attr-instance, newline]]]]"
121,121,121,121,140,1136,alkoholkrankheit,Ein Alkoholiker muss regel-mäßig Alkohol trinken.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Ein 1:=Alkoholiker 2:=muss 3:=regel-mäßig 4:=Alkohol 5:=trinken.,2,"[[1, 2, 4, 5], [3]]",An alcoholic must drink alcohol regularly.,['# ::snt An alcoholic must drink alcohol regularly.\n(o / obligate-01\n      :ARG2 (d / drink-01\n            :ARG0 (a / alcoholic)\n            :ARG1 (a2 / alcohol)\n            :ARG1-of (r / regular-02)))'],"[o, attr-instance, obligate_01, attr-arg2, [d, attr-instance, drink_01, attr-arg0, [a, attr-instance, alcoholic], attr-arg1, [a2, attr-instance, alcohol], attr-arg1_of, [r, attr-instance, regular_02]]]"
122,122,122,122,141,1137,alkoholkrankheit,Sonst geht es dem Alkoholiker schlecht.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Sonst 1:=geht 2:=es 3:=dem 4:=Alkoholiker 5:=schlecht.,1,,Otherwise the alcoholic will feel bad.,['# ::snt Otherwise the alcoholic will feel bad.\n(h / have-condition-91\n      :ARG1 (f / feel-01\n            :ARG0 (a / alcoholic)\n            :ARG1 (b / bad-07)))'],"[h, attr-instance, have_condition_91, attr-arg1, [f, attr-instance, feel_01, attr-arg0, [a, attr-instance, alcoholic], attr-arg1, [b, attr-instance, bad_07]]]"
123,123,123,123,142,1138,alkoholkrankheit,Wenn man die Alkohol-krankheit hat braucht man Hilfe.,9_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Wenn 1:=man 2:=die 3:=Alkohol-krankheit 4:=hat 5:=braucht 6:=man 7:=Hilfe.,2,"[[0, 1, 3, 4], [5, 6, 7]]",If you have alcohol addiction you need help.,['# ::snt If you have alcohol addiction you need help.\n(n / need-01\n      :ARG0 (y / you)\n      :ARG1 (h / help-01\n            :ARG1 y)\n      :condition (a / addict-01\n            :ARG1 y\n            :ARG2 (a2 / alcohol)))'],"[n, attr-instance, need_01, attr-arg0, [y, attr-instance, you], attr-arg1, [h, attr-instance, help_01, attr-arg1, y], attr-condition, [a, attr-instance, addict_01, attr-arg1, y, attr-arg2, [a2, attr-instance, alcohol]]]"
124,124,124,124,143,1139,alkoholkrankheit,Die Alkohol-krankheit kann man heilen.,10_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Die 1:=Alkohol-krankheit 2:=kann 3:=man 4:=heilen.,1,,Alcoholism can be cured.,['# ::snt Alcoholism can be cured.\n(p / possible-01\n      :ARG1 (c / cure-01\n            :ARG2 (a / alcohol)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, cure_01, attr-arg2, [a, attr-instance, alcohol]]]"
125,125,125,125,144,1140,alkoholkrankheit,Dazu muss man einen Alkohol-entzug machen.,11_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Dazu 1:=muss 2:=man 3:=einen 4:=Alkohol-entzug 5:=machen.,1,,To do this you have to go through alcohol withdrawal.,['# ::snt To do this you have to go through alcohol withdrawal.\n(o / obligate-01\n      :ARG1 (y / you)\n      :ARG2 (g / go-through-20\n            :ARG0 y\n            :ARG1 (w / withdraw-01\n                  :ARG1 y\n                  :ARG2 (a / alcohol)))\n      :purpose (d / do-02\n            :ARG0 y\n            :ARG1 (t / this)))'],"[o, attr-instance, obligate_01, attr-arg1, [y, attr-instance, you], attr-arg2, [g, attr-instance, go_through_20, attr-arg0, y, attr-arg1, [w, attr-instance, withdraw_01, attr-arg1, y, attr-arg2, [a, attr-instance, alcohol]]], attr-purpose, [d, attr-instance, do_02, attr-arg0, y, attr-arg1, [t, attr-instance, this]]]"
126,126,126,126,145,1141,alkoholkrankheit,Das nennt man auch Ent-giftung.,12_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Das 1:=nennt 2:=man 3:=auch 4:=Ent-giftung.,1,,This is also called detoxification.,['# ::snt This is also called detoxification.\n(c / call-01\n      :ARG1 (t / this)\n      :ARG2 (d / detoxify-01)\n      :mod (a / also))'],"[c, attr-instance, call_01, attr-arg1, [t, attr-instance, this], attr-arg2, [d, attr-instance, detoxify_01], attr-mod, [a, attr-instance, also]]"
127,127,127,127,146,1142,alkoholkrankheit,Und man braucht eine Therapie.,13_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Und 1:=man 2:=braucht 3:=eine 4:=Therapie.,1,,And you need therapy.,['# ::snt And you need therapy.\n(a / and\n      :op2 (n / need-01\n            :ARG0 (y / you)\n            :ARG1 (t / therapy)))'],"[a, attr-instance, and, attr-op2, [n, attr-instance, need_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, therapy]]]"
128,128,128,128,147,1143,alkoholkrankheit,Der Alkoholiker muss lernen ohne Alkohol zu leben.,14_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Der 1:=Alkoholiker 2:=muss 3:=lernen 4:=ohne 5:=Alkohol 6:=zu 7:=leben.,2,"[[1, 2, 3], [4, 5, 6, 7]]",The alcoholic must learn to live without alcohol.,['# ::snt The alcoholic must learn to live without alcohol.\n(o / obligate-01\n      :ARG2 (l / learn-01\n            :ARG0 (a / alcoholic)\n            :ARG1 (l2 / live-01\n                  :ARG0 a\n                  :manner (h / have-03\n                        :polarity -\n                        :ARG0 a\n                        :ARG1 (a2 / alcohol)))))'],"[o, attr-instance, obligate_01, attr-arg2, [l, attr-instance, learn_01, attr-arg0, [a, attr-instance, alcoholic], attr-arg1, [l2, attr-instance, live_01, attr-arg0, a, attr-manner, [h, attr-instance, have_03, attr-polarity, negative, attr-arg0, a, attr-arg1, [a2, attr-instance, alcohol]]]]]"
129,129,129,129,148,1144,alkoholkrankheit,Alkohol-krankheit ist eine Krankheit.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Alkohol-krankheit 1:=ist 2:=eine 3:=Krankheit.,1,,Alcoholism is a disease.,['# ::snt Alcoholism is a disease.\n(d / disease\n      :domain (a / alcoholism))'],"[d, attr-instance, disease, attr-domain, [a, attr-instance, alcoholism]]"
130,130,130,130,150,1147,alkoholkrankheit,Man kann nicht aufhören mit Alkohol-trinken.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T15:49:02Z,017ecada082ed42bbfc77d89d4b14406,0:=Man 1:=kann 2:=nicht 3:=aufhören 4:=mit 5:=Alkohol-trinken.,1,,You can't stop drinking alcohol.,"[""# ::snt You can't stop drinking alcohol.\n(p / possible-01\n      :polarity -\n      :ARG1 (s / stop-01\n            :ARG0 (y / you)\n            :ARG1 (d / drink-01\n                  :ARG0 y\n                  :ARG1 (a / alcohol))))""]","[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [s, attr-instance, stop_01, attr-arg0, [y, attr-instance, you], attr-arg1, [d, attr-instance, drink_01, attr-arg0, y, attr-arg1, [a, attr-instance, alcohol]]]]"
131,131,131,131,151,1148,alkohol,Alkohol gehört zur Chemie.,0_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alkohol 1:=gehört 2:=zur 3:=Chemie.,1,,Alcohol is part of chemistry.,['# ::snt Alcohol is part of chemistry.\n(h / have-part-91\n      :ARG1 (c / chemistry)\n      :ARG2 (a / alcohol))'],"[h, attr-instance, have_part_91, attr-arg1, [c, attr-instance, chemistry], attr-arg2, [a, attr-instance, alcohol]]"
132,132,132,132,152,1149,alkohol,Es gibt viele Alkohole.,1_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=viele 3:=Alkohole.,1,,There are many alcohols.,['# ::snt There are many alcohols.\n(a / alcohol\n      :quant (m / many))'],"[a, attr-instance, alcohol, attr-quant, [m, attr-instance, many]]"
133,133,133,133,153,1150,alkohol,Ein Alkohol ist Ethanol.,2_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Alkohol 2:=ist 3:=Ethanol.,1,,One alcohol is ethanol.,['# ::snt One alcohol is ethanol.\n(e / ethanol\n      :domain (a / alcohol\n            :quant 1))'],"[e, attr-instance, ethanol, attr-domain, [a, attr-instance, alcohol, attr-quant, 1]]"
134,134,134,134,154,1151,alkohol,Man sagt auch dazu: \newline Ethyl-alkohol.,3_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=sagt 2:=auch 3:=dazu: 4:=\newline 5:=Ethyl-alkohol.,1,,It is also called: \newline Ethyl alcohol.,"['# ::snt It is also called: \\newline Ethyl alcohol.\n(c / call-01\n      :ARG1 (ii / it)\n      :ARG2 (a / alcohol\n            :mod (m / molecular-mass\n                  :value ""-1""))\n      :mod (a2 / also))']","[c, attr-instance, call_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [a, attr-instance, alcohol, attr-mod, [m, attr-instance, molecular_mass, attr-value, ""_1""]], attr-mod, [a2, attr-instance, also]]"
135,135,135,135,156,1153,alkohol,Ethanol ist eine Flüssigkeit.,5_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ethanol 1:=ist 2:=eine 3:=Flüssigkeit.,1,,Ethanol is a liquid.,['# ::snt Ethanol is a liquid.\n(l / liquid\n      :domain (e / ethanol))'],"[l, attr-instance, liquid, attr-domain, [e, attr-instance, ethanol]]"
136,136,136,136,157,1154,alkohol,Ethanol hat keine Farbe.,6_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ethanol 1:=hat 2:=keine 3:=Farbe.,1,,Ethanol has no color.,['# ::snt Ethanol has no color.\n(c / color-01\n      :polarity -\n      :ARG1 (e / ethanol))'],"[c, attr-instance, color_01, attr-polarity, negative, attr-arg1, [e, attr-instance, ethanol]]"
137,137,137,137,158,1155,alkohol,Ethanol kann brennen.,7_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ethanol 1:=kann 2:=brennen.,1,,Ethanol can burn.,['# ::snt Ethanol can burn.\n(p / possible-01\n      :ARG1 (b / burn-01\n            :ARG1 (e / ethanol)))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, burn_01, attr-arg1, [e, attr-instance, ethanol]]]"
138,138,138,138,159,1156,alkohol,Mit Ethanol kann man auch putzen.,8_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Mit 1:=Ethanol 2:=kann 3:=man 4:=auch 5:=putzen.,1,,You can also use ethanol for cleaning.,['# ::snt You can also use ethanol for cleaning.\n(p / possible-01\n      :ARG1 (u / use-01\n            :ARG0 (y / you)\n            :ARG1 (e / ethanol)\n            :ARG2 (c / clean-01)\n            :mod (a / also)))'],"[p, attr-instance, possible_01, attr-arg1, [u, attr-instance, use_01, attr-arg0, [y, attr-instance, you], attr-arg1, [e, attr-instance, ethanol], attr-arg2, [c, attr-instance, clean_01], attr-mod, [a, attr-instance, also]]]"
139,139,139,139,160,1157,alkohol,Ethanol ist in vielen Getränken.,9_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ethanol 1:=ist 2:=in 3:=vielen 4:=Getränken.,1,,Ethanol is in many beverages.,['# ::snt Ethanol is in many beverages.\n(b / be-located-at-91\n      :ARG1 (e / ethanol)\n      :ARG2 (b2 / beverage\n            :quant (m / many)))'],"[b, attr-instance, be_located_at_91, attr-arg1, [e, attr-instance, ethanol], attr-arg2, [b2, attr-instance, beverage, attr-quant, [m, attr-instance, many]]]"
140,140,140,140,161,1158,alkohol,Viele Menschen trinken gerne Alkohol.,10_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Viele 1:=Menschen 2:=trinken 3:=gerne 4:=Alkohol.,1,,Many people enjoy drinking alcohol.,['# ::snt Many people enjoy drinking alcohol.\n(e / enjoy-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (d / drink-01\n            :ARG0 p\n            :ARG1 (a / alcohol)))'],"[e, attr-instance, enjoy_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [d, attr-instance, drink_01, attr-arg0, p, attr-arg1, [a, attr-instance, alcohol]]]"
141,141,141,141,162,1159,alkohol,Aber Alkohol kann gefährlich sein.,11_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Aber 1:=Alkohol 2:=kann 3:=gefährlich 4:=sein.,1,,But alcohol can be dangerous.,['# ::snt But alcohol can be dangerous.\n(c / contrast-01\n      :ARG2 (p / possible-01\n            :ARG1 (e / endanger-01\n                  :ARG0 (a / alcohol))))'],"[c, attr-instance, contrast_01, attr-arg2, [p, attr-instance, possible_01, attr-arg1, [e, attr-instance, endanger_01, attr-arg0, [a, attr-instance, alcohol]]]]"
142,142,142,142,163,1160,alkohol,Zu viel Alkohol ist Gift für den Körper.,12_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zu 1:=viel 2:=Alkohol 3:=ist 4:=Gift 5:=für 6:=den 7:=Körper.,2,"[[0, 1, 2, 3, 4], [5, 7]]",Too much alcohol is poison for the body.,['# ::snt Too much alcohol is poison for the body.\n(p / poison-02\n      :ARG0 (a / alcohol\n            :ARG1-of (h / have-quant-91\n                  :ARG2 (m / much)\n                  :ARG3 (t / too)))\n      :ARG1 (b / body))'],"[p, attr-instance, poison_02, attr-arg0, [a, attr-instance, alcohol, attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg2, [m, attr-instance, much], attr-arg3, [t, attr-instance, too]]], attr-arg1, [b, attr-instance, body]]"
143,143,143,143,164,1161,alkohol,Das heißt: \newline Wenn man viel davon trinkt wird man krank.,13_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=heißt: 2:=\newline 3:=Wenn 4:=man 5:=viel 6:=davon 7:=trinkt 8:=wird 9:=man 10:=krank.,2,"[[3, 4, 5, 6, 7], [8, 9, 10]]",That means: \newline If you drink a lot of it you will get sick.,['# ::snt That means: \\newline If you drink a lot of it you will get sick.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (s / sick-05\n            :ARG1 (y / you)\n            :condition (d / drink-01\n                  :ARG0 y\n                  :ARG1 (l / lot\n                        :ARG1-of (ii / include-91\n                              :ARG2 (ii2 / it)))))\n      :mod (n / newline))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [s, attr-instance, sick_05, attr-arg1, [y, attr-instance, you], attr-condition, [d, attr-instance, drink_01, attr-arg0, y, attr-arg1, [l, attr-instance, lot, attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [ii2, attr-instance, it]]]]], attr-mod, [n, attr-instance, newline]]"
144,144,144,144,165,1162,alkohol,Oft wird die Leber sehr krank.,14_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oft 1:=wird 2:=die 3:=Leber 4:=sehr 5:=krank.,1,,Often the liver becomes very sick.,['# ::snt Often the liver becomes very sick.\n(b / become-01\n      :ARG1 (l / liver)\n      :ARG2 (s / sick-05\n            :ARG1 l\n            :degree (v / very))\n      :frequency (o / often))'],"[b, attr-instance, become_01, attr-arg1, [l, attr-instance, liver], attr-arg2, [s, attr-instance, sick_05, attr-arg1, l, attr-degree, [v, attr-instance, very]], attr-frequency, [o, attr-instance, often]]"
145,145,145,145,166,1163,alkohol,Und man kann abhängig werden vom Alkohol.,15_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=man 2:=kann 3:=abhängig 4:=werden 5:=vom 6:=Alkohol.,2,"[[1, 2, 3, 4], [5, 6]]",And you can become addicted to alcohol.,['# ::snt And you can become addicted to alcohol.\n(a / and\n      :op2 (p / possible-01\n            :ARG1 (b / become-01\n                  :ARG1 (y / you)\n                  :ARG2 (a2 / addict-01\n                        :ARG1 y\n                        :ARG2 (a3 / alcohol)))))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, possible_01, attr-arg1, [b, attr-instance, become_01, attr-arg1, [y, attr-instance, you], attr-arg2, [a2, attr-instance, addict_01, attr-arg1, y, attr-arg2, [a3, attr-instance, alcohol]]]]]"
146,146,146,146,167,1164,alkohol,Das heißt:  \newline Man kann nicht aufhören mit Alkohol-trinken.,16_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=heißt: 2:= 3:=\newline 4:=Man 5:=kann 6:=nicht 7:=aufhören 8:=mit 9:=Alkohol-trinken.,1,,That means: \newline You can't stop drinking alcohol.,"[""# ::snt That means: \\newline You can't stop drinking alcohol.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (s / stop-01\n                  :ARG0 (y / you)\n                  :ARG1 (d / drink-01\n                        :ARG0 y\n                        :ARG1 (a / alcohol))))\n      :mod (n / newline))""]","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [s, attr-instance, stop_01, attr-arg0, [y, attr-instance, you], attr-arg1, [d, attr-instance, drink_01, attr-arg0, y, attr-arg1, [a, attr-instance, alcohol]]]], attr-mod, [n, attr-instance, newline]]"
147,147,147,147,168,1165,alkohol,Das nennt man dann Sucht.,17_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=nennt 2:=man 3:=dann 4:=Sucht.,1,,That's called addiction.,"[""# ::snt That's called addiction.\n(c / call-01\n      :ARG1 (t / that)\n      :ARG2 (a / addict-01))""]","[c, attr-instance, call_01, attr-arg1, [t, attr-instance, that], attr-arg2, [a, attr-instance, addict_01]]"
148,148,148,148,169,1166,alkohol,Man sagt dazu auch Alkoholkrankheit.,18_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=sagt 2:=dazu 3:=auch 4:=Alkoholkrankheit.,1,,It is also called alcoholism.,['# ::snt It is also called alcoholism.\n(c / call-01\n      :ARG1 (ii / it)\n      :ARG2 (a / alcoholism)\n      :mod (a2 / also))'],"[c, attr-instance, call_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [a, attr-instance, alcoholism], attr-mod, [a2, attr-instance, also]]"
149,149,149,149,170,1167,alkohol,Wenn man die Alkohol-krankheit hat braucht man Hilfe.,19_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Wenn 1:=man 2:=die 3:=Alkohol-krankheit 4:=hat 5:=braucht 6:=man 7:=Hilfe.,2,"[[0, 1, 3, 4], [5, 6, 7]]",If you have alcohol addiction you need help.,['# ::snt If you have alcohol addiction you need help.\n(n / need-01\n      :ARG0 (y / you)\n      :ARG1 (h / help-01\n            :ARG1 y)\n      :condition (a / addict-01\n            :ARG1 y\n            :ARG2 (a2 / alcohol)))'],"[n, attr-instance, need_01, attr-arg0, [y, attr-instance, you], attr-arg1, [h, attr-instance, help_01, attr-arg1, y], attr-condition, [a, attr-instance, addict_01, attr-arg1, y, attr-arg2, [a2, attr-instance, alcohol]]]"
150,150,150,150,171,1168,alkohol,Daher soll man nur wenig Alkohol trinken.,20_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Daher 1:=soll 2:=man 3:=nur 4:=wenig 5:=Alkohol 6:=trinken.,1,,"Therefore, you should only drink a small amount of alcohol.","['# ::snt Therefore, you should only drink a small amount of alcohol.\n(c / cause-01\n      :ARG1 (r / recommend-01\n            :ARG1 (d / drink-01\n                  :ARG0 (y / you)\n                  :ARG1 (a / alcohol\n                        :quant (a2 / amount\n                              :mod (s / small)))\n                  :mod (o / only))\n            :ARG2 y))']","[c, attr-instance, cause_01, attr-arg1, [r, attr-instance, recommend_01, attr-arg1, [d, attr-instance, drink_01, attr-arg0, [y, attr-instance, you], attr-arg1, [a, attr-instance, alcohol, attr-quant, [a2, attr-instance, amount, attr-mod, [s, attr-instance, small]]], attr-mod, [o, attr-instance, only]], attr-arg2, y]]"
151,151,151,151,172,1169,alkohol,Am besten trinkt man gar keinen Alkohol.,21_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=besten 2:=trinkt 3:=man 4:=gar 5:=keinen 6:=Alkohol.,1,,It is best not to drink alcohol at all.,['# ::snt It is best not to drink alcohol at all.\n(h / have-degree-91\n      :ARG1 (d / drink-01\n            :polarity -\n            :ARG1 (a / alcohol)\n            :mod (a2 / at-all))\n      :ARG2 (g / good-02\n            :ARG1 d)\n      :ARG3 (m / most))'],"[h, attr-instance, have_degree_91, attr-arg1, [d, attr-instance, drink_01, attr-polarity, negative, attr-arg1, [a, attr-instance, alcohol], attr-mod, [a2, attr-instance, at_all]], attr-arg2, [g, attr-instance, good_02, attr-arg1, d], attr-arg3, [m, attr-instance, most]]"
152,152,152,152,173,1170,alkohol,Man soll auch nicht jeden Tag Alkohol trinken.,22_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=soll 2:=auch 3:=nicht 4:=jeden 5:=Tag 6:=Alkohol 7:=trinken.,2,"[[0, 1, 2, 3, 6, 7], [4, 5]]",You shouldn't drink alcohol every day either.,"[""# ::snt You shouldn't drink alcohol every day either.\n(r / recommend-01\n      :ARG1 (d / drink-01\n            :polarity -\n            :ARG0 (y / you)\n            :ARG1 (a / alcohol)\n            :frequency (r2 / rate-entity-91\n                  :ARG3 (t / temporal-quantity\n                        :quant 1\n                        :unit (d2 / day)))\n            :mod (e / either)))""]","[r, attr-instance, recommend_01, attr-arg1, [d, attr-instance, drink_01, attr-polarity, negative, attr-arg0, [y, attr-instance, you], attr-arg1, [a, attr-instance, alcohol], attr-frequency, [r2, attr-instance, rate_entity_91, attr-arg3, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [d2, attr-instance, day]]], attr-mod, [e, attr-instance, either]]]"
153,153,153,153,174,1171,alkohol,Und man soll auch nicht allein Alkohol trinken.,23_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=man 2:=soll 3:=auch 4:=nicht 5:=allein 6:=Alkohol 7:=trinken.,2,"[[1, 2, 3, 4, 6, 7], [5]]",And you shouldn’t drink alcohol alone either.,['# ::snt And you shouldn’t drink alcohol alone either.\n(a / and\n      :op2 (r / recommend-01\n            :ARG1 (d / drink-01\n                  :polarity -\n                  :ARG0 (y / you)\n                  :ARG1 (a2 / alcohol)\n                  :manner (a3 / alone)\n                  :mod (e / either))))'],"[a, attr-instance, and, attr-op2, [r, attr-instance, recommend_01, attr-arg1, [d, attr-instance, drink_01, attr-polarity, negative, attr-arg0, [y, attr-instance, you], attr-arg1, [a2, attr-instance, alcohol], attr-manner, [a3, attr-instance, alone], attr-mod, [e, attr-instance, either]]]]"
154,154,154,154,175,1172,alkohol,Manchmal ist es besser wenn man keinen Alkohol trinkt.,24_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Manchmal 1:=ist 2:=es 3:=besser 4:=wenn 5:=man 6:=keinen 7:=Alkohol 8:=trinkt.,2,"[[0, 1, 2, 3], [4, 5, 6, 7, 8]]",Sometimes it is better not to drink alcohol.,['# ::snt Sometimes it is better not to drink alcohol.\n(h / have-degree-91\n      :ARG1 (d / drink-01\n            :polarity -\n            :ARG1 (a / alcohol))\n      :ARG2 (g / good-02\n            :ARG1 d\n            :frequency (s / sometimes))\n      :ARG3 (m / more))'],"[h, attr-instance, have_degree_91, attr-arg1, [d, attr-instance, drink_01, attr-polarity, negative, attr-arg1, [a, attr-instance, alcohol]], attr-arg2, [g, attr-instance, good_02, attr-arg1, d, attr-frequency, [s, attr-instance, sometimes]], attr-arg3, [m, attr-instance, more]]"
155,155,155,155,181,1178,alkohol,Kinder sollen keinen Alkohol trinken.,30_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kinder 1:=sollen 2:=keinen 3:=Alkohol 4:=trinken.,1,,Children should not drink alcohol.,['# ::snt Children should not drink alcohol.\n(r / recommend-01\n      :ARG1 (d / drink-01\n            :polarity -\n            :ARG0 (c / child)\n            :ARG1 (a / alcohol)))'],"[r, attr-instance, recommend_01, attr-arg1, [d, attr-instance, drink_01, attr-polarity, negative, attr-arg0, [c, attr-instance, child], attr-arg1, [a, attr-instance, alcohol]]]"
156,156,156,156,182,1179,alkohol,Alkohol ist eine Flüssigkeit.,0_short,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alkohol 1:=ist 2:=eine 3:=Flüssigkeit.,1,,Alcohol is a liquid.,['# ::snt Alcohol is a liquid.\n(l / liquid\n      :domain (a / alcohol))'],"[l, attr-instance, liquid, attr-domain, [a, attr-instance, alcohol]]"
157,157,157,157,184,1181,alkohol,Man kann auch ein alkohol-haltiges Getränk meinen.,2_short,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=kann 2:=auch 3:=ein 4:=alkohol-haltiges 5:=Getränk 6:=meinen.,2,"[[0, 1, 2, 3, 5, 6], [4]]",It can also mean an alcoholic drink.,['# ::snt It can also mean an alcoholic drink.\n(p / possible-01\n      :ARG1 (m / mean-01\n            :ARG1 (ii / it)\n            :ARG2 (d / drink-01\n                  :mod (a / alcoholic))\n            :mod (a2 / also)))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, mean_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [d, attr-instance, drink_01, attr-mod, [a, attr-instance, alcoholic]], attr-mod, [a2, attr-instance, also]]]"
158,158,158,158,185,1182,alkohol,Das ist ein Getränk mit Ethanol.,3_short,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks|Wörter_mit_verschiedenen_Bedeutungen,2023-05-18T06:47:13Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=ist 2:=ein 3:=Getränk 4:=mit 5:=Ethanol.,2,"[[0, 1], [4, 5]]",This is a drink containing ethanol.,['# ::snt This is a drink containing ethanol.\n(d / drink-01\n      :ARG0-of (c / contain-01\n            :ARG1 (e / ethanol))\n      :domain (t / this))'],"[d, attr-instance, drink_01, attr-arg0_of, [c, attr-instance, contain_01, attr-arg1, [e, attr-instance, ethanol]], attr-domain, [t, attr-instance, this]]"
159,159,159,159,187,1184,allee,Eine Allee ist lang  \newline und hat rechts und links Bäume.,0_long,Ohne_Kategorie,2012-06-10T17:54:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Allee 2:=ist 3:=lang 4:= 5:=\newline 6:=und 7:=hat 8:=rechts 9:=und 10:=links 11:=Bäume.,3,"[[2, 3], [7, 8, 11], [7, 10, 11]]",An avenue is long \newline and has trees on the right and left.,['# ::snt An avenue is long \\newline and has trees on the right and left.\n(a / and\n      :op1 (l / long-03\n            :ARG1 (a2 / avenue)\n            :ARG2 (l2 / line\n                  :mod (n / newline)))\n      :op2 (h / have-03\n            :ARG0 a2\n            :ARG1 (a3 / and\n                  :op1 (t / tree\n                        :ARG1-of (r / right-08))\n                  :op2 (t2 / tree\n                        :ARG1-of (l3 / left-19)))))'],"[a, attr-instance, and, attr-op1, [l, attr-instance, long_03, attr-arg1, [a2, attr-instance, avenue], attr-arg2, [l2, attr-instance, line, attr-mod, [n, attr-instance, newline]]], attr-op2, [h, attr-instance, have_03, attr-arg0, a2, attr-arg1, [a3, attr-instance, and, attr-op1, [t, attr-instance, tree, attr-arg1_of, [r, attr-instance, right_08]], attr-op2, [t2, attr-instance, tree, attr-arg1_of, [l3, attr-instance, left_19]]]]]"
160,160,160,160,188,1185,allee,Eine Allee ist eine gerade Straße.,0_short,Ohne_Kategorie,2012-06-10T17:54:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Allee 2:=ist 3:=eine 4:=gerade 5:=Straße.,2,"[[1, 2], [4]]",An avenue is a straight street.,['# ::snt An avenue is a straight street.\n(s / street\n      :ARG1-of (s2 / straight-04)\n      :domain (a / avenue))'],"[s, attr-instance, street, attr-arg1_of, [s2, attr-instance, straight_04], attr-domain, [a, attr-instance, avenue]]"
161,161,161,161,189,1186,alleinstehend,Das Wort alleinstehend ist ein Adjektiv.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-11-18T14:59:56Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Wort 2:=alleinstehend 3:=ist 4:=ein 5:=Adjektiv.,1,,The word solitary is an adjective.,['# ::snt The word solitary is an adjective.\n(w / word\n      :mod (s / solitary)\n      :mod (a / adjective))'],"[w, attr-instance, word, attr-mod, [s, attr-instance, solitary], attr-mod, [a, attr-instance, adjective]]"
162,162,162,162,190,1187,alleinstehend,Das Wort alleinstehend bedeutet alleine.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-11-18T14:59:56Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Wort 2:=alleinstehend 3:=bedeutet 4:=alleine.,1,,The word solitary means alone.,['# ::snt The word solitary means alone.\n(m / mean-01\n      :ARG1 (w / word\n            :mod (s / solitary))\n      :ARG2 (a / alone))'],"[m, attr-instance, mean_01, attr-arg1, [w, attr-instance, word, attr-mod, [s, attr-instance, solitary]], attr-arg2, [a, attr-instance, alone]]"
163,163,163,163,192,1189,alleinstehend,Wenn die Person alleine lebt.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-11-18T14:59:56Z,48f66906899cc4a9477b6c9e32ff4424,0:=Wenn 1:=die 2:=Person 3:=alleine 4:=lebt.,1,,If the person lives alone.,['# ::snt If the person lives alone.\n(h / have-condition-91\n      :ARG2 (l / live-01\n            :ARG0 (p / person)\n            :manner (a / alone\n                  :domain p)))'],"[h, attr-instance, have_condition_91, attr-arg2, [l, attr-instance, live_01, attr-arg0, [p, attr-instance, person], attr-manner, [a, attr-instance, alone, attr-domain, p]]]"
164,164,164,164,194,1191,alleinunterhalter,Allein-unter-halter spielen bei Festen.,0_long,Beruf|Seiten_mit_defekten_Dateilinks,2019-11-11T08:02:41Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Allein-unter-halter 1:=spielen 2:=bei 3:=Festen.,1,,Solo entertainers play at festivals.,['# ::snt Solo entertainers play at festivals.\n(p / play-01\n      :ARG0 (p2 / person\n            :ARG0-of (e / entertain-01)\n            :mod (o / olo))\n      :location (f / festival))'],"[p, attr-instance, play_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [e, attr-instance, entertain_01], attr-mod, [o, attr-instance, olo]], attr-location, [f, attr-instance, festival]]"
165,165,165,165,195,1193,alleinunterhalter,Sie machen eine Ein-man-show.,2_long,Beruf|Seiten_mit_defekten_Dateilinks,2019-11-11T08:02:41Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Sie 1:=machen 2:=eine 3:=Ein-man-show.,1,,They are a one-man show.,['# ::snt They are a one-man show.\n(s / show-04\n      :ARG0 (m / man\n            :quant 1)\n      :domain (t / they))'],"[s, attr-instance, show_04, attr-arg0, [m, attr-instance, man, attr-quant, 1], attr-domain, [t, attr-instance, they]]"
166,166,166,166,196,1194,alleinunterhalter,Alleinunterhalter ist ein Beruf.,0_short,Beruf|Seiten_mit_defekten_Dateilinks,2019-11-11T08:02:41Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Alleinunterhalter 1:=ist 2:=ein 3:=Beruf.,1,,Being a solo entertainer is a profession.,['# ::snt Being a solo entertainer is a profession.\n(p / profession\n      :domain (e / entertain-01\n            :ARG0 (s / solo)))'],"[p, attr-instance, profession, attr-domain, [e, attr-instance, entertain_01, attr-arg0, [s, attr-instance, solo]]]"
167,167,167,167,197,1195,alleinunterhalter,Ein Allein-unter-halter ist ein Künstler.,1_short,Beruf|Seiten_mit_defekten_Dateilinks,2019-11-11T08:02:41Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Allein-unter-halter 2:=ist 3:=ein 4:=Künstler.,1,,A solo entertainer is an artist.,['# ::snt A solo entertainer is an artist.\n(a / artist\n      :domain (p / person\n            :ARG0-of (e / entertain-01\n                  :mod (s / solo))))'],"[a, attr-instance, artist, attr-domain, [p, attr-instance, person, attr-arg0_of, [e, attr-instance, entertain_01, attr-mod, [s, attr-instance, solo]]]]"
168,168,168,168,198,1196,alleinunterhalter,Er macht alleine Unterhaltung.,2_short,Beruf|Seiten_mit_defekten_Dateilinks,2019-11-11T08:02:41Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Er 1:=macht 2:=alleine 3:=Unterhaltung.,2,"[[0, 1, 3], [2]]",He provides entertainment on his own.,['# ::snt He provides entertainment on his own.\n(p / provide-01\n      :ARG0 (h / he)\n      :ARG1 (e / entertainment)\n      :mod (b / by-oneself))'],"[p, attr-instance, provide_01, attr-arg0, [h, attr-instance, he], attr-arg1, [e, attr-instance, entertainment], attr-mod, [b, attr-instance, by_oneself]]"
169,169,169,169,199,1197,alleinunterhalter,Zum Beispiel Musik spielen.,3_short,Beruf|Seiten_mit_defekten_Dateilinks,2019-11-11T08:02:41Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel 2:=Musik 3:=spielen.,1,,"For example, playing music.","['# ::snt For example, playing music.\n(e / exemplify-01\n      :ARG0 (p / play-11\n            :ARG1 (m / music)))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, play_11, attr-arg1, [m, attr-instance, music]]]"
170,170,170,170,200,1199,allen-menschen-recht-getan-ist-eine-kunst-die-niemand-kann,Das Sprich-wort kommt aus einer Geschichte.,0_long,Sprichwörter|Seiten_mit_defekten_Dateilinks,2021-12-30T16:22:14Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=Sprich-wort 2:=kommt 3:=aus 4:=einer 5:=Geschichte.,1,,The saying comes from a story.,['# ::snt The saying comes from a story.\n(c / come-03\n      :ARG1 (t / thing\n            :ARG1-of (s / say-01))\n      :ARG2 (s2 / story))'],"[c, attr-instance, come_03, attr-arg1, [t, attr-instance, thing, attr-arg1_of, [s, attr-instance, say_01]], attr-arg2, [s2, attr-instance, story]]"
171,171,171,171,202,1201,allen-menschen-recht-getan-ist-eine-kunst-die-niemand-kann,Diese Geschichte ist eine Metapher.,2_long,Sprichwörter|Seiten_mit_defekten_Dateilinks,2021-12-30T16:22:14Z,e800bebc9060331edfac65e663a55570,0:=Diese 1:=Geschichte 2:=ist 3:=eine 4:=Metapher.,1,,This story is a metaphor.,['# ::snt This story is a metaphor.\n(m / metaphor\n      :domain (s / story\n            :mod (t / this)))'],"[m, attr-instance, metaphor, attr-domain, [s, attr-instance, story, attr-mod, [t, attr-instance, this]]]"
172,172,172,172,204,1203,allen-menschen-recht-getan-ist-eine-kunst-die-niemand-kann,Das ist eine Sprich-wort.,1_short,Sprichwörter|Seiten_mit_defekten_Dateilinks,2021-12-30T16:22:14Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=ist 2:=eine 3:=Sprich-wort.,1,,That's a proverb.,"[""# ::snt That's a proverb.\n(p / proverb\n      :domain (t / that))""]","[p, attr-instance, proverb, attr-domain, [t, attr-instance, that]]"
173,173,173,173,205,1204,allen-menschen-recht-getan-ist-eine-kunst-die-niemand-kann,Man kann nicht alle Wünsche erfüllen.,2_short,Sprichwörter|Seiten_mit_defekten_Dateilinks,2021-12-30T16:22:14Z,e800bebc9060331edfac65e663a55570,0:=Man 1:=kann 2:=nicht 3:=alle 4:=Wünsche 5:=erfüllen.,1,,You can't fulfill all wishes.,"[""# ::snt You can't fulfill all wishes.\n(p / possible-01\n      :polarity -\n      :ARG1 (f / fulfill-01\n            :ARG0 (y / you)\n            :ARG1 (w / wish-01\n                  :mod (a / all))))""]","[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [f, attr-instance, fulfill_01, attr-arg0, [y, attr-instance, you], attr-arg1, [w, attr-instance, wish_01, attr-mod, [a, attr-instance, all]]]]"
174,174,174,174,206,1205,allen-menschen-recht-getan-ist-eine-kunst-die-niemand-kann,Man kann nicht alle Menschen gleichzeitig zufrieden stellen.,3_short,Sprichwörter|Seiten_mit_defekten_Dateilinks,2021-12-30T16:22:14Z,e800bebc9060331edfac65e663a55570,0:=Man 1:=kann 2:=nicht 3:=alle 4:=Menschen 5:=gleichzeitig 6:=zufrieden 7:=stellen.,1,,You can't please everyone at the same time.,"[""# ::snt You can't please everyone at the same time.\n(p / possible-01\n      :polarity -\n      :ARG1 (p2 / please-01\n            :ARG0 (y / you)\n            :ARG1 (e / everyone)\n            :time (s / same-01)))""]","[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [p2, attr-instance, please_01, attr-arg0, [y, attr-instance, you], attr-arg1, [e, attr-instance, everyone], attr-time, [s, attr-instance, same_01]]]"
175,175,175,175,207,1206,allen-menschen-recht-getan-ist-eine-kunst-die-niemand-kann,"Wenn man seine Sicht-weise hat, \newline kann man nicht auch allen anderen Sicht-weisen zustimmen.",4_short,Sprichwörter|Seiten_mit_defekten_Dateilinks,2021-12-30T16:22:14Z,e800bebc9060331edfac65e663a55570,"0:=Wenn 1:=man 2:=seine 3:=Sicht-weise 4:=hat, 5:=\newline 6:=kann 7:=man 8:=nicht 9:=auch 10:=allen 11:=anderen 12:=Sicht-weisen 13:=zustimmen.",2,"[[0, 1, 2, 3, 4], [6, 7, 8, 9, 10, 11, 12, 13]]","If you have your point of view, \newline you cannot agree with all the other points of view.","['# ::snt If you have your point of view, \\newline you cannot agree with all the other points of view.\n(p / possible-01\n      :polarity -\n      :ARG1 (a / agree-01\n            :ARG0 (y / you)\n            :ARG1 (h / have-point-of-view-08\n                  :ARG0 (o / other\n                        :mod (a2 / all))))\n      :condition (h2 / have-point-of-view-08\n            :ARG0 y\n            :ARG2 (c / company\n                  :name (n / name\n                        :op1 ""Newline""))))']","[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [a, attr-instance, agree_01, attr-arg0, [y, attr-instance, you], attr-arg1, [h, attr-instance, have_point_of_view_08, attr-arg0, [o, attr-instance, other, attr-mod, [a2, attr-instance, all]]]], attr-condition, [h2, attr-instance, have_point_of_view_08, attr-arg0, y, attr-arg2, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]]]"
176,176,176,176,208,1207,allenthalben,Das Gegenteil von allenthalben ist nirgends.,0_long,Ohne_Kategorie,2012-12-27T11:05:09Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Das 1:=Gegenteil 2:=von 3:=allenthalben 4:=ist 5:=nirgends.,1,,The opposite of everywhere is nowhere.,['# ::snt The opposite of everywhere is nowhere.\n(b / be-located-at-91\n      :ARG1 (o / opposite-01\n            :ARG1 (e / everywhere))\n      :ARG2 (n / nowhere))'],"[b, attr-instance, be_located_at_91, attr-arg1, [o, attr-instance, opposite_01, attr-arg1, [e, attr-instance, everywhere]], attr-arg2, [n, attr-instance, nowhere]]"
177,177,177,177,209,1208,allenthalben,"Wenn etwas oder jemand überall ist,  \newline sagt man dazu: \newline allenthalben",0_short,Ohne_Kategorie,2012-12-27T11:05:09Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,"0:=Wenn 1:=etwas 2:=oder 3:=jemand 4:=überall 5:=ist, 6:= 7:=\newline 8:=sagt 9:=man 10:=dazu: 11:=\newline 12:=allenthalben",3,"[[0, 1, 4, 5], [0, 3, 4, 5], [8, 9, 10, 12]]","When something or someone is everywhere, \newline you say: \newline everywhere","['# ::snt When something or someone is everywhere, \\newline you say: \\newline everywhere\n(s / say-01\n      :ARG0 (y / you)\n      :ARG1 (l / line\n            :mod (n / newline)\n            :location (e / everywhere))\n      :time (b / be-located-at-91\n            :ARG1 (o / or\n                  :op1 (s2 / something)\n                  :op2 (s3 / someone))\n            :ARG2 e))']","[s, attr-instance, say_01, attr-arg0, [y, attr-instance, you], attr-arg1, [l, attr-instance, line, attr-mod, [n, attr-instance, newline], attr-location, [e, attr-instance, everywhere]], attr-time, [b, attr-instance, be_located_at_91, attr-arg1, [o, attr-instance, or, attr-op1, [s2, attr-instance, something], attr-op2, [s3, attr-instance, someone]], attr-arg2, e]]"
178,178,178,178,210,1209,aller-anfang-ist-schwer,Dieser Spruch kommt von Ovid.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-12-30T16:41:24Z,e800bebc9060331edfac65e663a55570,0:=Dieser 1:=Spruch 2:=kommt 3:=von 4:=Ovid.,1,,This saying comes from Ovid.,"['# ::snt This saying comes from Ovid.\n(c / come-03\n      :ARG1 (t / thing\n            :ARG1-of (s / say-01)\n            :mod (t2 / this))\n      :ARG2 (p / person\n            :name (n / name\n                  :op1 ""Ovid"")))']","[c, attr-instance, come_03, attr-arg1, [t, attr-instance, thing, attr-arg1_of, [s, attr-instance, say_01], attr-mod, [t2, attr-instance, this]], attr-arg2, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""ovid""]]]"
179,179,179,179,212,1211,aller-anfang-ist-schwer,Und lebte 43 vor Christus in Sulmo.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-12-30T16:41:24Z,e800bebc9060331edfac65e663a55570,0:=Und 1:=lebte 2:=43 3:=vor 4:=Christus 5:=in 6:=Sulmo.,2,"[[2, 3, 4], [5, 6]]",And lived in Sulmo in 43 BC.,"['# ::snt And lived in Sulmo in 43 BC.\n(a / and\n      :op2 (l / live-01\n            :location (c / city\n                  :name (n / name\n                        :op1 ""Sulmo""))\n            :time (d / date-entity\n                  :year 43\n                  :era ""BC"")))']","[a, attr-instance, and, attr-op2, [l, attr-instance, live_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""sulmo""]], attr-time, [d, attr-instance, date_entity, attr-year, 43, attr-era, ""bc""]]]"
180,180,180,180,214,1213,aller-anfang-ist-schwer,Es liegt 120 Kilometer östlich von Rom.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-12-30T16:41:24Z,e800bebc9060331edfac65e663a55570,0:=Es 1:=liegt 2:=120 3:=Kilometer 4:=östlich 5:=von 6:=Rom.,1,,It is located 120 kilometers east of Rome.,"['# ::snt It is located 120 kilometers east of Rome.\n(b / be-located-at-91\n      :ARG1 (ii / it)\n      :ARG2 (r / relative-position\n            :op1 (c / city\n                  :name (n / name\n                        :op1 ""Rome""))\n            :quant (d / distance-quantity\n                  :quant 120\n                  :unit (k / kilometer))\n            :direction (e / east)))']","[b, attr-instance, be_located_at_91, attr-arg1, [ii, attr-instance, it], attr-arg2, [r, attr-instance, relative_position, attr-op1, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""rome""]], attr-quant, [d, attr-instance, distance_quantity, attr-quant, 120, attr-unit, [k, attr-instance, kilometer]], attr-direction, [e, attr-instance, east]]]"
181,181,181,181,216,1215,aller-anfang-ist-schwer,"Wenn man eine neue Arbeit beginnt, \newline dann tut man sich immer schwer.",1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-12-30T16:41:24Z,e800bebc9060331edfac65e663a55570,"0:=Wenn 1:=man 2:=eine 3:=neue 4:=Arbeit 5:=beginnt, 6:=\newline 7:=dann 8:=tut 9:=man 10:=sich 11:=immer 12:=schwer.",2,"[[0, 1, 3, 4, 5], [7, 8, 9, 10, 11, 12]]","When you start a new job, \newline it's always difficult.","[""# ::snt When you start a new job, \\newline it's always difficult.\n(d / difficult\n      :time (a / always)\n      :domain (s / start-01\n            :ARG0 (y / you)\n            :ARG1 (j / job\n                  :ARG1-of (n / new-01))))""]","[d, attr-instance, difficult, attr-time, [a, attr-instance, always], attr-domain, [s, attr-instance, start_01, attr-arg0, [y, attr-instance, you], attr-arg1, [j, attr-instance, job, attr-arg1_of, [n, attr-instance, new_01]]]]"
182,182,182,182,217,1216,allerheiligen,Heilige sind besondere Menschen.,0_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Heilige 1:=sind 2:=besondere 3:=Menschen.,2,"[[0, 1], [2]]",Saints are special people.,['# ::snt Saints are special people.\n(p / person\n      :ARG1-of (s / special-02)\n      :domain (s2 / saint))'],"[p, attr-instance, person, attr-arg1_of, [s, attr-instance, special_02], attr-domain, [s2, attr-instance, saint]]"
183,183,183,183,218,1217,allerheiligen,Zum Beispiel: • Menschen die besonders viel für ihre Religion gemacht haben,1_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Zum 1:=Beispiel: 2:=• 3:=Menschen 4:=die 5:=besonders 6:=viel 7:=für 8:=ihre 9:=Religion 10:=gemacht 11:=haben,2,"[[2, 3, 5, 6, 10, 11], [7, 8, 9]]",For example: • People who have done a lot for their religion,['# ::snt For example: • People who have done a lot for their religion\n(e / exemplify-01\n      :ARG0 (p / person\n            :ARG0-of (d / do-02\n                  :ARG1 (l / lot)\n                  :ARG2 (r / religion\n                        :poss p))))'],"[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [d, attr-instance, do_02, attr-arg1, [l, attr-instance, lot], attr-arg2, [r, attr-instance, religion, attr-poss, p]]]]"
184,184,184,184,219,1218,allerheiligen,Zum Beispiel: • Menschen die für ihre Religion gestorben sind,2_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Zum 1:=Beispiel: 2:=• 3:=Menschen 4:=die 5:=für 6:=ihre 7:=Religion 8:=gestorben 9:=sind,1,,For example: • People who died for their religion,['# ::snt For example: • People who died for their religion\n(e / exemplify-01\n      :ARG0 (p / person\n            :ARG1-of (d / die-01\n                  :purpose (r / religion\n                        :poss p))))'],"[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, person, attr-arg1_of, [d, attr-instance, die_01, attr-purpose, [r, attr-instance, religion, attr-poss, p]]]]"
185,185,185,185,220,1219,allerheiligen,Zum Beispiel: • Menschen die besonders viel für ihre Mitmenschen gemacht haben,3_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Zum 1:=Beispiel: 2:=• 3:=Menschen 4:=die 5:=besonders 6:=viel 7:=für 8:=ihre 9:=Mitmenschen 10:=gemacht 11:=haben,2,"[[2, 3, 5, 6, 10, 11], [7, 8, 9]]",For example: • People who have done a lot for their fellow human beings,['# ::snt For example: • People who have done a lot for their fellow human beings\n(e / exemplify-01\n      :ARG0 (p / person\n            :ARG0-of (d / do-02\n                  :ARG1 (l / lot)\n                  :ARG2 (b / being\n                        :mod (h / human)\n                        :mod (f / fellow)\n                        :poss p))))'],"[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [d, attr-instance, do_02, attr-arg1, [l, attr-instance, lot], attr-arg2, [b, attr-instance, being, attr-mod, [h, attr-instance, human], attr-mod, [f, attr-instance, fellow], attr-poss, p]]]]"
186,186,186,186,223,1222,allerheiligen,Manche Heilige haben einen eigenen Feier-tag.,6_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Manche 1:=Heilige 2:=haben 3:=einen 4:=eigenen 5:=Feier-tag.,1,,Some saints have their own feast day.,['# ::snt Some saints have their own feast day.\n(h / have-03\n      :ARG0 (s / saint\n            :quant (s2 / some))\n      :ARG1 (d / day\n            :mod (f / feast)\n            :poss s))'],"[h, attr-instance, have_03, attr-arg0, [s, attr-instance, saint, attr-quant, [s2, attr-instance, some]], attr-arg1, [d, attr-instance, day, attr-mod, [f, attr-instance, feast], attr-poss, s]]"
187,187,187,187,227,1226,allerheiligen,Bei den Christen gibt es sehr viele Heilige.,10_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Bei 1:=den 2:=Christen 3:=gibt 4:=es 5:=sehr 6:=viele 7:=Heilige.,1,,There are many saints among Christians.,"['# ::snt There are many saints among Christians.\n(s / saint\n      :quant (m / many)\n      :location (a / among\n            :op1 (p / person\n                  :mod (r / religious-group\n                        :name (n / name\n                              :op1 ""Christian"")))))']","[s, attr-instance, saint, attr-quant, [m, attr-instance, many], attr-location, [a, attr-instance, among, attr-op1, [p, attr-instance, person, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""christian""]]]]]"
188,188,188,188,228,1227,allerheiligen,"Mehr Heilige, \newline als es Tage im Jahr gibt.",11_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,"0:=Mehr 1:=Heilige, 2:=\newline 3:=als 4:=es 5:=Tage 6:=im 7:=Jahr 8:=gibt.",1,,"More saints, \newline than there are days in a year.","['# ::snt More saints, \\newline than there are days in a year.\n(s / say-01\n      :ARG1 (s2 / saint\n            :ARG1-of (h / have-quant-91\n                  :ARG3 (m / more)\n                  :ARG4 (d / day\n                        :ARG1-of (r / rate-entity-91\n                              :ARG2 (t / temporal-quantity\n                                    :quant 1\n                                    :unit (y / year))))))\n      :ARG2 (p / person\n            :name (n / name\n                  :op1 ""Newline"")))']","[s, attr-instance, say_01, attr-arg1, [s2, attr-instance, saint, attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg3, [m, attr-instance, more], attr-arg4, [d, attr-instance, day, attr-arg1_of, [r, attr-instance, rate_entity_91, attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [y, attr-instance, year]]]]]], attr-arg2, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]]"
189,189,189,189,229,1228,allerheiligen,Deshalb gibt es den Feier-tag Allerheiligen.,12_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Deshalb 1:=gibt 2:=es 3:=den 4:=Feier-tag 5:=Allerheiligen.,1,,That is why we have the All Saints Day holiday.,"['# ::snt That is why we have the All Saints Day holiday.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (h / have-06\n            :ARG0 (w / we)\n            :ARG1 (h2 / holiday\n                  :mod (e / event\n                        :name (n / name\n                              :op1 ""All""\n                              :op2 ""Saints""\n                              :op3 ""Day"")))))']","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [h, attr-instance, have_06, attr-arg0, [w, attr-instance, we], attr-arg1, [h2, attr-instance, holiday, attr-mod, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""all"", attr-op2, ""saints"", attr-op3, ""day""]]]]]"
190,190,190,190,230,1229,allerheiligen,Dieser Tag ist ein Feier-tag für alle Heiligen.,13_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Dieser 1:=Tag 2:=ist 3:=ein 4:=Feier-tag 5:=für 6:=alle 7:=Heiligen.,2,"[[0, 1, 2], [5, 6, 7]]",This day is a celebration for all saints.,['# ::snt This day is a celebration for all saints.\n(c / celebrate-02\n      :ARG0 (d / day\n            :mod (t / this))\n      :ARG1 (s / saint\n            :mod (a / all)))'],"[c, attr-instance, celebrate_02, attr-arg0, [d, attr-instance, day, attr-mod, [t, attr-instance, this]], attr-arg1, [s, attr-instance, saint, attr-mod, [a, attr-instance, all]]]"
191,191,191,191,231,1230,allerheiligen,"Auch für die Heiligen, \newline die die Menschen noch nicht kennen.",14_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,"0:=Auch 1:=für 2:=die 3:=Heiligen, 4:=\newline 5:=die 6:=die 7:=Menschen 8:=noch 9:=nicht 10:=kennen.",1,,"Also for the saints,\newline whom people do not yet know.","['# ::snt Also for the saints,\\newline whom people do not yet know.\n(n / newline\n      :topic (s / saint)\n      :mod (a / also)\n      :ARG1-of (k / know-01\n            :polarity -\n            :ARG0 (p / person)\n            :time (y / yet)))']","[n, attr-instance, newline, attr-topic, [s, attr-instance, saint], attr-mod, [a, attr-instance, also], attr-arg1_of, [k, attr-instance, know_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person], attr-time, [y, attr-instance, yet]]]"
192,192,192,192,232,1231,allerheiligen,Also Heilige die nur Gott kennt.,15_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Also 1:=Heilige 2:=die 3:=nur 4:=Gott 5:=kennt.,2,"[[1], [2, 3, 4, 5]]",So saints that only God knows.,"['# ::snt So saints that only God knows.\n(s / saint\n      :ARG1-of (k / know-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""God"")\n                  :mod (o / only)))\n      :mod (s2 / so))']","[s, attr-instance, saint, attr-arg1_of, [k, attr-instance, know_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""god""], attr-mod, [o, attr-instance, only]]], attr-mod, [s2, attr-instance, so]]"
193,193,193,193,233,1232,allerheiligen,Allerheiligen ist ein Tag für alle Heiligen.,16_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Allerheiligen 1:=ist 2:=ein 3:=Tag 4:=für 5:=alle 6:=Heiligen.,1,,All Saints Day is a day for all saints.,['# ::snt All Saints Day is a day for all saints.\n(d / day\n      :domain (d2 / day\n            :mod (a / all)\n            :time-of (s / saint\n                  :mod (a2 / all))))'],"[d, attr-instance, day, attr-domain, [d2, attr-instance, day, attr-mod, [a, attr-instance, all], attr-time_of, [s, attr-instance, saint, attr-mod, [a2, attr-instance, all]]]]"
194,194,194,194,234,1233,allerheiligen,Im 9. Jahrhundert hat Papst Gregor IV. gelebt.,17_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Im 1:=9. 2:=Jahrhundert 3:=hat 4:=Papst 5:=Gregor 6:=IV. 7:=gelebt.,1,,Pope Gregory IV lived in the 9th century.,"['# ::snt Pope Gregory IV lived in the 9th century.\n(l / live-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Pope""\n                  :op2 ""Gregory""\n                  :op3 ""IV""))\n      :time (d / date-entity\n            :century 9))']","[l, attr-instance, live_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""pope"", attr-op2, ""gregory"", attr-op3, ""iv""]], attr-time, [d, attr-instance, date_entity, attr-century, 9]]"
195,195,195,195,235,1234,allerheiligen,Er hat gesagt: \newline Der 1. November soll ein Feier-tag sein.,18_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Er 1:=hat 2:=gesagt: 3:=\newline 4:=Der 5:=1. 6:=November 7:=soll 8:=ein 9:=Feier-tag 10:=sein.,2,"[[0, 1, 2], [5, 6, 7, 9, 10]]",He said: \newline November 1st should be a holiday.,['# ::snt He said: \\newline November 1st should be a holiday.\n(s / say-01\n      :ARG0 (h / he)\n      :ARG1 (r / recommend-01\n            :ARG1 (h2 / holiday\n                  :domain (d / date-entity\n                        :month 11\n                        :day 1))))'],"[s, attr-instance, say_01, attr-arg0, [h, attr-instance, he], attr-arg1, [r, attr-instance, recommend_01, attr-arg1, [h2, attr-instance, holiday, attr-domain, [d, attr-instance, date_entity, attr-month, 11, attr-day, 1]]]]"
196,196,196,196,236,1235,allerheiligen,Immer am 1. November soll Allerheiligen gefeiert werden.,19_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Immer 1:=am 2:=1. 3:=November 4:=soll 5:=Allerheiligen 6:=gefeiert 7:=werden.,2,"[[0, 4, 5, 6, 7], [1, 2, 3]]",All Saints Day should always be celebrated on November 1st.,"['# ::snt All Saints Day should always be celebrated on November 1st.\n(r / recommend-01\n      :ARG1 (c / celebrate-02\n            :ARG1 (e / event\n                  :name (n / name\n                        :op1 ""All""\n                        :op2 ""Saints""\n                        :op3 ""Day""))\n            :time (a / always)\n            :time (d / date-entity\n                  :month 11\n                  :day 1)))']","[r, attr-instance, recommend_01, attr-arg1, [c, attr-instance, celebrate_02, attr-arg1, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""all"", attr-op2, ""saints"", attr-op3, ""day""]], attr-time, [a, attr-instance, always], attr-time, [d, attr-instance, date_entity, attr-month, 11, attr-day, 1]]]"
197,197,197,197,237,1236,allerheiligen,In der Nacht vor Allerheiligen ist Halloween.,20_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=In 1:=der 2:=Nacht 3:=vor 4:=Allerheiligen 5:=ist 6:=Halloween.,1,,The night before All Saints Day is Halloween.,"['# ::snt The night before All Saints Day is Halloween.\n(f / festival\n      :name (n / name\n            :op1 ""Halloween"")\n      :time (d / date-entity\n            :dayperiod (n2 / night)\n            :mod (b / before\n                  :op1 (e / event\n                        :name n\n                        :op1 ""All""\n                        :op2 ""Saints""\n                        :op3 ""Day""))))']","[f, attr-instance, festival, attr-name, [n, attr-instance, name, attr-op1, ""halloween""], attr-time, [d, attr-instance, date_entity, attr-dayperiod, [n2, attr-instance, night], attr-mod, [b, attr-instance, before, attr-op1, [e, attr-instance, event, attr-name, n, attr-op1, ""all"", attr-op2, ""saints"", attr-op3, ""day""]]]]"
198,198,198,198,238,1237,allerheiligen,Am Tag nach Allerheiligen ist Allerseelen.,21_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Am 1:=Tag 2:=nach 3:=Allerheiligen 4:=ist 5:=Allerseelen.,1,,The day after All Saints Day is All Souls Day.,"['# ::snt The day after All Saints Day is All Souls Day.\n(d / day\n      :mod (a / after\n            :op1 (e / event\n                  :name (n / name\n                        :op1 ""All""\n                        :op2 ""Saints""\n                        :op3 ""Day"")))\n      :domain e\n      :name n\n      :op1 ""All""\n      :op2 "" Souls""\n      :op3 ""Day"")']","[d, attr-instance, day, attr-mod, [a, attr-instance, after, attr-op1, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""all"", attr-op2, ""saints"", attr-op3, ""day""]]], attr-domain, e, attr-name, n, attr-op1, ""all"", attr-op2, "", souls"", attr-op3, ""day""]"
199,199,199,199,239,1238,allerheiligen,Manche Christen gehen an Allerheiligen auf den Friedhof.,22_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Manche 1:=Christen 2:=gehen 3:=an 4:=Allerheiligen 5:=auf 6:=den 7:=Friedhof.,1,,Some Christians go to the cemetery on All Saints Day.,"['# ::snt Some Christians go to the cemetery on All Saints Day.\n(g / go-02\n      :ARG0 (p / person\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Christian""))\n            :quant (s / some))\n      :ARG4 (c / cemetery)\n      :time (e / event\n            :name (n2 / name\n                  :op1 ""All""\n                  :op2 ""Saints""\n                  :op3 ""Day"")))']","[g, attr-instance, go_02, attr-arg0, [p, attr-instance, person, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""christian""]], attr-quant, [s, attr-instance, some]], attr-arg4, [c, attr-instance, cemetery], attr-time, [e, attr-instance, event, attr-name, [n2, attr-instance, name, attr-op1, ""all"", attr-op2, ""saints"", attr-op3, ""day""]]]"
200,200,200,200,240,1239,allerheiligen,Sie schmücken dann die Gräber ihrer Verwandten.,23_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Sie 1:=schmücken 2:=dann 3:=die 4:=Gräber 5:=ihrer 6:=Verwandten.,1,,They then decorate the graves of their relatives.,['# ::snt They then decorate the graves of their relatives.\n(d / decorate-01\n      :ARG0 (t / they)\n      :ARG1 (g / grave\n            :poss (p / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 t\n                        :ARG2 (r / relative))))\n      :time (t2 / then))'],"[d, attr-instance, decorate_01, attr-arg0, [t, attr-instance, they], attr-arg1, [g, attr-instance, grave, attr-poss, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, t, attr-arg2, [r, attr-instance, relative]]]], attr-time, [t2, attr-instance, then]]"
201,201,201,201,241,1240,allerheiligen,Sie legen Blumen auf das Grab.,24_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Sie 1:=legen 2:=Blumen 3:=auf 4:=das 5:=Grab.,1,,They lay flowers on the grave.,['# ::snt They lay flowers on the grave.\n(l / lay-01\n      :ARG0 (t / they)\n      :ARG1 (f / flower)\n      :ARG2 (g / grave))'],"[l, attr-instance, lay_01, attr-arg0, [t, attr-instance, they], attr-arg1, [f, attr-instance, flower], attr-arg2, [g, attr-instance, grave]]"
202,202,202,202,242,1241,allerheiligen,Oder sie zünden eine Kerze an.,25_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Oder 1:=sie 2:=zünden 3:=eine 4:=Kerze 5:=an.,1,,Or they light a candle.,['# ::snt Or they light a candle.\n(o / or\n      :op2 (l / light-01\n            :ARG0 (t / they)\n            :ARG1 (c / candle)))'],"[o, attr-instance, or, attr-op2, [l, attr-instance, light_01, attr-arg0, [t, attr-instance, they], attr-arg1, [c, attr-instance, candle]]]"
203,203,203,203,243,1242,allerheiligen,In manchen Ländern ist Allerheiligen ein gesetzlicher Feiertag.,26_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=In 1:=manchen 2:=Ländern 3:=ist 4:=Allerheiligen 5:=ein 6:=gesetzlicher 7:=Feiertag.,1,,"In some countries, All Saints Day is a public holiday.","['# ::snt In some countries, All Saints Day is a public holiday.\n(h / holiday\n      :ARG1-of (p / public-02)\n      :domain (e / event\n            :name (n / name\n                  :op1 ""All""\n                  :op2 ""Saints""\n                  :op3 ""Day""))\n      :location (c / country\n            :quant (s / some)))']","[h, attr-instance, holiday, attr-arg1_of, [p, attr-instance, public_02], attr-domain, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""all"", attr-op2, ""saints"", attr-op3, ""day""]], attr-location, [c, attr-instance, country, attr-quant, [s, attr-instance, some]]]"
204,204,204,204,244,1243,allerheiligen,Das heißt: \newline Die Leute müssen nicht zur Arbeit gehen.,27_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Das 1:=heißt: 2:=\newline 3:=Die 4:=Leute 5:=müssen 6:=nicht 7:=zur 8:=Arbeit 9:=gehen.,1,,This means: \newline People don't have to go to work.,"[""# ::snt This means: \\newline People don't have to go to work.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (o / obligate-01\n            :polarity -\n            :ARG1 (p / person\n                  :mod (l / line))\n            :ARG2 (g / go-02\n                  :ARG0 p\n                  :ARG4 (w / work-01\n                        :ARG0 p))))""]","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [o, attr-instance, obligate_01, attr-polarity, negative, attr-arg1, [p, attr-instance, person, attr-mod, [l, attr-instance, line]], attr-arg2, [g, attr-instance, go_02, attr-arg0, p, attr-arg4, [w, attr-instance, work_01, attr-arg0, p]]]]"
205,205,205,205,245,1244,allerheiligen,Kinder müssen nicht in die Schule gehen.,28_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Kinder 1:=müssen 2:=nicht 3:=in 4:=die 5:=Schule 6:=gehen.,1,,Children do not have to go to school.,['# ::snt Children do not have to go to school.\n(o / obligate-01\n      :polarity -\n      :ARG1 (c / child)\n      :ARG2 (g / go-02\n            :ARG0 c\n            :ARG4 (s / school)))'],"[o, attr-instance, obligate_01, attr-polarity, negative, attr-arg1, [c, attr-instance, child], attr-arg2, [g, attr-instance, go_02, attr-arg0, c, attr-arg4, [s, attr-instance, school]]]"
206,206,206,206,246,1245,allerheiligen,Die Geschäfte sind zu.,29_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Geschäfte 2:=sind 3:=zu.,1,,The shops are closed.,['# ::snt The shops are closed.\n(c / close-01\n      :ARG1 (s / shop))'],"[c, attr-instance, close_01, attr-arg1, [s, attr-instance, shop]]"
207,207,207,207,247,1246,allerheiligen,In Deutschland ist Allerheiligen in manchen Bundes-ländern ein Feier-tag.,30_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=In 1:=Deutschland 2:=ist 3:=Allerheiligen 4:=in 5:=manchen 6:=Bundes-ländern 7:=ein 8:=Feier-tag.,2,"[[0, 1], [4, 5, 6]]","In Germany, All Saints Day is a public holiday in some federal states.","['# ::snt In Germany, All Saints Day is a public holiday in some federal states.\n(h / holiday\n      :ARG1-of (p / public-02)\n      :domain (e / event\n            :name (n / name\n                  :op1 ""All""\n                  :op2 ""Saints""\n                  :op3 ""Day""))\n      :location (s / state\n            :mod (f / federal)\n            :quant (s2 / some))\n      :location (c / country\n            :name (n2 / name\n                  :op1 ""Germany"")))']","[h, attr-instance, holiday, attr-arg1_of, [p, attr-instance, public_02], attr-domain, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""all"", attr-op2, ""saints"", attr-op3, ""day""]], attr-location, [s, attr-instance, state, attr-mod, [f, attr-instance, federal], attr-quant, [s2, attr-instance, some]], attr-location, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""germany""]]]"
208,208,208,208,253,1252,allerheiligen,In der Schweiz ist an Allerheiligen in manchen Kantonen Feier-tag.,36_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=In 1:=der 2:=Schweiz 3:=ist 4:=an 5:=Allerheiligen 6:=in 7:=manchen 8:=Kantonen 9:=Feier-tag.,2,"[[0, 2], [6, 7, 8]]","In Switzerland, All Saints’ Day is a public holiday in some cantons.","['# ::snt In Switzerland, All Saints’ Day is a public holiday in some cantons.\n(h / holiday-01\n      :ARG1 (e / event\n            :name (n / name\n                  :op1 ""All""\n                  :op2 ""Saints""\n                  :op3 ""Day""))\n      :ARG1-of (p / public-02)\n      :location (c / canton\n            :quant (s / some)\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""Switzerland""))))']","[h, attr-instance, holiday_01, attr-arg1, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""all"", attr-op2, ""saints"", attr-op3, ""day""]], attr-arg1_of, [p, attr-instance, public_02], attr-location, [c, attr-instance, canton, attr-quant, [s, attr-instance, some], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""switzerland""]]]]"
209,209,209,209,270,1269,allerheiligen,Der Feier-tag ist zwischen dem 31. Oktober und dem 6. November.,53_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Feier-tag 2:=ist 3:=zwischen 4:=dem 5:=31. 6:=Oktober 7:=und 8:=dem 9:=6. 10:=November.,2,"[[5, 6], [9, 10]]",The holiday is between October 31st and November 6th.,['# ::snt The holiday is between October 31st and November 6th.\n(h / holiday\n      :time (d / date-interval\n            :op1 (d2 / date-entity\n                  :day 31\n                  :month 10)\n            :op2 (d3 / date-entity\n                  :day 6\n                  :month 11)))'],"[h, attr-instance, holiday, attr-time, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-day, 31, attr-month, 10], attr-op2, [d3, attr-instance, date_entity, attr-day, 6, attr-month, 11]]]"
210,210,210,210,272,1271,allerheiligen,Der Feier-tag ist zwischen dem 31. Oktober und dem 6. November.,55_long,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Feier-tag 2:=ist 3:=zwischen 4:=dem 5:=31. 6:=Oktober 7:=und 8:=dem 9:=6. 10:=November.,2,"[[5, 6], [9, 10]]",The holiday is between October 31st and November 6th.,['# ::snt The holiday is between October 31st and November 6th.\n(h / holiday\n      :time (d / date-interval\n            :op1 (d2 / date-entity\n                  :day 31\n                  :month 10)\n            :op2 (d3 / date-entity\n                  :day 6\n                  :month 11)))'],"[h, attr-instance, holiday, attr-time, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-day, 31, attr-month, 10], attr-op2, [d3, attr-instance, date_entity, attr-day, 6, attr-month, 11]]]"
211,211,211,211,273,1272,allerheiligen,Allerheiligen ist ein Feier-tag.,0_short,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Allerheiligen 1:=ist 2:=ein 3:=Feier-tag.,1,,All Saints Day is a holiday.,"['# ::snt All Saints Day is a holiday.\n(h / holiday\n      :domain (e / event\n            :name (n / name\n                  :op1 ""All""\n                  :op2 ""Saints""\n                  :op3 ""Day"")))']","[h, attr-instance, holiday, attr-domain, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""all"", attr-op2, ""saints"", attr-op3, ""day""]]]"
212,212,212,212,274,1273,allerheiligen,Chirsten feiern diesen Tag.,1_short,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Chirsten 1:=feiern 2:=diesen 3:=Tag.,1,,Christians celebrate this day.,"['# ::snt Christians celebrate this day.\n(c / celebrate-02\n      :ARG0 (p / person\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Christian"")))\n      :ARG1 (d / day\n            :mod (t / this)))']","[c, attr-instance, celebrate_02, attr-arg0, [p, attr-instance, person, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""christian""]]], attr-arg1, [d, attr-instance, day, attr-mod, [t, attr-instance, this]]]"
213,213,213,213,275,1274,allerheiligen,Es ist ein Erinnerungs-tag.,2_short,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Es 1:=ist 2:=ein 3:=Erinnerungs-tag.,1,,It is a day of remembrance.,['# ::snt It is a day of remembrance.\n(d / day\n      :time-of (r / remember-01)\n      :domain (ii / it))'],"[d, attr-instance, day, attr-time_of, [r, attr-instance, remember_01], attr-domain, [ii, attr-instance, it]]"
214,214,214,214,276,1275,allerheiligen,Die Christen erinnern sich an alle Heiligen.,3_short,Religion|Seiten_mit_defekten_Dateilinks,2015-11-01T12:22:09Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Christen 2:=erinnern 3:=sich 4:=an 5:=alle 6:=Heiligen.,1,,Christians remember all the saints.,"['# ::snt Christians remember all the saints.\n(r / remember-01\n      :ARG0 (p / person\n            :mod (r2 / religious-group\n                  :name (n / name\n                        :op1 ""Christian"")))\n      :ARG1 (s / saint\n            :mod (a / all)))']","[r, attr-instance, remember_01, attr-arg0, [p, attr-instance, person, attr-mod, [r2, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""christian""]]], attr-arg1, [s, attr-instance, saint, attr-mod, [a, attr-instance, all]]]"
215,215,215,215,277,1276,alles-in-butter,Beispiel: \newline Dora und Peter haben Streit.,0_long,Redewendungen,2012-01-24T17:11:50Z,a9f29492ed8786de5125371472bcc003,0:=Beispiel: 1:=\newline 2:=Dora 3:=und 4:=Peter 5:=haben 6:=Streit.,1,,Example: \newline Dora and Peter are arguing.,"['# ::snt Example: \\newline Dora and Peter are arguing.\n(e / exemplify-01\n      :ARG0 (a / argue-02\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Newline""\n                        :op2 ""Dora""))\n            :ARG1 (p2 / person\n                  :name (n2 / name\n                        :op1 ""Peter""))))']","[e, attr-instance, exemplify_01, attr-arg0, [a, attr-instance, argue_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""newline"", attr-op2, ""dora""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""peter""]]]]"
216,216,216,216,278,1277,alles-in-butter,Aber am nächsten Tag ist wieder alles in Butter.,1_long,Redewendungen,2012-01-24T17:11:50Z,a9f29492ed8786de5125371472bcc003,0:=Aber 1:=am 2:=nächsten 3:=Tag 4:=ist 5:=wieder 6:=alles 7:=in 8:=Butter.,2,"[[0, 1, 2, 3], [4, 5, 6, 7, 8]]",But the next day everything is fine again.,['# ::snt But the next day everything is fine again.\n(c / contrast-01\n      :ARG2 (f / fine-04\n            :ARG1 (e / everything)\n            :mod (a / again)\n            :time (d / day\n                  :mod (n / next))))'],"[c, attr-instance, contrast_01, attr-arg2, [f, attr-instance, fine_04, attr-arg1, [e, attr-instance, everything], attr-mod, [a, attr-instance, again], attr-time, [d, attr-instance, day, attr-mod, [n, attr-instance, next]]]]"
217,217,217,217,279,1278,alles-in-butter,Dora und Peter haben Streit.,2_long,Redewendungen,2012-01-24T17:11:50Z,a9f29492ed8786de5125371472bcc003,0:=Dora 1:=und 2:=Peter 3:=haben 4:=Streit.,1,,Dora and Peter are arguing.,"['# ::snt Dora and Peter are arguing.\n(a / argue-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Dora""))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Peter"")))']","[a, attr-instance, argue_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""dora""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""peter""]]]"
218,218,218,218,280,1279,alles-in-butter,Aber am nächsten Tag ist wieder alles in Ordnung.,3_long,Redewendungen,2012-01-24T17:11:50Z,a9f29492ed8786de5125371472bcc003,0:=Aber 1:=am 2:=nächsten 3:=Tag 4:=ist 5:=wieder 6:=alles 7:=in 8:=Ordnung.,2,"[[0, 1, 2, 3], [4, 5, 6, 7, 8]]",But the next day everything is fine again.,['# ::snt But the next day everything is fine again.\n(c / contrast-01\n      :ARG2 (f / fine-04\n            :ARG1 (e / everything)\n            :mod (a / again)\n            :time (d / day\n                  :mod (n / next))))'],"[c, attr-instance, contrast_01, attr-arg2, [f, attr-instance, fine_04, attr-arg1, [e, attr-instance, everything], attr-mod, [a, attr-instance, again], attr-time, [d, attr-instance, day, attr-mod, [n, attr-instance, next]]]]"
219,219,219,219,281,1280,alles-in-butter,Dora und Peter haben Streit.,4_long,Redewendungen,2012-01-24T17:11:50Z,a9f29492ed8786de5125371472bcc003,0:=Dora 1:=und 2:=Peter 3:=haben 4:=Streit.,1,,Dora and Peter are arguing.,"['# ::snt Dora and Peter are arguing.\n(a / argue-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Dora""))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Peter"")))']","[a, attr-instance, argue_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""dora""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""peter""]]]"
220,220,220,220,282,1281,alles-in-butter,Aber am nächsten Tag vertragen sie sich wieder.,5_long,Redewendungen,2012-01-24T17:11:50Z,a9f29492ed8786de5125371472bcc003,0:=Aber 1:=am 2:=nächsten 3:=Tag 4:=vertragen 5:=sie 6:=sich 7:=wieder.,2,"[[0, 1, 2, 3], [4, 5, 6, 7]]",But the next day they make up again.,['# ::snt But the next day they make up again.\n(c / contrast-01\n      :ARG2 (m / make-up-10\n            :ARG0 (t / they)\n            :mod (a / again)\n            :time (d / day\n                  :mod (n / next))))'],"[c, attr-instance, contrast_01, attr-arg2, [m, attr-instance, make_up_10, attr-arg0, [t, attr-instance, they], attr-mod, [a, attr-instance, again], attr-time, [d, attr-instance, day, attr-mod, [n, attr-instance, next]]]]"
221,221,221,221,284,1283,alles-in-butter,"""Alles in Butter"" bedeutet ""alles in Ordnung"".",1_short,Redewendungen,2012-01-24T17:11:50Z,a9f29492ed8786de5125371472bcc003,"0:=""Alles 1:=in 2:=Butter"" 3:=bedeutet 4:=""alles 5:=in 6:=Ordnung"".",1,,"""Alles in Butter"" means ""everything is fine"".","['# ::snt ""Alles in Butter"" means ""everything is fine"".\n(m / mean-01\n      :ARG1 (s / string-entity\n            :value ""Alles""\n            :location (b / butter))\n      :ARG2 (f / fine-04\n            :ARG1 (e / everything)))']","[m, attr-instance, mean_01, attr-arg1, [s, attr-instance, string_entity, attr-value, ""alles"", attr-location, [b, attr-instance, butter]], attr-arg2, [f, attr-instance, fine_04, attr-arg1, [e, attr-instance, everything]]]"
222,222,222,222,288,1287,alles," • Es ist nicht alles Gold, was glänzt.",3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-26T11:09:50Z,0cb9cde516c38ed84dc1f3f2b5556ed3,"0:= 1:=• 2:=Es 3:=ist 4:=nicht 5:=alles 6:=Gold, 7:=was 8:=glänzt.",2,"[[2, 3, 4, 5, 6], [7, 8]]",• All that glitters is not gold.,['# ::snt • All that glitters is not gold.\n(g / gold\n      :polarity -\n      :domain (g2 / glitter-01\n            :mod (t / that)\n            :mod (a / all)))'],"[g, attr-instance, gold, attr-polarity, negative, attr-domain, [g2, attr-instance, glitter_01, attr-mod, [t, attr-instance, that], attr-mod, [a, attr-instance, all]]]"
223,223,223,223,290,1289,alles,Alles ist das Gegenteil von Nichts.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-26T11:09:50Z,0cb9cde516c38ed84dc1f3f2b5556ed3,0:=Alles 1:=ist 2:=das 3:=Gegenteil 4:=von 5:=Nichts.,1,,Everything is the opposite of nothing.,['# ::snt Everything is the opposite of nothing.\n(o / opposite-01\n      :ARG1 (e / everything)\n      :ARG2 (n / nothing))'],"[o, attr-instance, opposite_01, attr-arg1, [e, attr-instance, everything], attr-arg2, [n, attr-instance, nothing]]"
224,224,224,224,291,1290,alles,Alles ist die größtmögliche Anzahl.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-26T11:09:50Z,0cb9cde516c38ed84dc1f3f2b5556ed3,0:=Alles 1:=ist 2:=die 3:=größtmögliche 4:=Anzahl.,1,,Everything is the greatest possible number.,['# ::snt Everything is the greatest possible number.\n(h / have-degree-91\n      :ARG1 (e / everything)\n      :ARG2 (g / great)\n      :ARG3 (m / most)\n      :ARG5 (n / number\n            :ARG1-of (p / possible-01)))'],"[h, attr-instance, have_degree_91, attr-arg1, [e, attr-instance, everything], attr-arg2, [g, attr-instance, great], attr-arg3, [m, attr-instance, most], attr-arg5, [n, attr-instance, number, attr-arg1_of, [p, attr-instance, possible_01]]]"
225,225,225,225,292,1291,alles,Alles stammt von dem Wort All ab.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-26T11:09:50Z,0cb9cde516c38ed84dc1f3f2b5556ed3,0:=Alles 1:=stammt 2:=von 3:=dem 4:=Wort 5:=All 6:=ab.,1,,Everything comes from the word All.,['# ::snt Everything comes from the word All.\n(c / come-03\n      :ARG1 (e / everything)\n      :ARG2 (w / word\n            :mod (a / all)))'],"[c, attr-instance, come_03, attr-arg1, [e, attr-instance, everything], attr-arg2, [w, attr-instance, word, attr-mod, [a, attr-instance, all]]]"
226,226,226,226,293,1292,alles,Das Universum beinhaltet Alles.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-26T11:09:50Z,0cb9cde516c38ed84dc1f3f2b5556ed3,0:=Das 1:=Universum 2:=beinhaltet 3:=Alles.,1,,The universe contains everything.,['# ::snt The universe contains everything.\n(c / contain-01\n      :ARG0 (u / universe)\n      :ARG1 (e / everything))'],"[c, attr-instance, contain_01, attr-arg0, [u, attr-instance, universe], attr-arg1, [e, attr-instance, everything]]"
227,227,227,227,294,1293,allgemeinbildung,Allgemeinˑbildung ist Bildung (Wissen).,0_short,Ohne_Kategorie|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2023-07-28T08:26:23Z,b73298f8dc4c709352374a8a8455ac94,0:=Allgemeinˑbildung 1:=ist 2:=Bildung 3:=(Wissen).,2,"[[2], [3]]",General education is education (knowledge).,['# ::snt General education is education (knowledge).\n(e / educate-01\n      :ARG1-of (g / general-02)\n      :domain (e2 / educate-01\n            :ARG1-of (m / mean-01\n                  :ARG2 (k / know-01))))'],"[e, attr-instance, educate_01, attr-arg1_of, [g, attr-instance, general_02], attr-domain, [e2, attr-instance, educate_01, attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [k, attr-instance, know_01]]]]"
228,228,228,228,295,1294,allgemeinbildung,Das wichtige Wissen für das Leben heißt auch Allgemeinˑbildung.,1_short,Ohne_Kategorie|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2023-07-28T08:26:23Z,b73298f8dc4c709352374a8a8455ac94,0:=Das 1:=wichtige 2:=Wissen 3:=für 4:=das 5:=Leben 6:=heißt 7:=auch 8:=Allgemeinˑbildung.,3,"[[6, 7, 8], [1], [3, 5]]",The important knowledge for life is also called general education.,['# ::snt The important knowledge for life is also called general education.\n(c / call-01\n      :ARG1 (k / know-01\n            :ARG1 (l / life)\n            :ARG1-of (ii / important-01))\n      :ARG2 (e / educate-01\n            :ARG1-of (g / general-02))\n      :mod (a / also))'],"[c, attr-instance, call_01, attr-arg1, [k, attr-instance, know_01, attr-arg1, [l, attr-instance, life], attr-arg1_of, [ii, attr-instance, important_01]], attr-arg2, [e, attr-instance, educate_01, attr-arg1_of, [g, attr-instance, general_02]], attr-mod, [a, attr-instance, also]]"
229,229,229,229,296,1295,allgemeine-geschaftsbedingungen,"Wenn man einen Vetrag macht, \newline muss man die AGB akzeptieren.",0_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-04-11T08:43:08Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Wenn 1:=man 2:=einen 3:=Vetrag 4:=macht, 5:=\newline 6:=muss 7:=man 8:=die 9:=AGB 10:=akzeptieren.",2,"[[0, 1, 3, 4], [6, 7, 9, 10]]","When you make a contract, \newline you have to accept the terms and conditions.","['# ::snt When you make a contract, \\newline you have to accept the terms and conditions.\n(o / obligate-01\n      :ARG1 (y / you)\n      :ARG2 (a / accept-01\n            :ARG0 y\n            :ARG1 (a2 / and\n                  :op1 (t / term)\n                  :op2 (c / condition)))\n      :time (c2 / contract-02\n            :ARG0 y)\n      :ARG1-of (n / new-line-04))']","[o, attr-instance, obligate_01, attr-arg1, [y, attr-instance, you], attr-arg2, [a, attr-instance, accept_01, attr-arg0, y, attr-arg1, [a2, attr-instance, and, attr-op1, [t, attr-instance, term], attr-op2, [c, attr-instance, condition]]], attr-time, [c2, attr-instance, contract_02, attr-arg0, y], attr-arg1_of, [n, attr-instance, new_line_04]]"
230,230,230,230,297,1296,allgemeine-geschaftsbedingungen,Und man muss sich an die AGB halten.,1_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-04-11T08:43:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=man 2:=muss 3:=sich 4:=an 5:=die 6:=AGB 7:=halten.,1,,And you have to abide by the terms and conditions.,['# ::snt And you have to abide by the terms and conditions.\n(a / and\n      :op2 (o / obligate-01\n            :ARG1 (y / you)\n            :ARG2 (a2 / abide-01\n                  :ARG0 y\n                  :ARG1 (a3 / and\n                        :op1 (t / term)\n                        :op2 (c / condition)))))'],"[a, attr-instance, and, attr-op2, [o, attr-instance, obligate_01, attr-arg1, [y, attr-instance, you], attr-arg2, [a2, attr-instance, abide_01, attr-arg0, y, attr-arg1, [a3, attr-instance, and, attr-op1, [t, attr-instance, term], attr-op2, [c, attr-instance, condition]]]]]"
231,231,231,231,298,1298,allgemeine-geschaftsbedingungen,Die AGB sind oft unter einem Vertrag ganz klein ge-schrieben.,3_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-04-11T08:43:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=AGB 2:=sind 3:=oft 4:=unter 5:=einem 6:=Vertrag 7:=ganz 8:=klein 9:=ge-schrieben.,2,"[[4, 6], [7, 8]]",The general terms and conditions are often written very small at the bottom of a contract.,['# ::snt The general terms and conditions are often written very small at the bottom of a contract.\n(w / write-01\n      :ARG1 (a / and\n            :op1 (t / term)\n            :op2 (c / condition)\n            :ARG1-of (g / general-02))\n      :mod (s / small\n            :degree (v / very))\n      :frequency (o / often)\n      :location (b / bottom\n            :part-of (c2 / contract)))'],"[w, attr-instance, write_01, attr-arg1, [a, attr-instance, and, attr-op1, [t, attr-instance, term], attr-op2, [c, attr-instance, condition], attr-arg1_of, [g, attr-instance, general_02]], attr-mod, [s, attr-instance, small, attr-degree, [v, attr-instance, very]], attr-frequency, [o, attr-instance, often], attr-location, [b, attr-instance, bottom, attr-part_of, [c2, attr-instance, contract]]]"
232,232,232,232,301,1301,allgemeine-geschaftsbedingungen,Allgemeine Geschäftsbedingungen sind Regeln.,0_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-04-11T08:43:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Allgemeine 1:=Geschäftsbedingungen 2:=sind 3:=Regeln.,1,,General terms and conditions are rules.,['# ::snt General terms and conditions are rules.\n(r / rule-01\n      :ARG3 (a / and\n            :op1 (t / term)\n            :op2 (c / condition)\n            :ARG1-of (g / general-02)))'],"[r, attr-instance, rule_01, attr-arg3, [a, attr-instance, and, attr-op1, [t, attr-instance, term], attr-op2, [c, attr-instance, condition], attr-arg1_of, [g, attr-instance, general_02]]]"
233,233,233,233,302,1302,allgemeine-geschaftsbedingungen,Zum Beispiel wenn man was im Internet bestellt.,1_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-04-11T08:43:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=wenn 3:=man 4:=was 5:=im 6:=Internet 7:=bestellt.,1,,"For example, when you order something online.","['# ::snt For example, when you order something online.\n(e / exemplify-01\n      :time (o / order-01\n            :ARG0 (y / you)\n            :ARG1 (s / something)\n            :medium (o2 / online)))']","[e, attr-instance, exemplify_01, attr-time, [o, attr-instance, order_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-medium, [o2, attr-instance, online]]]"
234,234,234,234,310,1310,allgemeines-gleichbehandlungsgesetz,Sie dürfen nicht benachteiligt werden.,6_long,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Sie 1:=dürfen 2:=nicht 3:=benachteiligt 4:=werden.,1,,They must not be disadvantaged.,['# ::snt They must not be disadvantaged.\n(ii / infer-01\n      :ARG1 (d / disadvantage\n            :polarity -\n            :domain (t / they)))'],"[ii, attr-instance, infer_01, attr-arg1, [d, attr-instance, disadvantage, attr-polarity, negative, attr-domain, [t, attr-instance, they]]]"
235,235,235,235,311,1311,allgemeines-gleichbehandlungsgesetz,"Das heißt,  \newline sie dürfen nicht anders behandelt werden als andere Menschen.",7_long,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,"0:=Das 1:=heißt, 2:= 3:=\newline 4:=sie 5:=dürfen 6:=nicht 7:=anders 8:=behandelt 9:=werden 10:=als 11:=andere 12:=Menschen.",1,,This means that \newline they must not be treated differently than other people.,['# ::snt This means that \\newline they must not be treated differently than other people.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (o / obligate-01\n            :ARG1 (t2 / treat-01\n                  :polarity -\n                  :ARG1 (t3 / they)\n                  :ARG1-of (d / differ-02\n                        :ARG2 (t4 / treat-01\n                              :ARG1 (p / person\n                                    :mod (o2 / other)))))\n            :mod (l / line\n                  :mod (n / new))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [o, attr-instance, obligate_01, attr-arg1, [t2, attr-instance, treat_01, attr-polarity, negative, attr-arg1, [t3, attr-instance, they], attr-arg1_of, [d, attr-instance, differ_02, attr-arg2, [t4, attr-instance, treat_01, attr-arg1, [p, attr-instance, person, attr-mod, [o2, attr-instance, other]]]]], attr-mod, [l, attr-instance, line, attr-mod, [n, attr-instance, new]]]]"
236,236,236,236,312,1312,allgemeines-gleichbehandlungsgesetz,Zum Beispiel müssen Frauen und Männer gleich behandelt werden.,8_long,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Zum 1:=Beispiel 2:=müssen 3:=Frauen 4:=und 5:=Männer 6:=gleich 7:=behandelt 8:=werden.,1,,"For example, women and men must be treated equally.","['# ::snt For example, women and men must be treated equally.\n(e / exemplify-01\n      :ARG0 (o / obligate-01\n            :ARG2 (t / treat-01\n                  :ARG1 (a / and\n                        :op1 (w / woman)\n                        :op2 (m / man))\n                  :ARG1-of (e2 / equal-01))))']","[e, attr-instance, exemplify_01, attr-arg0, [o, attr-instance, obligate_01, attr-arg2, [t, attr-instance, treat_01, attr-arg1, [a, attr-instance, and, attr-op1, [w, attr-instance, woman], attr-op2, [m, attr-instance, man]], attr-arg1_of, [e2, attr-instance, equal_01]]]]"
237,237,237,237,313,1313,allgemeines-gleichbehandlungsgesetz,Seit dem 14.8.2006 gibt es das Gleich-behandlungs-gesetz.,9_long,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Seit 1:=dem 2:=14.8.2006 3:=gibt 4:=es 5:=das 6:=Gleich-behandlungs-gesetz.,2,"[[0, 1, 2], [3, 5, 6]]","The Equal Treatment Act has been in force since August 14, 2006.","['# ::snt The Equal Treatment Act has been in force since August 14, 2006.\n(ii / in-force\n      :domain (l / law\n            :name (n / name\n                  :op1 ""Equal""\n                  :op2 ""Treatment""\n                  :op3 ""Act""))\n      :time (s / since\n            :op1 (d / date-entity\n                  :month 8\n                  :day 14\n                  :year 2006)))']","[ii, attr-instance, in_force, attr-domain, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""equal"", attr-op2, ""treatment"", attr-op3, ""act""]], attr-time, [s, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-month, 8, attr-day, 14, attr-year, 2006]]]"
238,238,238,238,314,1314,allgemeines-gleichbehandlungsgesetz,Das Gleich-behandlungs-gesetz ist vom Bundestag beschlossen worden.,10_long,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Das 1:=Gleich-behandlungs-gesetz 2:=ist 3:=vom 4:=Bundestag 5:=beschlossen 6:=worden.,2,"[[1, 2, 5, 6], [3, 4]]",The Equal Treatment Act has been passed by the Bundestag.,"['# ::snt The Equal Treatment Act has been passed by the Bundestag.\n(p / pass-01\n      :ARG0 (p2 / political-party\n            :name (n / name\n                  :op1 ""Bundestag""))\n      :ARG1 (l / law\n            :name (n2 / name\n                  :op1 ""Equal""\n                  :op2 ""Treatment""\n                  :op3 ""Act"")))']","[p, attr-instance, pass_01, attr-arg0, [p2, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""bundestag""]], attr-arg1, [l, attr-instance, law, attr-name, [n2, attr-instance, name, attr-op1, ""equal"", attr-op2, ""treatment"", attr-op3, ""act""]]]"
239,239,239,239,315,1315,allgemeines-gleichbehandlungsgesetz,Früher hatte das Allgemeine Gleich-behandlungs-gesetz einen anderen Namen.,11_long,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Früher 1:=hatte 2:=das 3:=Allgemeine 4:=Gleich-behandlungs-gesetz 5:=einen 6:=anderen 7:=Namen.,1,,The General Equal Treatment Act used to have a different name.,"['# ::snt The General Equal Treatment Act used to have a different name.\n(n / name-01\n      :ARG1 (l / law\n            :name (n2 / name\n                  :op1 ""General""\n                  :op2 ""Equal""\n                  :op3 ""Treatment""\n                  :op4 ""Act""))\n      :ARG2 (t / thing\n            :ARG1-of (d / differ-02))\n      :time (u / use-03))']","[n, attr-instance, name_01, attr-arg1, [l, attr-instance, law, attr-name, [n2, attr-instance, name, attr-op1, ""general"", attr-op2, ""equal"", attr-op3, ""treatment"", attr-op4, ""act""]], attr-arg2, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, differ_02]], attr-time, [u, attr-instance, use_03]]"
240,240,240,240,316,1316,allgemeines-gleichbehandlungsgesetz,Es hatte früher den Namen Anti-diskriminierungs-gesetz.,12_long,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Es 1:=hatte 2:=früher 3:=den 4:=Namen 5:=Anti-diskriminierungs-gesetz.,1,,It was formerly called the Anti-Discrimination Act.,"['# ::snt It was formerly called the Anti-Discrimination Act.\n(c / call-01\n      :ARG1 (ii / it)\n      :ARG2 (l / law\n            :name (n / name\n                  :op1 ""Anti-Discrimination""\n                  :op2 ""Act""))\n      :time (f / former))']","[c, attr-instance, call_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""anti_discrimination"", attr-op2, ""act""]], attr-time, [f, attr-instance, former]]"
241,241,241,241,318,1318,allgemeines-gleichbehandlungsgesetz,Das Allgemeine Gleich-behandlungs-gesetz ist ein Gesetz.,0_short,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Das 1:=Allgemeine 2:=Gleich-behandlungs-gesetz 3:=ist 4:=ein 5:=Gesetz.,1,,The General Equal Treatment Act is a law.,"['# ::snt The General Equal Treatment Act is a law.\n(l / law\n      :domain (l2 / law\n            :name (n / name\n                  :op1 ""General""\n                  :op2 ""Equal""\n                  :op3 ""Treatment""\n                  :op4 ""Act"")))']","[l, attr-instance, law, attr-domain, [l2, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""general"", attr-op2, ""equal"", attr-op3, ""treatment"", attr-op4, ""act""]]]"
242,242,242,242,319,1319,allgemeines-gleichbehandlungsgesetz,Das Gesetz soll Menschen vor Ungerechtigkeit schützen.,1_short,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Das 1:=Gesetz 2:=soll 3:=Menschen 4:=vor 5:=Ungerechtigkeit 6:=schützen.,1,,The law is intended to protect people from injustice.,['# ::snt The law is intended to protect people from injustice.\n(ii / intend-01\n      :ARG1 (p / protect-01\n            :ARG0 (l / law)\n            :ARG1 (p2 / person)\n            :ARG2 (j / justice\n                  :polarity -)))'],"[ii, attr-instance, intend_01, attr-arg1, [p, attr-instance, protect_01, attr-arg0, [l, attr-instance, law], attr-arg1, [p2, attr-instance, person], attr-arg2, [j, attr-instance, justice, attr-polarity, negative]]]"
243,243,243,243,320,1320,allgemeines-gleichbehandlungsgesetz,Und es soll Menschen vor Diskriminierung schützen.,2_short,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2008-02-02T09:59:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Und 1:=es 2:=soll 3:=Menschen 4:=vor 5:=Diskriminierung 6:=schützen.,1,,And it is intended to protect people from discrimination.,['# ::snt And it is intended to protect people from discrimination.\n(a / and\n      :op2 (ii / intend-01\n            :ARG1 (p / protect-01\n                  :ARG0 (ii2 / it)\n                  :ARG1 (p2 / person)\n                  :ARG2 (d / discriminate-02\n                        :ARG0 p2))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, intend_01, attr-arg1, [p, attr-instance, protect_01, attr-arg0, [ii2, attr-instance, it], attr-arg1, [p2, attr-instance, person], attr-arg2, [d, attr-instance, discriminate_02, attr-arg0, p2]]]]"
244,244,244,244,322,1322,alltagsmaske,Eine Alltags-maske ist aus Stoff.,0_long,Gesundheit|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2021-07-16T07:58:18Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Alltags-maske 2:=ist 3:=aus 4:=Stoff.,1,,An everyday mask is made of fabric.,['# ::snt An everyday mask is made of fabric.\n(m / make-01\n      :ARG1 (m2 / mask\n            :frequency (r / rate-entity-91\n                  :ARG3 (t / temporal-quantity\n                        :quant 1\n                        :unit (d / day))))\n      :ARG2 (f / fabric))'],"[m, attr-instance, make_01, attr-arg1, [m2, attr-instance, mask, attr-frequency, [r, attr-instance, rate_entity_91, attr-arg3, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [d, attr-instance, day]]]], attr-arg2, [f, attr-instance, fabric]]"
245,245,245,245,324,1324,alltagsmaske,Man macht sie mit einem Band hinter den Ohren fest.,2_long,Gesundheit|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2021-07-16T07:58:18Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=macht 2:=sie 3:=mit 4:=einem 5:=Band 6:=hinter 7:=den 8:=Ohren 9:=fest.,2,"[[3, 5], [6, 8]]",You fasten them with a band behind your ears.,['# ::snt You fasten them with a band behind your ears.\n(f / fasten-01\n      :ARG0 (y / you\n            :part (e / ear))\n      :ARG1 (t / they)\n      :manner (b / band\n            :location (b2 / behind\n                  :op1 e)))'],"[f, attr-instance, fasten_01, attr-arg0, [y, attr-instance, you, attr-part, [e, attr-instance, ear]], attr-arg1, [t, attr-instance, they], attr-manner, [b, attr-instance, band, attr-location, [b2, attr-instance, behind, attr-op1, e]]]"
246,246,246,246,325,1325,alltagsmaske,Eine Alltags-maske ist eine Maske für das Gesicht.,0_short,Gesundheit|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2021-07-16T07:58:18Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Alltags-maske 2:=ist 3:=eine 4:=Maske 5:=für 6:=das 7:=Gesicht.,2,"[[1, 2], [5, 6, 7]]",An everyday mask is a mask for the face.,['# ::snt An everyday mask is a mask for the face.\n(m / mask\n      :beneficiary (f / face)\n      :domain (m2 / mask\n            :frequency (r / rate-entity-91\n                  :ARG3 (t / temporal-quantity\n                        :quant 1\n                        :unit (d / day)))))'],"[m, attr-instance, mask, attr-beneficiary, [f, attr-instance, face], attr-domain, [m2, attr-instance, mask, attr-frequency, [r, attr-instance, rate_entity_91, attr-arg3, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [d, attr-instance, day]]]]]"
247,247,247,247,326,1327,alltagsmaske,Man schützt den Mund.,2_short,Gesundheit|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2021-07-16T07:58:18Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=schützt 2:=den 3:=Mund.,1,,You protect your mouth.,['# ::snt You protect your mouth.\n(p / protect-01\n      :ARG0 (y / you\n            :part (m / mouth))\n      :ARG1 m)'],"[p, attr-instance, protect_01, attr-arg0, [y, attr-instance, you, attr-part, [m, attr-instance, mouth]], attr-arg1, m]"
248,248,248,248,327,1328,alltagsmaske,Und man schützt die Nase.,3_short,Gesundheit|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2021-07-16T07:58:18Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=man 2:=schützt 3:=die 4:=Nase.,1,,And you protect your nose.,['# ::snt And you protect your nose.\n(a / and\n      :op2 (p / protect-01\n            :ARG0 (y / you\n                  :part (n / nose))\n            :ARG1 n))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, protect_01, attr-arg0, [y, attr-instance, you, attr-part, [n, attr-instance, nose]], attr-arg1, n]]"
249,249,249,249,328,1329,alltagsmaske,Damit keine Schad-stoffe in das Gesicht kommen.,4_short,Gesundheit|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2021-07-16T07:58:18Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=keine 2:=Schad-stoffe 3:=in 4:=das 5:=Gesicht 6:=kommen.,1,,So that no harmful substances get into your face.,['# ::snt So that no harmful substances get into your face.\n(c / cause-01\n      :ARG1 (g / get-05\n            :polarity -\n            :ARG1 (s / substance\n                  :ARG0-of (h / harmful-02))\n            :ARG2 (f / face\n                  :part-of (y / you))))'],"[c, attr-instance, cause_01, attr-arg1, [g, attr-instance, get_05, attr-polarity, negative, attr-arg1, [s, attr-instance, substance, attr-arg0_of, [h, attr-instance, harmful_02]], attr-arg2, [f, attr-instance, face, attr-part_of, [y, attr-instance, you]]]]"
250,250,250,250,329,1330,alltagsmaske,Eine Alltags-maske schützt die Atem-wege.,5_short,Gesundheit|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2021-07-16T07:58:18Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Alltags-maske 2:=schützt 3:=die 4:=Atem-wege.,1,,An everyday mask protects the respiratory tract.,['# ::snt An everyday mask protects the respiratory tract.\n(p / protect-01\n      :ARG0 (m / mask\n            :frequency (r / rate-entity-91\n                  :ARG3 (t / temporal-quantity\n                        :quant 1\n                        :unit (d / day))))\n      :ARG1 (t2 / tract\n            :mod (r2 / respire-01)))'],"[p, attr-instance, protect_01, attr-arg0, [m, attr-instance, mask, attr-frequency, [r, attr-instance, rate_entity_91, attr-arg3, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [d, attr-instance, day]]]], attr-arg1, [t2, attr-instance, tract, attr-mod, [r2, attr-instance, respire_01]]]"
251,251,251,251,331,1332,alte-welt,Experten für Geschichte sprechen oft von Alter Welt.,0_long,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Experten 1:=für 2:=Geschichte 3:=sprechen 4:=oft 5:=von 6:=Alter 7:=Welt.,1,,History experts often speak of the Old World.,['# ::snt History experts often speak of the Old World.\n(s / speak-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01\n                  :ARG2 (h / history)))\n      :ARG1 (w / world\n            :mod (o / old))\n      :frequency (o2 / often))'],"[s, attr-instance, speak_01, attr-arg0, [p, attr-instance, person, attr-arg1_of, [e, attr-instance, expert_01, attr-arg2, [h, attr-instance, history]]], attr-arg1, [w, attr-instance, world, attr-mod, [o, attr-instance, old]], attr-frequency, [o2, attr-instance, often]]"
252,252,252,252,332,1333,alte-welt,Das Gegenteil von der Alten Welt ist die Neue Welt.,1_long,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Gegenteil 2:=von 3:=der 4:=Alten 5:=Welt 6:=ist 7:=die 8:=Neue 9:=Welt.,1,,The opposite of the Old World is the New World.,"['# ::snt The opposite of the Old World is the New World.\n(o / opposite-01\n      :ARG1 (w / world\n            :mod (o2 / old))\n      :ARG2 (w2 / world\n            :name (n / name\n                  :op1 ""New""\n                  :op2 ""World"")))']","[o, attr-instance, opposite_01, attr-arg1, [w, attr-instance, world, attr-mod, [o2, attr-instance, old]], attr-arg2, [w2, attr-instance, world, attr-name, [n, attr-instance, name, attr-op1, ""new"", attr-op2, ""world""]]]"
253,253,253,253,333,1334,alte-welt,Die Neue Welt ist Amerika.,2_long,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Neue 2:=Welt 3:=ist 4:=Amerika.,1,,The New World is America.,"['# ::snt The New World is America.\n(c / country\n      :name (n / name\n            :op1 ""America"")\n      :domain (b / broadcast-program\n            :name (n2 / name\n                  :op1 ""The""\n                  :op2 ""New""\n                  :op3 ""World"")))']","[c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""america""], attr-domain, [b, attr-instance, broadcast_program, attr-name, [n2, attr-instance, name, attr-op1, ""the"", attr-op2, ""new"", attr-op3, ""world""]]]"
254,254,254,254,334,1335,alte-welt,Kolumbus hat die Neue Welt im Jahr 1492 entdeckt.,3_long,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kolumbus 1:=hat 2:=die 3:=Neue 4:=Welt 5:=im 6:=Jahr 7:=1492 8:=entdeckt.,2,"[[0, 1, 3, 4, 8], [5, 6, 7]]",Columbus discovered the New World in 1492.,"['# ::snt Columbus discovered the New World in 1492.\n(d / discover-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Columbus""))\n      :ARG1 (w / world\n            :name (n2 / name\n                  :op1 ""New""\n                  :op2 ""World""))\n      :time (d2 / date-entity\n            :year 1492))']","[d, attr-instance, discover_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""columbus""]], attr-arg1, [w, attr-instance, world, attr-name, [n2, attr-instance, name, attr-op1, ""new"", attr-op2, ""world""]], attr-time, [d2, attr-instance, date_entity, attr-year, 1492]]"
255,255,255,255,335,1336,alte-welt,Jetzt wissen die Menschen das es 4 Erd-teile gibt.,4_long,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Jetzt 1:=wissen 2:=die 3:=Menschen 4:=das 5:=es 6:=4 7:=Erd-teile 8:=gibt.,2,"[[0, 1, 3], [4, 5, 6, 7, 8]]",Now people know that there are four continents.,['# ::snt Now people know that there are four continents.\n(k / know-01\n      :ARG0 (p / person)\n      :ARG1 (c / continent\n            :quant 4)\n      :time (n / now))'],"[k, attr-instance, know_01, attr-arg0, [p, attr-instance, person], attr-arg1, [c, attr-instance, continent, attr-quant, 4], attr-time, [n, attr-instance, now]]"
256,256,256,256,336,1337,alte-welt,Die Menschen lernen sich kennen.,5_long,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Menschen 2:=lernen 3:=sich 4:=kennen.,1,,People get to know each other.,['# ::snt People get to know each other.\n(g / get-03\n      :ARG1 (p / person)\n      :ARG2 (k / know-02\n            :ARG0 p\n            :ARG1 p))'],"[g, attr-instance, get_03, attr-arg1, [p, attr-instance, person], attr-arg2, [k, attr-instance, know_02, attr-arg0, p, attr-arg1, p]]"
257,257,257,257,337,1338,alte-welt,Und fangen an Sachen mit-einander zu handeln.,6_long,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=fangen 2:=an 3:=Sachen 4:=mit-einander 5:=zu 6:=handeln.,2,"[[1, 2], [3, 4, 5, 6]]",And start trading things with each other.,['# ::snt And start trading things with each other.\n(a / and\n      :op2 (s / start-01\n            :ARG1 (t / trade-01\n                  :ARG0 (e / each\n                        :mod (o / other))\n                  :ARG1 (t2 / thing)\n                  :ARG2 e)))'],"[a, attr-instance, and, attr-op2, [s, attr-instance, start_01, attr-arg1, [t, attr-instance, trade_01, attr-arg0, [e, attr-instance, each, attr-mod, [o, attr-instance, other]], attr-arg1, [t2, attr-instance, thing], attr-arg2, e]]]"
258,258,258,258,338,1339,alte-welt,Alte Welt sind 3 Erd-teile.,0_short,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alte 1:=Welt 2:=sind 3:=3 4:=Erd-teile.,1,,Old World is 3 continents.,"['# ::snt Old World is 3 continents.\n(c / continent\n      :quant 3\n      :domain (b / broadcast-program\n            :name (n / name\n                  :op1 ""Old""\n                  :op2 ""World"")))']","[c, attr-instance, continent, attr-quant, 3, attr-domain, [b, attr-instance, broadcast_program, attr-name, [n, attr-instance, name, attr-op1, ""old"", attr-op2, ""world""]]]"
259,259,259,259,339,1340,alte-welt,"Es sind Europa, Afrika und Asien gemeint.",1_short,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Es 1:=sind 2:=Europa, 3:=Afrika 4:=und 5:=Asien 6:=gemeint.",3,"[[2], [4], [5]]","This refers to Europe, Africa and Asia.","['# ::snt This refers to Europe, Africa and Asia.\n(r / refer-01\n      :ARG0 (t / this)\n      :ARG1 (a / and\n            :op1 (c / continent\n                  :name (n / name\n                        :op1 ""Europe""))\n            :op2 (c2 / continent\n                  :name (n2 / name\n                        :op1 ""Africa""))\n            :op3 (c3 / continent\n                  :name (n3 / name\n                        :op1 ""Asia""))))']","[r, attr-instance, refer_01, attr-arg0, [t, attr-instance, this], attr-arg1, [a, attr-instance, and, attr-op1, [c, attr-instance, continent, attr-name, [n, attr-instance, name, attr-op1, ""europe""]], attr-op2, [c2, attr-instance, continent, attr-name, [n2, attr-instance, name, attr-op1, ""africa""]], attr-op3, [c3, attr-instance, continent, attr-name, [n3, attr-instance, name, attr-op1, ""asia""]]]]"
260,260,260,260,340,1341,alte-welt,Die Menschen von früher kennen nur diese Erd-teile.,2_short,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Menschen 2:=von 3:=früher 4:=kennen 5:=nur 6:=diese 7:=Erd-teile.,2,"[[1, 4, 5, 6, 7], [2, 3]]",People of the past only knew these parts of the world.,['# ::snt People of the past only knew these parts of the world.\n(k / know-02\n      :ARG0 (p / person\n            :time (p2 / past))\n      :ARG1 (p3 / part\n            :part-of (w / world)\n            :mod (t / this))\n      :mod (o / only))'],"[k, attr-instance, know_02, attr-arg0, [p, attr-instance, person, attr-time, [p2, attr-instance, past]], attr-arg1, [p3, attr-instance, part, attr-part_of, [w, attr-instance, world], attr-mod, [t, attr-instance, this]], attr-mod, [o, attr-instance, only]]"
261,261,261,261,341,1342,alte-welt,Sie wissen das überall dort Menschen leben.,3_short,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=wissen 2:=das 3:=überall 4:=dort 5:=Menschen 6:=leben.,2,"[[0, 1], [2, 3, 4, 5, 6]]",They know that there are people living there everywhere.,['# ::snt They know that there are people living there everywhere.\n(k / know-01\n      :ARG0 (t / they)\n      :ARG1 (l / live-01\n            :ARG0 (p / person)\n            :location (e / everywhere)))'],"[k, attr-instance, know_01, attr-arg0, [t, attr-instance, they], attr-arg1, [l, attr-instance, live_01, attr-arg0, [p, attr-instance, person], attr-location, [e, attr-instance, everywhere]]]"
262,262,262,262,342,1343,alte-welt,Sie kennen aber keine anderen Teile der Erde.,4_short,Länder|Seiten_mit_defekten_Dateilinks,2019-07-23T04:59:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=kennen 2:=aber 3:=keine 4:=anderen 5:=Teile 6:=der 7:=Erde.,1,,But they don’t know any other parts of the earth.,['# ::snt But they don’t know any other parts of the earth.\n(c / contrast-01\n      :ARG2 (k / know-01\n            :polarity -\n            :ARG0 (t / they)\n            :ARG1 (p / part\n                  :part-of (e / earth)\n                  :mod (o / other)\n                  :mod (a / any))))'],"[c, attr-instance, contrast_01, attr-arg2, [k, attr-instance, know_01, attr-polarity, negative, attr-arg0, [t, attr-instance, they], attr-arg1, [p, attr-instance, part, attr-part_of, [e, attr-instance, earth], attr-mod, [o, attr-instance, other], attr-mod, [a, attr-instance, any]]]]"
263,263,263,263,343,1344,altenburg,Altenburg hat über 30 Tausend Einwohner.,0_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Altenburg 1:=hat 2:=über 3:=30 4:=Tausend 5:=Einwohner.,1,,Altenburg has over 30 thousand inhabitants.,"['# ::snt Altenburg has over 30 thousand inhabitants.\n(ii / inhabit-01\n      :ARG0 (p / person\n            :quant (o / over\n                  :op1 30000))\n      :ARG1 (c / city\n            :name (n / name\n                  :op1 ""Altenburg"")))']","[ii, attr-instance, inhabit_01, attr-arg0, [p, attr-instance, person, attr-quant, [o, attr-instance, over, attr-op1, 30000]], attr-arg1, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""altenburg""]]]"
264,264,264,264,344,1345,altenburg,Durch Altenburg fließt der Fluss Pleisse.,1_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Durch 1:=Altenburg 2:=fließt 3:=der 4:=Fluss 5:=Pleisse.,3,"[[5, 2], [4, 2], [0, 1]]",The river Pleisse flows through Altenburg.,"['# ::snt The river Pleisse flows through Altenburg.\n(f / flow-01\n      :ARG1 (r / river\n            :name (n / name\n                  :op1 ""P Pleisse""))\n      :path (c / city\n            :name (n2 / name\n                  :op1 ""Altenburg"")))']","[f, attr-instance, flow_01, attr-arg1, [r, attr-instance, river, attr-name, [n, attr-instance, name, attr-op1, ""p, pleisse""]], attr-path, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""altenburg""]]]"
265,265,265,265,346,1347,altenburg,Der Ober-bürgermeister von Altenburg heisst Andre Neumann.,3_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Der 1:=Ober-bürgermeister 2:=von 3:=Altenburg 4:=heisst 5:=Andre 6:=Neumann.,1,,The mayor of Altenburg is Andre Neumann.,"['# ::snt The mayor of Altenburg is Andre Neumann.\n(h / have-org-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Andre""\n                  :op2 ""Neumann""))\n      :ARG1 (c / city\n            :name (n2 / name\n                  :op1 ""Altenburg""))\n      :ARG2 (m / mayor))']","[h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""andre"", attr-op2, ""neumann""]], attr-arg1, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""altenburg""]], attr-arg2, [m, attr-instance, mayor]]"
266,266,266,266,347,1348,altenburg,Davor war Michael Wolf Ober-bürger-meister.,4_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Davor 1:=war 2:=Michael 3:=Wolf 4:=Ober-bürger-meister.,1,,"Before that, Michael Wolf was mayor.","['# ::snt Before that, Michael Wolf was mayor.\n(h / have-org-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Michael""\n                  :op2 ""Wolf""))\n      :ARG2 (m / mayor)\n      :time (b / before\n            :op1 (t / that)))']","[h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""michael"", attr-op2, ""wolf""]], attr-arg2, [m, attr-instance, mayor], attr-time, [b, attr-instance, before, attr-op1, [t, attr-instance, that]]]"
267,267,267,267,348,1349,altenburg,In Altenburg wurde das Skat-spiel erfunden.,5_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=In 1:=Altenburg 2:=wurde 3:=das 4:=Skat-spiel 5:=erfunden.,1,,The game of Skat was invented in Altenburg.,"['# ::snt The game of Skat was invented in Altenburg.\n(ii / invent-01\n      :ARG1 (g / game\n            :name (n / name\n                  :op1 ""Skat""))\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""Altenburg"")))']","[ii, attr-instance, invent_01, attr-arg1, [g, attr-instance, game, attr-name, [n, attr-instance, name, attr-op1, ""skat""]], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""altenburg""]]]"
268,268,268,268,349,1350,altenburg,Altenburg ist eine Reformations-stadt.,6_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Altenburg 1:=ist 2:=eine 3:=Reformations-stadt.,1,,Altenburg is a Reformation city.,"['# ::snt Altenburg is a Reformation city.\n(c / city\n      :domain (c2 / city\n            :name (n / name\n                  :op1 ""Altenburg""))\n      :mod (r / reform-01))']","[c, attr-instance, city, attr-domain, [c2, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""altenburg""]], attr-mod, [r, attr-instance, reform_01]]"
269,269,269,269,350,1351,altenburg,Der Reformator Georg Spalatin lebte hier.,7_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Der 1:=Reformator 2:=Georg 3:=Spalatin 4:=lebte 5:=hier.,1,,The reformer Georg Spalatin lived here.,"['# ::snt The reformer Georg Spalatin lived here.\n(l / live-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Georg""\n                  :op2 ""Spalatin"")\n            :ARG0-of (r / reform-01))\n      :location (h / here))']","[l, attr-instance, live_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""georg"", attr-op2, ""spalatin""], attr-arg0_of, [r, attr-instance, reform_01]], attr-location, [h, attr-instance, here]]"
270,270,270,270,351,1352,altenburg,Kaiser Barbarossa war 6 mal in Altenburg zu Gast.,8_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Kaiser 1:=Barbarossa 2:=war 3:=6 4:=mal 5:=in 6:=Altenburg 7:=zu 8:=Gast.,1,,Emperor Barbarossa visited Altenburg six times.,"['# ::snt Emperor Barbarossa visited Altenburg six times.\n(v / visit-01\n      :frequency 6\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Barbarossa"")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (e / emperor)))\n      :ARG1 (c / city\n            :name (n2 / name\n                  :op1 ""Altenburg"")))']","[v, attr-instance, visit_01, attr-frequency, 6, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""barbarossa""], attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [e, attr-instance, emperor]]], attr-arg1, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""altenburg""]]]"
271,271,271,271,352,1353,altenburg,"Das Wahrzeichen von Altenburg sind die ""Roten Spitzen"".",9_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,"0:=Das 1:=Wahrzeichen 2:=von 3:=Altenburg 4:=sind 5:=die 6:=""Roten 7:=Spitzen"".",1,,"The landmark of Altenburg are the ""Red Peaks"".","['# ::snt The landmark of Altenburg are the ""Red Peaks"".\n(l / landmark\n      :name (n / name\n            :op1 ""Red""\n            :op2 ""Peak"")\n      :domain (c / city\n            :name (n2 / name\n                  :op1 ""Altenburg"")))']","[l, attr-instance, landmark, attr-name, [n, attr-instance, name, attr-op1, ""red"", attr-op2, ""peak""], attr-domain, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""altenburg""]]]"
272,272,272,272,353,1354,altenburg,Das sind 2 Kirch-türme aus roten Ziegel-steinen.,10_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Das 1:=sind 2:=2 3:=Kirch-türme 4:=aus 5:=roten 6:=Ziegel-steinen.,2,"[[1, 2], [4, 5, 6]]",These are two church towers made of red bricks.,['# ::snt These are two church towers made of red bricks.\n(t / tower\n      :quant 2\n      :mod (c / church)\n      :ARG1-of (m / make-01\n            :ARG2 (b / brick\n                  :ARG1-of (r / red-02)))\n      :domain (t2 / this))'],"[t, attr-instance, tower, attr-quant, 2, attr-mod, [c, attr-instance, church], attr-arg1_of, [m, attr-instance, make_01, attr-arg2, [b, attr-instance, brick, attr-arg1_of, [r, attr-instance, red_02]]], attr-domain, [t2, attr-instance, this]]"
273,273,273,273,354,1355,altenburg,Altenburg hat 3 große Kirchen und einen großen Markt.,11_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Altenburg 1:=hat 2:=3 3:=große 4:=Kirchen 5:=und 6:=einen 7:=großen 8:=Markt.,2,"[[2, 3, 4], [7, 8]]",Altenburg has 3 large churches and a large market.,"['# ::snt Altenburg has 3 large churches and a large market.\n(h / have-03\n      :ARG0 (c / city\n            :name (n / name\n                  :op1 ""Altenburg""))\n      :ARG1 (a / and\n            :op1 (c2 / church\n                  :quant 3\n                  :mod (l / large))\n            :op2 (m / market\n                  :mod (l2 / large))))']","[h, attr-instance, have_03, attr-arg0, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""altenburg""]], attr-arg1, [a, attr-instance, and, attr-op1, [c2, attr-instance, church, attr-quant, 3, attr-mod, [l, attr-instance, large]], attr-op2, [m, attr-instance, market, attr-mod, [l2, attr-instance, large]]]]"
274,274,274,274,355,1356,altenburg,Das Rathaus ist 455 Jahre alt.,12_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Das 1:=Rathaus 2:=ist 3:=455 4:=Jahre 5:=alt.,1,,The town hall is 455 years old.,['# ::snt The town hall is 455 years old.\n(a / age-01\n      :ARG1 (h / hall\n            :mod (t / town))\n      :ARG2 (t2 / temporal-quantity\n            :quant 455\n            :unit (y / year)))'],"[a, attr-instance, age_01, attr-arg1, [h, attr-instance, hall, attr-mod, [t, attr-instance, town]], attr-arg2, [t2, attr-instance, temporal_quantity, attr-quant, 455, attr-unit, [y, attr-instance, year]]]"
275,275,275,275,356,1357,altenburg,Im Altenburger Schloss gibt es verschiedene Museen.,13_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Im 1:=Altenburger 2:=Schloss 3:=gibt 4:=es 5:=verschiedene 6:=Museen.,1,,There are various museums in Altenburg Castle.,"['# ::snt There are various museums in Altenburg Castle.\n(m / museum\n      :mod (v / various)\n      :location (c / castle\n            :name (n / name\n                  :op1 ""Altenburg""\n                  :op2 ""Castle"")))']","[m, attr-instance, museum, attr-mod, [v, attr-instance, various], attr-location, [c, attr-instance, castle, attr-name, [n, attr-instance, name, attr-op1, ""altenburg"", attr-op2, ""castle""]]]"
276,276,276,276,357,1358,altenburg,Das Altenburger Spiel-karten-museum ist sehr bekannt.,14_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Das 1:=Altenburger 2:=Spiel-karten-museum 3:=ist 4:=sehr 5:=bekannt.,1,,The Altenburg Playing Card Museum is very well known.,"['# ::snt The Altenburg Playing Card Museum is very well known.\n(k / know-02\n      :ARG1 (m / museum\n            :name (n / name\n                  :op1 ""Altenburg""\n                  :op2 ""Playing""\n                  :op3 ""Card""\n                  :op4 ""Museum""))\n      :degree (w / well\n            :degree (v / very)))']","[k, attr-instance, know_02, attr-arg1, [m, attr-instance, museum, attr-name, [n, attr-instance, name, attr-op1, ""altenburg"", attr-op2, ""playing"", attr-op3, ""card"", attr-op4, ""museum""]], attr-degree, [w, attr-instance, well, attr-degree, [v, attr-instance, very]]]"
277,277,277,277,358,1359,altenburg,Auf dem Altenburger Brühl steht der Skat-brunnen.,15_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Auf 1:=dem 2:=Altenburger 3:=Brühl 4:=steht 5:=der 6:=Skat-brunnen.,1,,The Skat fountain is located on the Altenburger Brühl.,"['# ::snt The Skat fountain is located on the Altenburger Brühl.\n(b / be-located-at-91\n      :ARG1 (f / fountain\n            :name (n / name\n                  :op1 ""Skat""))\n      :ARG2 (b2 / building\n            :name (n2 / name\n                  :op1 ""Altenburger""\n                  :op2 ""Brühl"")))']","[b, attr-instance, be_located_at_91, attr-arg1, [f, attr-instance, fountain, attr-name, [n, attr-instance, name, attr-op1, ""skat""]], attr-arg2, [b2, attr-instance, building, attr-name, [n2, attr-instance, name, attr-op1, ""altenburger"", attr-op2, ""brühl""]]]"
278,278,278,278,359,1360,altenburg,Der Skat-brunnen ist das einzige Denkmal auf der Welt für ein Karten-spiel.,16_long,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Der 1:=Skat-brunnen 2:=ist 3:=das 4:=einzige 5:=Denkmal 6:=auf 7:=der 8:=Welt 9:=für 10:=ein 11:=Karten-spiel.,3,"[[1, 2, 4, 5], [5, 6, 8], [9, 11]]",The Skat fountain is the only monument in the world for a card game.,"['# ::snt The Skat fountain is the only monument in the world for a card game.\n(m / monument\n      :mod (o / only)\n      :location (w / world)\n      :purpose (g / game\n            :mod (c / card))\n      :domain (f / fountain\n            :name (n / name\n                  :op1 ""Skat""\n                  :op2 ""F fountain"")))']","[m, attr-instance, monument, attr-mod, [o, attr-instance, only], attr-location, [w, attr-instance, world], attr-purpose, [g, attr-instance, game, attr-mod, [c, attr-instance, card]], attr-domain, [f, attr-instance, fountain, attr-name, [n, attr-instance, name, attr-op1, ""skat"", attr-op2, ""f, fountain""]]]"
279,279,279,279,360,1361,altenburg,Altenburg ist eine Stadt in Deutsch-land.,0_short,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Altenburg 1:=ist 2:=eine 3:=Stadt 4:=in 5:=Deutsch-land.,2,"[[3], [4, 5]]",Altenburg is a city in Germany.,"['# ::snt Altenburg is a city in Germany.\n(c / city\n      :domain (c2 / city\n            :name (n / name\n                  :op1 ""Altenburg""))\n      :location (c3 / country\n            :name (n2 / name\n                  :op1 ""Germany"")))']","[c, attr-instance, city, attr-domain, [c2, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""altenburg""]], attr-location, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""germany""]]]"
280,280,280,280,361,1362,altenburg,Altenburg ist eine Stadt im Bundes-land Thüringen.,1_short,Städte,2019-03-20T11:00:48Z,ffaa744a207eb843b7f383adcf5da422,0:=Altenburg 1:=ist 2:=eine 3:=Stadt 4:=im 5:=Bundes-land 6:=Thüringen.,2,"[[3], [4, 5, 6]]",Altenburg is a town in the federal state of Thuringia.,"['# ::snt Altenburg is a town in the federal state of Thuringia.\n(b / be-located-at-91\n      :ARG1 (t / town\n            :name (n / name\n                  :op1 ""Altenburg""))\n      :ARG2 (s / state\n            :name (n2 / name\n                  :op1 ""Thuringia"")\n            :mod (f / federal)))']","[b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, town, attr-name, [n, attr-instance, name, attr-op1, ""altenburg""]], attr-arg2, [s, attr-instance, state, attr-name, [n2, attr-instance, name, attr-op1, ""thuringia""], attr-mod, [f, attr-instance, federal]]]"
281,281,281,281,362,1363,alternative-fur-deutschland,Die AfD ist eine Partei in Deutschland.,0_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=AfD 2:=ist 3:=eine 4:=Partei 5:=in 6:=Deutschland.,2,"[[4], [5, 6]]",The AfD is a party in Germany.,"['# ::snt The AfD is a party in Germany.\n(p / party\n      :location (c / country\n            :name (n / name\n                  :op1 ""Germany""))\n      :domain (p2 / political-party\n            :name (n2 / name\n                  :op1 ""AfD"")))']","[p, attr-instance, party, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]], attr-domain, [p2, attr-instance, political_party, attr-name, [n2, attr-instance, name, attr-op1, ""afd""]]]"
282,282,282,282,363,1364,alternative-fur-deutschland,Die Partei-farbe der AfD ist hell-blau.,1_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Partei-farbe 2:=der 3:=AfD 4:=ist 5:=hell-blau.,1,,The AfD’s party color is light blue.,"['# ::snt The AfD’s party color is light blue.\n(c / color\n      :mod (p / party)\n      :poss (p2 / political-party\n            :name (n / name\n                  :op1 ""AfD""))\n      :domain c\n      :ARG1-of (l / light-06))']","[c, attr-instance, color, attr-mod, [p, attr-instance, party], attr-poss, [p2, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""afd""]], attr-domain, c, attr-arg1_of, [l, attr-instance, light_06]]"
283,283,283,283,364,1365,alternative-fur-deutschland,Frauke Petry und Jörg Meuthen sind die Chefs der Partei.,2_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Frauke 1:=Petry 2:=und 3:=Jörg 4:=Meuthen 5:=sind 6:=die 7:=Chefs 8:=der 9:=Partei.,2,"[[0, 1], [3, 4]]",Frauke Petry and Jörg Meuthen are the leaders of the party.,"['# ::snt Frauke Petry and Jörg Meuthen are the leaders of the party.\n(l / lead-02\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 ""Frauke""\n                        :op2 ""Petry""))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 ""Jörg""\n                        :op2 ""Meuthen"")))\n      :ARG1 (p3 / party))']","[l, attr-instance, lead_02, attr-arg0, [a, attr-instance, and, attr-op1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""frauke"", attr-op2, ""petry""]], attr-op2, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""jörg"", attr-op2, ""meuthen""]]], attr-arg1, [p3, attr-instance, party]]"
284,284,284,284,365,1366,alternative-fur-deutschland,Die AfD gibt es seit dem 6. Februar.,3_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=AfD 2:=gibt 3:=es 4:=seit 5:=dem 6:=6. 7:=Februar.,1,,The AfD has existed since February 6th.,"['# ::snt The AfD has existed since February 6th.\n(e / exist-01\n      :ARG1 (p / political-party\n            :name (n / name\n                  :op1 ""AfD""))\n      :time (s / since\n            :op1 (d / date-entity\n                  :month 2\n                  :day 6)))']","[e, attr-instance, exist_01, attr-arg1, [p, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""afd""]], attr-time, [s, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-month, 2, attr-day, 6]]]"
285,285,285,285,367,1368,alternative-fur-deutschland,Damals ist das Thema Geld und Euro gewesen.,5_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Damals 1:=ist 2:=das 3:=Thema 4:=Geld 5:=und 6:=Euro 7:=gewesen.,2,"[[4], [6]]","Back then, the topic was money and the euro.","['# ::snt Back then, the topic was money and the euro.\n(t / topic\n      :topic (a / and\n            :op1 (m / money)\n            :op2 (e / euro))\n      :time (t2 / then\n            :mod (b / back)))']","[t, attr-instance, topic, attr-topic, [a, attr-instance, and, attr-op1, [m, attr-instance, money], attr-op2, [e, attr-instance, euro]], attr-time, [t2, attr-instance, then, attr-mod, [b, attr-instance, back]]]"
286,286,286,286,368,1369,alternative-fur-deutschland,Bernd Lucke ist gegen den Euro.,6_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Bernd 1:=Lucke 2:=ist 3:=gegen 4:=den 5:=Euro.,1,,Bernd Lucke is against the euro.,"['# ::snt Bernd Lucke is against the euro.\n(o / oppose-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Bernd""\n                  :op2 ""Lucke""))\n      :ARG1 (e / euro))']","[o, attr-instance, oppose_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""bernd"", attr-op2, ""lucke""]], attr-arg1, [e, attr-instance, euro]]"
287,287,287,287,369,1370,alternative-fur-deutschland,Er ist aus der Partei raus-gegangen.,7_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=ist 2:=aus 3:=der 4:=Partei 5:=raus-gegangen.,1,,He left the party.,['# ::snt He left the party.\n(l / leave-15\n      :ARG0 (h / he)\n      :ARG1 (p / party))'],"[l, attr-instance, leave_15, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, party]]"
288,288,288,288,370,1371,alternative-fur-deutschland,Weil es viele Rechts-extreme Politker in der AfD gibt.,8_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Weil 1:=es 2:=viele 3:=Rechts-extreme 4:=Politker 5:=in 6:=der 7:=AfD 8:=gibt.,2,"[[0, 1, 2, 4, 5, 7, 8], [3]]",Because there are many right-wing extremist politicians in the AfD.,"['# ::snt Because there are many right-wing extremist politicians in the AfD.\n(c / cause-01\n      :ARG0 (p / politician\n            :mod (e / extremism)\n            :quant (m / many)\n            :ARG1-of (r / right-08)\n            :location (p2 / political-party\n                  :name (n / name\n                        :op1 ""AfD""))))']","[c, attr-instance, cause_01, attr-arg0, [p, attr-instance, politician, attr-mod, [e, attr-instance, extremism], attr-quant, [m, attr-instance, many], attr-arg1_of, [r, attr-instance, right_08], attr-location, [p2, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""afd""]]]]"
289,289,289,289,371,1372,alternative-fur-deutschland,Die AfD ist eine starke Partei.,9_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=AfD 2:=ist 3:=eine 4:=starke 5:=Partei.,2,"[[1, 2, 5], [4]]",The AfD is a strong party.,"['# ::snt The AfD is a strong party.\n(p / party\n      :ARG1-of (s / strong-02)\n      :domain (p2 / political-party\n            :name (n / name\n                  :op1 ""AfD"")))']","[p, attr-instance, party, attr-arg1_of, [s, attr-instance, strong_02], attr-domain, [p2, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""afd""]]]"
290,290,290,290,372,1373,alternative-fur-deutschland,"Das heißt, \newline sie haben viele Politiker im Bundes-tag.",10_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,"0:=Das 1:=heißt, 2:=\newline 3:=sie 4:=haben 5:=viele 6:=Politiker 7:=im 8:=Bundes-tag.",1,,"That means,\newline they have many politicians in the Bundestag.","['# ::snt That means,\\newline they have many politicians in the Bundestag.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (h / have-03\n            :ARG0 (t2 / they)\n            :ARG1 (p / politician\n                  :quant (m2 / many))\n            :location (g / government-organization\n                  :name (n / name\n                        :op1 ""Bundestag"")))\n      :mod (n2 / newline))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [h, attr-instance, have_03, attr-arg0, [t2, attr-instance, they], attr-arg1, [p, attr-instance, politician, attr-quant, [m2, attr-instance, many]], attr-location, [g, attr-instance, government_organization, attr-name, [n, attr-instance, name, attr-op1, ""bundestag""]]], attr-mod, [n2, attr-instance, newline]]"
291,291,291,291,374,1375,alternative-fur-deutschland,"Viele Menschen die AfD wählen, \newline sind Protest-wähler.",12_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,"0:=Viele 1:=Menschen 2:=die 3:=AfD 4:=wählen, 5:=\newline 6:=sind 7:=Protest-wähler.",2,"[[2, 3, 4], [6, 7]]",Many people who vote for the AfD are protest voters.,"['# ::snt Many people who vote for the AfD are protest voters.\n(p / person\n      :ARG0-of (v / vote-01\n            :ARG1 (p2 / political-party\n                  :name (n / name\n                        :op1 ""AfD"")))\n      :quant (m / many)\n      :domain (p3 / person\n            :ARG0-of (v2 / vote-01\n                  :ARG1 p2)\n            :ARG0-of (p4 / protest-01)))']","[p, attr-instance, person, attr-arg0_of, [v, attr-instance, vote_01, attr-arg1, [p2, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""afd""]]], attr-quant, [m, attr-instance, many], attr-domain, [p3, attr-instance, person, attr-arg0_of, [v2, attr-instance, vote_01, attr-arg1, p2], attr-arg0_of, [p4, attr-instance, protest_01]]]"
292,292,292,292,375,1376,alternative-fur-deutschland,"Viele Politiker von anderen Parteien sind gegen die AfD. \newline Weil die Partei Versprechen macht, die falsch sind.",13_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,"0:=Viele 1:=Politiker 2:=von 3:=anderen 4:=Parteien 5:=sind 6:=gegen 7:=die 8:=AfD. 9:=\newline 10:=Weil 11:=die 12:=Partei 13:=Versprechen 14:=macht, 15:=die 16:=falsch 17:=sind.",4,"[[0, 1, 5, 6, 8], [1, 2, 3, 4], [10, 12, 13, 14], [15, 16, 17]]",Many politicians from other parties are against the AfD. \newline Because the party makes promises that are false.,"['# ::snt Many politicians from other parties are against the AfD. \\newline Because the party makes promises that are false.\n(m / multi-sentence\n      :snt1 (o / oppose-01\n            :ARG0 (p / politician\n                  :quant (m2 / many)\n                  :source (p2 / party\n                        :mod (o2 / other)))\n            :ARG1 (p3 / political-party\n                  :name (n / name\n                        :op1 ""AfD"")))\n      :snt2 (c / cause-01\n            :ARG0 (p4 / promise-01\n                  :ARG0 p3\n                  :mod (f / false))\n            :ARG1 (l / line\n                  :mod (n2 / newline))))']","[m, attr-instance, multi_sentence, attr-snt1, [o, attr-instance, oppose_01, attr-arg0, [p, attr-instance, politician, attr-quant, [m2, attr-instance, many], attr-source, [p2, attr-instance, party, attr-mod, [o2, attr-instance, other]]], attr-arg1, [p3, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""afd""]]], attr-snt2, [c, attr-instance, cause_01, attr-arg0, [p4, attr-instance, promise_01, attr-arg0, p3, attr-mod, [f, attr-instance, false]], attr-arg1, [l, attr-instance, line, attr-mod, [n2, attr-instance, newline]]]]"
293,293,293,293,376,1377,alternative-fur-deutschland,Und weil es rechts-extreme Politiker in der AfD gibt.,14_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=weil 2:=es 3:=rechts-extreme 4:=Politiker 5:=in 6:=der 7:=AfD 8:=gibt.,1,,And because there are right-wing extremist politicians in the AfD.,"['# ::snt And because there are right-wing extremist politicians in the AfD.\n(a / and\n      :op2 (c / cause-01\n            :ARG0 (p / politician\n                  :mod (e / extremist)\n                  :ARG1-of (r / right-08)\n                  :location (p2 / political-party\n                        :name (n / name\n                              :op1 ""AfD"")))))']","[a, attr-instance, and, attr-op2, [c, attr-instance, cause_01, attr-arg0, [p, attr-instance, politician, attr-mod, [e, attr-instance, extremist], attr-arg1_of, [r, attr-instance, right_08], attr-location, [p2, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""afd""]]]]]"
294,294,294,294,377,1378,alternative-fur-deutschland,Und weil manche Ideen gegen das Grund-gesetz sind.,15_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=weil 2:=manche 3:=Ideen 4:=gegen 5:=das 6:=Grund-gesetz 7:=sind.,1,,And because some ideas are against the constitution.,['# ::snt And because some ideas are against the constitution.\n(a / and\n      :op2 (c / cause-01\n            :ARG0 (o / oppose-01\n                  :ARG0 (ii / idea\n                        :mod (s / some))\n                  :ARG1 (c2 / constitution))))'],"[a, attr-instance, and, attr-op2, [c, attr-instance, cause_01, attr-arg0, [o, attr-instance, oppose_01, attr-arg0, [ii, attr-instance, idea, attr-mod, [s, attr-instance, some]], attr-arg1, [c2, attr-instance, constitution]]]]"
295,295,295,295,378,1379,alternative-fur-deutschland,"Die AFD sagt,  \newline sie ist eine Partei der Mitte.",16_long,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,"0:=Die 1:=AFD 2:=sagt, 3:= 4:=\newline 5:=sie 6:=ist 7:=eine 8:=Partei 9:=der 10:=Mitte.",2,"[[1, 2], [5, 6, 8, 9, 10]]",The AfD says it is a centrist party.,"['# ::snt The AfD says it is a centrist party.\n(s / say-01\n      :ARG0 (p / political-party\n            :name (n / name\n                  :op1 ""AfD""))\n      :ARG1 (p2 / political-party\n            :ARG1-of (c / center-02)\n            :domain p))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""afd""]], attr-arg1, [p2, attr-instance, political_party, attr-arg1_of, [c, attr-instance, center_02], attr-domain, p]]"
296,296,296,296,379,1380,alternative-fur-deutschland,Die Alternative für Deutschland ist eine Partei.,0_short,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Alternative 2:=für 3:=Deutschland 4:=ist 5:=eine 6:=Partei.,1,,The Alternative for Germany is a party.,"['# ::snt The Alternative for Germany is a party.\n(p / party\n      :domain (p2 / political-party\n            :name (n / name\n                  :op1 ""Alternative""\n                  :op2 ""for""\n                  :op3 ""Germany"")))']","[p, attr-instance, party, attr-domain, [p2, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""alternative"", attr-op2, ""for"", attr-op3, ""germany""]]]"
297,297,297,297,381,1382,alternative-fur-deutschland,Und sie finden den Islam schlecht.,2_short,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=sie 2:=finden 3:=den 4:=Islam 5:=schlecht.,1,,And they think Islam is bad.,"['# ::snt And they think Islam is bad.\n(a / and\n      :op2 (t / think-01\n            :ARG0 (t2 / they)\n            :ARG1 (b / bad-07\n                  :ARG1 (r / religious-group\n                        :name (n / name\n                              :op1 ""Islam"")))))']","[a, attr-instance, and, attr-op2, [t, attr-instance, think_01, attr-arg0, [t2, attr-instance, they], attr-arg1, [b, attr-instance, bad_07, attr-arg1, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""islam""]]]]]"
298,298,298,298,382,1383,alternative-fur-deutschland,Und sie wollen weniger Flüchtlinge haben.,3_short,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=sie 2:=wollen 3:=weniger 4:=Flüchtlinge 5:=haben.,1,,And they want fewer refugees.,['# ::snt And they want fewer refugees.\n(a / and\n      :op2 (w / want-01\n            :ARG0 (t / they)\n            :ARG1 (r / refugee\n                  :quant (f / few))))'],"[a, attr-instance, and, attr-op2, [w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [r, attr-instance, refugee, attr-quant, [f, attr-instance, few]]]]"
299,299,299,299,383,1384,alternative-fur-deutschland,Und sie finden Abtreibung schlecht.,4_short,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=sie 2:=finden 3:=Abtreibung 4:=schlecht.,1,,And they think abortion is bad.,['# ::snt And they think abortion is bad.\n(a / and\n      :op2 (t / think-01\n            :ARG0 (t2 / they)\n            :ARG1 (b / bad-07\n                  :ARG1 (a2 / abort-01))))'],"[a, attr-instance, and, attr-op2, [t, attr-instance, think_01, attr-arg0, [t2, attr-instance, they], attr-arg1, [b, attr-instance, bad_07, attr-arg1, [a2, attr-instance, abort_01]]]]"
300,300,300,300,384,1385,alternative-fur-deutschland,Und sie wollen eine Direkte Demokratie haben.,5_short,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=sie 2:=wollen 3:=eine 4:=Direkte 5:=Demokratie 6:=haben.,1,,And they want to have direct democracy.,['# ::snt And they want to have direct democracy.\n(a / and\n      :op2 (w / want-01\n            :ARG0 (t / they)\n            :ARG1 (h / have-03\n                  :ARG0 t\n                  :ARG1 (d / democracy\n                        :ARG1-of (d2 / direct-02)))))'],"[a, attr-instance, and, attr-op2, [w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [h, attr-instance, have_03, attr-arg0, t, attr-arg1, [d, attr-instance, democracy, attr-arg1_of, [d2, attr-instance, direct_02]]]]]"
301,301,301,301,385,1386,alternative-fur-deutschland,Und sie finden Ehe für alle schlecht.,6_short,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=sie 2:=finden 3:=Ehe 4:=für 5:=alle 6:=schlecht.,1,,And they think marriage for all is bad.,['# ::snt And they think marriage for all is bad.\n(a / and\n      :op2 (t / think-01\n            :ARG0 (t2 / they)\n            :ARG1 (b / bad-07\n                  :ARG1 (m / marry-01\n                        :mod (f / for-all)))))'],"[a, attr-instance, and, attr-op2, [t, attr-instance, think_01, attr-arg0, [t2, attr-instance, they], attr-arg1, [b, attr-instance, bad_07, attr-arg1, [m, attr-instance, marry_01, attr-mod, [f, attr-instance, for_all]]]]]"
302,302,302,302,386,1387,alternative-fur-deutschland,Viele Politiker der AfD sind Populisten.,7_short,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Viele 1:=Politiker 2:=der 3:=AfD 4:=sind 5:=Populisten.,1,,Many AfD politicians are populists.,"['# ::snt Many AfD politicians are populists.\n(p / politician\n      :mod (p2 / political-party\n            :name (n / name\n                  :op1 ""AfD""))\n      :quant (m / many)\n      :mod (p3 / populist))']","[p, attr-instance, politician, attr-mod, [p2, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""afd""]], attr-quant, [m, attr-instance, many], attr-mod, [p3, attr-instance, populist]]"
303,303,303,303,387,1388,alternative-fur-deutschland,Sie haben sehr viele verschiedene Meinungen.,8_short,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Sie 1:=haben 2:=sehr 3:=viele 4:=verschiedene 5:=Meinungen.,1,,They have many different opinions.,['# ::snt They have many different opinions.\n(o / opine-01\n      :ARG0 (t / they)\n      :quant (m / many)\n      :ARG1-of (d / differ-02))'],"[o, attr-instance, opine_01, attr-arg0, [t, attr-instance, they], attr-quant, [m, attr-instance, many], attr-arg1_of, [d, attr-instance, differ_02]]"
304,304,304,304,388,1389,alternative-fur-deutschland,Und sie haben wenige Ideen für Ver-besserungen.,9_short,Politik|Aus_den_Nachrichten|Partei_in_Deutschland,2016-10-08T08:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=sie 2:=haben 3:=wenige 4:=Ideen 5:=für 6:=Ver-besserungen.,2,"[[1, 2, 3], [5, 6]]",And they have few ideas for improvements.,['# ::snt And they have few ideas for improvements.\n(a / and\n      :op2 (h / have-03\n            :ARG0 (t / they)\n            :ARG1 (ii / idea\n                  :quant (f / few)\n                  :topic (ii2 / improve-01))))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [ii, attr-instance, idea, attr-quant, [f, attr-instance, few], attr-topic, [ii2, attr-instance, improve_01]]]]"
305,305,305,305,389,1390,alternative,Beispiel:  \newline Hans und Claudia wollen etwas zusammen machen.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-08-27T05:12:11Z,0061a5419063d58697cea347295a4554,0:=Beispiel: 1:= 2:=\newline 3:=Hans 4:=und 5:=Claudia 6:=wollen 7:=etwas 8:=zusammen 9:=machen.,1,,Example: \newline Hans and Claudia want to do something together.,"['# ::snt Example: \\newline Hans and Claudia want to do something together.\n(e / exemplify-01\n      :ARG0 (w / want-01\n            :ARG0 (a / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 ""Newline""\n                              :op2 ""Hans""))\n                  :op2 (p2 / person\n                        :name (n2 / name\n                              :op1 ""Claudia"")))\n            :ARG1 (d / do-02\n                  :ARG0 a\n                  :ARG1 (s / something)\n                  :mod (t / together))))']","[e, attr-instance, exemplify_01, attr-arg0, [w, attr-instance, want_01, attr-arg0, [a, attr-instance, and, attr-op1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""newline"", attr-op2, ""hans""]], attr-op2, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""claudia""]]], attr-arg1, [d, attr-instance, do_02, attr-arg0, a, attr-arg1, [s, attr-instance, something], attr-mod, [t, attr-instance, together]]]]"
306,306,306,306,390,1391,alternative,"Hans macht den Vorschlag, ins Kino gehen.",1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-08-27T05:12:11Z,0061a5419063d58697cea347295a4554,"0:=Hans 1:=macht 2:=den 3:=Vorschlag, 4:=ins 5:=Kino 6:=gehen.",2,"[[0, 1, 3], [4, 5, 6]]",Hans suggests going to the cinema.,"['# ::snt Hans suggests going to the cinema.\n(s / suggest-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Hans""))\n      :ARG1 (g / go-02\n            :ARG4 (c / cinema)))']","[s, attr-instance, suggest_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""hans""]], attr-arg1, [g, attr-instance, go_02, attr-arg4, [c, attr-instance, cinema]]]"
307,307,307,307,391,1392,alternative,Und er bietet eine Alternative an.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-08-27T05:12:11Z,0061a5419063d58697cea347295a4554,0:=Und 1:=er 2:=bietet 3:=eine 4:=Alternative 5:=an.,1,,And he offers an alternative.,['# ::snt And he offers an alternative.\n(a / and\n      :op2 (o / offer-01\n            :ARG0 (h / he)\n            :ARG1 (a2 / alternative)))'],"[a, attr-instance, and, attr-op2, [o, attr-instance, offer_01, attr-arg0, [h, attr-instance, he], attr-arg1, [a2, attr-instance, alternative]]]"
308,308,308,308,392,1393,alternative,Die Alternative ist fernsehen.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-08-27T05:12:11Z,0061a5419063d58697cea347295a4554,0:=Die 1:=Alternative 2:=ist 3:=fernsehen.,1,,The alternative is watching television.,['# ::snt The alternative is watching television.\n(a / alternative\n      :domain (w / watch-01\n            :ARG1 (t / television)))'],"[a, attr-instance, alternative, attr-domain, [w, attr-instance, watch_01, attr-arg1, [t, attr-instance, television]]]"
309,309,309,309,393,1394,alternative,Claudia kann sich entscheiden.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-08-27T05:12:11Z,0061a5419063d58697cea347295a4554,0:=Claudia 1:=kann 2:=sich 3:=entscheiden.,1,,Claudia can decide.,"['# ::snt Claudia can decide.\n(p / possible-01\n      :ARG1 (d / decide-01\n            :ARG0 (c / country\n                  :name (n / name\n                        :op1 ""Claudia""))))']","[p, attr-instance, possible_01, attr-arg1, [d, attr-instance, decide_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""claudia""]]]]"
310,310,310,310,396,1397,alternative,Das Gegenteil von Alternative ist Alternativ-losig-keit.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-08-27T05:12:11Z,0061a5419063d58697cea347295a4554,0:=Das 1:=Gegenteil 2:=von 3:=Alternative 4:=ist 5:=Alternativ-losig-keit.,1,,The opposite of alternative is lack of alternatives.,['# ::snt The opposite of alternative is lack of alternatives.\n(o / opposite-01\n      :ARG1 (a / alternative)\n      :ARG2 (l / lack-01\n            :ARG1 (a2 / alternative)))'],"[o, attr-instance, opposite_01, attr-arg1, [a, attr-instance, alternative], attr-arg2, [l, attr-instance, lack_01, attr-arg1, [a2, attr-instance, alternative]]]"
311,311,311,311,397,1398,alternative,"Eine Alternative ist, \newline wenn man 2 Möglichkeiten hat.",0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-08-27T05:12:11Z,0061a5419063d58697cea347295a4554,"0:=Eine 1:=Alternative 2:=ist, 3:=\newline 4:=wenn 5:=man 6:=2 7:=Möglichkeiten 8:=hat.",2,"[[1, 2], [4, 5, 6, 7, 8]]",An alternative is \newline if you have two options.,['# ::snt An alternative is \\newline if you have two options.\n(a / alternative\n      :domain (l / line\n            :mod (n / newline))\n      :condition (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (o / option\n                  :quant 2)))'],"[a, attr-instance, alternative, attr-domain, [l, attr-instance, line, attr-mod, [n, attr-instance, newline]], attr-condition, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [o, attr-instance, option, attr-quant, 2]]]"
312,312,312,312,398,1399,alternative,Man kann zwischen mehreren Sachen entscheiden.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-08-27T05:12:11Z,0061a5419063d58697cea347295a4554,0:=Man 1:=kann 2:=zwischen 3:=mehreren 4:=Sachen 5:=entscheiden.,1,,You can choose between several things.,['# ::snt You can choose between several things.\n(p / possible-01\n      :ARG1 (c / choose-01\n            :ARG0 (y / you)\n            :ARG1 (b / between\n                  :op1 (t / thing\n                        :quant (s / several)))))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, choose_01, attr-arg0, [y, attr-instance, you], attr-arg1, [b, attr-instance, between, attr-op1, [t, attr-instance, thing, attr-quant, [s, attr-instance, several]]]]]"
313,313,313,313,399,1400,alternative,Und man hat mehrere Möglichkeiten.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-08-27T05:12:11Z,0061a5419063d58697cea347295a4554,0:=Und 1:=man 2:=hat 3:=mehrere 4:=Möglichkeiten.,1,,And you have several options.,['# ::snt And you have several options.\n(a / and\n      :op2 (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (o / option\n                  :quant (s / several))))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [o, attr-instance, option, attr-quant, [s, attr-instance, several]]]]"
314,314,314,314,401,1405,altersarmut,Oder sie brauchen Geld vom Staat.,4_long,Politik|Arbeit|Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2017-12-24T13:05:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=sie 2:=brauchen 3:=Geld 4:=vom 5:=Staat.,1,,Or they need money from the state.,['# ::snt Or they need money from the state.\n(o / or\n      :op2 (n / need-01\n            :ARG0 (t / they)\n            :ARG1 (m / money)\n            :ARG2 (s / state)))'],"[o, attr-instance, or, attr-op2, [n, attr-instance, need_01, attr-arg0, [t, attr-instance, they], attr-arg1, [m, attr-instance, money], attr-arg2, [s, attr-instance, state]]]"
315,315,315,315,402,1406,altersarmut,Weil sie zu wenig Geld zum Leben haben.,5_long,Politik|Arbeit|Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2017-12-24T13:05:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Weil 1:=sie 2:=zu 3:=wenig 4:=Geld 5:=zum 6:=Leben 7:=haben.,1,,Because they don't have enough money to live on.,"[""# ::snt Because they don't have enough money to live on.\n(c / cause-01\n      :ARG0 (h / have-03\n            :polarity -\n            :ARG0 (t / they)\n            :ARG1 (m / money\n                  :ARG1-of (h2 / have-quant-91\n                        :ARG3 (e / enough)\n                        :ARG6 (l / live-on-03\n                              :ARG1 t)))))""]","[c, attr-instance, cause_01, attr-arg0, [h, attr-instance, have_03, attr-polarity, negative, attr-arg0, [t, attr-instance, they], attr-arg1, [m, attr-instance, money, attr-arg1_of, [h2, attr-instance, have_quant_91, attr-arg3, [e, attr-instance, enough], attr-arg6, [l, attr-instance, live_on_03, attr-arg1, t]]]]]"
316,316,316,316,403,1408,altersarmut,Die Renten-kassen haben wenig Geld.,7_long,Politik|Arbeit|Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2017-12-24T13:05:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Renten-kassen 2:=haben 3:=wenig 4:=Geld.,1,,The pension funds have little money.,['# ::snt The pension funds have little money.\n(h / have-03\n      :ARG0 (f / fund\n            :mod (p / pension))\n      :ARG1 (m / money\n            :quant (l / little)))'],"[h, attr-instance, have_03, attr-arg0, [f, attr-instance, fund, attr-mod, [p, attr-instance, pension]], attr-arg1, [m, attr-instance, money, attr-quant, [l, attr-instance, little]]]"
317,317,317,317,404,1413,alter,Jeder Mensch wird alt.,0_long,Seiten_mit_defekten_Dateilinks|Biologie,2012-11-03T22:15:00Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Jeder 1:=Mensch 2:=wird 3:=alt.,1,,Everyone grows old.,['# ::snt Everyone grows old.\n(g / grow-02\n      :ARG1 (e / everyone)\n      :ARG2 (o / old))'],"[g, attr-instance, grow_02, attr-arg1, [e, attr-instance, everyone], attr-arg2, [o, attr-instance, old]]"
318,318,318,318,405,1414,alter,"Das hießt, \newline ein Mensch wird älter.",1_long,Seiten_mit_defekten_Dateilinks|Biologie,2012-11-03T22:15:00Z,a6e7bfd89d5771b450c4ab0f5c2996e5,"0:=Das 1:=hießt, 2:=\newline 3:=ein 4:=Mensch 5:=wird 6:=älter.",1,,"This means, \newline a person gets older.","['# ::snt This means, \\newline a person gets older.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (g / get-03\n            :ARG1 (p / person)\n            :ARG2 (o / old)))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [g, attr-instance, get_03, attr-arg1, [p, attr-instance, person], attr-arg2, [o, attr-instance, old]]]"
319,319,319,319,406,1418,alter,Das ist das biographische Alter.,5_long,Seiten_mit_defekten_Dateilinks|Biologie,2012-11-03T22:15:00Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Das 1:=ist 2:=das 3:=biographische 4:=Alter.,1,,This is the biographical age.,['# ::snt This is the biographical age.\n(a / age\n      :mod (b / biography)\n      :domain (t / this))'],"[a, attr-instance, age, attr-mod, [b, attr-instance, biography], attr-domain, [t, attr-instance, this]]"
320,320,320,320,408,1420,alter,Es gibt eine Wissenschaft des Alters: die Gerontologie.,7_long,Seiten_mit_defekten_Dateilinks|Biologie,2012-11-03T22:15:00Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Es 1:=gibt 2:=eine 3:=Wissenschaft 4:=des 5:=Alters: 6:=die 7:=Gerontologie.,1,,There is a science of aging: gerontology.,['# ::snt There is a science of aging: gerontology.\n(s / science\n      :topic (a / age-01)\n      :mod (g / gerontology))'],"[s, attr-instance, science, attr-topic, [a, attr-instance, age_01], attr-mod, [g, attr-instance, gerontology]]"
321,321,321,321,409,1421,alter,Alter ist ein Lebens-abschnitt.,0_short,Seiten_mit_defekten_Dateilinks|Biologie,2012-11-03T22:15:00Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Alter 1:=ist 2:=ein 3:=Lebens-abschnitt.,1,,Old age is a phase of life.,['# ::snt Old age is a phase of life.\n(p / phase\n      :time-of (l / live-01)\n      :domain (a / age-01\n            :mod (o / old)))'],"[p, attr-instance, phase, attr-time_of, [l, attr-instance, live_01], attr-domain, [a, attr-instance, age_01, attr-mod, [o, attr-instance, old]]]"
322,322,322,322,410,1423,alter,Das Alter einer Person wird in Jahren angegeben.,2_short,Seiten_mit_defekten_Dateilinks|Biologie,2012-11-03T22:15:00Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Das 1:=Alter 2:=einer 3:=Person 4:=wird 5:=in 6:=Jahren 7:=angegeben.,1,,The age of a person is given in years.,['# ::snt The age of a person is given in years.\n(g / give-01\n      :ARG1 (t / temporal-quantity\n            :quant 1\n            :unit (y / year)))'],"[g, attr-instance, give_01, attr-arg1, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [y, attr-instance, year]]]"
323,323,323,323,411,1424,altes-agypten,Im alten Ägypten haben viele Pharaonen ge-lebt.,0_long,Geschichte,2020-09-17T09:34:33Z,46c3c87395bab21fd30e35b682a73fd0,0:=Im 1:=alten 2:=Ägypten 3:=haben 4:=viele 5:=Pharaonen 6:=ge-lebt.,1,,Many pharaohs lived in ancient Egypt.,"['# ::snt Many pharaohs lived in ancient Egypt.\n(l / live-01\n      :ARG0 (p / pharaoh\n            :quant (m / many))\n      :location (c / country\n            :name (n / name\n                  :op1 ""Egypt"")\n            :mod (a / ancient)))']","[l, attr-instance, live_01, attr-arg0, [p, attr-instance, pharaoh, attr-quant, [m, attr-instance, many]], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""egypt""], attr-mod, [a, attr-instance, ancient]]]"
324,324,324,324,412,1425,altes-agypten,Den Menschen ging es sehr gut.,1_long,Geschichte,2020-09-17T09:34:33Z,46c3c87395bab21fd30e35b682a73fd0,0:=Den 1:=Menschen 2:=ging 3:=es 4:=sehr 5:=gut.,1,,The people were doing very well.,['# ::snt The people were doing very well.\n(w / well-09\n      :ARG1 (p / person)\n      :degree (v / very))'],"[w, attr-instance, well_09, attr-arg1, [p, attr-instance, person], attr-degree, [v, attr-instance, very]]"
325,325,325,325,413,1426,altes-agypten,Weil sie viel Wasser aus dem Nil-fluß hatten.,2_long,Geschichte,2020-09-17T09:34:33Z,46c3c87395bab21fd30e35b682a73fd0,0:=Weil 1:=sie 2:=viel 3:=Wasser 4:=aus 5:=dem 6:=Nil-fluß 7:=hatten.,2,"[[0, 1, 2, 3, 7], [4, 6]]",Because they had a lot of water from the Nile River.,"['# ::snt Because they had a lot of water from the Nile River.\n(c / cause-01\n      :ARG0 (h / have-03\n            :ARG0 (t / they)\n            :ARG1 (w / water\n                  :quant (l / lot)\n                  :source (r / river\n                        :name (n / name\n                              :op1 ""Nile""\n                              :op2 ""River"")))))']","[c, attr-instance, cause_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [w, attr-instance, water, attr-quant, [l, attr-instance, lot], attr-source, [r, attr-instance, river, attr-name, [n, attr-instance, name, attr-op1, ""nile"", attr-op2, ""river""]]]]]"
326,326,326,326,414,1427,altes-agypten,Durch das Wasser hat es immer eine gute Ernte gegeben.,3_long,Geschichte,2020-09-17T09:34:33Z,46c3c87395bab21fd30e35b682a73fd0,0:=Durch 1:=das 2:=Wasser 3:=hat 4:=es 5:=immer 6:=eine 7:=gute 8:=Ernte 9:=gegeben.,2,"[[0, 2], [3, 4, 7, 8, 9]]",The water has always resulted in a good harvest.,['# ::snt The water has always resulted in a good harvest.\n(r / result-01\n      :ARG1 (w / water)\n      :ARG2 (h / harvest-01\n            :ARG1-of (g / good-02))\n      :time (a / always))'],"[r, attr-instance, result_01, attr-arg1, [w, attr-instance, water], attr-arg2, [h, attr-instance, harvest_01, attr-arg1_of, [g, attr-instance, good_02]], attr-time, [a, attr-instance, always]]"
327,327,327,327,415,1428,altes-agypten,Das Alte Ägypten war eine Gesellschaft.,0_short,Geschichte,2020-09-17T09:34:33Z,46c3c87395bab21fd30e35b682a73fd0,0:=Das 1:=Alte 2:=Ägypten 3:=war 4:=eine 5:=Gesellschaft.,1,,Ancient Egypt was a society.,"['# ::snt Ancient Egypt was a society.\n(s / society\n      :domain (c / country\n            :name (n / name\n                  :op1 ""Egypt"")\n            :mod (a / ancient)))']","[s, attr-instance, society, attr-domain, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""egypt""], attr-mod, [a, attr-instance, ancient]]]"
328,328,328,328,416,1429,altes-agypten,Es hat sie vor sehr langer Zeit gegeben.,1_short,Geschichte,2020-09-17T09:34:33Z,46c3c87395bab21fd30e35b682a73fd0,0:=Es 1:=hat 2:=sie 3:=vor 4:=sehr 5:=langer 6:=Zeit 7:=gegeben.,1,,It existed a very long time ago.,['# ::snt It existed a very long time ago.\n(e / exist-01\n      :ARG1 (ii / it)\n      :time (b / before\n            :op1 (n / now)\n            :quant (t / time\n                  :ARG1-of (l / long-03\n                        :degree (v / very)))))'],"[e, attr-instance, exist_01, attr-arg1, [ii, attr-instance, it], attr-time, [b, attr-instance, before, attr-op1, [n, attr-instance, now], attr-quant, [t, attr-instance, time, attr-arg1_of, [l, attr-instance, long_03, attr-degree, [v, attr-instance, very]]]]]"
329,329,329,329,418,1431,altestenrat,Einen Ältestenrat gibt es im: • Deutscher Bundestag,0_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Einen 1:=Ältestenrat 2:=gibt 3:=es 4:=im: 5:=• 6:=Deutscher 7:=Bundestag,1,,There is a Council of Elders in: • German Bundestag,"['# ::snt There is a Council of Elders in: • German Bundestag\n(b / be-located-at-91\n      :ARG1 (o / organization\n            :name (n / name\n                  :op1 ""Council""\n                  :op2 ""of""\n                  :op3 ""Elders""))\n      :ARG2 (l / location\n            :name (n2 / name\n                  :op1 ""German""\n                  :op2 ""Bundestag"")))']","[b, attr-instance, be_located_at_91, attr-arg1, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""council"", attr-op2, ""of"", attr-op3, ""elders""]], attr-arg2, [l, attr-instance, location, attr-name, [n2, attr-instance, name, attr-op1, ""german"", attr-op2, ""bundestag""]]]"
330,330,330,330,419,1432,altestenrat,Einen Ältestenrat gibt es im: • Landesparlament,1_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Einen 1:=Ältestenrat 2:=gibt 3:=es 4:=im: 5:=• 6:=Landesparlament,1,,There is a Council of Elders in: • State Parliament,"['# ::snt There is a Council of Elders in: • State Parliament\n(b / be-located-at-91\n      :ARG1 (o / organization\n            :name (n / name\n                  :op1 ""Council""\n                  :op2 ""of""\n                  :op3 ""Elders""))\n      :ARG2 (g / government-organization\n            :name n\n            :op1 ""State""\n            :op2 ""Parliament""))']","[b, attr-instance, be_located_at_91, attr-arg1, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""council"", attr-op2, ""of"", attr-op3, ""elders""]], attr-arg2, [g, attr-instance, government_organization, attr-name, n, attr-op1, ""state"", attr-op2, ""parliament""]]"
331,331,331,331,420,1433,altestenrat,Eine Personen vom Ältestenrat muss kein bestimmtes Alter haben.,2_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Eine 1:=Personen 2:=vom 3:=Ältestenrat 4:=muss 5:=kein 6:=bestimmtes 7:=Alter 8:=haben.,1,,A person on the Council of Elders does not have to be of a specific age.,"['# ::snt A person on the Council of Elders does not have to be of a specific age.\n(o / obligate-01\n      :polarity -\n      :ARG2 (a / age-01\n            :ARG1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / government-organization\n                              :name (n / name\n                                    :op1 ""Council""\n                                    :op2 ""of""\n                                    :op3 ""Elders""))))\n            :ARG1-of (s / specific-02)))']","[o, attr-instance, obligate_01, attr-polarity, negative, attr-arg2, [a, attr-instance, age_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg1, [g, attr-instance, government_organization, attr-name, [n, attr-instance, name, attr-op1, ""council"", attr-op2, ""of"", attr-op3, ""elders""]]]], attr-arg1_of, [s, attr-instance, specific_02]]]"
332,332,332,332,421,1434,altestenrat,Diese Personen müssen Erfahrung haben.,3_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Diese 1:=Personen 2:=müssen 3:=Erfahrung haben.,1,,These people must have experience.,['# ::snt These people must have experience.\n(ii / infer-01\n      :ARG1 (e / experience-01\n            :ARG0 (p / person\n                  :mod (t / this))))'],"[ii, attr-instance, infer_01, attr-arg1, [e, attr-instance, experience_01, attr-arg0, [p, attr-instance, person, attr-mod, [t, attr-instance, this]]]]"
333,333,333,333,423,1436,altestenrat,Beispiel Deutscher Bundestag: \newline Der Ältestenrat sagt im Bundestag was auf der Tages-ordnung steht.,5_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Beispiel 1:=Deutscher 2:=Bundestag: 3:=\newline 4:=Der 5:=Ältestenrat 6:=sagt 7:=im 8:=Bundestag 9:=was 10:=auf 11:=der 12:=Tages-ordnung 13:=steht.,4,"[[0, 1, 2], [5, 6], [7, 8], [9, 10, 12, 13]]",Example of the German Bundestag: \newline The Council of Elders decides what is on the agenda in the Bundestag.,"['# ::snt Example of the German Bundestag: \\newline The Council of Elders decides what is on the agenda in the Bundestag.\n(e / exemplify-01\n      :ARG0 (d / decide-01\n            :ARG0 (o / organization\n                  :name (n / name\n                        :op1 ""Council""\n                        :op2 ""of""\n                        :op3 ""Elders""))\n            :ARG1 (t / thing\n                  :ARG1-of (a / agenda-01)\n                  :location (g / government-organization\n                        :name (n2 / name\n                              :op1 ""Bundestag"")\n                        :mod (c / country\n                              :name (n3 / name\n                                    :op1 ""Germany"")))))\n      :ARG1 g)']","[e, attr-instance, exemplify_01, attr-arg0, [d, attr-instance, decide_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""council"", attr-op2, ""of"", attr-op3, ""elders""]], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [a, attr-instance, agenda_01], attr-location, [g, attr-instance, government_organization, attr-name, [n2, attr-instance, name, attr-op1, ""bundestag""], attr-mod, [c, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""germany""]]]]], attr-arg1, g]"
334,334,334,334,424,1437,altestenrat,Und er unterstützt den Bundestagspräsidenten bei seiner Arbeit.,6_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=er 2:=unterstützt 3:=den 4:=Bundestagspräsidenten 5:=bei 6:=seiner 7:=Arbeit.,2,"[[1, 2, 4], [5, 6, 7]]",And he supports the President of the Bundestag in his work.,"['# ::snt And he supports the President of the Bundestag in his work.\n(a / and\n      :op2 (s / support-01\n            :ARG0 (h / he)\n            :ARG1 (p / person\n                  :ARG0-of (h2 / have-org-role-91\n                        :ARG1 (p2 / political-party\n                              :name (n / name\n                                    :op1 ""Bundestag""))\n                        :ARG2 (p3 / president)))\n            :topic (w / work-01\n                  :ARG0 p)))']","[a, attr-instance, and, attr-op2, [s, attr-instance, support_01, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_org_role_91, attr-arg1, [p2, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""bundestag""]], attr-arg2, [p3, attr-instance, president]]], attr-topic, [w, attr-instance, work_01, attr-arg0, p]]]"
335,335,335,335,425,1438,altestenrat,Der Ältestenrat schaut das alle Arbeiten gemacht werden.,7_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Ältestenrat 2:=schaut 3:=das 4:=alle 5:=Arbeiten 6:=gemacht 7:=werden.,2,"[[1, 2], [3, 4, 5, 6, 7]]",The Council of Elders ensures that all work is done.,"['# ::snt The Council of Elders ensures that all work is done.\n(e / ensure-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 ""Council""\n                  :op2 ""of""\n                  :op3 ""Elders""))\n      :ARG1 (d / do-02\n            :ARG1 (w / work-01\n                  :mod (a / all))))']","[e, attr-instance, ensure_01, attr-arg0, [g, attr-instance, government_organization, attr-name, [n, attr-instance, name, attr-op1, ""council"", attr-op2, ""of"", attr-op3, ""elders""]], attr-arg1, [d, attr-instance, do_02, attr-arg1, [w, attr-instance, work_01, attr-mod, [a, attr-instance, all]]]]"
336,336,336,336,426,1439,altestenrat,Und macht Termine für Sitzungen.,8_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=macht 2:=Termine 3:=für 4:=Sitzungen.,1,,And makes appointments for meetings.,['# ::snt And makes appointments for meetings.\n(a / and\n      :op2 (m / make-01\n            :ARG1 (a2 / appointment-02\n                  :purpose (m2 / meet-03))))'],"[a, attr-instance, and, attr-op2, [m, attr-instance, make_01, attr-arg1, [a2, attr-instance, appointment_02, attr-purpose, [m2, attr-instance, meet_03]]]]"
337,337,337,337,427,1440,altestenrat,Der Ältestenrat hilft auch wenn es Streit gibt.,9_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Ältestenrat 2:=hilft 3:=auch 4:=wenn 5:=es 6:=Streit 7:=gibt.,2,"[[1, 2, 3], [4, 5, 6, 7]]",The Council of Elders also helps when there are disputes.,"['# ::snt The Council of Elders also helps when there are disputes.\n(h / help-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 ""Council""\n                  :op2 ""of""\n                  :op3 ""Elders""))\n      :mod (a / also)\n      :time (d / dispute-01))']","[h, attr-instance, help_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""council"", attr-op2, ""of"", attr-op3, ""elders""]], attr-mod, [a, attr-instance, also], attr-time, [d, attr-instance, dispute_01]]"
338,338,338,338,431,1444,altestenrat,"Weil der Ältestenrat sehr viele Aufgaben hat,",13_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,"0:=Weil 1:=der 2:=Ältestenrat 3:=sehr 4:=viele 5:=Aufgaben 6:=hat,",1,,"Because the Council of Elders has many tasks,","['# ::snt Because the Council of Elders has many tasks,\n(c / cause-01\n      :ARG0 (h / have-03\n            :ARG0 (o / organization\n                  :name (n / name\n                        :op1 ""Council""\n                        :op2 ""of""\n                        :op3 ""Elders""))\n            :ARG1 (t / task\n                  :quant (m / many))))']","[c, attr-instance, cause_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""council"", attr-op2, ""of"", attr-op3, ""elders""]], attr-arg1, [t, attr-instance, task, attr-quant, [m, attr-instance, many]]]]"
339,339,339,339,432,1445,altestenrat,kann er Unterstützung bekommen.,14_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=kann 1:=er 2:=Unterstützung 3:=bekommen.,1,,he can get support.,['# ::snt he can get support.\n(p / possible-01\n      :ARG1 (s / support-01\n            :ARG1 (h / he)))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, support_01, attr-arg1, [h, attr-instance, he]]]"
340,340,340,340,434,1447,altestenrat,Diese Experten-gruppen heißen: Kommissionenen.,16_long,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Diese 1:=Experten-gruppen 2:=heißen: 3:=Kommissionenen.,1,,These expert groups are called commissions.,['# ::snt These expert groups are called commissions.\n(c / call-01\n      :ARG1 (g / group\n            :ARG1-of (e / expert-01)\n            :mod (t / this))\n      :ARG2 (c2 / commission))'],"[c, attr-instance, call_01, attr-arg1, [g, attr-instance, group, attr-arg1_of, [e, attr-instance, expert_01], attr-mod, [t, attr-instance, this]], attr-arg2, [c2, attr-instance, commission]]"
341,341,341,341,435,1448,altestenrat,Der Ältestenrat ist eine Politiker-gruppe.,0_short,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Ältestenrat 2:=ist 3:=eine 4:=Politiker-gruppe.,1,,The Council of Elders is a group of politicians.,"['# ::snt The Council of Elders is a group of politicians.\n(g / group\n      :consist-of (p / politician)\n      :domain (o / organization\n            :name (n / name\n                  :op1 ""Council""\n                  :op2 ""of""\n                  :op3 ""Elders"")))']","[g, attr-instance, group, attr-consist_of, [p, attr-instance, politician], attr-domain, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""council"", attr-op2, ""of"", attr-op3, ""elders""]]]"
342,342,342,342,436,1449,altestenrat,Die Gruppe kümmert sich um Fragen für die Geschäfts-ordnung.,1_short,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Gruppe 2:=kümmert 3:=sich 4:=um 5:=Fragen 6:=für 7:=die 8:=Geschäfts-ordnung.,2,"[[1, 2, 3, 4, 5], [6, 8]]",The group deals with questions relating to the rules of procedure.,['# ::snt The group deals with questions relating to the rules of procedure.\n(d / deal-01\n      :ARG0 (g / group)\n      :ARG2 (q / question-01\n            :ARG1-of (r / relate-01\n                  :ARG2 (r2 / rule-01\n                        :ARG1 (p / procedure)))))'],"[d, attr-instance, deal_01, attr-arg0, [g, attr-instance, group], attr-arg2, [q, attr-instance, question_01, attr-arg1_of, [r, attr-instance, relate_01, attr-arg2, [r2, attr-instance, rule_01, attr-arg1, [p, attr-instance, procedure]]]]]"
343,343,343,343,437,1450,altestenrat,Der Chef der Gruppe ist der Parlaments-präsident.,2_short,Recht_und_Gesetz|Politik|Seiten_mit_defekten_Dateilinks,2015-05-17T14:32:45Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Chef 2:=der 3:=Gruppe 4:=ist 5:=der 6:=Parlaments-präsident.,1,,The head of the group is the President of Parliament.,"['# ::snt The head of the group is the President of Parliament.\n(h / head-01\n      :ARG0 (p / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG1 (g / government-organization\n                        :name (n / name\n                              :op1 ""Parliament""))\n                  :ARG2 (p2 / president)))\n      :ARG1 (g2 / group))']","[h, attr-instance, head_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_org_role_91, attr-arg1, [g, attr-instance, government_organization, attr-name, [n, attr-instance, name, attr-op1, ""parliament""]], attr-arg2, [p2, attr-instance, president]]], attr-arg1, [g2, attr-instance, group]]"
344,344,344,344,438,1451,altonaer-fischmarkt,Auf dem Altonaer Fisch-markt kann man viele Sachen kaufen.,0_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-02-08T08:19:21Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Auf 1:=dem 2:=Altonaer 3:=Fisch-markt 4:=kann 5:=man 6:=viele 7:=Sachen 8:=kaufen.,1,,You can buy many things at the Altona fish market.,"['# ::snt You can buy many things at the Altona fish market.\n(p / possible-01\n      :ARG1 (b / buy-01\n            :ARG0 (y / you)\n            :ARG1 (t / thing\n                  :quant (m / many))\n            :ARG3 (m2 / market\n                  :mod (f / fish)\n                  :location (c / city\n                        :name (n / name\n                              :op1 ""Altona"")))))']","[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, buy_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-quant, [m, attr-instance, many]], attr-arg3, [m2, attr-instance, market, attr-mod, [f, attr-instance, fish], attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""altona""]]]]]"
345,345,345,345,440,1453,altonaer-fischmarkt,Es ist ein sehr großer Markt.,2_long,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-02-08T08:19:21Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Es 1:=ist 2:=ein 3:=sehr 4:=großer 5:=Markt.,1,,It is a very big market.,['# ::snt It is a very big market.\n(m / market\n      :mod (b / big\n            :degree (v / very))\n      :domain (ii / it))'],"[m, attr-instance, market, attr-mod, [b, attr-instance, big, attr-degree, [v, attr-instance, very]], attr-domain, [ii, attr-instance, it]]"
346,346,346,346,443,1456,altonaer-fischmarkt,Der Altonaer Fisch-markt ist ein sehr großer Markt.,0_short,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-02-08T08:19:21Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Der 1:=Altonaer 2:=Fisch-markt 3:=ist 4:=ein 5:=sehr 6:=großer 7:=Markt.,1,,The Altona fish market is a very large market.,"['# ::snt The Altona fish market is a very large market.\n(m / market\n      :mod (l / large\n            :degree (v / very))\n      :domain (m2 / market\n            :mod (f / fish\n                  :mod (l2 / local-region\n                        :name (n / name\n                              :op1 ""Altona"")))))']","[m, attr-instance, market, attr-mod, [l, attr-instance, large, attr-degree, [v, attr-instance, very]], attr-domain, [m2, attr-instance, market, attr-mod, [f, attr-instance, fish, attr-mod, [l2, attr-instance, local_region, attr-name, [n, attr-instance, name, attr-op1, ""altona""]]]]]"
347,347,347,347,444,1457,altonaer-fischmarkt,Er ist in der Stadt Hamburg.,1_short,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-02-08T08:19:21Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Er 1:=ist 2:=in 3:=der 4:=Stadt 5:=Hamburg.,1,,He is in the city of Hamburg.,"['# ::snt He is in the city of Hamburg.\n(h / he\n      :location (c / city\n            :name (n / name\n                  :op1 ""Hamburg"")))']","[h, attr-instance, he, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""hamburg""]]]"
348,348,348,348,446,1460,altonaer-fischmarkt,Der Markt ist bekannt für seine Markt-schreier.,4_short,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-02-08T08:19:21Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Der 1:=Markt 2:=ist 3:=bekannt 4:=für 5:=seine 6:=Markt-schreier.,1,,The market is known for its market criers.,['# ::snt The market is known for its market criers.\n(k / know-02\n      :ARG1 (m / market)\n      :ARG3 (c / courier\n            :mod (m2 / market)\n            :poss m))'],"[k, attr-instance, know_02, attr-arg1, [m, attr-instance, market], attr-arg3, [c, attr-instance, courier, attr-mod, [m2, attr-instance, market], attr-poss, m]]"
349,349,349,349,448,1462,altruismus,Altruismus ist ein lateinisches Wort.,0_short,Ohne_Kategorie,2010-06-12T06:40:06Z,7b5adf57ed2178795004f4c052333f37,0:=Altruismus 1:=ist 2:=ein 3:=lateinisches 4:=Wort.,1,,Altruism is a Latin word.,"['# ::snt Altruism is a Latin word.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""Latin""))\n      :domain (e / extremism))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""latin""]], attr-domain, [e, attr-instance, extremism]]"
350,350,350,350,449,1464,altstadt,Um die Alt-stadt herum ist neue Stadt ge-baut worden.,0_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Um 1:=die 2:=Alt-stadt 3:=herum 4:=ist 5:=neue 6:=Stadt 7:=ge-baut 8:=worden.,2,"[[0, 2, 3], [4, 5, 6, 7, 8]]",A new city has been built around the old town.,['# ::snt A new city has been built around the old town.\n(b / build-01\n      :ARG1 (c / city\n            :ARG1-of (n / new-01))\n      :location (a / around\n            :op1 (t / town\n                  :mod (o / old))))'],"[b, attr-instance, build_01, attr-arg1, [c, attr-instance, city, attr-arg1_of, [n, attr-instance, new_01]], attr-location, [a, attr-instance, around, attr-op1, [t, attr-instance, town, attr-mod, [o, attr-instance, old]]]]"
351,351,351,351,450,1465,altstadt,Die Alt-stadt soll an die alte Stadt erinnern.,1_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Alt-stadt 2:=soll 3:=an 4:=die 5:=alte 6:=Stadt 7:=erinnern.,1,,The old town is intended to remind people of the old city.,['# ::snt The old town is intended to remind people of the old city.\n(ii / intend-01\n      :ARG1 (r / remind-01\n            :ARG0 (t / town\n                  :mod (o / old))\n            :ARG1 (c / city\n                  :mod o)\n            :ARG2 (p / person)))'],"[ii, attr-instance, intend_01, attr-arg1, [r, attr-instance, remind_01, attr-arg0, [t, attr-instance, town, attr-mod, [o, attr-instance, old]], attr-arg1, [c, attr-instance, city, attr-mod, o], attr-arg2, [p, attr-instance, person]]]"
352,352,352,352,451,1466,altstadt,So wie sie früher einmal ausgesehen hat.,2_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=So 1:=wie 2:=sie 3:=früher 4:=einmal 5:=ausgesehen 6:=hat.,1,,The way it used to look.,['# ::snt The way it used to look.\n(l / look-02\n      :ARG0 (ii / it)\n      :ARG1 (w / way)\n      :time (u / use-03))'],"[l, attr-instance, look_02, attr-arg0, [ii, attr-instance, it], attr-arg1, [w, attr-instance, way], attr-time, [u, attr-instance, use_03]]"
353,353,353,353,452,1467,altstadt,Alt-städte werden oft verbessert.,3_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alt-städte 1:=werden 2:=oft 3:=verbessert.,1,,Old towns are often improved.,['# ::snt Old towns are often improved.\n(ii / improve-01\n      :ARG1 (t / town\n            :mod (o / old))\n      :frequency (o2 / often))'],"[ii, attr-instance, improve_01, attr-arg1, [t, attr-instance, town, attr-mod, [o, attr-instance, old]], attr-frequency, [o2, attr-instance, often]]"
354,354,354,354,453,1468,altstadt,Damit sie wieder so aus-sehen wie früher.,4_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=sie 2:=wieder 3:=so 4:=aus-sehen 5:=wie 6:=früher.,1,,So that they look like they used to.,['# ::snt So that they look like they used to.\n(c / cause-01\n      :ARG1 (l / look-02\n            :ARG0 (t / they)\n            :ARG1 (w / way\n                  :time (u / use-03))))'],"[c, attr-instance, cause_01, attr-arg1, [l, attr-instance, look_02, attr-arg0, [t, attr-instance, they], attr-arg1, [w, attr-instance, way, attr-time, [u, attr-instance, use_03]]]]"
355,355,355,355,454,1469,altstadt,Zum Beispiel wenn sie nach einem Krieg zerstört sind.,5_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=wenn 3:=sie 4:=nach 5:=einem 6:=Krieg 7:=zerstört 8:=sind.,2,"[[2, 3, 7, 8], [4, 6]]","For example, if they are destroyed after a war.","['# ::snt For example, if they are destroyed after a war.\n(e / exemplify-01\n      :condition (d / destroy-01\n            :ARG1 (t / they)\n            :time (a / after\n                  :op1 (w / war))))']","[e, attr-instance, exemplify_01, attr-condition, [d, attr-instance, destroy_01, attr-arg1, [t, attr-instance, they], attr-time, [a, attr-instance, after, attr-op1, [w, attr-instance, war]]]]"
356,356,356,356,455,1470,altstadt,Oft sind in einer Alt-stadt Motor-fahrzeuge verboten.,6_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oft 1:=sind 2:=in 3:=einer 4:=Alt-stadt 5:=Motor-fahrzeuge 6:=verboten.,2,"[[5, 6], [2, 4, 6]]",Motor vehicles are often prohibited in an old town.,['# ::snt Motor vehicles are often prohibited in an old town.\n(p / prohibit-01\n      :ARG1 (v / vehicle\n            :mod (m / motor))\n      :frequency (o / often)\n      :location (t / town\n            :mod (o2 / old)))'],"[p, attr-instance, prohibit_01, attr-arg1, [v, attr-instance, vehicle, attr-mod, [m, attr-instance, motor]], attr-frequency, [o, attr-instance, often], attr-location, [t, attr-instance, town, attr-mod, [o2, attr-instance, old]]]"
357,357,357,357,456,1471,altstadt,Eine Alt-stadt ist vor dem 20. Jahr-hundert gebaut.,7_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Alt-stadt 2:=ist 3:=vor 4:=dem 5:=20. 6:=Jahr-hundert 7:=gebaut.,1,,An old town is built before the 20th century.,['# ::snt An old town is built before the 20th century.\n(b / build-01\n      :ARG1 (t / town\n            :mod (o / old))\n      :time (b2 / before\n            :op1 (d / date-entity\n                  :century 20)))'],"[b, attr-instance, build_01, attr-arg1, [t, attr-instance, town, attr-mod, [o, attr-instance, old]], attr-time, [b2, attr-instance, before, attr-op1, [d, attr-instance, date_entity, attr-century, 20]]]"
358,358,358,358,457,1472,altstadt,Sie ist ein Teil vom Stadt-kern.,8_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=ist 2:=ein 3:=Teil 4:=vom 5:=Stadt-kern.,1,,It is part of the city center.,['# ::snt It is part of the city center.\n(h / have-part-91\n      :ARG1 (c / center\n            :part-of (c2 / city))\n      :ARG2 (ii / it))'],"[h, attr-instance, have_part_91, attr-arg1, [c, attr-instance, center, attr-part_of, [c2, attr-instance, city]], attr-arg2, [ii, attr-instance, it]]"
359,359,359,359,458,1473,altstadt,Es soll das Stadt-bild besser machen.,9_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=soll 2:=das 3:=Stadt-bild 4:=besser 5:=machen.,1,,It is intended to improve the cityscape.,['# ::snt It is intended to improve the cityscape.\n(ii / intend-01\n      :ARG1 (ii2 / improve-01\n            :ARG0 (ii3 / it)\n            :ARG1 (s / scape\n                  :mod (c / city))))'],"[ii, attr-instance, intend_01, attr-arg1, [ii2, attr-instance, improve_01, attr-arg0, [ii3, attr-instance, it], attr-arg1, [s, attr-instance, scape, attr-mod, [c, attr-instance, city]]]]"
360,360,360,360,459,1474,altstadt,Alt-städte sind wichtig.,10_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alt-städte 1:=sind 2:=wichtig.,1,,Old towns are important.,['# ::snt Old towns are important.\n(ii / important-01\n      :ARG1 (t / town\n            :mod (o / old)))'],"[ii, attr-instance, important_01, attr-arg1, [t, attr-instance, town, attr-mod, [o, attr-instance, old]]]"
361,361,361,361,460,1475,altstadt,Damit man sieht wie die Stadt früher ausgesehen hat.,11_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=man 2:=sieht 3:=wie 4:=die 5:=Stadt 6:=früher 7:=ausgesehen 8:=hat.,3,"[[0, 1, 2], [3, 5, 7, 8], [6]]",So you can see what the city used to look like.,['# ::snt So you can see what the city used to look like.\n(c / cause-01\n      :ARG1 (p / possible-01\n            :ARG1 (s / see-01\n                  :ARG0 (y / you)\n                  :ARG1 (t / thing\n                        :ARG2-of (l / look-02\n                              :ARG0 (c2 / city)\n                              :time (u / use-03))))))'],"[c, attr-instance, cause_01, attr-arg1, [p, attr-instance, possible_01, attr-arg1, [s, attr-instance, see_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-arg2_of, [l, attr-instance, look_02, attr-arg0, [c2, attr-instance, city], attr-time, [u, attr-instance, use_03]]]]]]"
362,362,362,362,461,1476,altstadt,Zum Beispiel wenn man als Tourist in eine Stadt kommt.,12_long,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=wenn 3:=man 4:=als 5:=Tourist 6:=in 7:=eine 8:=Stadt 9:=kommt.,2,"[[2, 3, 6, 8, 9], [4, 5]]","For example, when you come to a city as a tourist.","['# ::snt For example, when you come to a city as a tourist.\n(e / exemplify-01\n      :ARG0 (b / be-temporally-at-91\n            :ARG2 (c / come-01\n                  :ARG1 (y / you)\n                  :ARG4 (c2 / city)\n                  :manner (p / person\n                        :ARG0-of (t / tour-01)))))']","[e, attr-instance, exemplify_01, attr-arg0, [b, attr-instance, be_temporally_at_91, attr-arg2, [c, attr-instance, come_01, attr-arg1, [y, attr-instance, you], attr-arg4, [c2, attr-instance, city], attr-manner, [p, attr-instance, person, attr-arg0_of, [t, attr-instance, tour_01]]]]]"
363,363,363,363,462,1477,altstadt,Eine Altstadt ist ein Teil von einer Stadt.,0_short,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Altstadt 2:=ist 3:=ein 4:=Teil 5:=von 6:=einer 7:=Stadt.,1,,An old town is a part of a city.,['# ::snt An old town is a part of a city.\n(h / have-part-91\n      :ARG1 (c / city)\n      :ARG2 (t / town\n            :mod (o / old)))'],"[h, attr-instance, have_part_91, attr-arg1, [c, attr-instance, city], attr-arg2, [t, attr-instance, town, attr-mod, [o, attr-instance, old]]]"
364,364,364,364,463,1478,altstadt,Es ist der Teil der sehr alt ist.,1_short,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=ist 2:=der 3:=Teil 4:=der 5:=sehr 6:=alt 7:=ist.,1,,It is the part that is very old.,['# ::snt It is the part that is very old.\n(p / part\n      :mod (o / old\n            :degree (v / very)))'],"[p, attr-instance, part, attr-mod, [o, attr-instance, old, attr-degree, [v, attr-instance, very]]]"
365,365,365,365,465,1480,altstadt,Oder der Teil wo sehr alte Kirchen stehen.,3_short,Stadt,2019-05-13T09:38:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=der 2:=Teil 3:=wo 4:=sehr 5:=alte 6:=Kirchen 7:=stehen.,1,,Or the part where very old churches are.,['# ::snt Or the part where very old churches are.\n(o / or\n      :op2 (p / part\n            :location-of (c / church\n                  :mod (o2 / old\n                        :degree (v / very)))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, part, attr-location_of, [c, attr-instance, church, attr-mod, [o2, attr-instance, old, attr-degree, [v, attr-instance, very]]]]]"
366,366,366,366,467,1482,altweibersommer,Der Altweibersommer geht von September bis Oktober.,0_long,Natur,2013-09-28T11:41:10Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Der 1:=Altweibersommer 2:=geht 3:=von 4:=September 5:=bis 6:=Oktober.,2,"[[3, 4], [5, 6]]",Indian summer lasts from September to October.,"['# ::snt Indian summer lasts from September to October.\n(l / last-01\n      :ARG1 (d / date-interval\n            :op1 (d2 / date-entity\n                  :month 9)\n            :op2 (d3 / date-entity\n                  :month 10)\n            :season (s / summer)\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""India""))))']","[l, attr-instance, last_01, attr-arg1, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-month, 9], attr-op2, [d3, attr-instance, date_entity, attr-month, 10], attr-season, [s, attr-instance, summer], attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]]]]"
367,367,367,367,469,1484,altweibersommer,Das heißt: \newline Es gibt trockene und warme Luft.,2_long,Natur,2013-09-28T11:41:10Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=heißt: 2:=\newline 3:=Es 4:=gibt 5:=trockene 6:=und 7:=warme 8:=Luft.,2,"[[5], [7]]",This means: \newline There is dry and warm air.,['# ::snt This means: \\newline There is dry and warm air.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (a / air\n            :ARG1-of (d / dry-08)\n            :ARG1-of (w / warm-07)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [a, attr-instance, air, attr-arg1_of, [d, attr-instance, dry_08], attr-arg1_of, [w, attr-instance, warm_07]]]"
368,368,368,368,470,1485,altweibersommer,Man erkennt den Altweibersommer daran: • Am Tag ist es warm und die Sonne scheint.,3_long,Natur,2013-09-28T11:41:10Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Man 1:=erkennt 2:=den 3:=Altweibersommer 4:=daran: 5:=• 6:=Am 7:=Tag 8:=ist 9:=es 10:=warm 11:=und 12:=die 13:=Sonne 14:=scheint.,3,"[[0, 1, 3, 4], [6, 7, 9, 10], [13, 14]]",You can recognize Indian summer by the following: • During the day it is warm and the sun is shining.,"['# ::snt You can recognize Indian summer by the following: • During the day it is warm and the sun is shining.\n(p / possible-01\n      :ARG1 (r / recognize-02\n            :ARG0 (y / you)\n            :ARG1 (d / date-entity\n                  :season (s / summer)\n                  :mod (c / country\n                        :name (n / name\n                              :op1 ""India"")))\n            :ARG2 (t / thing\n                  :ARG1-of (f / follow-04)\n                  :domain (a / and\n                        :op1 (w / warm-07\n                              :ARG1 d)\n                        :op2 (s2 / shine-01\n                              :ARG1 (s3 / sun))\n                        :time (d2 / day)))))']","[p, attr-instance, possible_01, attr-arg1, [r, attr-instance, recognize_02, attr-arg0, [y, attr-instance, you], attr-arg1, [d, attr-instance, date_entity, attr-season, [s, attr-instance, summer], attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]]], attr-arg2, [t, attr-instance, thing, attr-arg1_of, [f, attr-instance, follow_04], attr-domain, [a, attr-instance, and, attr-op1, [w, attr-instance, warm_07, attr-arg1, d], attr-op2, [s2, attr-instance, shine_01, attr-arg1, [s3, attr-instance, sun]], attr-time, [d2, attr-instance, day]]]]]"
369,369,369,369,471,1486,altweibersommer, • In der Nacht wird es  kälter,4_long,Natur,2013-09-28T11:41:10Z,eaab3232dd7a824a6a774fd2f2814e47,0:= 1:=• 2:=In 3:=der 4:=Nacht 5:=wird 6:=es 7:= 8:=kälter,1,,• It gets colder at night,['# ::snt • It gets colder at night\n(g / get-03\n      :ARG1 (ii / it)\n      :ARG2 (h / have-degree-91\n            :ARG1 ii\n            :ARG2 (c / cold-01)\n            :ARG3 (m / more))\n      :time (d / date-entity\n            :dayperiod (n / night)))'],"[g, attr-instance, get_03, attr-arg1, [ii, attr-instance, it], attr-arg2, [h, attr-instance, have_degree_91, attr-arg1, ii, attr-arg2, [c, attr-instance, cold_01], attr-arg3, [m, attr-instance, more]], attr-time, [d, attr-instance, date_entity, attr-dayperiod, [n, attr-instance, night]]]"
370,370,370,370,472,1487,altweibersommer, • Die Blätter von Bäumen verfärben sich (siehe Herbstanfang),5_long,Natur,2013-09-28T11:41:10Z,eaab3232dd7a824a6a774fd2f2814e47,0:= 1:=• 2:=Die 3:=Blätter 4:=von 5:=Bäumen 6:=verfärben 7:=sich 8:=(siehe 9:=Herbstanfang),1,,• The leaves of trees change color (see beginning of autumn),['# ::snt • The leaves of trees change color (see beginning of autumn)\n(c / change-01\n      :ARG0 (l / leaf\n            :part-of (t / tree))\n      :ARG1 (c2 / color)\n      :ARG1-of (s / see-01\n            :mode imperative\n            :ARG0 (y / you)\n            :time (b / begin-01\n                  :ARG1 (a / autumn))))'],"[c, attr-instance, change_01, attr-arg0, [l, attr-instance, leaf, attr-part_of, [t, attr-instance, tree]], attr-arg1, [c2, attr-instance, color], attr-arg1_of, [s, attr-instance, see_01, attr-mode, imperative, attr-arg0, [y, attr-instance, you], attr-time, [b, attr-instance, begin_01, attr-arg1, [a, attr-instance, autumn]]]]"
371,371,371,371,473,1488,altweibersommer,Der Altweibersommer ist das Wetter im September und im Oktober.,0_short,Natur,2013-09-28T11:41:10Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Der 1:=Altweibersommer 2:=ist 3:=das 4:=Wetter 5:=im 6:=September 7:=und 8:=im 9:=Oktober.,2,"[[5, 6], [8, 9]]",Indian summer is the weather in September and October.,"['# ::snt Indian summer is the weather in September and October.\n(w / weather\n      :domain (d / date-entity\n            :season (s / summer)\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""India"")))\n      :frequency (a / and\n            :op1 (d2 / date-entity\n                  :month 9)\n            :op2 (d3 / date-entity\n                  :month 10)))']","[w, attr-instance, weather, attr-domain, [d, attr-instance, date_entity, attr-season, [s, attr-instance, summer], attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]]], attr-frequency, [a, attr-instance, and, attr-op1, [d2, attr-instance, date_entity, attr-month, 9], attr-op2, [d3, attr-instance, date_entity, attr-month, 10]]]"
372,372,372,372,474,1489,altweibersommer,In dieser Zeit geht der Sommer zu Ende.,1_short,Natur,2013-09-28T11:41:10Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=dieser 2:=Zeit 3:=geht 4:=der 5:=Sommer 6:=zu 7:=Ende.,1,,At this time summer comes to an end.,['# ::snt At this time summer comes to an end.\n(c / come-04\n      :ARG1 (s / summer)\n      :ARG2 (e / end-01\n            :ARG1 s)\n      :time (t / time\n            :mod (t2 / this)))'],"[c, attr-instance, come_04, attr-arg1, [s, attr-instance, summer], attr-arg2, [e, attr-instance, end_01, attr-arg1, s], attr-time, [t, attr-instance, time, attr-mod, [t2, attr-instance, this]]]"
373,373,373,373,475,1490,altweibersommer,In dieser Zeit ist es aber noch sehr warm  \newline und die Sonne scheint oft.,2_short,Natur,2013-09-28T11:41:10Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=dieser 2:=Zeit 3:=ist 4:=es 5:=aber 6:=noch 7:=sehr 8:=warm 9:= 10:=\newline 11:=und 12:=die 13:=Sonne 14:=scheint 15:=oft.,3,"[[0, 1, 2], [3, 4, 5, 6, 7, 8], [13, 14, 15]]",At this time of year it is still very warm \newline and the sun often shines.,['# ::snt At this time of year it is still very warm \\newline and the sun often shines.\n(a / and\n      :op1 (w / warm-07\n            :ARG1 (l / line)\n            :degree (v / very)\n            :mod (s / still)\n            :time (t / this\n                  :part-of (y / year)))\n      :op2 (s2 / shine-01\n            :ARG1 (s3 / sun)\n            :frequency (o / often)))'],"[a, attr-instance, and, attr-op1, [w, attr-instance, warm_07, attr-arg1, [l, attr-instance, line], attr-degree, [v, attr-instance, very], attr-mod, [s, attr-instance, still], attr-time, [t, attr-instance, this, attr-part_of, [y, attr-instance, year]]], attr-op2, [s2, attr-instance, shine_01, attr-arg1, [s3, attr-instance, sun], attr-frequency, [o, attr-instance, often]]]"
374,374,374,374,476,1491,aluminiumhut,Der Aluminium-hut wird oft ironisch benutzt.,0_long,Kleider,2013-10-27T07:10:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Der 1:=Aluminium-hut 2:=wird 3:=oft 4:=ironisch 5:=benutzt.,1,,The aluminum hat is often used ironically.,['# ::snt The aluminum hat is often used ironically.\n(u / use-01\n      :ARG1 (h / hat\n            :consist-of (a / aluminum))\n      :manner (ii / ironic)\n      :frequency (o / often))'],"[u, attr-instance, use_01, attr-arg1, [h, attr-instance, hat, attr-consist_of, [a, attr-instance, aluminum]], attr-manner, [ii, attr-instance, ironic], attr-frequency, [o, attr-instance, often]]"
375,375,375,375,477,1492,aluminiumhut,"Das bedeutet: \newline wenn alles nichts mehr hilft, dann hilft ein Aluminium-hut (der Aluminium-hut ist sicher)",1_long,Kleider,2013-10-27T07:10:27Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Das 1:=bedeutet: 2:=\newline 3:=wenn 4:=alles 5:=nichts 6:=mehr 7:=hilft, 8:=dann 9:=hilft 10:=ein 11:=Aluminium-hut 12:=(der 13:=Aluminium-hut 14:=ist 15:=sicher)",3,"[[3, 4, 5, 6, 7], [8, 9, 10, 11], [13, 14, 15]]","This means: \newline if nothing else helps, then an aluminum hat helps (the aluminum hat is safe)","['# ::snt This means: \\newline if nothing else helps, then an aluminum hat helps (the aluminum hat is safe)\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (h / have-condition-91\n            :ARG1 (h2 / help-01\n                  :ARG0 (h3 / hat\n                        :mod (a / aluminum))\n                  :ARG1-of (c / cause-01\n                        :ARG0 (s / safe-01\n                              :ARG0 h3)))\n            :ARG2 (h4 / help-01\n                  :ARG0 (n / nothing\n                        :mod (e / else)))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [h, attr-instance, have_condition_91, attr-arg1, [h2, attr-instance, help_01, attr-arg0, [h3, attr-instance, hat, attr-mod, [a, attr-instance, aluminum]], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [s, attr-instance, safe_01, attr-arg0, h3]]], attr-arg2, [h4, attr-instance, help_01, attr-arg0, [n, attr-instance, nothing, attr-mod, [e, attr-instance, else]]]]]"
376,376,376,376,478,1493,aluminiumhut,Ein Aluminium-hut ist ein Hut für den Kopf.,0_short,Kleider,2013-10-27T07:10:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Aluminium-hut 2:=ist 3:=ein 4:=Hut 5:=für 6:=den 7:=Kopf.,2,"[[1, 2, 4], [5, 7]]",An aluminum hat is a hat for the head.,['# ::snt An aluminum hat is a hat for the head.\n(h / have-purpose-91\n      :ARG1 (h2 / hat\n            :consist-of (a / aluminum))\n      :ARG2 (h3 / hat\n            :beneficiary (h4 / head)))'],"[h, attr-instance, have_purpose_91, attr-arg1, [h2, attr-instance, hat, attr-consist_of, [a, attr-instance, aluminum]], attr-arg2, [h3, attr-instance, hat, attr-beneficiary, [h4, attr-instance, head]]]"
377,377,377,377,479,1494,aluminiumhut,Er ist aus Alu-folie.,1_short,Kleider,2013-10-27T07:10:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Er 1:=ist 2:=aus 3:=Alu-folie.,1,,It is made of aluminum foil.,['# ::snt It is made of aluminum foil.\n(m / make-01\n      :ARG1 (ii / it)\n      :ARG2 (f / foil\n            :consist-of (a / aluminum)))'],"[m, attr-instance, make_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [f, attr-instance, foil, attr-consist_of, [a, attr-instance, aluminum]]]"
378,378,378,378,480,1649,amtseid,Ein Amts-eid ist ein Eid.,0_long,Recht_und_Gesetz,2022-05-29T05:19:00Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Amts-eid 2:=ist 3:=ein 4:=Eid.,1,,An oath of office is an oath.,['# ::snt An oath of office is an oath.\n(o / oath\n      :topic (o2 / office)\n      :domain (o3 / oath))'],"[o, attr-instance, oath, attr-topic, [o2, attr-instance, office], attr-domain, [o3, attr-instance, oath]]"
379,379,379,379,481,1650,amtseid,Für einen Amts-eid gibt es Regeln.,1_long,Recht_und_Gesetz,2022-05-29T05:19:00Z,48f66906899cc4a9477b6c9e32ff4424,0:=Für 1:=einen 2:=Amts-eid 3:=gibt 4:=es 5:=Regeln.,1,,There are rules for an oath of office.,['# ::snt There are rules for an oath of office.\n(r / rule-01\n      :ARG1 (o / oath\n            :topic (o2 / office)))'],"[r, attr-instance, rule_01, attr-arg1, [o, attr-instance, oath, attr-topic, [o2, attr-instance, office]]]"
380,380,380,380,482,1651,amtseid,Oder es gibt Gesetze dafür.,2_long,Recht_und_Gesetz,2022-05-29T05:19:00Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=es 2:=gibt 3:=Gesetze 4:=dafür.,1,,Or there are laws for it.,['# ::snt Or there are laws for it.\n(o / or\n      :op2 (e / exist-01\n            :ARG1 (l / law)\n            :purpose (ii / it)))'],"[o, attr-instance, or, attr-op2, [e, attr-instance, exist_01, attr-arg1, [l, attr-instance, law], attr-purpose, [ii, attr-instance, it]]]"
381,381,381,381,483,1652,amtseid,"Darin steht, \newline was man beim Amts-eid sagen muss.",3_long,Recht_und_Gesetz,2022-05-29T05:19:00Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Darin 1:=steht, 2:=\newline 3:=was 4:=man 5:=beim 6:=Amts-eid 7:=sagen 8:=muss.",2,"[[1], [3, 4, 5, 6, 7, 8]]",It says \newline what you have to say when taking the oath of office.,['# ::snt It says \\newline what you have to say when taking the oath of office.\n(s / say-01\n      :ARG0 (ii / it)\n      :ARG1 (t / thing\n            :ARG1-of (s2 / say-01\n                  :ARG0 (y / you)\n                  :ARG2-of (o / obligate-01\n                        :ARG1 y)\n                  :time (t2 / take-01\n                        :ARG0 y\n                        :ARG1 (o2 / oath\n                              :topic (o3 / office)))))\n      :ARG3 (l / line))'],"[s, attr-instance, say_01, attr-arg0, [ii, attr-instance, it], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [s2, attr-instance, say_01, attr-arg0, [y, attr-instance, you], attr-arg2_of, [o, attr-instance, obligate_01, attr-arg1, y], attr-time, [t2, attr-instance, take_01, attr-arg0, y, attr-arg1, [o2, attr-instance, oath, attr-topic, [o3, attr-instance, office]]]]], attr-arg3, [l, attr-instance, line]]"
382,382,382,382,484,1653,amtseid,Und was man versprechen muss.,4_long,Recht_und_Gesetz,2022-05-29T05:19:00Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=was 2:=man 3:=versprechen 4:=muss.,1,,And what you have to promise.,['# ::snt And what you have to promise.\n(a / and\n      :op2 (t / thing\n            :ARG1-of (p / promise-01\n                  :ARG0 (y / you)\n                  :ARG2-of (o / obligate-01\n                        :ARG1 y))))'],"[a, attr-instance, and, attr-op2, [t, attr-instance, thing, attr-arg1_of, [p, attr-instance, promise_01, attr-arg0, [y, attr-instance, you], attr-arg2_of, [o, attr-instance, obligate_01, attr-arg1, y]]]]"
383,383,383,383,485,1654,amtseid,Ein Amts-eid gibt es bei Religionen.,5_long,Recht_und_Gesetz,2022-05-29T05:19:00Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Amts-eid 2:=gibt 3:=es 4:=bei 5:=Religionen.,1,,An oath of office exists in religions.,['# ::snt An oath of office exists in religions.\n(e / exist-01\n      :ARG1 (o / oath\n            :topic (o2 / office))\n      :ARG2 (r / religion))'],"[e, attr-instance, exist_01, attr-arg1, [o, attr-instance, oath, attr-topic, [o2, attr-instance, office]], attr-arg2, [r, attr-instance, religion]]"
384,384,384,384,487,1656,amtseid,Ein Amtseid ist eine Erklärung.,0_short,Recht_und_Gesetz,2022-05-29T05:19:00Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Amtseid 2:=ist 3:=eine 4:=Erklärung.,1,,An oath of office is a declaration.,['# ::snt An oath of office is a declaration.\n(d / declare-02\n      :ARG2 (o / oath\n            :topic (o2 / office)))'],"[d, attr-instance, declare_02, attr-arg2, [o, attr-instance, oath, attr-topic, [o2, attr-instance, office]]]"
385,385,385,385,488,1657,amtseid,Man verspricht etwas.,1_short,Recht_und_Gesetz,2022-05-29T05:19:00Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=verspricht 2:=etwas.,1,,You promise something.,['# ::snt You promise something.\n(p / promise-01\n      :ARG0 (y / you)\n      :ARG2 (s / something))'],"[p, attr-instance, promise_01, attr-arg0, [y, attr-instance, you], attr-arg2, [s, attr-instance, something]]"
386,386,386,386,491,1660,amtseid,"Man erklärt beim Amts-eid, \newline dass man alle Aufgaben gut erledigt.",4_short,Recht_und_Gesetz,2022-05-29T05:19:00Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Man 1:=erklärt 2:=beim 3:=Amts-eid, 4:=\newline 5:=dass 6:=man 7:=alle 8:=Aufgaben 9:=gut 10:=erledigt.",2,"[[0, 1, 2, 3], [5, 6, 7, 8, 9, 10]]","When you take the oath of office, you declare that you will perform all your duties well.","['# ::snt When you take the oath of office, you declare that you will perform all your duties well.\n(d / declare-02\n      :ARG0 (y / you)\n      :ARG1 (p / perform-02\n            :ARG0 y\n            :ARG1 (d2 / duty\n                  :poss y\n                  :mod (a / all))\n            :ARG1-of (w / well-09))\n      :time (t / take-01\n            :ARG0 y\n            :ARG1 (o / oath\n                  :topic (o2 / office))))']","[d, attr-instance, declare_02, attr-arg0, [y, attr-instance, you], attr-arg1, [p, attr-instance, perform_02, attr-arg0, y, attr-arg1, [d2, attr-instance, duty, attr-poss, y, attr-mod, [a, attr-instance, all]], attr-arg1_of, [w, attr-instance, well_09]], attr-time, [t, attr-instance, take_01, attr-arg0, y, attr-arg1, [o, attr-instance, oath, attr-topic, [o2, attr-instance, office]]]]"
387,387,387,387,492,1661,amtssprache,Die Amts-sprache wird benutzt: • um Bürger Fragen zu beantworten,0_long,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Amts-sprache 2:=wird 3:=benutzt: 4:=• 5:=um 6:=Bürger 7:=Fragen 8:=zu 9:=beantworten,2,"[[1, 2, 3], [5, 6, 7, 8, 9]]",The official language is used: • to answer citizens’ questions,['# ::snt The official language is used: • to answer citizens’ questions\n(u / use-01\n      :ARG1 (l / language\n            :mod (o / official))\n      :ARG2 (a / answer-01\n            :ARG1 (q / question-01\n                  :ARG0 (c / citizen))))'],"[u, attr-instance, use_01, attr-arg1, [l, attr-instance, language, attr-mod, [o, attr-instance, official]], attr-arg2, [a, attr-instance, answer_01, attr-arg1, [q, attr-instance, question_01, attr-arg0, [c, attr-instance, citizen]]]]"
388,388,388,388,493,1662,amtssprache,Die Amts-sprache wird benutzt: • in Besprechungen,1_long,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Amts-sprache 2:=wird 3:=benutzt: 4:=• 5:=in 6:=Besprechungen,1,,The official language is used: • in meetings,['# ::snt The official language is used: • in meetings\n(u / use-01\n      :ARG1 (l / language\n            :mod (o / official))\n      :time (m / meet-03))'],"[u, attr-instance, use_01, attr-arg1, [l, attr-instance, language, attr-mod, [o, attr-instance, official]], attr-time, [m, attr-instance, meet_03]]"
389,389,389,389,494,1663,amtssprache,Die Amts-sprache wird benutzt: • wichtige Regeln auf-zu-schreiben,2_long,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Amts-sprache 2:=wird 3:=benutzt: 4:=• 5:=wichtige 6:=Regeln 7:=auf-zu-schreiben,1,,The official language is used: • to write down important rules,['# ::snt The official language is used: • to write down important rules\n(u / use-01\n      :ARG1 (l / language\n            :mod (o / official))\n      :ARG2 (w / write-01\n            :ARG1 (r / rule\n                  :ARG1-of (ii / important-01))\n            :ARG2 (d / down)))'],"[u, attr-instance, use_01, attr-arg1, [l, attr-instance, language, attr-mod, [o, attr-instance, official]], attr-arg2, [w, attr-instance, write_01, attr-arg1, [r, attr-instance, rule, attr-arg1_of, [ii, attr-instance, important_01]], attr-arg2, [d, attr-instance, down]]]"
390,390,390,390,495,1664,amtssprache,In manchen Ländern gibt es verschiedene Amts-sprachen.,3_long,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=manchen 2:=Ländern 3:=gibt 4:=es 5:=verschiedene 6:=Amts-sprachen.,2,"[[1], [5]]",In some countries there are different official languages.,['# ::snt In some countries there are different official languages.\n(d / differ-02\n      :ARG1 (l / language\n            :mod (o / official))\n      :location (c / country\n            :quant (s / some)))'],"[d, attr-instance, differ_02, attr-arg1, [l, attr-instance, language, attr-mod, [o, attr-instance, official]], attr-location, [c, attr-instance, country, attr-quant, [s, attr-instance, some]]]"
391,391,391,391,496,1665,amtssprache,In Deutschland gibt es eine Amts-sprache.,4_long,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=Deutschland 2:=gibt 3:=es 4:=eine 5:=Amts-sprache.,1,,In Germany there is one official language.,"['# ::snt In Germany there is one official language.\n(l / language\n      :quant 1\n      :mod (o / official)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[l, attr-instance, language, attr-quant, 1, attr-mod, [o, attr-instance, official], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
392,392,392,392,497,1666,amtssprache,Länder mit mehreren Amts-sprachen benutzten auch noch eine Arbeits-sprache.,5_long,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Länder 1:=mit 2:=mehreren 3:=Amts-sprachen 4:=benutzten 5:=auch 6:=noch 7:=eine 8:=Arbeits-sprache.,2,"[[1, 2, 3], [4, 5, 6, 7, 8]]",Countries with several official languages ​​also use a working language.,['# ::snt Countries with several official languages \u200b\u200balso use a working language.\n(u / use-01\n      :ARG0 (c / country\n            :prep-with (l / language\n                  :mod (o / official)\n                  :quant (s / several)))\n      :ARG1 (l2 / language\n            :ARG0-of (w / work-01))\n      :mod (a / also))'],"[u, attr-instance, use_01, attr-arg0, [c, attr-instance, country, attr-prep_with, [l, attr-instance, language, attr-mod, [o, attr-instance, official], attr-quant, [s, attr-instance, several]]], attr-arg1, [l2, attr-instance, language, attr-arg0_of, [w, attr-instance, work_01]], attr-mod, [a, attr-instance, also]]"
393,393,393,393,498,1667,amtssprache,Amts-sprachen und Arbeits-sprachen gibt es zum Beispiel bei den Vereinte Nationen.,6_long,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Amts-sprachen 1:=und 2:=Arbeits-sprachen 3:=gibt 4:=es 5:=zum 6:=Beispiel 7:=bei 8:=den 9:=Vereinte 10:=Nationen.,2,"[[0], [2]]","The United Nations, for example, has official languages ​​and working languages.","['# ::snt The United Nations, for example, has official languages \u200b\u200band working languages.\n(h / have-03\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 ""United""\n                  :op2 ""Nations""))\n      :ARG1 (a / and\n            :op1 (l / language\n                  :mod (o2 / official))\n            :op2 (l2 / language\n                  :ARG0-of (w / work-01)))\n      :ARG0-of (e / exemplify-01))']","[h, attr-instance, have_03, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""united"", attr-op2, ""nations""]], attr-arg1, [a, attr-instance, and, attr-op1, [l, attr-instance, language, attr-mod, [o2, attr-instance, official]], attr-op2, [l2, attr-instance, language, attr-arg0_of, [w, attr-instance, work_01]]], attr-arg0_of, [e, attr-instance, exemplify_01]]"
394,394,394,394,499,1668,amtssprache,Eine Amtssprache ist eine Sprache.,0_short,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Amtssprache 2:=ist 3:=eine 4:=Sprache.,1,,An official language is a language.,['# ::snt An official language is a language.\n(l / language\n      :domain (l2 / language\n            :mod (o / official)))'],"[l, attr-instance, language, attr-domain, [l2, attr-instance, language, attr-mod, [o, attr-instance, official]]]"
395,395,395,395,500,1669,amtssprache,Diese Sprache wird in einem Land gesprochen.,1_short,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Diese 1:=Sprache 2:=wird 3:=in 4:=einem 5:=Land 6:=gesprochen.,1,,This language is spoken in a country.,['# ::snt This language is spoken in a country.\n(s / speak-01\n      :ARG3 (l / language\n            :mod (t / this))\n      :location (c / country))'],"[s, attr-instance, speak_01, attr-arg3, [l, attr-instance, language, attr-mod, [t, attr-instance, this]], attr-location, [c, attr-instance, country]]"
396,396,396,396,501,1670,amtssprache,Die Sprache wird bei Behörden benutzt.,2_short,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Sprache 2:=wird 3:=bei 4:=Behörden 5:=benutzt.,1,,The language is used by authorities.,['# ::snt The language is used by authorities.\n(u / use-01\n      :ARG0 (a / authority)\n      :ARG1 (l / language))'],"[u, attr-instance, use_01, attr-arg0, [a, attr-instance, authority], attr-arg1, [l, attr-instance, language]]"
397,397,397,397,502,1671,amtssprache,Und sie wird von Politiker gesprochen.,3_short,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Und 1:=sie 2:=wird 3:=von 4:=Politiker 5:=gesprochen.,1,,And it is spoken by politicians.,['# ::snt And it is spoken by politicians.\n(a / and\n      :op2 (s / speak-01\n            :ARG0 (p / politician)\n            :ARG1 (ii / it)))'],"[a, attr-instance, and, attr-op2, [s, attr-instance, speak_01, attr-arg0, [p, attr-instance, politician], attr-arg1, [ii, attr-instance, it]]]"
398,398,398,398,503,1672,amtssprache,Eine Amts-sprache ist oft schwierig zu verstehen.,4_short,Sprache|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2015-07-21T11:36:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Amts-sprache 2:=ist 3:=oft 4:=schwierig 5:=zu 6:=verstehen.,1,,An official language is often difficult to understand.,['# ::snt An official language is often difficult to understand.\n(d / difficult\n      :domain (u / understand-01\n            :ARG1 (l / language\n                  :mod (o / official)))\n      :frequency (o2 / often))'],"[d, attr-instance, difficult, attr-domain, [u, attr-instance, understand_01, attr-arg1, [l, attr-instance, language, attr-mod, [o, attr-instance, official]]], attr-frequency, [o2, attr-instance, often]]"
399,399,399,399,504,1673,amtszeit,"Wenn eine Amts-zeit fertig ist, \newline muss jemand neues das Amt machen.",0_long,Politik|Seiten_mit_defekten_Dateilinks,2021-08-04T05:14:14Z,0061a5419063d58697cea347295a4554,"0:=Wenn 1:=eine 2:=Amts-zeit 3:=fertig 4:=ist, 5:=\newline 6:=muss 7:=jemand 8:=neues 9:=das 10:=Amt 11:=machen.",2,"[[0, 2, 3, 4], [6, 7, 8, 10, 11]]","When a term is finished, \newline someone new must take the office.","['# ::snt When a term is finished, \\newline someone new must take the office.\n(o / obligate-01\n      :ARG1 (s / someone\n            :ARG1-of (n / new-02))\n      :ARG2 (t / take-01\n            :ARG0 s\n            :ARG1 (o2 / office))\n      :time (f / finish-01\n            :ARG1 (t2 / term)))']","[o, attr-instance, obligate_01, attr-arg1, [s, attr-instance, someone, attr-arg1_of, [n, attr-instance, new_02]], attr-arg2, [t, attr-instance, take_01, attr-arg0, s, attr-arg1, [o2, attr-instance, office]], attr-time, [f, attr-instance, finish_01, attr-arg1, [t2, attr-instance, term]]]"
400,400,400,400,505,1674,amtszeit,Eine Amts-zeit ist eine Zeit.,0_short,Politik|Seiten_mit_defekten_Dateilinks,2021-08-04T05:14:14Z,0061a5419063d58697cea347295a4554,0:=Eine 1:=Amts-zeit 2:=ist 3:=eine 4:=Zeit.,1,,A term of office is a time.,['# ::snt A term of office is a time.\n(t / term\n      :mod (o / office)\n      :domain (t2 / time))'],"[t, attr-instance, term, attr-mod, [o, attr-instance, office], attr-domain, [t2, attr-instance, time]]"
401,401,401,401,506,1675,amtszeit,Die Zeit in der jemand ein Amt hat.,1_short,Politik|Seiten_mit_defekten_Dateilinks,2021-08-04T05:14:14Z,0061a5419063d58697cea347295a4554,0:=Die 1:=Zeit 2:=in 3:=der 4:=jemand 5:=ein 6:=Amt 7:=hat.,1,,The time during which someone holds an office.,['# ::snt The time during which someone holds an office.\n(t / time\n      :time-of (h / hold-01\n            :ARG0 (s / someone)\n            :ARG1 (o / office)))'],"[t, attr-instance, time, attr-time_of, [h, attr-instance, hold_01, attr-arg0, [s, attr-instance, someone], attr-arg1, [o, attr-instance, office]]]"
402,402,402,402,508,1677,amtszeit,Diese Amts-zeit dauert 4 Jahre.,3_short,Politik|Seiten_mit_defekten_Dateilinks,2021-08-04T05:14:14Z,0061a5419063d58697cea347295a4554,0:=Diese 1:=Amts-zeit 2:=dauert 3:=4 4:=Jahre.,1,,This term of office lasts 4 years.,['# ::snt This term of office lasts 4 years.\n(l / last-01\n      :ARG1 (t / term\n            :mod (o / office)\n            :mod (t2 / this))\n      :ARG2 (t3 / temporal-quantity\n            :quant 4\n            :unit (y / year)))'],"[l, attr-instance, last_01, attr-arg1, [t, attr-instance, term, attr-mod, [o, attr-instance, office], attr-mod, [t2, attr-instance, this]], attr-arg2, [t3, attr-instance, temporal_quantity, attr-quant, 4, attr-unit, [y, attr-instance, year]]]"
403,403,403,403,509,1678,an-12-unfall-in-juba,"Manche sagen, der Flug des Flugzeuges hätte verboten werden sollen.",0_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Manche 1:=sagen, 2:=der 3:=Flug 4:=des 5:=Flugzeuges 6:=hätte 7:=verboten 8:=werden 9:=sollen.",2,"[[6, 7, 8, 9], [5]]",Some say the plane should have been banned from flying.,['# ::snt Some say the plane should have been banned from flying.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (r / recommend-01\n            :ARG1 (b / ban-01\n                  :ARG1 (f / fly-01\n                        :ARG1 (p / plane)))))'],"[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [r, attr-instance, recommend_01, attr-arg1, [b, attr-instance, ban_01, attr-arg1, [f, attr-instance, fly_01, attr-arg1, [p, attr-instance, plane]]]]]"
404,404,404,404,510,1679,an-12-unfall-in-juba,Das Flugzeug hätte nicht fliegen dürfen.,1_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Flugzeug 2:=hätte 3:=nicht 4:=fliegen 5:=dürfen.,1,,The plane should not have flown.,['# ::snt The plane should not have flown.\n(r / recommend-01\n      :ARG1 (f / fly-01\n            :polarity -\n            :ARG2 (p / plane)))'],"[r, attr-instance, recommend_01, attr-arg1, [f, attr-instance, fly_01, attr-polarity, negative, attr-arg2, [p, attr-instance, plane]]]"
405,405,405,405,511,1680,an-12-unfall-in-juba,"Manche sagen, das Flugzeug hat technische Fehler.",2_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Manche 1:=sagen, 2:=das 3:=Flugzeug 4:=hat 5:=technische 6:=Fehler.",1,,Some say the plane has technical faults.,['# ::snt Some say the plane has technical faults.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (f / fault-02\n            :ARG1 (p / plane)\n            :mod (t / technical)))'],"[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [f, attr-instance, fault_02, attr-arg1, [p, attr-instance, plane], attr-mod, [t, attr-instance, technical]]]"
406,406,406,406,512,1681,an-12-unfall-in-juba,"Und manche sagen, das Flugzeug ist zu schwer beladen worden.",3_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Und 1:=manche 2:=sagen, 3:=das 4:=Flugzeug 5:=ist 6:=zu 7:=schwer 8:=beladen 9:=worden.",1,,And some say the plane was loaded too heavily.,['# ::snt And some say the plane was loaded too heavily.\n(a / and\n      :op2 (s / say-01\n            :ARG0 (s2 / some)\n            :ARG1 (l / load-01\n                  :ARG1 (p / plane)\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (h2 / heavy)\n                        :ARG3 (t / too)))))'],"[a, attr-instance, and, attr-op2, [s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [l, attr-instance, load_01, attr-arg1, [p, attr-instance, plane], attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [h2, attr-instance, heavy], attr-arg3, [t, attr-instance, too]]]]]"
407,407,407,407,513,1682,an-12-unfall-in-juba,Das Flugzeug ist ein Antonow An-12-Flugzeug.,4_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Flugzeug 2:=ist 3:=ein 4:=Antonow 5:=An-12-Flugzeug.,1,,The aircraft is an Antonov An-12.,"['# ::snt The aircraft is an Antonov An-12.\n(a / aircraft\n      :name (n / name\n            :op1 ""Antonov""\n            :op2 ""An-12"")\n      :domain a)']","[a, attr-instance, aircraft, attr-name, [n, attr-instance, name, attr-op1, ""antonov"", attr-op2, ""an_12""], attr-domain, a]"
408,408,408,408,514,1683,an-12-unfall-in-juba,Das ist ein Transport-flugzeug.,5_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=ist 2:=ein 3:=Transport-flugzeug.,1,,This is a transport aircraft.,['# ::snt This is a transport aircraft.\n(a / aircraft\n      :ARG0-of (t / transport-01)\n      :domain (t2 / this))'],"[a, attr-instance, aircraft, attr-arg0_of, [t, attr-instance, transport_01], attr-domain, [t2, attr-instance, this]]"
409,409,409,409,515,1684,an-12-unfall-in-juba,Der AN-12 Unfall in Juba ist am 4. November 2015 gewesen.,0_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=AN-12 2:=Unfall 3:=in 4:=Juba 5:=ist 6:=am 7:=4. 8:=November 9:=2015 10:=gewesen.,3,"[[1], [3, 4], [6, 7, 8, 9]]","The AN-12 accident in Juba occurred on November 4, 2015.","['# ::snt The AN-12 accident in Juba occurred on November 4, 2015.\n(a / accident\n      :name (n / name\n            :op1 ""AN-12"")\n      :location (c / country\n            :name (n2 / name\n                  :op1 ""Juba""))\n      :time (d / date-entity\n            :day 4\n            :month 11\n            :year 2015))']","[a, attr-instance, accident, attr-name, [n, attr-instance, name, attr-op1, ""an_12""], attr-location, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""juba""]], attr-time, [d, attr-instance, date_entity, attr-day, 4, attr-month, 11, attr-year, 2015]]"
410,410,410,410,516,1685,an-12-unfall-in-juba,Das Flugzeug (mit dem Namen Antonow An-12) ist abgestürzt.,1_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Flugzeug 2:=(mit 3:=dem 4:=Namen 5:=Antonow 6:=An-12) 7:=ist 8:=abgestürzt.,2,"[[7, 8], [2, 4, 5, 6]]",The plane (named Antonov An-12) crashed.,"['# ::snt The plane (named Antonov An-12) crashed.\n(c / crash-01\n      :ARG1 (p / plane\n            :name (n / name\n                  :op1 ""Antonov""\n                  :op2 ""An-12"")))']","[c, attr-instance, crash_01, attr-arg1, [p, attr-instance, plane, attr-name, [n, attr-instance, name, attr-op1, ""antonov"", attr-op2, ""an_12""]]]"
411,411,411,411,517,1686,an-12-unfall-in-juba,Der Absturz ist kurz nach dem Abflug passiert.,2_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Absturz 2:=ist 3:=kurz 4:=nach 5:=dem 6:=Abflug 7:=passiert.,1,,The crash happened shortly after takeoff.,['# ::snt The crash happened shortly after takeoff.\n(c / crash-01\n      :time (a / after\n            :op1 (t / take-off-19)\n            :ARG1-of (s / short-07)))'],"[c, attr-instance, crash_01, attr-time, [a, attr-instance, after, attr-op1, [t, attr-instance, take_off_19], attr-arg1_of, [s, attr-instance, short_07]]]"
412,412,412,412,518,1687,an-12-unfall-in-juba,Das Flugzeug ist gestartet und kurz danach ist es abgestürzt.,3_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Flugzeug 2:=ist 3:=gestartet 4:=und 5:=kurz 6:=danach 7:=ist 8:=es 9:=abgestürzt.,3,"[[2, 3], [5, 6], [7, 8, 9]]",The plane took off and shortly afterwards it crashed.,['# ::snt The plane took off and shortly afterwards it crashed.\n(a / and\n      :op1 (t / take-off-07\n            :ARG1 (p / plane))\n      :op2 (c / crash-01\n            :ARG1 p\n            :time (a2 / afterwards\n                  :ARG1-of (s / short-07))))'],"[a, attr-instance, and, attr-op1, [t, attr-instance, take_off_07, attr-arg1, [p, attr-instance, plane]], attr-op2, [c, attr-instance, crash_01, attr-arg1, p, attr-time, [a2, attr-instance, afterwards, attr-arg1_of, [s, attr-instance, short_07]]]]"
413,413,413,413,519,1688,an-12-unfall-in-juba,Das heißt: das Flugzeug ist auf den Boden ge-stürzt.,4_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=heißt: 2:=das 3:=Flugzeug 4:=ist 5:=auf 6:=den 7:=Boden 8:=ge-stürzt.,1,,This means that the plane crashed to the ground.,['# ::snt This means that the plane crashed to the ground.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (c / crash-01\n            :ARG1 (p / plane)\n            :destination (g / ground)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [c, attr-instance, crash_01, attr-arg1, [p, attr-instance, plane], attr-destination, [g, attr-instance, ground]]]"
414,414,414,414,520,1689,an-12-unfall-in-juba,Der Unfall ist in der Nähe vom Fluss Weißer Nil passiert.,5_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Unfall 2:=ist 3:=in 4:=der 5:=Nähe 6:=vom 7:=Fluss 8:=Weißer 9:=Nil 10:=passiert.,2,"[[1, 2, 3, 5, 6, 10], [8, 9]]",The accident happened near the White Nile River.,"['# ::snt The accident happened near the White Nile River.\n(n / near-02\n      :ARG1 (a / accident)\n      :ARG2 (r / river\n            :name (n2 / name\n                  :op1 ""White""\n                  :op2 ""Nile""\n                  :op3 ""River"")))']","[n, attr-instance, near_02, attr-arg1, [a, attr-instance, accident], attr-arg2, [r, attr-instance, river, attr-name, [n2, attr-instance, name, attr-op1, ""white"", attr-op2, ""nile"", attr-op3, ""river""]]]"
415,415,415,415,521,1690,an-12-unfall-in-juba,"Niemand weiß genau, warum das Flugzeug abgestürzt ist.",6_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Niemand 1:=weiß 2:=genau, 3:=warum 4:=das 5:=Flugzeug 6:=abgestürzt 7:=ist.",2,"[[0, 1, 2], [3, 5, 6, 7]]",Nobody knows exactly why the plane crashed.,['# ::snt Nobody knows exactly why the plane crashed.\n(k / know-01\n      :ARG0 (n / nobody)\n      :ARG1 (t / thing\n            :ARG0-of (c / cause-01\n                  :ARG1 (c2 / crash-01\n                        :ARG1 (p / plane)))\n            :mod (e / exact)))'],"[k, attr-instance, know_01, attr-arg0, [n, attr-instance, nobody], attr-arg1, [t, attr-instance, thing, attr-arg0_of, [c, attr-instance, cause_01, attr-arg1, [c2, attr-instance, crash_01, attr-arg1, [p, attr-instance, plane]]], attr-mod, [e, attr-instance, exact]]]"
416,416,416,416,522,1691,an-12-unfall-in-juba,Bei dem Unfall sind 41 Menschen gestorben.,7_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2015-11-07T08:34:15Z,48f66906899cc4a9477b6c9e32ff4424,0:=Bei 1:=dem 2:=Unfall 3:=sind 4:=41 5:=Menschen 6:=gestorben.,1,,41 people died in the accident.,['# ::snt 41 people died in the accident.\n(d / die-01\n      :ARG1 (p / person\n            :quant 41)\n      :ARG1-of (c / cause-01\n            :ARG0 (a / accident)))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-quant, 41], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [a, attr-instance, accident]]]"
417,417,417,417,523,1692,anakonda,Eine Anakonda lebt in Südamerika.,0_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=Anakonda 2:=lebt 3:=in 4:=Südamerika.,1,,An anaconda lives in South America.,"['# ::snt An anaconda lives in South America.\n(l / live-01\n      :ARG0 (a / anaconda)\n      :location (c / continent\n            :name (n / name\n                  :op1 ""South""\n                  :op2 ""America"")))']","[l, attr-instance, live_01, attr-arg0, [a, attr-instance, anaconda], attr-location, [c, attr-instance, continent, attr-name, [n, attr-instance, name, attr-op1, ""south"", attr-op2, ""america""]]]"
418,418,418,418,524,1693,anakonda,Ihr Zuhause ist der Regenwald.,1_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Ihr 1:=Zuhause 2:=ist 3:=der 4:=Regenwald.,1,,Their home is the rainforest.,['# ::snt Their home is the rainforest.\n(f / forest\n      :domain (h / home\n            :poss (t / they)))'],"[f, attr-instance, forest, attr-domain, [h, attr-instance, home, attr-poss, [t, attr-instance, they]]]"
419,419,419,419,525,1694,anakonda,Dort lebt sie im Wasser oder im Sumpf.,2_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Dort 1:=lebt 2:=sie 3:=im 4:=Wasser 5:=oder 6:=im 7:=Sumpf.,2,"[[3, 4], [6, 7]]",There it lives in the water or in the swamp.,['# ::snt There it lives in the water or in the swamp.\n(l / live-01\n      :ARG0 (ii / it)\n      :location (o / or\n            :op1 (w / water)\n            :op2 (s / swamp)))'],"[l, attr-instance, live_01, attr-arg0, [ii, attr-instance, it], attr-location, [o, attr-instance, or, attr-op1, [w, attr-instance, water], attr-op2, [s, attr-instance, swamp]]]"
420,420,420,420,526,1695,anakonda,Eine Anakonda kann bis zu 9 Meter groß werden.,3_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=Anakonda 2:=kann 3:=bis 4:=zu 5:=9 6:=Meter 7:=groß 8:=werden.,1,,An anaconda can grow up to 9 meters tall.,['# ::snt An anaconda can grow up to 9 meters tall.\n(p / possible-01\n      :ARG1 (g / grow-03\n            :ARG1 (a / anaconda)\n            :ARG2 (t / tall\n                  :quant (u / up-to\n                        :op1 (d / distance-quantity\n                              :quant 9\n                              :unit (m / meter))))))'],"[p, attr-instance, possible_01, attr-arg1, [g, attr-instance, grow_03, attr-arg1, [a, attr-instance, anaconda], attr-arg2, [t, attr-instance, tall, attr-quant, [u, attr-instance, up_to, attr-op1, [d, attr-instance, distance_quantity, attr-quant, 9, attr-unit, [m, attr-instance, meter]]]]]]"
421,421,421,421,527,1696,anakonda,Diese Schlange kann bis zu 200 Kilogramm schwer werden.,4_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Diese 1:=Schlange 2:=kann 3:=bis 4:=zu 5:=200 6:=Kilogramm 7:=schwer 8:=werden.,1,,This snake can weigh up to 200 kilograms.,['# ::snt This snake can weigh up to 200 kilograms.\n(p / possible-01\n      :ARG1 (w / weigh-01\n            :ARG1 (s / snake\n                  :mod (t / this))\n            :ARG3 (u / up-to\n                  :op1 (m / mass-quantity\n                        :quant 200\n                        :unit (k / kilogram)))))'],"[p, attr-instance, possible_01, attr-arg1, [w, attr-instance, weigh_01, attr-arg1, [s, attr-instance, snake, attr-mod, [t, attr-instance, this]], attr-arg3, [u, attr-instance, up_to, attr-op1, [m, attr-instance, mass_quantity, attr-quant, 200, attr-unit, [k, attr-instance, kilogram]]]]]"
422,422,422,422,528,1697,anakonda,200 Kilogramm können 2 erwachsene Männer sein.,5_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=200 1:=Kilogramm 2:=können 3:=2 4:=erwachsene 5:=Männer 6:=sein.,1,,200 kilograms can be 2 adult men.,['# ::snt 200 kilograms can be 2 adult men.\n(p / possible-01\n      :ARG1 (m / man\n            :quant 2\n            :mod (a / adult)\n            :domain (m2 / mass-quantity\n                  :quant 200\n                  :unit (k / kilogram))))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, man, attr-quant, 2, attr-mod, [a, attr-instance, adult], attr-domain, [m2, attr-instance, mass_quantity, attr-quant, 200, attr-unit, [k, attr-instance, kilogram]]]]"
423,423,423,423,529,1698,anakonda,Eine kleine Anakonda isst kleine Tiere oder Vögel.,6_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=kleine 2:=Anakonda 3:=isst 4:=kleine 5:=Tiere 6:=oder 7:=Vögel.,2,"[[5], [7]]",A small anaconda eats small animals or birds.,['# ::snt A small anaconda eats small animals or birds.\n(e / eat-01\n      :ARG0 (a / anaconda\n            :mod (s / small))\n      :ARG1 (o / or\n            :op1 (a2 / animal\n                  :mod (s2 / small))\n            :op2 (b / bird\n                  :mod s2)))'],"[e, attr-instance, eat_01, attr-arg0, [a, attr-instance, anaconda, attr-mod, [s, attr-instance, small]], attr-arg1, [o, attr-instance, or, attr-op1, [a2, attr-instance, animal, attr-mod, [s2, attr-instance, small]], attr-op2, [b, attr-instance, bird, attr-mod, s2]]]"
424,424,424,424,530,1699,anakonda,Eine große Anakonda isst Kaimane oder Raub-katzen.,7_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=große 2:=Anakonda 3:=isst 4:=Kaimane 5:=oder 6:=Raub-katzen.,2,"[[4], [6]]",A large anaconda eats caimans or big cats.,['# ::snt A large anaconda eats caimans or big cats.\n(e / eat-01\n      :ARG0 (a / anaconda\n            :mod (l / large))\n      :ARG1 (o / or\n            :op1 (c / caiman)\n            :op2 (c2 / cat\n                  :mod (b / big))))'],"[e, attr-instance, eat_01, attr-arg0, [a, attr-instance, anaconda, attr-mod, [l, attr-instance, large]], attr-arg1, [o, attr-instance, or, attr-op1, [c, attr-instance, caiman], attr-op2, [c2, attr-instance, cat, attr-mod, [b, attr-instance, big]]]]"
425,425,425,425,531,1700,anakonda,Kaimane sind kleine Krokodile.,8_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Kaimane 1:=sind 2:=kleine 3:=Krokodile.,2,"[[0, 1], [2]]",Caimans are small crocodiles.,"['# ::snt Caimans are small crocodiles.\n(c / crocodile\n      :mod (s / small)\n      :domain (e / ethnic-group\n            :name (n / name\n                  :op1 ""Caiman"")))']","[c, attr-instance, crocodile, attr-mod, [s, attr-instance, small], attr-domain, [e, attr-instance, ethnic_group, attr-name, [n, attr-instance, name, attr-op1, ""caiman""]]]"
426,426,426,426,532,1701,anakonda,Eine Anakonda isst am liebsten nachts.,9_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=Anakonda 2:=isst 3:=am 4:=liebsten 5:=nachts.,1,,An anaconda prefers to eat at night.,['# ::snt An anaconda prefers to eat at night.\n(p / prefer-01\n      :ARG0 (a / anaconda)\n      :ARG1 (e / eat-01\n            :ARG0 a\n            :time (d / date-entity\n                  :dayperiod (n / night))))'],"[p, attr-instance, prefer_01, attr-arg0, [a, attr-instance, anaconda], attr-arg1, [e, attr-instance, eat_01, attr-arg0, a, attr-time, [d, attr-instance, date_entity, attr-dayperiod, [n, attr-instance, night]]]]"
427,427,427,427,533,1702,anakonda,In der Nacht geht sie auf Jagd.,10_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=In 1:=der 2:=Nacht 3:=geht 4:=sie 5:=auf 6:=Jagd.,2,"[[0, 2], [5, 6]]",At night she goes hunting.,['# ::snt At night she goes hunting.\n(g / go-02\n      :ARG0 (s / she)\n      :ARG1 (h / hunt-01\n            :ARG0 s)\n      :time (d / date-entity\n            :dayperiod (n / night)))'],"[g, attr-instance, go_02, attr-arg0, [s, attr-instance, she], attr-arg1, [h, attr-instance, hunt_01, attr-arg0, s], attr-time, [d, attr-instance, date_entity, attr-dayperiod, [n, attr-instance, night]]]"
428,428,428,428,534,1703,anakonda,Sie liegt im Wasser und wartet da auf ihr Essen.,11_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Sie 1:=liegt 2:=im 3:=Wasser 4:=und 5:=wartet 6:=da 7:=auf 8:=ihr 9:=Essen.,2,"[[1, 2, 3], [5, 6, 7, 8, 9]]",She lies in the water and waits for her food.,['# ::snt She lies in the water and waits for her food.\n(a / and\n      :op1 (l / lie-07\n            :ARG1 (s / she)\n            :ARG2 (w / water))\n      :op2 (w2 / wait-01\n            :ARG1 s\n            :ARG2 (f / food\n                  :poss s)))'],"[a, attr-instance, and, attr-op1, [l, attr-instance, lie_07, attr-arg1, [s, attr-instance, she], attr-arg2, [w, attr-instance, water]], attr-op2, [w2, attr-instance, wait_01, attr-arg1, s, attr-arg2, [f, attr-instance, food, attr-poss, s]]]"
429,429,429,429,535,1704,anakonda,Sie muss ihr Essen erstmal fangen.,12_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Sie 1:=muss 2:=ihr 3:=Essen 4:=erstmal 5:=fangen.,1,,She has to catch her food first.,['# ::snt She has to catch her food first.\n(o / obligate-01\n      :ARG2 (c / catch-01\n            :ARG0 (s / she)\n            :ARG1 (f / food\n                  :poss s)\n            :ord (o2 / ordinal-entity\n                  :value 1)))'],"[o, attr-instance, obligate_01, attr-arg2, [c, attr-instance, catch_01, attr-arg0, [s, attr-instance, she], attr-arg1, [f, attr-instance, food, attr-poss, s], attr-ord, [o2, attr-instance, ordinal_entity, attr-value, 1]]]"
430,430,430,430,536,1705,anakonda,Ihr Essen nennt sich dann Beute oder Opfer.,13_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Ihr 1:=Essen 2:=nennt 3:=sich 4:=dann 5:=Beute 6:=oder 7:=Opfer.,2,"[[5], [7]]",Their food is then called prey or victim.,['# ::snt Their food is then called prey or victim.\n(c / call-01\n      :ARG1 (f / food\n            :poss (t / they))\n      :ARG2 (o / or\n            :op1 (p / person\n                  :ARG0-of (p2 / prey-01\n                        :ARG1 t))\n            :op2 (p3 / person\n                  :ARG1-of (v / victimize-01\n                        :ARG0 t)))\n      :time (t2 / then))'],"[c, attr-instance, call_01, attr-arg1, [f, attr-instance, food, attr-poss, [t, attr-instance, they]], attr-arg2, [o, attr-instance, or, attr-op1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, prey_01, attr-arg1, t]], attr-op2, [p3, attr-instance, person, attr-arg1_of, [v, attr-instance, victimize_01, attr-arg0, t]]], attr-time, [t2, attr-instance, then]]"
431,431,431,431,537,1706,anakonda,Eine Anakonda umarmt ihr Opfer ganz fest.,14_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=Anakonda 2:=umarmt 3:=ihr 4:=Opfer 5:=ganz 6:=fest.,2,"[[1, 3, 4], [5, 6]]",An anaconda hugs its prey tightly.,['# ::snt An anaconda hugs its prey tightly.\n(h / hug-01\n      :ARG0 (a / anaconda)\n      :ARG1 (t / thing\n            :ARG2-of (p / prey-01\n                  :ARG0 a))\n      :ARG1-of (t2 / tight-05))'],"[h, attr-instance, hug_01, attr-arg0, [a, attr-instance, anaconda], attr-arg1, [t, attr-instance, thing, attr-arg2_of, [p, attr-instance, prey_01, attr-arg0, a]], attr-arg1_of, [t2, attr-instance, tight_05]]"
432,432,432,432,538,1707,anakonda,Die Umarmung ist sehr fest.,15_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Die 1:=Umarmung 2:=ist 3:=sehr 4:=fest.,1,,The hug is very tight.,['# ::snt The hug is very tight.\n(t / tight-05\n      :ARG1 (h / hug-01)\n      :degree (v / very))'],"[t, attr-instance, tight_05, attr-arg1, [h, attr-instance, hug_01], attr-degree, [v, attr-instance, very]]"
433,433,433,433,539,1708,anakonda,Dann kann das Opfer nicht mehr atmen.,16_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Dann 1:=kann 2:=das 3:=Opfer 4:=nicht 5:=mehr 6:=atmen.,1,,Then the victim can no longer breathe.,['# ::snt Then the victim can no longer breathe.\n(p / possible-01\n      :ARG1 (b / breathe-01\n            :ARG0 (v / victim)\n            :time (n / no-longer))\n      :time (t / then))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, breathe_01, attr-arg0, [v, attr-instance, victim], attr-time, [n, attr-instance, no_longer]], attr-time, [t, attr-instance, then]]"
434,434,434,434,540,1709,anakonda,Das Herz des Opfers hört dann auf zu schlagen.,17_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Das 1:=Herz 2:=des 3:=Opfers 4:=hört 5:=dann 6:=auf 7:=zu 8:=schlagen.,1,,The victim’s heart then stops beating.,['# ::snt The victim’s heart then stops beating.\n(s / stop-01\n      :ARG1 (b / beat-01\n            :ARG1 (h / heart\n                  :part-of (v / victim)))\n      :time (t / then))'],"[s, attr-instance, stop_01, attr-arg1, [b, attr-instance, beat_01, attr-arg1, [h, attr-instance, heart, attr-part_of, [v, attr-instance, victim]]], attr-time, [t, attr-instance, then]]"
435,435,435,435,541,1710,anakonda,Das Opfer stirbt.,18_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Das 1:=Opfer 2:=stirbt.,1,,The victim dies.,['# ::snt The victim dies.\n(d / die-01\n      :ARG1 (v / victim))'],"[d, attr-instance, die_01, attr-arg1, [v, attr-instance, victim]]"
436,436,436,436,542,1711,anakonda,Dann kann die Anakonda ihr Opfer essen.,19_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Dann 1:=kann 2:=die 3:=Anakonda 4:=ihr 5:=Opfer 6:=essen.,1,,Then the anaconda can eat its prey.,['# ::snt Then the anaconda can eat its prey.\n(p / possible-01\n      :ARG1 (e / eat-01\n            :ARG0 (a / anaconda)\n            :ARG1 (t / thing\n                  :ARG1-of (p2 / prey-01\n                        :ARG0 a)))\n      :time (t2 / then))'],"[p, attr-instance, possible_01, attr-arg1, [e, attr-instance, eat_01, attr-arg0, [a, attr-instance, anaconda], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [p2, attr-instance, prey_01, attr-arg0, a]]], attr-time, [t2, attr-instance, then]]"
437,437,437,437,543,1712,anakonda,Die Anakonda beisst nicht ab.,20_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Die 1:=Anakonda 2:=beisst 3:=nicht 4:=ab.,1,,The anaconda does not bite.,['# ::snt The anaconda does not bite.\n(b / bite-01\n      :polarity -\n      :ARG0 (a / anaconda))'],"[b, attr-instance, bite_01, attr-polarity, negative, attr-arg0, [a, attr-instance, anaconda]]"
438,438,438,438,544,1713,anakonda,Die Anakonda schluckt das Opfer ganz runter.,21_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Die 1:=Anakonda 2:=schluckt 3:=das 4:=Opfer 5:=ganz 6:=runter.,2,"[[1, 2, 4], [5]]",The anaconda swallows the victim whole.,['# ::snt The anaconda swallows the victim whole.\n(s / swallow-01\n      :ARG0 (a / anaconda)\n      :ARG1 (v / victim)\n      :degree (w / whole))'],"[s, attr-instance, swallow_01, attr-arg0, [a, attr-instance, anaconda], attr-arg1, [v, attr-instance, victim], attr-degree, [w, attr-instance, whole]]"
439,439,439,439,545,1714,anakonda,Eine Anakonda spürt mit ihrer Haut jede Bewegung.,22_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=Anakonda 2:=spürt 3:=mit 4:=ihrer 5:=Haut 6:=jede 7:=Bewegung.,2,"[[1, 2, 6, 7], [3, 4, 5]]",An anaconda senses every movement with its skin.,['# ::snt An anaconda senses every movement with its skin.\n(s / sense-01\n      :ARG0 (a / anaconda\n            :part (s2 / skin))\n      :ARG1 (m / move-01\n            :mod (e / every))\n      :instrument s2)'],"[s, attr-instance, sense_01, attr-arg0, [a, attr-instance, anaconda, attr-part, [s2, attr-instance, skin]], attr-arg1, [m, attr-instance, move_01, attr-mod, [e, attr-instance, every]], attr-instrument, s2]"
440,440,440,440,546,1715,anakonda,Im Wasser spürt sie das am besten.,23_long,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Im 1:=Wasser 2:=spürt 3:=sie 4:=das 5:=am 6:=besten.,1,,She feels this best in the water.,['# ::snt She feels this best in the water.\n(f / feel-05\n      :ARG0 (s / she)\n      :ARG1 (t / this)\n      :ARG2 (w / water)\n      :manner (g / good-02\n            :ARG2-of (h / have-degree-91\n                  :ARG1 f\n                  :ARG3 (m / most))))'],"[f, attr-instance, feel_05, attr-arg0, [s, attr-instance, she], attr-arg1, [t, attr-instance, this], attr-arg2, [w, attr-instance, water], attr-manner, [g, attr-instance, good_02, attr-arg2_of, [h, attr-instance, have_degree_91, attr-arg1, f, attr-arg3, [m, attr-instance, most]]]]"
441,441,441,441,547,1716,anakonda,Eine Anakonda ist eine Schlange.,0_short,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=Anakonda 2:=ist 3:=eine 4:=Schlange.,1,,An anaconda is a snake.,['# ::snt An anaconda is a snake.\n(s / snake\n      :domain (a / anaconda))'],"[s, attr-instance, snake, attr-domain, [a, attr-instance, anaconda]]"
442,442,442,442,548,1717,anakonda,Eine Anakonda ist die größte Schlange der Welt.,1_short,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=Anakonda 2:=ist 3:=die 4:=größte 5:=Schlange 6:=der 7:=Welt.,1,,An anaconda is the largest snake in the world.,['# ::snt An anaconda is the largest snake in the world.\n(h / have-degree-91\n      :ARG1 (a / anaconda)\n      :ARG2 (l / large)\n      :ARG3 (m / most)\n      :ARG5 (s / snake\n            :location (w / world)))'],"[h, attr-instance, have_degree_91, attr-arg1, [a, attr-instance, anaconda], attr-arg2, [l, attr-instance, large], attr-arg3, [m, attr-instance, most], attr-arg5, [s, attr-instance, snake, attr-location, [w, attr-instance, world]]]"
443,443,443,443,549,1718,anakonda,Eine Anakonda ist auch die schwerste Schlange der Welt.,2_short,Tiere|Reptilien,2021-03-30T09:18:50Z,5fa944995d8c21065f2309550624baf9,0:=Eine 1:=Anakonda 2:=ist 3:=auch 4:=die 5:=schwerste 6:=Schlange 7:=der 8:=Welt.,1,,An anaconda is also the heaviest snake in the world.,['# ::snt An anaconda is also the heaviest snake in the world.\n(h / have-degree-91\n      :ARG1 (a / anaconda)\n      :ARG2 (h2 / heavy)\n      :ARG3 (m / most)\n      :ARG5 (s / snake\n            :location (w / world))\n      :mod (a2 / also))'],"[h, attr-instance, have_degree_91, attr-arg1, [a, attr-instance, anaconda], attr-arg2, [h2, attr-instance, heavy], attr-arg3, [m, attr-instance, most], attr-arg5, [s, attr-instance, snake, attr-location, [w, attr-instance, world]], attr-mod, [a2, attr-instance, also]]"
444,444,444,444,550,1719,analphabet,Es gibt verschiedene Arten von Analphabeten.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Es 1:=gibt 2:=verschiedene 3:=Arten 4:=von 5:=Analphabeten.,1,,There are different types of illiterates.,['# ::snt There are different types of illiterates.\n(t / type\n      :ARG1-of (d / differ-02)\n      :mod (ii / illiterate))'],"[t, attr-instance, type, attr-arg1_of, [d, attr-instance, differ_02], attr-mod, [ii, attr-instance, illiterate]]"
445,445,445,445,552,1721,analphabet,Dieser kann nicht schreiben und nicht lesen.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Dieser 1:=kann 2:=nicht 3:=schreiben 4:=und 5:=nicht 6:=lesen.,2,"[[2, 3], [5, 6]]",This one cannot write or read.,['# ::snt This one cannot write or read.\n(p / possible-01\n      :polarity -\n      :ARG1 (o / or\n            :op1 (w / write-01\n                  :ARG0 (o2 / one\n                        :mod (t / this)))\n            :op2 (r / read-01\n                  :ARG0 o2)))'],"[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [o, attr-instance, or, attr-op1, [w, attr-instance, write_01, attr-arg0, [o2, attr-instance, one, attr-mod, [t, attr-instance, this]]], attr-op2, [r, attr-instance, read_01, attr-arg0, o2]]]"
446,446,446,446,553,1722,analphabet,Er hat es nie gelernt.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Er 1:=hat 2:=es 3:=nie 4:=gelernt.,1,,He never learned it.,['# ::snt He never learned it.\n(l / learn-01\n      :polarity -\n      :ARG0 (h / he)\n      :ARG1 (ii / it)\n      :time (e / ever))'],"[l, attr-instance, learn_01, attr-polarity, negative, attr-arg0, [h, attr-instance, he], attr-arg1, [ii, attr-instance, it], attr-time, [e, attr-instance, ever]]"
447,447,447,447,554,1723,analphabet,Das gibt es oft in Entwicklungs-ländern.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Das 1:=gibt 2:=es 3:=oft 4:=in 5:=Entwicklungs-ländern.,1,,This often happens in developing countries.,['# ::snt This often happens in developing countries.\n(t / this\n      :frequency (o / often)\n      :location (c / country\n            :ARG1-of (d / develop-02)))'],"[t, attr-instance, this, attr-frequency, [o, attr-instance, often], attr-location, [c, attr-instance, country, attr-arg1_of, [d, attr-instance, develop_02]]]"
448,448,448,448,556,1726,analphabet,Er hat es aber mal gelernt.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Er 1:=hat 2:=es 3:=aber 4:=mal 5:=gelernt.,1,,But he learned it one day.,['# ::snt But he learned it one day.\n(c / contrast-01\n      :ARG2 (l / learn-01\n            :ARG0 (h / he)\n            :ARG1 (ii / it)\n            :time (d / day\n                  :mod (o / one))))'],"[c, attr-instance, contrast_01, attr-arg2, [l, attr-instance, learn_01, attr-arg0, [h, attr-instance, he], attr-arg1, [ii, attr-instance, it], attr-time, [d, attr-instance, day, attr-mod, [o, attr-instance, one]]]]"
449,449,449,449,557,1727,analphabet,Und dann wieder vergessen.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Und 1:=dann 2:=wieder 3:=vergessen.,1,,And then forgotten again.,['# ::snt And then forgotten again.\n(a / and\n      :op2 (f / forget-01\n            :time (t / then)\n            :mod (a2 / again)))'],"[a, attr-instance, and, attr-op2, [f, attr-instance, forget_01, attr-time, [t, attr-instance, then], attr-mod, [a2, attr-instance, again]]]"
450,450,450,450,559,1729,analphabet,Er kann lesen.,10_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Er 1:=kann 2:=lesen.,1,,He can read.,['# ::snt He can read.\n(p / possible-01\n      :ARG1 (r / read-01\n            :ARG0 (h / he)))'],"[p, attr-instance, possible_01, attr-arg1, [r, attr-instance, read_01, attr-arg0, [h, attr-instance, he]]]"
451,451,451,451,560,1730,analphabet,Er kann aber nicht schreiben.,11_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Er 1:=kann 2:=aber 3:=nicht 4:=schreiben.,1,,But he can't write.,"[""# ::snt But he can't write.\n(c / contrast-01\n      :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (w / write-01\n                  :ARG0 (h / he))))""]","[c, attr-instance, contrast_01, attr-arg2, [p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [w, attr-instance, write_01, attr-arg0, [h, attr-instance, he]]]]"
452,452,452,452,562,1732,analphabet,Er kann ein bisschen lesen.,13_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Er 1:=kann 2:=ein 3:=bisschen 4:=lesen.,1,,He can read a little.,['# ::snt He can read a little.\n(p / possible-01\n      :ARG1 (r / read-01\n            :ARG0 (h / he)\n            :degree (l / little)))'],"[p, attr-instance, possible_01, attr-arg1, [r, attr-instance, read_01, attr-arg0, [h, attr-instance, he], attr-degree, [l, attr-instance, little]]]"
453,453,453,453,563,1733,analphabet,Er kann ein bisschen schreiben.,14_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Er 1:=kann 2:=ein 3:=bisschen 4:=schreiben.,1,,He can write a little.,['# ::snt He can write a little.\n(p / possible-01\n      :ARG1 (w / write-01\n            :ARG0 (h / he)\n            :quant (l / little)))'],"[p, attr-instance, possible_01, attr-arg1, [w, attr-instance, write_01, attr-arg0, [h, attr-instance, he], attr-quant, [l, attr-instance, little]]]"
454,454,454,454,565,1735,analphabet,Er kann keine langen Texte lesen.,16_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Er 1:=kann 2:=keine 3:=langen 4:=Texte 5:=lesen.,1,,He cannot read long texts.,['# ::snt He cannot read long texts.\n(p / possible-01\n      :polarity -\n      :ARG1 (r / read-01\n            :ARG0 (h / he)\n            :ARG1 (t / text-01\n                  :ARG1-of (l / long-03))))'],"[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [r, attr-instance, read_01, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, text_01, attr-arg1_of, [l, attr-instance, long_03]]]]"
455,455,455,455,566,1736,analphabet,Er kann keine langen Texte verstehen.,17_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Er 1:=kann 2:=keine 3:=langen 4:=Texte 5:=verstehen.,1,,He cannot understand long texts.,['# ::snt He cannot understand long texts.\n(p / possible-01\n      :polarity -\n      :ARG1 (u / understand-01\n            :ARG0 (h / he)\n            :ARG1 (t / text\n                  :ARG1-of (l / long-03))))'],"[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [u, attr-instance, understand_01, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, text, attr-arg1_of, [l, attr-instance, long_03]]]]"
456,456,456,456,567,1737,analphabet,"In Deutschland gibt es ungefähr 7,5 Millionen funktionale Analphabeten.",18_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,"0:=In 1:=Deutschland 2:=gibt 3:=es 4:=ungefähr 5:=7,5 6:=Millionen 7:=funktionale 8:=Analphabeten.",1,,There are approximately 7.5 million functionally illiterate people in Germany.,"['# ::snt There are approximately 7.5 million functionally illiterate people in Germany.\n(p / person\n      :mod (ii / illiterate\n            :mod (f / functionally))\n      :quant (a / approximately\n            :op1 7500000)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[p, attr-instance, person, attr-mod, [ii, attr-instance, illiterate, attr-mod, [f, attr-instance, functionally]], attr-quant, [a, attr-instance, approximately, attr-op1, 7500000], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
457,457,457,457,568,1738,analphabet,Ein An-al-pha-bet ist eine Person.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Ein 1:=An-al-pha-bet 2:=ist 3:=eine 4:=Person.,1,,An-al-pha-bet is a person.,"['# ::snt An-al-pha-bet is a person.\n(p / person\n      :domain p\n      :name (n / name\n            :op1 ""Anal-pha-bet""))']","[p, attr-instance, person, attr-domain, p, attr-name, [n, attr-instance, name, attr-op1, ""anal_pha_bet""]]"
458,458,458,458,569,1739,analphabet,Eine Person die nicht richtig lesen und schreiben kann.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-09-08T10:46:12Z,cfbe77d115cd524def4ccbe596a54842,0:=Eine 1:=Person 2:=die 3:=nicht 4:=richtig 5:=lesen 6:=und 7:=schreiben 8:=kann.,2,"[[5], [7]]",A person who cannot read and write properly.,['# ::snt A person who cannot read and write properly.\n(p / person\n      :ARG1-of (c / capable-01\n            :polarity -\n            :ARG2 (a / and\n                  :op1 (r / read-01\n                        :ARG0 p)\n                  :op2 (w / write-01\n                        :ARG0 p)\n                  :manner (p2 / proper))))'],"[p, attr-instance, person, attr-arg1_of, [c, attr-instance, capable_01, attr-polarity, negative, attr-arg2, [a, attr-instance, and, attr-op1, [r, attr-instance, read_01, attr-arg0, p], attr-op2, [w, attr-instance, write_01, attr-arg0, p], attr-manner, [p2, attr-instance, proper]]]]"
459,459,459,459,570,1740,anamnese,Das erste Gespräch zwischen Therapeut und Patient heißt: Anamnese.,0_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2020-12-30T16:21:28Z,071517655685f140a415c26a1bfd2837,0:=Das 1:=erste 2:=Gespräch 3:=zwischen 4:=Therapeut 5:=und 6:=Patient 7:=heißt: 8:=Anamnese.,2,"[[1, 7, 8], [3, 4, 5, 6]]",The first conversation between therapist and patient is called anamnesis.,['# ::snt The first conversation between therapist and patient is called anamnesis.\n(c / call-01\n      :ARG1 (c2 / converse-01\n            :ARG0 (t / therapist)\n            :ARG2 (p / patient)\n            :ord (o / ordinal-entity\n                  :value 1))\n      :ARG2 (a / anamnesis))'],"[c, attr-instance, call_01, attr-arg1, [c2, attr-instance, converse_01, attr-arg0, [t, attr-instance, therapist], attr-arg2, [p, attr-instance, patient], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]], attr-arg2, [a, attr-instance, anamnesis]]"
460,460,460,460,571,1741,anamnese,Der Patient erzählt von seinen Problemen.,1_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2020-12-30T16:21:28Z,071517655685f140a415c26a1bfd2837,0:=Der 1:=Patient 2:=erzählt 3:=von 4:=seinen 5:=Problemen.,1,,The patient talks about his problems.,['# ::snt The patient talks about his problems.\n(t / talk-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (p2 / patient)))\n      :ARG1 (p3 / problem\n            :poss p))'],"[t, attr-instance, talk_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg2, [p2, attr-instance, patient]]], attr-arg1, [p3, attr-instance, problem, attr-poss, p]]"
461,461,461,461,572,1742,anamnese,Der Therapeut stellt dem Patienten viele Fragen.,2_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2020-12-30T16:21:28Z,071517655685f140a415c26a1bfd2837,0:=Der 1:=Therapeut 2:=stellt 3:=dem 4:=Patienten 5:=viele 6:=Fragen.,1,,The therapist asks the patient many questions.,['# ::snt The therapist asks the patient many questions.\n(a / ask-01\n      :ARG0 (t / therapist)\n      :ARG1 (q / question-01\n            :quant (m / many))\n      :ARG2 (p / patient))'],"[a, attr-instance, ask_01, attr-arg0, [t, attr-instance, therapist], attr-arg1, [q, attr-instance, question_01, attr-quant, [m, attr-instance, many]], attr-arg2, [p, attr-instance, patient]]"
462,462,462,462,578,1748,anamnese,So kann der Therapeut das Problem besser verstehen.,8_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2020-12-30T16:21:28Z,071517655685f140a415c26a1bfd2837,0:=So 1:=kann 2:=der 3:=Therapeut 4:=das 5:=Problem 6:=besser 7:=verstehen.,1,,This helps the therapist better understand the problem.,['# ::snt This helps the therapist better understand the problem.\n(h / help-01\n      :ARG0 (t / this)\n      :ARG1 (u / understand-01\n            :ARG0 (t2 / therapist)\n            :ARG1 (p / problem)\n            :ARG1-of (h2 / have-degree-91\n                  :ARG2 (g / good-02)\n                  :ARG3 (m / more)))\n      :ARG2 t2)'],"[h, attr-instance, help_01, attr-arg0, [t, attr-instance, this], attr-arg1, [u, attr-instance, understand_01, attr-arg0, [t2, attr-instance, therapist], attr-arg1, [p, attr-instance, problem], attr-arg1_of, [h2, attr-instance, have_degree_91, attr-arg2, [g, attr-instance, good_02], attr-arg3, [m, attr-instance, more]]], attr-arg2, t2]"
463,463,463,463,579,1749,anamnese,Dann kann der Therapeut dem Patienten besser helfen.,9_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2020-12-30T16:21:28Z,071517655685f140a415c26a1bfd2837,0:=Dann 1:=kann 2:=der 3:=Therapeut 4:=dem 5:=Patienten 6:=besser 7:=helfen.,2,"[[0, 1, 3, 5], [6]]",Then the therapist can help the patient better.,['# ::snt Then the therapist can help the patient better.\n(p / possible-01\n      :ARG1 (h / help-01\n            :ARG0 (t / therapist)\n            :ARG1 (p2 / patient)\n            :ARG1-of (h2 / have-degree-91\n                  :ARG2 (g / good-02\n                        :ARG1 h)\n                  :ARG3 (m / more)))\n      :time (t2 / then))'],"[p, attr-instance, possible_01, attr-arg1, [h, attr-instance, help_01, attr-arg0, [t, attr-instance, therapist], attr-arg1, [p2, attr-instance, patient], attr-arg1_of, [h2, attr-instance, have_degree_91, attr-arg2, [g, attr-instance, good_02, attr-arg1, h], attr-arg3, [m, attr-instance, more]]], attr-time, [t2, attr-instance, then]]"
464,464,464,464,580,1750,anamnese,Eine Anamnese ist eine Vor-geschichte.,0_short,Gesundheit|Seiten_mit_defekten_Dateilinks,2020-12-30T16:21:28Z,071517655685f140a415c26a1bfd2837,0:=Eine 1:=Anamnese 2:=ist 3:=eine 4:=Vor-geschichte.,1,,An anamnesis is a history.,['# ::snt An anamnesis is a history.\n(h / history\n      :domain (a / an))'],"[h, attr-instance, history, attr-domain, [a, attr-instance, an]]"
465,465,465,465,582,1753,anarchismus,Im Anarchismus gibt es keine Regierung.,0_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Anarchismus 2:=gibt 3:=es 4:=keine 5:=Regierung.,1,,In anarchism there is no government.,['# ::snt In anarchism there is no government.\n(g / govern-01\n      :polarity -\n      :ARG0 (a / anarchist))'],"[g, attr-instance, govern_01, attr-polarity, negative, attr-arg0, [a, attr-instance, anarchist]]"
466,466,466,466,583,1754,anarchismus,Es gibt keine Könige oder Präsidenten.,1_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=keine 3:=Könige 4:=oder 5:=Präsidenten.,2,"[[3], [5]]",There are no kings or presidents.,['# ::snt There are no kings or presidents.\n(o / or\n      :polarity -\n      :op1 (k / king)\n      :op2 (p / president))'],"[o, attr-instance, or, attr-polarity, negative, attr-op1, [k, attr-instance, king], attr-op2, [p, attr-instance, president]]"
467,467,467,467,584,1755,anarchismus,Manchmal kann es aber Anführer geben.,2_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Manchmal 1:=kann 2:=es 3:=aber 4:=Anführer 5:=geben.,1,,But sometimes there can be leaders.,['# ::snt But sometimes there can be leaders.\n(c / contrast-01\n      :ARG2 (p / possible-01\n            :ARG1 (p2 / person\n                  :ARG0-of (l / lead-02))\n            :time (s / sometimes)))'],"[c, attr-instance, contrast_01, attr-arg2, [p, attr-instance, possible_01, attr-arg1, [p2, attr-instance, person, attr-arg0_of, [l, attr-instance, lead_02]], attr-time, [s, attr-instance, sometimes]]]"
468,468,468,468,585,1756,anarchismus,"Aber nur, \newline wenn alle Menschen in einer Gruppe das wollen.",3_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Aber 1:=nur, 2:=\newline 3:=wenn 4:=alle 5:=Menschen 6:=in 7:=einer 8:=Gruppe 9:=das 10:=wollen.",3,"[[0, 1], [3, 4, 5, 9, 10], [6, 8]]",But only if all people in a group want it.,['# ::snt But only if all people in a group want it.\n(c / contrast-01\n      :ARG2 (c2 / condition-01\n            :ARG2 (w / want-01\n                  :ARG0 (p / person\n                        :mod (a / all)\n                        :ARG1-of (ii / include-91\n                              :ARG2 (g / group)))\n                  :ARG1 (ii2 / it))\n            :mod (o / only)))'],"[c, attr-instance, contrast_01, attr-arg2, [c2, attr-instance, condition_01, attr-arg2, [w, attr-instance, want_01, attr-arg0, [p, attr-instance, person, attr-mod, [a, attr-instance, all], attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [g, attr-instance, group]]], attr-arg1, [ii2, attr-instance, it]], attr-mod, [o, attr-instance, only]]]"
469,469,469,469,587,1758,anarchismus,Zum Beispiel bis eine Aufgabe zu Ende ist.,5_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=bis 3:=eine 4:=Aufgabe 5:=zu 6:=Ende 7:=ist.,1,,"For example, until a task is finished.","['# ::snt For example, until a task is finished.\n(e / exemplify-01\n      :time (u / until\n            :op1 (f / finish-01\n                  :ARG1 (t / task))))']","[e, attr-instance, exemplify_01, attr-time, [u, attr-instance, until, attr-op1, [f, attr-instance, finish_01, attr-arg1, [t, attr-instance, task]]]]"
470,470,470,470,588,1759,anarchismus,Beim Anarchismus organisieren alle das Leben zusammen.,6_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beim 1:=Anarchismus 2:=organisieren 3:=alle 4:=das 5:=Leben 6:=zusammen.,1,,"In anarchism, everyone organizes life together.","['# ::snt In anarchism, everyone organizes life together.\n(o / organize-01\n      :ARG0 (e / everyone)\n      :ARG1 (l / life)\n      :manner (t / together)\n      :location (a / anarchist))']","[o, attr-instance, organize_01, attr-arg0, [e, attr-instance, everyone], attr-arg1, [l, attr-instance, life], attr-manner, [t, attr-instance, together], attr-location, [a, attr-instance, anarchist]]"
471,471,471,471,589,1760,anarchismus,Alle Menschen bestimmen mit.,7_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alle 1:=Menschen 2:=bestimmen 3:=mit.,1,,Everyone has a say.,['# ::snt Everyone has a say.\n(h / have-03\n      :ARG0 (e / everyone)\n      :ARG1 (s / say-01))'],"[h, attr-instance, have_03, attr-arg0, [e, attr-instance, everyone], attr-arg1, [s, attr-instance, say_01]]"
472,472,472,472,590,1761,anarchismus,Menschen im Anarchismus gründen kleine Gemeinschaften.,8_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Menschen 1:=im 2:=Anarchismus 3:=gründen 4:=kleine 5:=Gemeinschaften.,3,"[[0, 3, 5], [1, 2], [4, 5]]",People in anarchism form small communities.,['# ::snt People in anarchism form small communities.\n(f / form-01\n      :ARG0 (p / person\n            :mod (a / anarchist))\n      :ARG1 (c / community\n            :mod (s / small)))'],"[f, attr-instance, form_01, attr-arg0, [p, attr-instance, person, attr-mod, [a, attr-instance, anarchist]], attr-arg1, [c, attr-instance, community, attr-mod, [s, attr-instance, small]]]"
473,473,473,473,591,1762,anarchismus,Und sie gründen kleine Gruppen.,9_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=gründen 3:=kleine 4:=Gruppen.,2,"[[0, 1, 2, 4], [3]]",And they form small groups.,['# ::snt And they form small groups.\n(a / and\n      :op2 (f / form-01\n            :ARG0 (t / they)\n            :ARG1 (g / group\n                  :mod (s / small))))'],"[a, attr-instance, and, attr-op2, [f, attr-instance, form_01, attr-arg0, [t, attr-instance, they], attr-arg1, [g, attr-instance, group, attr-mod, [s, attr-instance, small]]]]"
474,474,474,474,593,1764,anarchismus,Die Gemeinschaften kümmern sich selber um ihre Sachen.,11_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Gemeinschaften 2:=kümmern 3:=sich 4:=selber 5:=um 6:=ihre 7:=Sachen.,1,,The communities take care of their own affairs.,['# ::snt The communities take care of their own affairs.\n(c / care-03\n      :ARG0 (c2 / community)\n      :ARG1 (a / affair-02\n            :ARG1 c2))'],"[c, attr-instance, care_03, attr-arg0, [c2, attr-instance, community], attr-arg1, [a, attr-instance, affair_02, attr-arg1, c2]]"
475,475,475,475,594,1765,anarchismus,Sie beraten was sie zu tun haben.,12_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=beraten 2:=was 3:=sie 4:=zu 5:=tun 6:=haben.,2,"[[0, 1], [2, 3, 4, 5, 6]]",They advise what to do.,['# ::snt They advise what to do.\n(a / advise-01\n      :ARG0 (t / they)\n      :ARG2 (t2 / thing\n            :ARG1-of (d / do-02)))'],"[a, attr-instance, advise_01, attr-arg0, [t, attr-instance, they], attr-arg2, [t2, attr-instance, thing, attr-arg1_of, [d, attr-instance, do_02]]]"
476,476,476,476,595,1766,anarchismus,Gemeinschaften können sich gegenseitig helfen.,13_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Gemeinschaften 1:=können 2:=sich 3:=gegenseitig 4:=helfen.,1,,Communities can help each other.,['# ::snt Communities can help each other.\n(p / possible-01\n      :ARG1 (h / help-01\n            :ARG0 (c / community)\n            :ARG2 c))'],"[p, attr-instance, possible_01, attr-arg1, [h, attr-instance, help_01, attr-arg0, [c, attr-instance, community], attr-arg2, c]]"
477,477,477,477,596,1767,anarchismus,Jeder soll freiwillig in einer Gruppe mit-machen können.,14_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Jeder 1:=soll 2:=freiwillig 3:=in 4:=einer 5:=Gruppe 6:=mit-machen 7:=können.,3,"[[0, 1, 6, 7], [2], [3, 5]]",Everyone should be able to participate in a group voluntarily.,['# ::snt Everyone should be able to participate in a group voluntarily.\n(r / recommend-01\n      :ARG1 (p / possible-01\n            :ARG1 (p2 / participate-01\n                  :ARG0 (e / everyone)\n                  :ARG1 (g / group)\n                  :ARG1-of (v / voluntary-02))))'],"[r, attr-instance, recommend_01, attr-arg1, [p, attr-instance, possible_01, attr-arg1, [p2, attr-instance, participate_01, attr-arg0, [e, attr-instance, everyone], attr-arg1, [g, attr-instance, group], attr-arg1_of, [v, attr-instance, voluntary_02]]]]"
478,478,478,478,597,1768,anarchismus,Die Menschen in der Gemeinschaft kümmern sich umeinander.,15_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Menschen 2:=in 3:=der 4:=Gemeinschaft 5:=kümmern 6:=sich 7:=umeinander.,2,"[[2, 4], [5, 6, 7]]",People in the community care for each other.,['# ::snt People in the community care for each other.\n(c / care-03\n      :ARG0 (p / person\n            :location (c2 / community)\n            :ARG1-of c))'],"[c, attr-instance, care_03, attr-arg0, [p, attr-instance, person, attr-location, [c2, attr-instance, community], attr-arg1_of, c]]"
479,479,479,479,598,1769,anarchismus,Und sie helfen sich gegenseitig.,16_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=helfen 3:=sich 4:=gegenseitig.,1,,And they help each other.,['# ::snt And they help each other.\n(a / and\n      :op2 (h / help-01\n            :ARG0 (t / they)\n            :ARG2 (o / other\n                  :mod (e / each))))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, help_01, attr-arg0, [t, attr-instance, they], attr-arg2, [o, attr-instance, other, attr-mod, [e, attr-instance, each]]]]"
480,480,480,480,599,1770,anarchismus,Menschen im Anarchismus geben gerne etwas von ihren eigenen Sachen ab.,17_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Menschen 1:=im 2:=Anarchismus 3:=geben 4:=gerne 5:=etwas 6:=von 7:=ihren 8:=eigenen 9:=Sachen 10:=ab.,3,"[[0, 3, 5, 6, 7, 8, 9, 10], [1, 2], [4]]",People in anarchism like to give away some of their own things.,['# ::snt People in anarchism like to give away some of their own things.\n(l / like-01\n      :ARG0 (p / person\n            :location (a / anarchist))\n      :ARG1 (g / give-away-02\n            :ARG0 p\n            :ARG1 (t / thing\n                  :quant (s / some)\n                  :ARG1-of (o / own-01\n                        :ARG0 p))))'],"[l, attr-instance, like_01, attr-arg0, [p, attr-instance, person, attr-location, [a, attr-instance, anarchist]], attr-arg1, [g, attr-instance, give_away_02, attr-arg0, p, attr-arg1, [t, attr-instance, thing, attr-quant, [s, attr-instance, some], attr-arg1_of, [o, attr-instance, own_01, attr-arg0, p]]]]"
481,481,481,481,600,1771,anarchismus,Sie teilen ihre Sachen mit anderen Menschen.,18_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=teilen 2:=ihre 3:=Sachen 4:=mit 5:=anderen 6:=Menschen.,2,"[[0, 1, 2, 3], [4, 5, 6]]",They share their things with other people.,['# ::snt They share their things with other people.\n(s / share-01\n      :ARG0 (t / they)\n      :ARG1 (t2 / thing\n            :poss t)\n      :ARG2 (p / person\n            :mod (o / other)))'],"[s, attr-instance, share_01, attr-arg0, [t, attr-instance, they], attr-arg1, [t2, attr-instance, thing, attr-poss, t], attr-arg2, [p, attr-instance, person, attr-mod, [o, attr-instance, other]]]"
482,482,482,482,601,1772,anarchismus,"Jemand der an den Anarchismus glaubt, \newline ist Anarchistisch.",19_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Jemand 1:=der 2:=an 3:=den 4:=Anarchismus 5:=glaubt, 6:=\newline 7:=ist 8:=Anarchistisch.",2,"[[1, 2, 4, 5], [7, 8]]","Someone who believes in anarchism, \newline is anarchist.","['# ::snt Someone who believes in anarchism, \\newline is anarchist.\n(a / anarchist\n      :domain (p / person\n            :name (n / name\n                  :op1 ""atlana"")\n            :ARG0-of (b / believe-01\n                  :ARG1 (a2 / anarchist))))']","[a, attr-instance, anarchist, attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""atlana""], attr-arg0_of, [b, attr-instance, believe_01, attr-arg1, [a2, attr-instance, anarchist]]]]"
483,483,483,483,602,1773,anarchismus,"Eine Frau die an den Anarchismus glaubt, \newline ist eine Anarchistin.",20_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Eine 1:=Frau 2:=die 3:=an 4:=den 5:=Anarchismus 6:=glaubt, 7:=\newline 8:=ist 9:=eine 10:=Anarchistin.",2,"[[2, 3, 5, 6], [8, 10]]","A woman who believes in anarchism, \newline is an anarchist.","['# ::snt A woman who believes in anarchism, \\newline is an anarchist.\n(a / anarchist\n      :domain (w / woman\n            :ARG0-of (b / believe-01\n                  :ARG1 (a2 / anarchist\n                        :domain (n / name\n                              :op1 ""Anarchism"")))))']","[a, attr-instance, anarchist, attr-domain, [w, attr-instance, woman, attr-arg0_of, [b, attr-instance, believe_01, attr-arg1, [a2, attr-instance, anarchist, attr-domain, [n, attr-instance, name, attr-op1, ""anarchism""]]]]]"
484,484,484,484,603,1774,anarchismus,"Ein Mann der an den Anarchismus glaubt, \newline ist eine Anarchist.",21_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Ein 1:=Mann 2:=der 3:=an 4:=den 5:=Anarchismus 6:=glaubt, 7:=\newline 8:=ist 9:=eine 10:=Anarchist.",2,"[[2, 3, 5, 6], [8, 10]]","A man who believes in anarchism, \newline is an anarchist.","['# ::snt A man who believes in anarchism, \\newline is an anarchist.\n(a / anarchist\n      :domain (p / person\n            :name (n / name\n                  :op1 ""Anarchist"")\n            :domain (n2 / name\n                  :op1 ""Newline""))\n      :ARG1-of (b / believe-01\n            :ARG0 (m / man)))']","[a, attr-instance, anarchist, attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""anarchist""], attr-domain, [n2, attr-instance, name, attr-op1, ""newline""]], attr-arg1_of, [b, attr-instance, believe_01, attr-arg0, [m, attr-instance, man]]]"
485,485,485,485,604,1775,anarchismus,Anarchismus hat es früher in vielen Ländern gegeben.,22_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Anarchismus 1:=hat 2:=es 3:=früher 4:=in 5:=vielen 6:=Ländern 7:=gegeben.,2,"[[3], [4, 5, 6]]",Anarchism used to exist in many countries.,['# ::snt Anarchism used to exist in many countries.\n(e / exist-01\n      :ARG1 (a / anarchy)\n      :time (u / use-03)\n      :location (c / country\n            :quant (m / many)))'],"[e, attr-instance, exist_01, attr-arg1, [a, attr-instance, anarchy], attr-time, [u, attr-instance, use_03], attr-location, [c, attr-instance, country, attr-quant, [m, attr-instance, many]]]"
486,486,486,486,606,1777,anarchismus,Viele Menschen haben damals beim Anarchismus mitgemacht.,24_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Viele 1:=Menschen 2:=haben 3:=damals 4:=beim 5:=Anarchismus 6:=mitgemacht.,2,"[[3], [4, 5]]",Many people took part in anarchism at that time.,['# ::snt Many people took part in anarchism at that time.\n(p / participate-01\n      :ARG0 (p2 / person\n            :quant (m / many))\n      :ARG1 (a / anarchist)\n      :time (t / time\n            :mod (t2 / that)))'],"[p, attr-instance, participate_01, attr-arg0, [p2, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [a, attr-instance, anarchist], attr-time, [t, attr-instance, time, attr-mod, [t2, attr-instance, that]]]"
487,487,487,487,607,1778,anarchismus,Das ist vom Jahr 1936 bis zum Jahr 1939 gewesen.,25_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=ist 2:=vom 3:=Jahr 4:=1936 5:=bis 6:=zum 7:=Jahr 8:=1939 9:=gewesen.,2,"[[2, 3, 4], [5, 6, 7, 8]]",That was from the year 1936 to the year 1939.,['# ::snt That was from the year 1936 to the year 1939.\n(t / that\n      :time (d / date-interval\n            :op1 (d2 / date-entity\n                  :year 1936)\n            :op2 (d3 / date-entity\n                  :year 1939)))'],"[t, attr-instance, that, attr-time, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-year, 1936], attr-op2, [d3, attr-instance, date_entity, attr-year, 1939]]]"
488,488,488,488,608,1779,anarchismus,Anarchismus ist eine politische Idee.,26_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Anarchismus 1:=ist 2:=eine 3:=politische 4:=Idee.,2,"[[0, 1], [3]]",Anarchism is a political idea.,['# ::snt Anarchism is a political idea.\n(ii / idea\n      :mod (p / politics)\n      :domain (a / anarchy))'],"[ii, attr-instance, idea, attr-mod, [p, attr-instance, politics], attr-domain, [a, attr-instance, anarchy]]"
489,489,489,489,609,1780,anarchismus,Es soll kein Mensch über einen anderen bestimmen.,27_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=soll 2:=kein 3:=Mensch 4:=über 5:=einen 6:=anderen 7:=bestimmen.,1,,No one should rule over another.,['# ::snt No one should rule over another.\n(r / recommend-01\n      :ARG1 (r2 / rule-01\n            :ARG0 (n / no-one)\n            :ARG1 (a / another)))'],"[r, attr-instance, recommend_01, attr-arg1, [r2, attr-instance, rule_01, attr-arg0, [n, attr-instance, no_one], attr-arg1, [a, attr-instance, another]]]"
490,490,490,490,610,1781,anarchismus,Und es darf keine Hierarchie geben.,28_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=es 2:=darf 3:=keine 4:=Hierarchie 5:=geben.,1,,And there must be no hierarchy.,['# ::snt And there must be no hierarchy.\n(a / and\n      :op2 (o / obligate-01\n            :ARG2 (h / hierarchy\n                  :polarity -)))'],"[a, attr-instance, and, attr-op2, [o, attr-instance, obligate_01, attr-arg2, [h, attr-instance, hierarchy, attr-polarity, negative]]]"
491,491,491,491,611,1782,anarchismus,Keinen Menschen darf man zu etwas zwingen.,29_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Keinen 1:=Menschen 2:=darf 3:=man 4:=zu 5:=etwas 6:=zwingen.,1,,No one should be forced to do anything.,['# ::snt No one should be forced to do anything.\n(r / recommend-01\n      :ARG1 (f / force-01\n            :ARG1 (n / no-one)\n            :ARG2 (d / do-02\n                  :ARG0 n\n                  :ARG1 (a / anything))))'],"[r, attr-instance, recommend_01, attr-arg1, [f, attr-instance, force_01, attr-arg1, [n, attr-instance, no_one], attr-arg2, [d, attr-instance, do_02, attr-arg0, n, attr-arg1, [a, attr-instance, anything]]]]"
492,492,492,492,612,1783,anarchismus,Dadurch soll es keine Unterdrückung geben.,30_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Dadurch 1:=soll 2:=es 3:=keine 4:=Unterdrückung 5:=geben.,1,,This is to ensure there is no oppression.,['# ::snt This is to ensure there is no oppression.\n(h / have-purpose-91\n      :ARG1 (t / this)\n      :ARG2 (e / ensure-01\n            :ARG1 (o / oppress-01\n                  :polarity -)))'],"[h, attr-instance, have_purpose_91, attr-arg1, [t, attr-instance, this], attr-arg2, [e, attr-instance, ensure_01, attr-arg1, [o, attr-instance, oppress_01, attr-polarity, negative]]]"
493,493,493,493,613,1784,anarchismus,Im Anarchismus sind diese Sachen für die Menschen besonders wichtig: • Freiheit,31_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Anarchismus 2:=sind 3:=diese 4:=Sachen 5:=für 6:=die 7:=Menschen 8:=besonders 9:=wichtig: 10:=• 11:=Freiheit,4,"[[0, 1, 2, 3, 4, 9], [5, 6, 7, 9], [8, 9], [11]]","In anarchism, these things are particularly important for people: • Freedom","['# ::snt In anarchism, these things are particularly important for people: • Freedom\n(ii / important-01\n      :ARG1 (t / thing\n            :mod (t2 / this)\n            :example (f / free-04))\n      :ARG2 (p / person)\n      :mod (p2 / particular)\n      :topic (a / anarchist))']","[ii, attr-instance, important_01, attr-arg1, [t, attr-instance, thing, attr-mod, [t2, attr-instance, this], attr-example, [f, attr-instance, free_04]], attr-arg2, [p, attr-instance, person], attr-mod, [p2, attr-instance, particular], attr-topic, [a, attr-instance, anarchist]]"
494,494,494,494,614,1785,anarchismus,Im Anarchismus sind diese Sachen für die Menschen besonders wichtig: • Selbstbestimmung,32_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Anarchismus 2:=sind 3:=diese 4:=Sachen 5:=für 6:=die 7:=Menschen 8:=besonders 9:=wichtig: 10:=• 11:=Selbstbestimmung,4,"[[0, 1, 2, 3, 4, 9], [5, 6, 7, 9], [8, 9], [11]]","In anarchism, these things are particularly important for people: • Self-determination","['# ::snt In anarchism, these things are particularly important for people: • Self-determination\n(ii / important-01\n      :ARG1 (t / thing\n            :mod (t2 / this)\n            :example (d / decide-01\n                  :ARG0 (p / person)\n                  :ARG1 p))\n      :ARG2 p\n      :mod (p2 / particular)\n      :topic (a / anarchist))']","[ii, attr-instance, important_01, attr-arg1, [t, attr-instance, thing, attr-mod, [t2, attr-instance, this], attr-example, [d, attr-instance, decide_01, attr-arg0, [p, attr-instance, person], attr-arg1, p]], attr-arg2, p, attr-mod, [p2, attr-instance, particular], attr-topic, [a, attr-instance, anarchist]]"
495,495,495,495,615,1786,anarchismus,Im Anarchismus sind diese Sachen für die Menschen besonders wichtig: • Gleichberechtigung,33_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Anarchismus 2:=sind 3:=diese 4:=Sachen 5:=für 6:=die 7:=Menschen 8:=besonders 9:=wichtig: 10:=• 11:=Gleichberechtigung,4,"[[0, 1, 2, 3, 4, 9], [5, 6, 7, 9], [8, 9], [11]]","In anarchism, these things are particularly important for people: • Equality","['# ::snt In anarchism, these things are particularly important for people: • Equality\n(ii / important-01\n      :ARG1 (t / thing\n            :mod (t2 / this)\n            :example (e / equal-01))\n      :ARG2 (p / person)\n      :mod (p2 / particular)\n      :location (a / anarchist))']","[ii, attr-instance, important_01, attr-arg1, [t, attr-instance, thing, attr-mod, [t2, attr-instance, this], attr-example, [e, attr-instance, equal_01]], attr-arg2, [p, attr-instance, person], attr-mod, [p2, attr-instance, particular], attr-location, [a, attr-instance, anarchist]]"
496,496,496,496,616,1787,anarchismus,Im Anarchismus sind diese Sachen für die Menschen besonders wichtig: • Selbstverwirklichung,34_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Anarchismus 2:=sind 3:=diese 4:=Sachen 5:=für 6:=die 7:=Menschen 8:=besonders 9:=wichtig: 10:=• 11:=Selbstverwirklichung,4,"[[0, 1, 2, 3, 4, 9], [5, 6, 7, 9], [8, 9], [11]]","In anarchism, these things are particularly important for people: • Self-realization","['# ::snt In anarchism, these things are particularly important for people: • Self-realization\n(ii / important-01\n      :ARG1 (t / thing\n            :mod (t2 / this)\n            :example (r / realize-01\n                  :ARG0 (p / person)\n                  :ARG1 p))\n      :ARG2 p\n      :mod (p2 / particular)\n      :location (a / anarchist))']","[ii, attr-instance, important_01, attr-arg1, [t, attr-instance, thing, attr-mod, [t2, attr-instance, this], attr-example, [r, attr-instance, realize_01, attr-arg0, [p, attr-instance, person], attr-arg1, p]], attr-arg2, p, attr-mod, [p2, attr-instance, particular], attr-location, [a, attr-instance, anarchist]]"
497,497,497,497,617,1788,anarchismus,Im Anarchismus sind diese Sachen für die Menschen besonders wichtig: • selber Sachen zu machen und zu kontrollieren,35_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Anarchismus 2:=sind 3:=diese 4:=Sachen 5:=für 6:=die 7:=Menschen 8:=besonders 9:=wichtig: 10:=• 11:=selber 12:=Sachen 13:=zu 14:=machen 15:=und 16:=zu 17:=kontrollieren,5,"[[0, 1, 2, 3, 4, 9], [5, 6, 7, 9], [8, 9], [11, 12, 13, 14], [11, 12, 16, 17]]","In anarchism, these things are particularly important for people: • to do things yourself and to control them","['# ::snt In anarchism, these things are particularly important for people: • to do things yourself and to control them\n(ii / important-01\n      :ARG1 (t / thing\n            :mod (t2 / this)\n            :example (a / and\n                  :op1 (d / do-02\n                        :ARG0 (y / you)\n                        :ARG1 (t3 / thing))\n                  :op2 (c / control-01\n                        :ARG0 y\n                        :ARG1 t3)))\n      :ARG2 (p / person)\n      :mod (p2 / particular)\n      :topic (a2 / anarchist))']","[ii, attr-instance, important_01, attr-arg1, [t, attr-instance, thing, attr-mod, [t2, attr-instance, this], attr-example, [a, attr-instance, and, attr-op1, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you], attr-arg1, [t3, attr-instance, thing]], attr-op2, [c, attr-instance, control_01, attr-arg0, y, attr-arg1, t3]]], attr-arg2, [p, attr-instance, person], attr-mod, [p2, attr-instance, particular], attr-topic, [a2, attr-instance, anarchist]]"
498,498,498,498,618,1789,anarchismus,Im Anarchismus sind diese Sachen für die Menschen besonders wichtig: • Gewaltlosigkeit,36_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Anarchismus 2:=sind 3:=diese 4:=Sachen 5:=für 6:=die 7:=Menschen 8:=besonders 9:=wichtig: 10:=• 11:=Gewaltlosigkeit,4,"[[0, 1, 2, 3, 4, 9], [5, 6, 7, 9], [8, 9], [11]]","In anarchism, these things are particularly important for people: • Non-violence","['# ::snt In anarchism, these things are particularly important for people: • Non-violence\n(ii / important-01\n      :ARG1 (t / thing\n            :mod (t2 / this)\n            :ARG1-of (m / mean-01\n                  :ARG2 (v / violence\n                        :polarity -)))\n      :ARG2 (p / person)\n      :mod (p2 / particular)\n      :topic (a / anarchist))']","[ii, attr-instance, important_01, attr-arg1, [t, attr-instance, thing, attr-mod, [t2, attr-instance, this], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [v, attr-instance, violence, attr-polarity, negative]]], attr-arg2, [p, attr-instance, person], attr-mod, [p2, attr-instance, particular], attr-topic, [a, attr-instance, anarchist]]"
499,499,499,499,619,1790,anarchismus,Im Anarchismus sind diese Sachen für die Menschen besonders wichtig: • einzelne Menschen sollen keine Macht haben,37_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Anarchismus 2:=sind 3:=diese 4:=Sachen 5:=für 6:=die 7:=Menschen 8:=besonders 9:=wichtig: 10:=• 11:=einzelne 12:=Menschen 13:=sollen 14:=keine 15:=Macht 16:=haben,4,"[[0, 1, 2, 3, 4, 9], [5, 6, 7, 9], [8, 9], [11, 12, 13, 14, 15, 16]]","In anarchism, these things are particularly important for people: • Individual people should not have any power","['# ::snt In anarchism, these things are particularly important for people: • Individual people should not have any power\n(ii / important-01\n      :ARG1 (t / thing\n            :mod (t2 / this))\n      :ARG2 (p / person)\n      :mod (p2 / particular)\n      :topic (a / anarchist)\n      :ARG1-of (m / mean-01\n            :ARG2 (r / recommend-01\n                  :ARG1 (p3 / power-01\n                        :polarity -\n                        :ARG1 (p4 / person\n                              :mod (ii2 / individual))\n                        :mod (a2 / any)))))']","[ii, attr-instance, important_01, attr-arg1, [t, attr-instance, thing, attr-mod, [t2, attr-instance, this]], attr-arg2, [p, attr-instance, person], attr-mod, [p2, attr-instance, particular], attr-topic, [a, attr-instance, anarchist], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [r, attr-instance, recommend_01, attr-arg1, [p3, attr-instance, power_01, attr-polarity, negative, attr-arg1, [p4, attr-instance, person, attr-mod, [ii2, attr-instance, individual]], attr-mod, [a2, attr-instance, any]]]]]"
500,500,500,500,620,1791,anarchismus,Im Anarchismus gibt es viele Gruppen und Gemeinschaften.,38_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Anarchismus 2:=gibt 3:=es 4:=viele 5:=Gruppen 6:=und 7:=Gemeinschaften.,2,"[[5], [6]]",In anarchism there are many groups and communities.,['# ::snt In anarchism there are many groups and communities.\n(a / and\n      :op1 (g / group)\n      :op2 (c / community)\n      :quant (m / many)\n      :location (a2 / anarchist))'],"[a, attr-instance, and, attr-op1, [g, attr-instance, group], attr-op2, [c, attr-instance, community], attr-quant, [m, attr-instance, many], attr-location, [a2, attr-instance, anarchist]]"
501,501,501,501,621,1792,anarchismus,Sehr oft haben sie ihre eigenen Zeichen.,39_long,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sehr 1:=oft 2:=haben 3:=sie 4:=ihre 5:=eigenen 6:=Zeichen.,1,,Very often they have their own signs.,['# ::snt Very often they have their own signs.\n(h / have-03\n      :ARG0 (t / they)\n      :ARG1 (s / sign\n            :poss t)\n      :frequency (o / often\n            :degree (v / very)))'],"[h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [s, attr-instance, sign, attr-poss, t], attr-frequency, [o, attr-instance, often, attr-degree, [v, attr-instance, very]]]"
502,502,502,502,623,1795,anarchismus,Beim Anarchismus gibt es keine großen Chefs.,2_short,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beim 1:=Anarchismus 2:=gibt 3:=es 4:=keine 5:=großen 6:=Chefs.,2,"[[0, 1, 2, 3, 4], [5]]",In anarchism there are no big bosses.,['# ::snt In anarchism there are no big bosses.\n(b / boss\n      :polarity -\n      :mod (b2 / big)\n      :location (a / anarchist))'],"[b, attr-instance, boss, attr-polarity, negative, attr-mod, [b2, attr-instance, big], attr-location, [a, attr-instance, anarchist]]"
503,503,503,503,624,1796,anarchismus,"Das heißt, \newline es gibt keine Chefs die etwas bestimmen.",3_short,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=es 4:=gibt 5:=keine 6:=Chefs 7:=die 8:=etwas 9:=bestimmen.",2,"[[3, 4, 5], [7, 8, 9]]","That means, \newline there are no bosses who decide anything.","['# ::snt That means, \\newline there are no bosses who decide anything.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (p / person\n            :polarity -\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (b / boss))\n            :ARG0-of (d / decide-01\n                  :ARG1 (a / anything)))\n      :mod (n / newline))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [p, attr-instance, person, attr-polarity, negative, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [b, attr-instance, boss]], attr-arg0_of, [d, attr-instance, decide_01, attr-arg1, [a, attr-instance, anything]]], attr-mod, [n, attr-instance, newline]]"
504,504,504,504,625,1797,anarchismus,Niemand hat alleine das Sagen.,4_short,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Niemand 1:=hat 2:=alleine 3:=das 4:=Sagen.,1,,No one has the sole say.,['# ::snt No one has the sole say.\n(h / have-03\n      :ARG0 (n / no-one)\n      :ARG1 (s / say-01\n            :mod (s2 / sole)))'],"[h, attr-instance, have_03, attr-arg0, [n, attr-instance, no_one], attr-arg1, [s, attr-instance, say_01, attr-mod, [s2, attr-instance, sole]]]"
505,505,505,505,626,1798,anarchismus,Alle Menschen bestimmen beim Anarchismus mit.,5_short,Politik|Seiten_mit_defekten_Dateilinks,2016-04-25T17:26:24Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alle 1:=Menschen 2:=bestimmen 3:=beim 4:=Anarchismus 5:=mit.,1,,"In anarchism, everyone has a say.","['# ::snt In anarchism, everyone has a say.\n(h / have-03\n      :ARG0 (e / everyone)\n      :ARG1 (s / say-01)\n      :location (a / anarchy))']","[h, attr-instance, have_03, attr-arg0, [e, attr-instance, everyone], attr-arg1, [s, attr-instance, say_01], attr-location, [a, attr-instance, anarchy]]"
506,506,506,506,628,1800,anerkennen,Beim anerkennen gibt man seine Zustimmung zu etwas.,0_short,Ohne_Kategorie,2012-08-13T14:13:08Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Beim 1:=anerkennen 2:=gibt 3:=man 4:=seine 5:=Zustimmung 6:=zu 7:=etwas.,1,,"When you acknowledge something, you give your consent to it.","['# ::snt When you acknowledge something, you give your consent to it.\n(c / consent-01\n      :ARG0 (y / you)\n      :ARG1 (s / something)\n      :time (a / acknowledge-01\n            :ARG0 y\n            :ARG1 s))']","[c, attr-instance, consent_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-time, [a, attr-instance, acknowledge_01, attr-arg0, y, attr-arg1, s]]"
507,507,507,507,629,1801,angela-merkel,Angela Merkel wurde am 17. Juli 1954 in Hamburg geboren.,0_long,Personen|Politik|Hurraki:Überarbeiten,2008-02-02T10:48:33Z,e3afed0047b08059d0fada10f400c1e5,0:=Angela 1:=Merkel 2:=wurde 3:=am 4:=17. 5:=Juli 6:=1954 7:=in 8:=Hamburg 9:=geboren.,2,"[[3, 4, 5, 6], [7, 8]]","Angela Merkel was born on July 17, 1954 in Hamburg.","['# ::snt Angela Merkel was born on July 17, 1954 in Hamburg.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Angela""\n                  :op2 ""Merkel""))\n      :time (d / date-entity\n            :year 1954\n            :month 7\n            :day 17)\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""Hamburg"")))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""angela"", attr-op2, ""merkel""]], attr-time, [d, attr-instance, date_entity, attr-year, 1954, attr-month, 7, attr-day, 17], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""hamburg""]]]"
508,508,508,508,631,1803,angela-merkel,Im Jahr 1990 ist Angela Merkel Mitglied im Deutschen Bundestag geworden.,2_long,Personen|Politik|Hurraki:Überarbeiten,2008-02-02T10:48:33Z,e3afed0047b08059d0fada10f400c1e5,0:=Im 1:=Jahr 2:=1990 3:=ist 4:=Angela 5:=Merkel 6:=Mitglied 7:=im 8:=Deutschen 9:=Bundestag 10:=geworden.,3,"[[0, 1, 2, 3, 6, 10], [3, 4, 5, 6, 10], [6, 7, 8, 9]]","In 1990, Angela Merkel became a member of the German Bundestag.","['# ::snt In 1990, Angela Merkel became a member of the German Bundestag.\n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Angela""\n                  :op2 ""Merkel""))\n      :ARG2 (m / member\n            :ARG2-of (h / have-org-role-91\n                  :ARG0 p\n                  :ARG1 (g / government-organization\n                        :name (n2 / name\n                              :op1 ""German""\n                              :op2 ""Bundestag""))))\n      :time (d / date-entity\n            :year 1990))']","[b, attr-instance, become_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""angela"", attr-op2, ""merkel""]], attr-arg2, [m, attr-instance, member, attr-arg2_of, [h, attr-instance, have_org_role_91, attr-arg0, p, attr-arg1, [g, attr-instance, government_organization, attr-name, [n2, attr-instance, name, attr-op1, ""german"", attr-op2, ""bundestag""]]]], attr-time, [d, attr-instance, date_entity, attr-year, 1990]]"
509,509,509,509,632,1804,angela-merkel,Und sie ist gleichzeitig Mitglied bei der Partei CDU geworden.,3_long,Personen|Politik|Hurraki:Überarbeiten,2008-02-02T10:48:33Z,e3afed0047b08059d0fada10f400c1e5,0:=Und 1:=sie 2:=ist 3:=gleichzeitig 4:=Mitglied 5:=bei 6:=der 7:=Partei 8:=CDU 9:=geworden.,3,"[[0, 1, 2, 4, 5, 7], [7, 8], [2, 3, 4, 9]]","At the same time, she became a member of the CDU party.","['# ::snt At the same time, she became a member of the CDU party.\n(b / become-01\n      :ARG1 (s / she)\n      :ARG2 (m / member\n            :ARG2-of (h / have-org-role-91\n                  :ARG0 s\n                  :ARG1 (p / political-party\n                        :name (n / name\n                              :op1 ""CDU""))))\n      :time (t / time\n            :ARG1-of (s2 / same-01)))']","[b, attr-instance, become_01, attr-arg1, [s, attr-instance, she], attr-arg2, [m, attr-instance, member, attr-arg2_of, [h, attr-instance, have_org_role_91, attr-arg0, s, attr-arg1, [p, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""cdu""]]]], attr-time, [t, attr-instance, time, attr-arg1_of, [s2, attr-instance, same_01]]]"
510,510,510,510,635,1807,angela-merkel,Ihre Haar-farbe ist braun.,6_long,Personen|Politik|Hurraki:Überarbeiten,2008-02-02T10:48:33Z,e3afed0047b08059d0fada10f400c1e5,0:=Ihre 1:=Haar-farbe 2:=ist 3:=braun.,1,,Her hair color is brown.,['# ::snt Her hair color is brown.\n(c / color-01\n      :ARG1 (h / hair\n            :part-of (s / she))\n      :ARG2 (b / brown))'],"[c, attr-instance, color_01, attr-arg1, [h, attr-instance, hair, attr-part_of, [s, attr-instance, she]], attr-arg2, [b, attr-instance, brown]]"
511,511,511,511,636,1808,angela-merkel,Angela Merkel ist eine Politikerin.,0_short,Personen|Politik|Hurraki:Überarbeiten,2008-02-02T10:48:33Z,e3afed0047b08059d0fada10f400c1e5,0:=Angela 1:=Merkel 2:=ist 3:=eine 4:=Politikerin.,1,,Angela Merkel is a politician.,"['# ::snt Angela Merkel is a politician.\n(p / politician\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Angela""\n                  :op2 ""Merkel"")))']","[p, attr-instance, politician, attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""angela"", attr-op2, ""merkel""]]]"
512,512,512,512,639,1811,angeln,Fische kann man mit einer Angel fangen.,0_long,Sport|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2013-01-15T08:55:46Z,b950d35f9da29c3fdd02c8ad471d9965,0:=Fische 1:=kann 2:=man 3:=mit 4:=einer 5:=Angel 6:=fangen.,2,"[[0, 1, 2, 6], [3, 5]]",You can catch fish with a fishing rod.,['# ::snt You can catch fish with a fishing rod.\n(p / possible-01\n      :ARG1 (c / catch-03\n            :ARG0 (y / you)\n            :ARG1 (f / fish)\n            :instrument (r / rod\n                  :instrument-of (f2 / fish-01))))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, catch_03, attr-arg0, [y, attr-instance, you], attr-arg1, [f, attr-instance, fish], attr-instrument, [r, attr-instance, rod, attr-instrument_of, [f2, attr-instance, fish_01]]]]"
513,513,513,513,640,1812,angeln,Eine Angel ist eine Schnur mit einem haken.,1_long,Sport|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2013-01-15T08:55:46Z,b950d35f9da29c3fdd02c8ad471d9965,0:=Eine 1:=Angel 2:=ist 3:=eine 4:=Schnur 5:=mit 6:=einem 7:=haken.,2,"[[1, 2], [5, 7]]",A fishing rod is a line with a hook.,['# ::snt A fishing rod is a line with a hook.\n(l / line\n      :ARG0-of (h / hook-01)\n      :domain (r / rod\n            :purpose (f / fish-01)))'],"[l, attr-instance, line, attr-arg0_of, [h, attr-instance, hook_01], attr-domain, [r, attr-instance, rod, attr-purpose, [f, attr-instance, fish_01]]]"
514,514,514,514,641,1813,angeln,Man braucht auch einen Köder.,2_long,Sport|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2013-01-15T08:55:46Z,b950d35f9da29c3fdd02c8ad471d9965,0:=Man 1:=braucht 2:=auch 3:=einen 4:=Köder.,1,,You also need bait.,['# ::snt You also need bait.\n(n / need-01\n      :ARG0 (y / you)\n      :ARG1 (b / bait)\n      :mod (a / also))'],"[n, attr-instance, need_01, attr-arg0, [y, attr-instance, you], attr-arg1, [b, attr-instance, bait], attr-mod, [a, attr-instance, also]]"
515,515,515,515,642,1814,angeln,Der kommt an den Haken.,3_long,Sport|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2013-01-15T08:55:46Z,b950d35f9da29c3fdd02c8ad471d9965,0:=Der 1:=kommt 2:=an 3:=den 4:=Haken.,1,,He gets caught on the hook.,['# ::snt He gets caught on the hook.\n(c / catch-03\n      :ARG1 (h / he)\n      :ARG2 (h2 / hook))'],"[c, attr-instance, catch_03, attr-arg1, [h, attr-instance, he], attr-arg2, [h2, attr-instance, hook]]"
516,516,516,516,643,1815,angeln,Damit lockt man die Fische an.,4_long,Sport|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2013-01-15T08:55:46Z,b950d35f9da29c3fdd02c8ad471d9965,0:=Damit 1:=lockt 2:=man 3:=die 4:=Fische 5:=an.,1,,This is how you attract the fish.,['# ::snt This is how you attract the fish.\n(t / this\n      :manner-of (a / attract-01\n            :ARG0 (y / you)\n            :ARG1 (f / fish)))'],"[t, attr-instance, this, attr-manner_of, [a, attr-instance, attract_01, attr-arg0, [y, attr-instance, you], attr-arg1, [f, attr-instance, fish]]]"
517,517,517,517,644,1816,angeln,Es gibt verschiedene Arten zu angeln.,5_long,Sport|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2013-01-15T08:55:46Z,b950d35f9da29c3fdd02c8ad471d9965,0:=Es 1:=gibt 2:=verschiedene 3:=Arten 4:=zu 5:=angeln.,1,,There are different ways to fish.,['# ::snt There are different ways to fish.\n(w / way\n      :manner-of (f / fish-01)\n      :ARG1-of (d / differ-02))'],"[w, attr-instance, way, attr-manner_of, [f, attr-instance, fish_01], attr-arg1_of, [d, attr-instance, differ_02]]"
518,518,518,518,649,1821,angeln,Angeln heißt: \newline Fische mit einer Angel-rute fangen.,0_short,Sport|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2013-01-15T08:55:46Z,b950d35f9da29c3fdd02c8ad471d9965,0:=Angeln 1:=heißt: 2:=\newline 3:=Fische 4:=mit 5:=einer 6:=Angel-rute 7:=fangen.,3,"[[0, 1], [3, 7], [4, 6]]",Fishing means: \newline catching fish with a fishing rod.,['# ::snt Fishing means: \\newline catching fish with a fishing rod.\n(m / mean-01\n      :ARG1 (f / fish-01)\n      :ARG2 (c / catch-01\n            :ARG0 (l / line)\n            :ARG1 (f2 / fish-01)\n            :instrument (r / rod\n                  :instrument-of (f3 / fish-01))))'],"[m, attr-instance, mean_01, attr-arg1, [f, attr-instance, fish_01], attr-arg2, [c, attr-instance, catch_01, attr-arg0, [l, attr-instance, line], attr-arg1, [f2, attr-instance, fish_01], attr-instrument, [r, attr-instance, rod, attr-instrument_of, [f3, attr-instance, fish_01]]]]"
519,519,519,519,650,1822,angemessen,Beispiel: \newline Der Preis für die Schuhe ist in Ordnung.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-11-03T09:54:28Z,201e0effb656cbd3bfbc17b944eb536e,0:=Beispiel: 1:=\newline 2:=Der 3:=Preis 4:=für 5:=die 6:=Schuhe 7:=ist 8:=in 9:=Ordnung.,2,"[[4, 6], [7, 8, 9]]",Example: \newline The price for the shoes is fine.,"['# ::snt Example: \\newline The price for the shoes is fine.\n(e / exemplify-01\n      :ARG0 (f / fine-04\n            :ARG1 (t / thing\n                  :ARG2-of (p / price-01\n                        :ARG1 (s / shoe))))\n      :mod (c / company\n            :name (n / name\n                  :op1 ""Newline"")))']","[e, attr-instance, exemplify_01, attr-arg0, [f, attr-instance, fine_04, attr-arg1, [t, attr-instance, thing, attr-arg2_of, [p, attr-instance, price_01, attr-arg1, [s, attr-instance, shoe]]]], attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]]"
520,520,520,520,651,1823,angemessen,Oder: \newline Der Preis für die Schuhe ist angemessen.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-11-03T09:54:28Z,201e0effb656cbd3bfbc17b944eb536e,0:=Oder: 1:=\newline 2:=Der 3:=Preis 4:=für 5:=die 6:=Schuhe 7:=ist 8:=angemessen.,2,"[[4, 6], [7, 8]]",Or: \newline The price for the shoes is reasonable.,['# ::snt Or: \\newline The price for the shoes is reasonable.\n(o / or\n      :op2 (r / reasonable-02\n            :ARG1 (t / thing\n                  :ARG2-of (p / price-01\n                        :ARG1 (s / shoe)))))'],"[o, attr-instance, or, attr-op2, [r, attr-instance, reasonable_02, attr-arg1, [t, attr-instance, thing, attr-arg2_of, [p, attr-instance, price_01, attr-arg1, [s, attr-instance, shoe]]]]]"
521,521,521,521,652,1825,anglizismus,Angle-zismus sind Wörter.,0_long,Sprache|Seiten_mit_defekten_Dateilinks,2018-07-04T04:58:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Angle-zismus 1:=sind 2:=Wörter.,1,,Angle-zism are words.,"['# ::snt Angle-zism are words.\n(w / word-01\n      :ARG1 (a / anger-01\n            :ARG0 (p / political-movement\n                  :name (n / name\n                        :op1 ""Angle-zism""))))']","[w, attr-instance, word_01, attr-arg1, [a, attr-instance, anger_01, attr-arg0, [p, attr-instance, political_movement, attr-name, [n, attr-instance, name, attr-op1, ""angle_zism""]]]]"
522,522,522,522,653,1826,anglizismus,Die Wörter kommen aus der englischen Sprache.,1_long,Sprache|Seiten_mit_defekten_Dateilinks,2018-07-04T04:58:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Wörter 2:=kommen 3:=aus 4:=der 5:=englischen 6:=Sprache.,1,,The words come from the English language.,"['# ::snt The words come from the English language.\n(c / come-03\n      :ARG1 (w / word)\n      :ARG2 (l / language\n            :name (n / name\n                  :op1 ""English"")))']","[c, attr-instance, come_03, attr-arg1, [w, attr-instance, word], attr-arg2, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]]]"
523,523,523,523,654,1827,anglizismus,Sie haben die gleiche Bedeutung.,2_long,Sprache|Seiten_mit_defekten_Dateilinks,2018-07-04T04:58:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=haben 2:=die 3:=gleiche 4:=Bedeutung.,1,,They have the same meaning.,['# ::snt They have the same meaning.\n(m / mean-01\n      :ARG1 (t / they)\n      :ARG1-of (s / same-01))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, they], attr-arg1_of, [s, attr-instance, same_01]]"
524,524,524,524,655,1828,anglizismus,Genau wie die englischen Wörter.,3_long,Sprache|Seiten_mit_defekten_Dateilinks,2018-07-04T04:58:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Genau 1:=wie 2:=die 3:=englischen 4:=Wörter.,1,,Just like the English words.,"['# ::snt Just like the English words.\n(r / resemble-01\n      :ARG2 (w / word\n            :mod (l / language\n                  :name (n / name\n                        :op1 ""English"")))\n      :mod (j / just))']","[r, attr-instance, resemble_01, attr-arg2, [w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]]], attr-mod, [j, attr-instance, just]]"
525,525,525,525,656,1829,anglizismus,Angle-zismus ist eine Entlehnung.,4_long,Sprache|Seiten_mit_defekten_Dateilinks,2018-07-04T04:58:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Angle-zismus 1:=ist 2:=eine 3:=Entlehnung.,1,,Angle-zism is a borrowing.,"['# ::snt Angle-zism is a borrowing.\n(b / borrow-01\n      :domain (p / political-movement\n            :name (n / name\n                  :op1 ""Angle-zism"")))']","[b, attr-instance, borrow_01, attr-domain, [p, attr-instance, political_movement, attr-name, [n, attr-instance, name, attr-op1, ""angle_zism""]]]"
526,526,526,526,657,1830,anglizismus,Wenn es viel Angli-zismus gibt sagt man dazu Denglisch.,5_long,Sprache|Seiten_mit_defekten_Dateilinks,2018-07-04T04:58:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Wenn 1:=es 2:=viel 3:=Angli-zismus 4:=gibt 5:=sagt 6:=man 7:=dazu 8:=Denglisch.,2,"[[0, 1, 2, 3, 4], [5, 6, 7, 8]]","When there is a lot of Anglicism, it is called Denglisch.","['# ::snt When there is a lot of Anglicism, it is called Denglisch.\n(c / call-01\n      :ARG1 (ii / it)\n      :ARG2 (p / person\n            :name (n / name\n                  :op1 ""Denglisch""))\n      :condition (r / religious-group\n            :name (n2 / name\n                  :op1 ""Anglicism"")\n            :quant (l / lot)))']","[c, attr-instance, call_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""denglisch""]], attr-condition, [r, attr-instance, religious_group, attr-name, [n2, attr-instance, name, attr-op1, ""anglicism""], attr-quant, [l, attr-instance, lot]]]"
527,527,527,527,658,1831,anglizismus,Beim Anglizismus nimmt man englische Wörter.,0_short,Sprache|Seiten_mit_defekten_Dateilinks,2018-07-04T04:58:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beim 1:=Anglizismus 2:=nimmt 3:=man 4:=englische 5:=Wörter.,1,,Anglicisms use English words.,"['# ::snt Anglicisms use English words.\n(u / use-01\n      :ARG0 (r / regional-group\n            :name (n / name\n                  :op1 ""Anglicism""))\n      :ARG1 (w / word\n            :mod (l / language\n                  :name (n2 / name\n                        :op1 ""English""))))']","[u, attr-instance, use_01, attr-arg0, [r, attr-instance, regional_group, attr-name, [n, attr-instance, name, attr-op1, ""anglicism""]], attr-arg1, [w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""english""]]]]"
528,528,528,528,659,1832,anglizismus,Man bringt die Wörter dann in eine andere Sprache.,1_short,Sprache|Seiten_mit_defekten_Dateilinks,2018-07-04T04:58:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=bringt 2:=die 3:=Wörter 4:=dann 5:=in 6:=eine 7:=andere 8:=Sprache.,1,,You then translate the words into another language.,['# ::snt You then translate the words into another language.\n(t / translate-01\n      :ARG0 (y / you)\n      :ARG1 (w / word)\n      :ARG2 (l / language\n            :mod (a / another))\n      :time (t2 / then))'],"[t, attr-instance, translate_01, attr-arg0, [y, attr-instance, you], attr-arg1, [w, attr-instance, word], attr-arg2, [l, attr-instance, language, attr-mod, [a, attr-instance, another]], attr-time, [t2, attr-instance, then]]"
529,529,529,529,661,1834,angriff-in-las-vegas,Der Angriff in der Stadt Las Vegas passiert.,0_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Angriff 2:=in 3:=der 4:=Stadt 5:=Las 6:=Vegas 7:=passiert.,2,"[[4], [5, 6]]",The attack in the city of Las Vegas happens.,"['# ::snt The attack in the city of Las Vegas happens.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Las""\n                  :op2 ""Vegas"")))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""las"", attr-op2, ""vegas""]]]"
530,530,530,530,662,1835,angriff-in-las-vegas,Der Angriff ist ein Massaker gewesen.,1_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Angriff 2:=ist 3:=ein 4:=Massaker 5:=gewesen.,1,,The attack was a massacre.,['# ::snt The attack was a massacre.\n(m / massacre-01\n      :domain (a / attack-01))'],"[m, attr-instance, massacre_01, attr-domain, [a, attr-instance, attack_01]]"
531,531,531,531,663,1836,angriff-in-las-vegas,Am Abend vom 1. Oktober hat der Angriff angefangen.,2_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=Abend 2:=vom 3:=1. 4:=Oktober 5:=hat 6:=der 7:=Angriff 8:=angefangen.,2,"[[1], [3, 4]]",The attack began on the evening of October 1st.,['# ::snt The attack began on the evening of October 1st.\n(b / begin-01\n      :ARG1 (a / attack-01)\n      :time (d / date-entity\n            :day 1\n            :month 10\n            :dayperiod (e / evening)))'],"[b, attr-instance, begin_01, attr-arg1, [a, attr-instance, attack_01], attr-time, [d, attr-instance, date_entity, attr-day, 1, attr-month, 10, attr-dayperiod, [e, attr-instance, evening]]]"
532,532,532,532,664,1837,angriff-in-las-vegas,Der Angriff ist auf einem Country-Fest passiert.,3_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Angriff 2:=ist 3:=auf 4:=einem 5:=Country-Fest 6:=passiert.,1,,The attack happened at a country music festival.,['# ::snt The attack happened at a country music festival.\n(a / attack-01\n      :location (f / festival\n            :mod (m / music\n                  :mod (c / country))))'],"[a, attr-instance, attack_01, attr-location, [f, attr-instance, festival, attr-mod, [m, attr-instance, music, attr-mod, [c, attr-instance, country]]]]"
533,533,533,533,665,1838,angriff-in-las-vegas,Stephen Paddock hat auf die Menschen beim Fest geschossen.,4_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Stephen 1:=Paddock 2:=hat 3:=auf 4:=die 5:=Menschen 6:=beim 7:=Fest 8:=geschossen.,2,"[[3, 5], [6, 7]]",Stephen Paddock shot at people at the festival.,"['# ::snt Stephen Paddock shot at people at the festival.\n(s / shoot-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Stephen""\n                  :op2 ""P Paddock""))\n      :ARG2 (p2 / person)\n      :location (f / festival))']","[s, attr-instance, shoot_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]], attr-arg2, [p2, attr-instance, person], attr-location, [f, attr-instance, festival]]"
534,534,534,534,667,1840,angriff-in-las-vegas,Stephen Paddock hatte sehr viele Waffen dabei.,6_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Stephen 1:=Paddock 2:=hatte 3:=sehr 4:=viele 5:=Waffen 6:=dabei.,1,,Stephen Paddock had a lot of weapons with him.,"['# ::snt Stephen Paddock had a lot of weapons with him.\n(h / have-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Stephen""\n                  :op2 ""P Paddock""))\n      :ARG1 (w / weapon\n            :quant (l / lot))\n      :accompanier p)']","[h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]], attr-arg1, [w, attr-instance, weapon, attr-quant, [l, attr-instance, lot]], attr-accompanier, p]"
535,535,535,535,668,1841,angriff-in-las-vegas,Er hatte bei seinem Angriff über 20 Waffen dabei.,7_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hatte 2:=bei 3:=seinem 4:=Angriff 5:=über 6:=20 7:=Waffen 8:=dabei.,3,"[[0, 1, 7, 8], [5, 6, 7], [2, 3, 4, 8]]",He had over 20 weapons with him during his attack.,['# ::snt He had over 20 weapons with him during his attack.\n(h / have-03\n      :ARG0 (h2 / he)\n      :ARG1 (w / weapon\n            :quant (o / over\n                  :op1 20))\n      :time (a / attack-01\n            :ARG0 h2))'],"[h, attr-instance, have_03, attr-arg0, [h2, attr-instance, he], attr-arg1, [w, attr-instance, weapon, attr-quant, [o, attr-instance, over, attr-op1, 20]], attr-time, [a, attr-instance, attack_01, attr-arg0, h2]]"
536,536,536,536,669,1842,angriff-in-las-vegas,Die Waffen hatte er in seinem Hotel-zimmer.,8_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Waffen 2:=hatte 3:=er 4:=in 5:=seinem 6:=Hotel-zimmer.,1,,He had the weapons in his hotel room.,['# ::snt He had the weapons in his hotel room.\n(h / have-03\n      :ARG0 (h2 / he)\n      :ARG1 (w / weapon)\n      :location (r / room\n            :mod (h3 / hotel)\n            :poss h2))'],"[h, attr-instance, have_03, attr-arg0, [h2, attr-instance, he], attr-arg1, [w, attr-instance, weapon], attr-location, [r, attr-instance, room, attr-mod, [h3, attr-instance, hotel], attr-poss, h2]]"
537,537,537,537,671,1844,angriff-in-las-vegas,Im Auto hatte er auch Sprengstoff.,10_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Auto 2:=hatte 3:=er 4:=auch 5:=Sprengstoff.,1,,He also had explosives in the car.,['# ::snt He also had explosives in the car.\n(h / have-03\n      :ARG0 (h2 / he)\n      :ARG1 (e / explosive)\n      :location (c / car)\n      :mod (a / also))'],"[h, attr-instance, have_03, attr-arg0, [h2, attr-instance, he], attr-arg1, [e, attr-instance, explosive], attr-location, [c, attr-instance, car], attr-mod, [a, attr-instance, also]]"
538,538,538,538,672,1845,angriff-in-las-vegas,Stephen Paddock hat 58 Menschen getötet.,11_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Stephen 1:=Paddock 2:=hat 3:=58 4:=Menschen 5:=getötet.,1,,Stephen Paddock killed 58 people.,"['# ::snt Stephen Paddock killed 58 people.\n(k / kill-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Stephen""\n                  :op2 ""P Paddock""))\n      :ARG1 (p2 / person\n            :quant 58))']","[k, attr-instance, kill_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]], attr-arg1, [p2, attr-instance, person, attr-quant, 58]]"
539,539,539,539,673,1846,angriff-in-las-vegas,Und er hat über 500 Menschen verletzt.,12_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=er 2:=hat 3:=über 4:=500 5:=Menschen 6:=verletzt.,1,,And he injured over 500 people.,['# ::snt And he injured over 500 people.\n(a / and\n      :op2 (ii / injure-01\n            :ARG0 (h / he)\n            :ARG1 (p / person\n                  :quant (o / over\n                        :op1 500))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, person, attr-quant, [o, attr-instance, over, attr-op1, 500]]]]"
540,540,540,540,674,1847,angriff-in-las-vegas,Stephen Paddock hat den Angriff vorher geplant.,13_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Stephen 1:=Paddock 2:=hat 3:=den 4:=Angriff 5:=vorher 6:=geplant.,1,,Stephen Paddock planned the attack in advance.,"['# ::snt Stephen Paddock planned the attack in advance.\n(p / plan-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 ""Stephen""\n                  :op2 ""P Paddock""))\n      :ARG1 (a / attack-01)\n      :ARG1-of (ii / in-advance-04))']","[p, attr-instance, plan_01, attr-arg0, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]], attr-arg1, [a, attr-instance, attack_01], attr-arg1_of, [ii, attr-instance, in_advance_04]]"
541,541,541,541,675,1848,angriff-in-las-vegas,Vor dem Hotel-zimmer hat er Über-wachungs-kameras angebracht.,14_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Vor 1:=dem 2:=Hotel-zimmer 3:=hat 4:=er 5:=Über-wachungs-kameras 6:=angebracht.,2,"[[0, 2], [3, 4, 5, 6]]",He has installed surveillance cameras in front of the hotel room.,['# ::snt He has installed surveillance cameras in front of the hotel room.\n(ii / install-01\n      :ARG0 (h / he)\n      :ARG1 (c / camera\n            :ARG0-of (s / surveil-01))\n      :location (ii2 / in-front-of\n            :op1 (r / room\n                  :part-of (h2 / hotel))))'],"[ii, attr-instance, install_01, attr-arg0, [h, attr-instance, he], attr-arg1, [c, attr-instance, camera, attr-arg0_of, [s, attr-instance, surveil_01]], attr-location, [ii2, attr-instance, in_front_of, attr-op1, [r, attr-instance, room, attr-part_of, [h2, attr-instance, hotel]]]]"
542,542,542,542,676,1849,angriff-in-las-vegas,"Er wollte beobachten, ob jemand zu seinem Hotel-zimmer kommt.",15_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Er 1:=wollte 2:=beobachten, 3:=ob 4:=jemand 5:=zu 6:=seinem 7:=Hotel-zimmer 8:=kommt.",3,"[[0, 1, 2], [3, 4, 8], [5, 6, 7]]",He wanted to see if anyone was coming to his hotel room.,['# ::snt He wanted to see if anyone was coming to his hotel room.\n(w / want-01\n      :ARG0 (h / he)\n      :ARG1 (s / see-01\n            :ARG0 h\n            :ARG1 (c / come-01\n                  :ARG1 (a / anyone)\n                  :ARG4 (r / room\n                        :mod (h2 / hotel)\n                        :poss h))))'],"[w, attr-instance, want_01, attr-arg0, [h, attr-instance, he], attr-arg1, [s, attr-instance, see_01, attr-arg0, h, attr-arg1, [c, attr-instance, come_01, attr-arg1, [a, attr-instance, anyone], attr-arg4, [r, attr-instance, room, attr-mod, [h2, attr-instance, hotel], attr-poss, h]]]]"
543,543,543,543,677,1850,angriff-in-las-vegas,Stephen Paddock wollte sehr viele Menschen töten.,16_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Stephen 1:=Paddock 2:=wollte 3:=sehr 4:=viele 5:=Menschen 6:=töten.,1,,Stephen Paddock wanted to kill a lot of people.,"['# ::snt Stephen Paddock wanted to kill a lot of people.\n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Stephen""\n                  :op2 ""P Paddock""))\n      :ARG1 (k / kill-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                  :quant (l / lot))))']","[w, attr-instance, want_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]], attr-arg1, [k, attr-instance, kill_01, attr-arg0, p, attr-arg1, [p2, attr-instance, person, attr-quant, [l, attr-instance, lot]]]]"
544,544,544,544,678,1851,angriff-in-las-vegas,Der Angriff war um 23:20 Uhr in der Nacht zu Ende.,17_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Angriff 2:=war 3:=um 4:=23:20 5:=Uhr 6:=in 7:=der 8:=Nacht 9:=zu 10:=Ende.,2,"[[3, 4, 5], [6, 8]]",The attack ended at 11:20 p.m.,"['# ::snt The attack ended at 11:20 p.m.\n(e / end-01\n      :ARG1 (a / attack-01)\n      :time (d / date-entity\n            :time ""11:20""))']","[e, attr-instance, end_01, attr-arg1, [a, attr-instance, attack_01], attr-time, [d, attr-instance, date_entity, attr-time, ""11attr-20""]]"
545,545,545,545,679,1852,angriff-in-las-vegas,Spezial-polizei hat das Hotel-zimmer von Stephen Paddock aufgebrochen.,18_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Spezial-polizei 1:=hat 2:=das 3:=Hotel-zimmer 4:=von 5:=Stephen 6:=Paddock 7:=aufgebrochen.,2,"[[0, 1, 7], [4, 5, 6]]",Special police broke into Stephen Paddock’s hotel room.,"['# ::snt Special police broke into Stephen Paddock’s hotel room.\n(b / break-02\n      :ARG0 (p / police\n            :ARG1-of (s / special-02))\n      :ARG1 (r / room\n            :mod (h / hotel)\n            :poss (p2 / person\n                  :name (n / name\n                        :op1 ""Stephen""\n                        :op2 ""P Paddock""))))']","[b, attr-instance, break_02, attr-arg0, [p, attr-instance, police, attr-arg1_of, [s, attr-instance, special_02]], attr-arg1, [r, attr-instance, room, attr-mod, [h, attr-instance, hotel], attr-poss, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]]]]"
546,546,546,546,680,1853,angriff-in-las-vegas,Stephen Paddock ist bereits tot gewesen.,19_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Stephen 1:=Paddock 2:=ist 3:=bereits 4:=tot 5:=gewesen.,1,,Stephen Paddock was already dead.,"['# ::snt Stephen Paddock was already dead.\n(d / die-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Stephen""\n                  :op2 ""P Paddock""))\n      :time (a / already))']","[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]], attr-time, [a, attr-instance, already]]"
547,547,547,547,681,1854,angriff-in-las-vegas,Er hat in seinem Hotel-zimmer Selbst-mord gemacht.,20_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=in 3:=seinem 4:=Hotel-zimmer 5:=Selbst-mord 6:=gemacht.,2,"[[1, 2, 5, 6], [2, 3, 4]]",He committed suicide in his hotel room.,['# ::snt He committed suicide in his hotel room.\n(k / kill-01\n      :ARG0 (h / he)\n      :ARG1 h\n      :location (r / room\n            :mod (h2 / hotel)\n            :poss h))'],"[k, attr-instance, kill_01, attr-arg0, [h, attr-instance, he], attr-arg1, h, attr-location, [r, attr-instance, room, attr-mod, [h2, attr-instance, hotel], attr-poss, h]]"
548,548,548,548,682,1855,angriff-in-las-vegas,Die IS Guppe sagt Stephen Paddock gehört zu ihnen.,21_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=IS 2:=Guppe 3:=sagt 4:=Stephen 5:=Paddock 6:=gehört 7:=zu 8:=ihnen.,2,"[[1, 2, 3], [4, 5, 6, 7, 8]]",The ISIS group says Stephen Paddock is one of them.,"['# ::snt The ISIS group says Stephen Paddock is one of them.\n(s / say-01\n      :ARG0 (g / group\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Islam"")))\n      :ARG1 (ii / include-91\n            :ARG1 (p / person\n                  :name (n2 / name\n                        :op1 ""Stephen""\n                        :op2 ""P Paddock""))\n            :ARG2 (t / they)))']","[s, attr-instance, say_01, attr-arg0, [g, attr-instance, group, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""islam""]]], attr-arg1, [ii, attr-instance, include_91, attr-arg1, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]], attr-arg2, [t, attr-instance, they]]]"
549,549,549,549,683,1856,angriff-in-las-vegas,Das ist falsch.,22_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=ist 2:=falsch.,1,,That is wrong.,['# ::snt That is wrong.\n(w / wrong-04\n      :ARG2 (t / that))'],"[w, attr-instance, wrong_04, attr-arg2, [t, attr-instance, that]]"
550,550,550,550,684,1857,angriff-in-las-vegas,Stephen Paddock hat alleine gehandelt.,23_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Stephen 1:=Paddock 2:=hat 3:=alleine 4:=gehandelt.,1,,Stephen Paddock acted alone.,"['# ::snt Stephen Paddock acted alone.\n(a / act-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Stephen""\n                  :op2 ""P Paddock""))\n      :manner (a2 / alone))']","[a, attr-instance, act_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]], attr-manner, [a2, attr-instance, alone]]"
551,551,551,551,685,1858,angriff-in-las-vegas,Keiner weiß warum Stephen Paddock den Angriff gemacht hat.,24_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Keiner 1:=weiß 2:=warum 3:=Stephen 4:=Paddock 5:=den 6:=Angriff 7:=gemacht 8:=hat.,2,"[[0, 1], [2, 3, 4, 6, 7, 8]]",Nobody knows why Stephen Paddock made the attack.,"['# ::snt Nobody knows why Stephen Paddock made the attack.\n(k / know-01\n      :ARG0 (n / nobody)\n      :ARG1 (t / thing\n            :ARG0-of (c / cause-01\n                  :ARG1 (a / attack-01\n                        :ARG0 (p / person\n                              :name (n2 / name\n                                    :op1 ""Stephen""\n                                    :op2 ""P Paddock""))))))']","[k, attr-instance, know_01, attr-arg0, [n, attr-instance, nobody], attr-arg1, [t, attr-instance, thing, attr-arg0_of, [c, attr-instance, cause_01, attr-arg1, [a, attr-instance, attack_01, attr-arg0, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""stephen"", attr-op2, ""p, paddock""]]]]]]"
552,552,552,552,686,1859,angriff-in-las-vegas,Viele Menschen auf der ganzen Welt haben Angst und sind traurig.,25_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Viele 1:=Menschen 2:=auf 3:=der 4:=ganzen 5:=Welt 6:=haben 7:=Angst 8:=und 9:=sind 10:=traurig.,3,"[[2, 4, 5], [6, 7], [8, 10]]",Many people around the world are afraid and sad.,['# ::snt Many people around the world are afraid and sad.\n(a / and\n      :op1 (f / fear-01\n            :ARG0 (p / person\n                  :quant (m / many)\n                  :location (a2 / around\n                        :op1 (w / world))))\n      :op2 (s / sad-02\n            :ARG1 p))'],"[a, attr-instance, and, attr-op1, [f, attr-instance, fear_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many], attr-location, [a2, attr-instance, around, attr-op1, [w, attr-instance, world]]]], attr-op2, [s, attr-instance, sad_02, attr-arg1, p]]"
553,553,553,553,687,1860,angriff-in-las-vegas,Viele Menschen diskutieren über Waffen.,26_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Viele 1:=Menschen 2:=diskutieren 3:=über 4:=Waffen.,1,,Many people discuss guns.,['# ::snt Many people discuss guns.\n(d / discuss-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (g / gun))'],"[d, attr-instance, discuss_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [g, attr-instance, gun]]"
554,554,554,554,688,1861,angriff-in-las-vegas,In den USA ist es sehr leicht eine Waffe zu kaufen.,27_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=In 1:=den 2:=USA 3:=ist 4:=es 5:=sehr 6:=leicht 7:=eine 8:=Waffe 9:=zu 10:=kaufen.,3,"[[0, 2], [3, 4, 5, 6], [8, 9, 10]]",In the USA it is very easy to buy a gun.,"['# ::snt In the USA it is very easy to buy a gun.\n(e / easy-05\n      :ARG1 (b / buy-01\n            :ARG1 (g / gun))\n      :location (c / country\n            :name (n / name\n                  :op1 ""USA""))\n      :degree (v / very))']","[e, attr-instance, easy_05, attr-arg1, [b, attr-instance, buy_01, attr-arg1, [g, attr-instance, gun]], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""usa""]], attr-degree, [v, attr-instance, very]]"
555,555,555,555,689,1862,angriff-in-las-vegas,Viele Menschen wollen andere Waffen-gesetze.,28_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Viele 1:=Menschen 2:=wollen 3:=andere 4:=Waffen-gesetze.,1,,Many people want different gun laws.,['# ::snt Many people want different gun laws.\n(w / want-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (l / law\n            :topic (g / gun)\n            :ARG1-of (d / differ-02)))'],"[w, attr-instance, want_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [l, attr-instance, law, attr-topic, [g, attr-instance, gun], attr-arg1_of, [d, attr-instance, differ_02]]]"
556,556,556,556,690,1863,angriff-in-las-vegas,Die Waffenlobby möchte keine anderen Gesetze.,29_long,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Waffenlobby 2:=möchte 3:=keine 4:=anderen 5:=Gesetze.,1,,The gun lobby does not want any other laws.,['# ::snt The gun lobby does not want any other laws.\n(w / want-01\n      :polarity -\n      :ARG0 (l / lobby-01\n            :ARG1 (g / gun))\n      :ARG1 (l2 / law\n            :mod (o / other)\n            :mod (a / any)))'],"[w, attr-instance, want_01, attr-polarity, negative, attr-arg0, [l, attr-instance, lobby_01, attr-arg1, [g, attr-instance, gun]], attr-arg1, [l2, attr-instance, law, attr-mod, [o, attr-instance, other], attr-mod, [a, attr-instance, any]]]"
557,557,557,557,691,1864,angriff-in-las-vegas,Am 1. Oktober 2017 ist ein Angriff in Las Vegas passiert.,0_short,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=1. 2:=Oktober 3:=2017 4:=ist 5:=ein 6:=Angriff 7:=in 8:=Las 9:=Vegas 10:=passiert.,2,"[[0, 1, 2, 3], [7, 8, 9]]","On October 1, 2017, an attack occurred in Las Vegas.","['# ::snt On October 1, 2017, an attack occurred in Las Vegas.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Las""\n                  :op2 ""Vegas""))\n      :time (d / date-entity\n            :day 1\n            :month 10\n            :year 2017))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""las"", attr-op2, ""vegas""]], attr-time, [d, attr-instance, date_entity, attr-day, 1, attr-month, 10, attr-year, 2017]]"
558,558,558,558,692,1865,angriff-in-las-vegas,Ein Mann hat andere Menschen umgebracht und verletzt.,1_short,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Mann 2:=hat 3:=andere 4:=Menschen 5:=umgebracht 6:=und 7:=verletzt.,2,"[[5], [7]]",A man killed and injured other people.,['# ::snt A man killed and injured other people.\n(a / and\n      :op1 (k / kill-01\n            :ARG0 (m / man)\n            :ARG1 (p / person\n                  :mod (o / other)))\n      :op2 (ii / injure-01\n            :ARG0 m\n            :ARG1 p))'],"[a, attr-instance, and, attr-op1, [k, attr-instance, kill_01, attr-arg0, [m, attr-instance, man], attr-arg1, [p, attr-instance, person, attr-mod, [o, attr-instance, other]]], attr-op2, [ii, attr-instance, injure_01, attr-arg0, m, attr-arg1, p]]"
559,559,559,559,693,1866,angriff-in-las-vegas,Er hat auf andere Menschen geschossen.,2_short,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=auf 3:=andere 4:=Menschen 5:=geschossen.,1,,He shot other people.,['# ::snt He shot other people.\n(s / shoot-02\n      :ARG0 (h / he)\n      :ARG1 (p / person\n            :mod (o / other)))'],"[s, attr-instance, shoot_02, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, person, attr-mod, [o, attr-instance, other]]]"
560,560,560,560,694,1867,angriff-in-las-vegas,Der Mann hat über 50 Menschen ermordet.,3_short,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Mann 2:=hat 3:=über 4:=50 5:=Menschen 6:=ermordet.,1,,The man murdered over 50 people.,['# ::snt The man murdered over 50 people.\n(m / murder-01\n      :ARG0 (m2 / man)\n      :ARG1 (p / person\n            :quant (o / over\n                  :op1 50)))'],"[m, attr-instance, murder_01, attr-arg0, [m2, attr-instance, man], attr-arg1, [p, attr-instance, person, attr-quant, [o, attr-instance, over, attr-op1, 50]]]"
561,561,561,561,695,1868,angriff-in-las-vegas,Und er hat dabei über 500 Menschen verletzt.,4_short,Geschichte|Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-10-11T05:48:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=er 2:=hat 3:=dabei 4:=über 5:=500 6:=Menschen 7:=verletzt.,1,,And he injured over 500 people.,['# ::snt And he injured over 500 people.\n(a / and\n      :op2 (ii / injure-01\n            :ARG0 (h / he)\n            :ARG1 (p / person\n                  :quant (o / over\n                        :op1 500))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, person, attr-quant, [o, attr-instance, over, attr-op1, 500]]]]"
562,562,562,562,696,1869,animal-liberation-front,Im Jahr 1976 hat Ronnie Lee die Animal Liberation Front gegründet.,0_long,Ohne_Kategorie,,,0:=Im 1:=Jahr 2:=1976 3:=hat 4:=Ronnie 5:=Lee 6:=die 7:=Animal 8:=Liberation 9:=Front 10:=gegründet.,2,"[[0, 1, 2], [3, 4, 5, 7, 8, 9, 10]]","In 1976, Ronnie Lee founded the Animal Liberation Front.","['# ::snt In 1976, Ronnie Lee founded the Animal Liberation Front.\n(f / found-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Ronnie""\n                  :op2 ""Lee""))\n      :ARG1 (o / organization\n            :name (n2 / name\n                  :op1 ""Animal""\n                  :op2 ""Liberation""\n                  :op3 ""Front""))\n      :time (d / date-entity\n            :year 1976))']","[f, attr-instance, found_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""ronnie"", attr-op2, ""lee""]], attr-arg1, [o, attr-instance, organization, attr-name, [n2, attr-instance, name, attr-op1, ""animal"", attr-op2, ""liberation"", attr-op3, ""front""]], attr-time, [d, attr-instance, date_entity, attr-year, 1976]]"
563,563,563,563,697,1870,animal-liberation-front,Animal Liberation Front ist englisch.,1_long,Ohne_Kategorie,,,0:=Animal 1:=Liberation 2:=Front 3:=ist 4:=englisch.,1,,Animal Liberation Front is English.,"['# ::snt Animal Liberation Front is English.\n(c / country\n      :name (n / name\n            :op1 ""England"")\n      :domain (o / organization\n            :name (n2 / name\n                  :op1 ""Animal""\n                  :op2 ""Liberation""\n                  :op3 ""Front"")))']","[c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""england""], attr-domain, [o, attr-instance, organization, attr-name, [n2, attr-instance, name, attr-op1, ""animal"", attr-op2, ""liberation"", attr-op3, ""front""]]]"
564,564,564,564,699,1872,animal-liberation-front,"Mitmachen darf, wer: • Vegetarier oder Veganer ist.",3_long,Ohne_Kategorie,,,"0:=Mitmachen 1:=darf, 2:=wer: 3:=• 4:=Vegetarier 5:=oder 6:=Veganer 7:=ist.",2,"[[4], [6]]",Anyone who is: • Vegetarian or vegan can take part.,['# ::snt Anyone who is: • Vegetarian or vegan can take part.\n(p / possible-01\n      :ARG1 (p2 / participate-01\n            :ARG0 (a / anyone\n                  :domain (o / or\n                        :op1 (v / vegetarian)\n                        :op2 (v2 / vegan)))))'],"[p, attr-instance, possible_01, attr-arg1, [p2, attr-instance, participate_01, attr-arg0, [a, attr-instance, anyone, attr-domain, [o, attr-instance, or, attr-op1, [v, attr-instance, vegetarian], attr-op2, [v2, attr-instance, vegan]]]]]"
565,565,565,565,702,1875,animal-liberation-front,Die Gruppe macht verschiedene Aktionen.,6_long,Ohne_Kategorie,,,0:=Die 1:=Gruppe 2:=macht 3:=verschiedene 4:=Aktionen.,1,,The group does various activities.,['# ::snt The group does various activities.\n(a / activity-06\n      :ARG0 (g / group)\n      :mod (v / various))'],"[a, attr-instance, activity_06, attr-arg0, [g, attr-instance, group], attr-mod, [v, attr-instance, various]]"
566,566,566,566,703,1876,animal-liberation-front,Die Aktionen sollen Tieren helfen.,7_long,Ohne_Kategorie,,,0:=Die 1:=Aktionen 2:=sollen 3:=Tieren 4:=helfen.,1,,The actions are intended to help animals.,['# ::snt The actions are intended to help animals.\n(ii / intend-01\n      :ARG1 (h / help-01\n            :ARG0 (a / act-02)\n            :ARG1 (a2 / animal)))'],"[ii, attr-instance, intend_01, attr-arg1, [h, attr-instance, help_01, attr-arg0, [a, attr-instance, act_02], attr-arg1, [a2, attr-instance, animal]]]"
567,567,567,567,704,1877,animal-liberation-front,Zum Beispiel: • Die Gruppe befreit Tiere aus Versuchslaboren,8_long,Ohne_Kategorie,,,0:=Zum 1:=Beispiel: 2:=• 3:=Die 4:=Gruppe 5:=befreit 6:=Tiere 7:=aus 8:=Versuchslaboren,2,"[[4, 5], [7, 8]]",For example: • The group frees animals from experimental laboratories,['# ::snt For example: • The group frees animals from experimental laboratories\n(e / exemplify-01\n      :ARG0 (f / free-01\n            :ARG0 (g / group)\n            :ARG1 (a / animal)\n            :ARG2 (l / laboratory\n                  :mod (e2 / experiment-01))))'],"[e, attr-instance, exemplify_01, attr-arg0, [f, attr-instance, free_01, attr-arg0, [g, attr-instance, group], attr-arg1, [a, attr-instance, animal], attr-arg2, [l, attr-instance, laboratory, attr-mod, [e2, attr-instance, experiment_01]]]]"
568,568,568,568,705,1878,animal-liberation-front,Zum Beispiel: • Die Gruppe lässt die Tiere von einer Pelzfarm frei.,9_long,Ohne_Kategorie,,,0:=Zum 1:=Beispiel: 2:=• 3:=Die 4:=Gruppe 5:=lässt 6:=die 7:=Tiere 8:=von 9:=einer 10:=Pelzfarm 11:=frei.,2,"[[4, 5, 11], [8, 10]]",For example: • The group releases animals from a fur farm.,['# ::snt For example: • The group releases animals from a fur farm.\n(e / exemplify-01\n      :ARG0 (r / release-01\n            :ARG0 (g / group)\n            :ARG1 (a / animal)\n            :ARG2 (f / farm\n                  :mod (f2 / fur))))'],"[e, attr-instance, exemplify_01, attr-arg0, [r, attr-instance, release_01, attr-arg0, [g, attr-instance, group], attr-arg1, [a, attr-instance, animal], attr-arg2, [f, attr-instance, farm, attr-mod, [f2, attr-instance, fur]]]]"
569,569,569,569,706,1879,animal-liberation-front,Die Gruppe macht auch Dinge kaputt.,10_long,Ohne_Kategorie,,,0:=Die 1:=Gruppe 2:=macht 3:=auch 4:=Dinge 5:=kaputt.,1,,The group also breaks things.,['# ::snt The group also breaks things.\n(b / break-01\n      :ARG0 (g / group)\n      :ARG1 (t / thing)\n      :mod (a / also))'],"[b, attr-instance, break_01, attr-arg0, [g, attr-instance, group], attr-arg1, [t, attr-instance, thing], attr-mod, [a, attr-instance, also]]"
570,570,570,570,707,1880,animal-liberation-front,Zum Beispiel: • Die Gruppe sägt Hochsitze von Jägern um.,11_long,Ohne_Kategorie,,,0:=Zum 1:=Beispiel: 2:=• 3:=Die 4:=Gruppe 5:=sägt 6:=Hochsitze 7:=von 8:=Jägern 9:=um.,1,,For example: • The group cuts down hunters’ high seats.,['# ::snt For example: • The group cuts down hunters’ high seats.\n(e / exemplify-01\n      :ARG0 (c / cut-down-11\n            :ARG0 (g / group)\n            :ARG1 (s / seat\n                  :ARG1-of (h / high-02)\n                  :poss (p / person\n                        :ARG0-of (h2 / hunt-01)))))'],"[e, attr-instance, exemplify_01, attr-arg0, [c, attr-instance, cut_down_11, attr-arg0, [g, attr-instance, group], attr-arg1, [s, attr-instance, seat, attr-arg1_of, [h, attr-instance, high_02], attr-poss, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, hunt_01]]]]]"
571,571,571,571,708,1881,animal-liberation-front, • Die Gruppe hat eine Wurstfabrik angezündet.,12_long,Ohne_Kategorie,,,0:= 1:=• 2:=Die 3:=Gruppe 4:=hat 5:=eine 6:=Wurstfabrik 7:=angezündet.,1,,• The group set fire to a sausage factory.,['# ::snt • The group set fire to a sausage factory.\n(s / set-on-fire-09\n      :ARG0 (g / group)\n      :ARG1 (f / factory\n            :mod (s2 / sausage)))'],"[s, attr-instance, set_on_fire_09, attr-arg0, [g, attr-instance, group], attr-arg1, [f, attr-instance, factory, attr-mod, [s2, attr-instance, sausage]]]"
572,572,572,572,709,1882,animal-liberation-front,Animal Liberation Front ist der Name einer Gruppe.,0_short,Ohne_Kategorie,,,0:=Animal 1:=Liberation 2:=Front 3:=ist 4:=der 5:=Name 6:=einer 7:=Gruppe.,1,,Animal Liberation Front is the name of a group.,"['# ::snt Animal Liberation Front is the name of a group.\n(n / name-01\n      :ARG1 (o / organization\n            :name (n2 / name\n                  :op1 ""Animal""\n                  :op2 ""Liberation""\n                  :op3 ""Front""))\n      :ARG2 (g / group))']","[n, attr-instance, name_01, attr-arg1, [o, attr-instance, organization, attr-name, [n2, attr-instance, name, attr-op1, ""animal"", attr-op2, ""liberation"", attr-op3, ""front""]], attr-arg2, [g, attr-instance, group]]"
573,573,573,573,710,1883,animal-liberation-front,Die Gruppe setzt sich für Tiere ein.,1_short,Ohne_Kategorie,,,0:=Die 1:=Gruppe 2:=setzt 3:=sich 4:=für 5:=Tiere 6:=ein.,1,,The group advocates for animals.,['# ::snt The group advocates for animals.\n(a / advocate-01\n      :ARG0 (g / group)\n      :ARG1 (a2 / animal))'],"[a, attr-instance, advocate_01, attr-arg0, [g, attr-instance, group], attr-arg1, [a2, attr-instance, animal]]"
574,574,574,574,711,1884,animal-liberation-front,"Die Gruppe will nicht, dass Menschen mit Tieren Versuche machen.",2_short,Ohne_Kategorie,,,"0:=Die 1:=Gruppe 2:=will 3:=nicht, 4:=dass 5:=Menschen 6:=mit 7:=Tieren 8:=Versuche 9:=machen.",2,"[[1, 2, 3], [4, 5, 6, 7, 8, 9]]",The group does not want people to conduct experiments on animals.,['# ::snt The group does not want people to conduct experiments on animals.\n(w / want-01\n      :polarity -\n      :ARG0 (g / group)\n      :ARG1 (c / conduct-01\n            :ARG0 (p / person)\n            :ARG1 (e / experiment-01\n                  :ARG0 p\n                  :ARG1 (a / animal))))'],"[w, attr-instance, want_01, attr-polarity, negative, attr-arg0, [g, attr-instance, group], attr-arg1, [c, attr-instance, conduct_01, attr-arg0, [p, attr-instance, person], attr-arg1, [e, attr-instance, experiment_01, attr-arg0, p, attr-arg1, [a, attr-instance, animal]]]]"
575,575,575,575,712,1885,animal-liberation-front,Die Gruppe benutzt dazu auch Gewalt.,3_short,Ohne_Kategorie,,,0:=Die 1:=Gruppe 2:=benutzt 3:=dazu 4:=auch 5:=Gewalt.,1,,The group also uses violence to do this.,['# ::snt The group also uses violence to do this.\n(u / use-01\n      :ARG0 (g / group)\n      :ARG1 (v / violence)\n      :ARG2 (d / do-02\n            :ARG0 g\n            :ARG1 (t / this))\n      :mod (a / also))'],"[u, attr-instance, use_01, attr-arg0, [g, attr-instance, group], attr-arg1, [v, attr-instance, violence], attr-arg2, [d, attr-instance, do_02, attr-arg0, g, attr-arg1, [t, attr-instance, this]], attr-mod, [a, attr-instance, also]]"
576,576,576,576,713,1886,ankerland,Ein Ankerland ist ein besonderes Land.,0_short,Länder|Seiten_mit_defekten_Dateilinks,2015-12-14T14:52:58Z,208c142d9a40526b9e4a73aa2f6b0b97,0:=Ein 1:=Ankerland 2:=ist 3:=ein 4:=besonderes 5:=Land.,2,"[[1, 2], [4]]",An anchor land is a special land.,['# ::snt An anchor land is a special land.\n(l / land\n      :ARG1-of (s / special-02)\n      :domain (l2 / land\n            :mod (a / anchor-01)))'],"[l, attr-instance, land, attr-arg1_of, [s, attr-instance, special_02], attr-domain, [l2, attr-instance, land, attr-mod, [a, attr-instance, anchor_01]]]"
577,577,577,577,714,1887,ankerland,"Wenn ein Anker-land eine Entscheidung macht, \newline sind viele Nachbar-länder davon betroffen.",1_short,Länder|Seiten_mit_defekten_Dateilinks,2015-12-14T14:52:58Z,208c142d9a40526b9e4a73aa2f6b0b97,"0:=Wenn 1:=ein 2:=Anker-land 3:=eine 4:=Entscheidung 5:=macht, 6:=\newline 7:=sind 8:=viele 9:=Nachbar-länder 10:=davon 11:=betroffen.",2,"[[0, 2, 4, 5], [7, 8, 9, 10, 11]]","When an anchor country makes a decision, \newline many neighboring countries are affected.","['# ::snt When an anchor country makes a decision, \\newline many neighboring countries are affected.\n(a / affect-01\n      :ARG1 (c / country\n            :ARG1-of (n / neighbor-01)\n            :quant (m / many))\n      :time (d / decide-01\n            :ARG0 (c2 / country\n                  :mod (a2 / anchor))))']","[a, attr-instance, affect_01, attr-arg1, [c, attr-instance, country, attr-arg1_of, [n, attr-instance, neighbor_01], attr-quant, [m, attr-instance, many]], attr-time, [d, attr-instance, decide_01, attr-arg0, [c2, attr-instance, country, attr-mod, [a2, attr-instance, anchor]]]]"
578,578,578,578,715,1888,ankerland,"Wegen einer Enstcheidung von einem Anker-land, \newline passiert auch immer im Nachbar-land etwas.",2_short,Länder|Seiten_mit_defekten_Dateilinks,2015-12-14T14:52:58Z,208c142d9a40526b9e4a73aa2f6b0b97,"0:=Wegen 1:=einer 2:=Enstcheidung 3:=von 4:=einem 5:=Anker-land, 6:=\newline 7:=passiert 8:=auch 9:=immer 10:=im 11:=Nachbar-land 12:=etwas.",3,"[[0, 2], [2, 3, 5], [7, 8, 9, 10, 11, 12]]","Because of a decision made by one anchor country, \newline something always happens in the neighboring country.","['# ::snt Because of a decision made by one anchor country, \\newline something always happens in the neighboring country.\n(c / cause-01\n      :ARG0 (d / decide-01\n            :ARG0 (c2 / country\n                  :quant 1\n                  :mod (a / anchor)))\n      :ARG1 (s / something\n            :location (c3 / country\n                  :ARG1-of (n / neighbor-01))\n            :time (a2 / always)))']","[c, attr-instance, cause_01, attr-arg0, [d, attr-instance, decide_01, attr-arg0, [c2, attr-instance, country, attr-quant, 1, attr-mod, [a, attr-instance, anchor]]], attr-arg1, [s, attr-instance, something, attr-location, [c3, attr-instance, country, attr-arg1_of, [n, attr-instance, neighbor_01]], attr-time, [a2, attr-instance, always]]]"
579,579,579,579,716,1889,anlauttabelle,Anlauttabellen sollen beim Lesen und Schreiben helfen.,0_long,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Anlauttabellen 1:=sollen 2:=beim 3:=Lesen 4:=und 5:=Schreiben 6:=helfen.,2,"[[3], [5]]",Initial sound tables are intended to help with reading and writing.,['# ::snt Initial sound tables are intended to help with reading and writing.\n(ii / intend-01\n      :ARG1 (h / help-01\n            :ARG0 (t / table\n                  :mod (s / sound)\n                  :mod (ii2 / initial))\n            :ARG1 (a / and\n                  :op1 (r / read-01)\n                  :op2 (w / write-01))))'],"[ii, attr-instance, intend_01, attr-arg1, [h, attr-instance, help_01, attr-arg0, [t, attr-instance, table, attr-mod, [s, attr-instance, sound], attr-mod, [ii2, attr-instance, initial]], attr-arg1, [a, attr-instance, and, attr-op1, [r, attr-instance, read_01], attr-op2, [w, attr-instance, write_01]]]]"
580,580,580,580,717,1890,anlauttabelle,Die Bilder sind zusammen mit den Buchstaben.,1_long,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Bilder 2:=sind 3:=zusammen 4:=mit 5:=den 6:=Buchstaben.,1,,The pictures are together with the letters.,['# ::snt The pictures are together with the letters.\n(t / together\n      :domain (p / picture)\n      :accompanier (l / letter))'],"[t, attr-instance, together, attr-domain, [p, attr-instance, picture], attr-accompanier, [l, attr-instance, letter]]"
581,581,581,581,719,1892,anlauttabelle,Der Buchstabe B wird beim Wort Banane als erstes gesprochen.,3_long,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Buchstabe 2:=B 3:=wird 4:=beim 5:=Wort 6:=Banane 7:=als 8:=erstes 9:=gesprochen.,1,,The letter B is spoken first in the word banana.,"['# ::snt The letter B is spoken first in the word banana.\n(s / speak-01\n      :ARG1 (l / letter\n            :mod (s2 / string-entity\n                  :value ""B""))\n      :ord (o / ordinal-entity\n            :value 1)\n      :medium (w / word\n            :mod (b / banana)))']","[s, attr-instance, speak_01, attr-arg1, [l, attr-instance, letter, attr-mod, [s2, attr-instance, string_entity, attr-value, ""b""]], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1], attr-medium, [w, attr-instance, word, attr-mod, [b, attr-instance, banana]]]"
582,582,582,582,720,1893,anlauttabelle,Dazu sagt man auch: Anlaut.,4_long,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Dazu 1:=sagt 2:=man 3:=auch: 4:=Anlaut.,1,,This is also called initial sound.,['# ::snt This is also called initial sound.\n(c / call-01\n      :ARG1 (t / this)\n      :ARG2 (s / sound\n            :mod (ii / initial))\n      :mod (a / also))'],"[c, attr-instance, call_01, attr-arg1, [t, attr-instance, this], attr-arg2, [s, attr-instance, sound, attr-mod, [ii, attr-instance, initial]], attr-mod, [a, attr-instance, also]]"
583,583,583,583,721,1894,anlauttabelle,Es gib Anlauttabellen-programme für den Computer.,5_long,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Es 1:=gib 2:=Anlauttabellen-programme 3:=für 4:=den 5:=Computer.,1,,There are initial sound table programs for the computer.,['# ::snt There are initial sound table programs for the computer.\n(p / program\n      :mod (t / table\n            :mod (s / sound))\n      :mod (ii / initial)\n      :purpose (c / computer))'],"[p, attr-instance, program, attr-mod, [t, attr-instance, table, attr-mod, [s, attr-instance, sound]], attr-mod, [ii, attr-instance, initial], attr-purpose, [c, attr-instance, computer]]"
584,584,584,584,723,1896,anlauttabelle,Der Buchstabe oder das Wort wird von einer Computer-stimme gesprochen.,7_long,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Buchstabe 2:=oder 3:=das 4:=Wort 5:=wird 6:=von 7:=einer 8:=Computer-stimme 9:=gesprochen.,3,"[[1], [4], [6, 7, 8]]",The letter or word is spoken by a computer voice.,['# ::snt The letter or word is spoken by a computer voice.\n(s / speak-01\n      :ARG0 (v / voice\n            :mod (c / computer))\n      :ARG3 (o / or\n            :op1 (l / letter)\n            :op2 (w / word)))'],"[s, attr-instance, speak_01, attr-arg0, [v, attr-instance, voice, attr-mod, [c, attr-instance, computer]], attr-arg3, [o, attr-instance, or, attr-op1, [l, attr-instance, letter], attr-op2, [w, attr-instance, word]]]"
585,585,585,585,724,1897,anlauttabelle,Die Programme haben eine extra Tastatur.,8_long,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Programme 2:=haben 3:=eine 4:=extra 5:=Tastatur.,1,,The programs have an extra keyboard.,['# ::snt The programs have an extra keyboard.\n(h / have-03\n      :ARG0 (p / program)\n      :ARG1 (k / keyboard\n            :mod (e / extra)))'],"[h, attr-instance, have_03, attr-arg0, [p, attr-instance, program], attr-arg1, [k, attr-instance, keyboard, attr-mod, [e, attr-instance, extra]]]"
586,586,586,586,725,1898,anlauttabelle,Darauf sind Bilder.,9_long,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Darauf 1:=sind 2:=Bilder.,1,,There are pictures on it.,['# ::snt There are pictures on it.\n(b / be-located-at-91\n      :ARG1 (p / picture)\n      :ARG2 (ii / it))'],"[b, attr-instance, be_located_at_91, attr-arg1, [p, attr-instance, picture], attr-arg2, [ii, attr-instance, it]]"
587,587,587,587,726,1899,anlauttabelle,Eine Anlauttabelle wird zum Lernen benutzt.,0_short,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Eine 1:=Anlauttabelle 2:=wird 3:=zum 4:=Lernen 5:=benutzt.,1,,A sound chart is used for learning.,['# ::snt A sound chart is used for learning.\n(u / use-01\n      :ARG1 (c / chart\n            :mod (s / sound))\n      :ARG2 (l / learn-01))'],"[u, attr-instance, use_01, attr-arg1, [c, attr-instance, chart, attr-mod, [s, attr-instance, sound]], attr-arg2, [l, attr-instance, learn_01]]"
588,588,588,588,727,1900,anlauttabelle,Darauf sind Buchstaben und Bilder.,1_short,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Darauf 1:=sind 2:=Buchstaben 3:=und 4:=Bilder.,2,"[[2], [4]]",There are letters and pictures on it.,['# ::snt There are letters and pictures on it.\n(a / and\n      :op1 (l / letter)\n      :op2 (p / picture)\n      :location (ii / it))'],"[a, attr-instance, and, attr-op1, [l, attr-instance, letter], attr-op2, [p, attr-instance, picture], attr-location, [ii, attr-instance, it]]"
589,589,589,589,728,1901,anlauttabelle,Damit kann man lernen wie ein Wort gesprochen und geschrieben wird.,2_short,Schule_und_Lernen,2014-08-26T17:59:17Z,af28a20dfb151690981ee13d72ce655c,0:=Damit 1:=kann 2:=man 3:=lernen 4:=wie 5:=ein 6:=Wort 7:=gesprochen 8:=und 9:=geschrieben 10:=wird.,3,"[[0, 1, 2, 3], [4, 6, 7, 10], [4, 6, 9, 10]]",This allows you to learn how a word is spoken and written.,['# ::snt This allows you to learn how a word is spoken and written.\n(a / allow-01\n      :ARG0 (t / this)\n      :ARG1 (l / learn-01\n            :ARG0 (y / you)\n            :ARG1 (t2 / thing\n                  :manner-of (a2 / and\n                        :op1 (s / speak-01\n                              :ARG1 (w / word))\n                        :op2 (w2 / write-01\n                              :ARG1 w)))))'],"[a, attr-instance, allow_01, attr-arg0, [t, attr-instance, this], attr-arg1, [l, attr-instance, learn_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t2, attr-instance, thing, attr-manner_of, [a2, attr-instance, and, attr-op1, [s, attr-instance, speak_01, attr-arg1, [w, attr-instance, word]], attr-op2, [w2, attr-instance, write_01, attr-arg1, w]]]]]"
590,590,590,590,729,1902,anna-faris,Anna Faris ist am 29. November 1976 geboren.,0_long,Personen|Seiten_mit_defekten_Dateilinks,2022-01-13T04:58:27Z,e800bebc9060331edfac65e663a55570,0:=Anna 1:=Faris 2:=ist 3:=am 4:=29. 5:=November 6:=1976 7:=geboren.,1,,"Anna Faris was born on November 29, 1976.","['# ::snt Anna Faris was born on November 29, 1976.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Anna""\n                  :op2 ""Faris""))\n      :time (d / date-entity\n            :day 29\n            :month 11\n            :year 1976))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""anna"", attr-op2, ""faris""]], attr-time, [d, attr-instance, date_entity, attr-day, 29, attr-month, 11, attr-year, 1976]]"
591,591,591,591,731,1904,anna-faris,Anna Faris ist eine amerikanische Schauspielerin.,0_short,Personen|Seiten_mit_defekten_Dateilinks,2022-01-13T04:58:27Z,e800bebc9060331edfac65e663a55570,0:=Anna 1:=Faris 2:=ist 3:=eine 4:=amerikanische 5:=Schauspielerin.,2,"[[4], [5]]",Anna Faris is an American actress.,"['# ::snt Anna Faris is an American actress.\n(p / person\n      :ARG0-of (a / act-01)\n      :mod (c / country\n            :name (n / name\n                  :op1 ""America""))\n      :domain (p2 / person\n            :name (n2 / name\n                  :op1 ""Anna""\n                  :op2 ""Faris"")))']","[p, attr-instance, person, attr-arg0_of, [a, attr-instance, act_01], attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""america""]], attr-domain, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""anna"", attr-op2, ""faris""]]]"
592,592,592,592,734,1907,annalena-baerbock,Annalena Baerbock wurde am 15. Dezember 1980 geboren.,0_long,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Annalena 1:=Baerbock 2:=wurde 3:=am 4:=15. 5:=Dezember 6:=1980 7:=geboren.,1,,Annalena Baerbock was born on 15 December 1980.,"['# ::snt Annalena Baerbock was born on 15 December 1980.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Annalena""\n                  :op2 ""Baerbock""))\n      :time (d / date-entity\n            :year 1980\n            :month 12\n            :day 15))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""annalena"", attr-op2, ""baerbock""]], attr-time, [d, attr-instance, date_entity, attr-year, 1980, attr-month, 12, attr-day, 15]]"
593,593,593,593,735,1909,annalena-baerbock,Ihr ganzer Name ist Annalena Charlotte Alma Baerbock.,2_long,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ihr 1:=ganzer 2:=Name 3:=ist 4:=Annalena 5:=Charlotte 6:=Alma 7:=Baerbock.,1,,Her full name is Annalena Charlotte Alma Baerbock.,"['# ::snt Her full name is Annalena Charlotte Alma Baerbock.\n(n / name-01\n      :ARG1 (s / she)\n      :ARG2 (p / person\n            :name (n2 / name\n                  :op1 ""Analena""\n                  :op2 ""Charlotte""\n                  :op3 ""Alma""\n                  :op4 ""Baerbock""))\n      :ARG1-of (f / full-09))']","[n, attr-instance, name_01, attr-arg1, [s, attr-instance, she], attr-arg2, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""analena"", attr-op2, ""charlotte"", attr-op3, ""alma"", attr-op4, ""baerbock""]], attr-arg1_of, [f, attr-instance, full_09]]"
594,594,594,594,736,1910,annalena-baerbock,Als Kind hat Annalena Trampolin-turnen gemacht.,3_long,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Als 1:=Kind 2:=hat 3:=Annalena 4:=Trampolin-turnen 5:=gemacht.,2,"[[0, 1], [2, 3, 4, 5]]","As a child, Annalena did trampoline gymnastics.","['# ::snt As a child, Annalena did trampoline gymnastics.\n(g / gymnastics\n      :mod (t / trampoline)\n      :domain (p / person\n            :name (n / name\n                  :op1 ""Annalena""))\n      :time (c / child\n            :domain p))']","[g, attr-instance, gymnastics, attr-mod, [t, attr-instance, trampoline], attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""annalena""]], attr-time, [c, attr-instance, child, attr-domain, p]]"
595,595,595,595,737,1911,annalena-baerbock,Annalena Baerbock ist verheiratet.,4_long,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Annalena 1:=Baerbock 2:=ist 3:=verheiratet.,1,,Annalena Baerbock is married.,"['# ::snt Annalena Baerbock is married.\n(m / marry-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Annalena""\n                  :op2 ""Baerbock"")))']","[m, attr-instance, marry_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""annalena"", attr-op2, ""baerbock""]]]"
596,596,596,596,738,1914,annalena-baerbock,Sie leben in Branden-burg.,7_long,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=leben 2:=in 3:=Branden-burg.,1,,They live in Brandenburg.,"['# ::snt They live in Brandenburg.\n(l / live-01\n      :ARG0 (t / they)\n      :location (c / city\n            :name (n / name\n                  :op1 ""Brandenburg"")))']","[l, attr-instance, live_01, attr-arg0, [t, attr-instance, they], attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""brandenburg""]]]"
597,597,597,597,739,1915,annalena-baerbock,Annalena Baerbock ist Mitglied des Deutschen Bundestages.,8_long,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Annalena 1:=Baerbock 2:=ist 3:=Mitglied 4:=des 5:=Deutschen 6:=Bundestages.,1,,Annalena Baerbock is a member of the German Bundestag.,"['# ::snt Annalena Baerbock is a member of the German Bundestag.\n(h / have-org-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Annalena""\n                  :op2 ""Baerbock""))\n      :ARG1 (g / government-organization\n            :name (n2 / name\n                  :op1 ""German""\n                  :op2 ""Bundestag""))\n      :ARG2 (m / member))']","[h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""annalena"", attr-op2, ""baerbock""]], attr-arg1, [g, attr-instance, government_organization, attr-name, [n2, attr-instance, name, attr-op1, ""german"", attr-op2, ""bundestag""]], attr-arg2, [m, attr-instance, member]]"
598,598,598,598,740,1916,annalena-baerbock,Sie ist Mitglied in der Partei Die Grünen.,9_long,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=ist 2:=Mitglied 3:=in 4:=der 5:=Partei 6:=Die 7:=Grünen.,2,"[[3, 5], [6, 7]]",She is a member of the Green Party.,"['# ::snt She is a member of the Green Party.\n(h / have-org-role-91\n      :ARG0 (s / she)\n      :ARG1 (p / political-party\n            :name (n / name\n                  :op1 ""Green""\n                  :op2 ""Party""))\n      :ARG2 (m / member))']","[h, attr-instance, have_org_role_91, attr-arg0, [s, attr-instance, she], attr-arg1, [p, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""green"", attr-op2, ""party""]], attr-arg2, [m, attr-instance, member]]"
599,599,599,599,742,1918,annalena-baerbock,Gemeinsam mit Robert Habeck.,11_long,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Gemeinsam 1:=mit 2:=Robert 3:=Habeck.,1,,Together with Robert Habeck.,"['# ::snt Together with Robert Habeck.\n(a / accompany-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Robert""\n                  :op2 ""Habeck"")))']","[a, attr-instance, accompany_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""robert"", attr-op2, ""habeck""]]]"
600,600,600,600,743,1919,annalena-baerbock,Annalena Baerbock ist eine Politikerin.,0_short,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Annalena 1:=Baerbock 2:=ist 3:=eine 4:=Politikerin.,1,,Annalena Baerbock is a politician.,"['# ::snt Annalena Baerbock is a politician.\n(p / politician\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Annalena""\n                  :op2 ""Baerbock"")))']","[p, attr-instance, politician, attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""annalena"", attr-op2, ""baerbock""]]]"
601,601,601,601,744,1920,annalena-baerbock,Sie ist in der Partei die Grünen.,1_short,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=ist 2:=in 3:=der 4:=Partei 5:=die 6:=Grünen.,2,"[[2, 4], [5, 6]]",She is in the Green Party.,"['# ::snt She is in the Green Party.\n(h / have-org-role-91\n      :ARG0 (s / she)\n      :ARG1 (p / political-party\n            :name (n / name\n                  :op1 ""Green""\n                  :op2 ""Party"")))']","[h, attr-instance, have_org_role_91, attr-arg0, [s, attr-instance, she], attr-arg1, [p, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""green"", attr-op2, ""party""]]]"
602,602,602,602,746,1922,annalena-baerbock,Annalena Baerbock ist Chefin der Partei die Grünen.,3_short,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Annalena 1:=Baerbock 2:=ist 3:=Chefin 4:=der 5:=Partei 6:=die 7:=Grünen.,2,"[[0, 1, 2, 3], [7]]",Annalena Baerbock is the leader of the Green Party.,"['# ::snt Annalena Baerbock is the leader of the Green Party.\n(p / person\n      :name (n / name\n            :op1 ""Annalena""\n            :op2 ""Baerbock"")\n      :ARG0-of (l / lead-02\n            :ARG1 (p2 / political-party\n                  :name (n2 / name\n                        :op1 ""Green""\n                        :op2 ""Party""))))']","[p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""annalena"", attr-op2, ""baerbock""], attr-arg0_of, [l, attr-instance, lead_02, attr-arg1, [p2, attr-instance, political_party, attr-name, [n2, attr-instance, name, attr-op1, ""green"", attr-op2, ""party""]]]]"
603,603,603,603,747,1923,annalena-baerbock,Und sie war Kanzler-kandidatin.,4_short,Aus_den_Nachrichten|Personen|Politik,2021-11-29T06:50:49Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=war 3:=Kanzler-kandidatin.,1,,And she was a candidate for chancellor.,['# ::snt And she was a candidate for chancellor.\n(a / and\n      :op2 (c / candidate\n            :domain (s / she)\n            :ARG2 (c2 / chancellor)))'],"[a, attr-instance, and, attr-op2, [c, attr-instance, candidate, attr-domain, [s, attr-instance, she], attr-arg2, [c2, attr-instance, chancellor]]]"
604,604,604,604,750,1926,anonymitat,Er sagt seinen Namen nicht.,1_long,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,0:=Er 1:=sagt 2:=seinen 3:=Namen 4:=nicht.,1,,He doesn't say his name.,"[""# ::snt He doesn't say his name.\n(s / say-01\n      :polarity -\n      :ARG0 (h / he)\n      :ARG1 (n / name\n            :poss h))""]","[s, attr-instance, say_01, attr-polarity, negative, attr-arg0, [h, attr-instance, he], attr-arg1, [n, attr-instance, name, attr-poss, h]]"
605,605,605,605,751,1927,anonymitat,Er bleibt anonym.,2_long,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,0:=Er 1:=bleibt 2:=anonym.,1,,He remains anonymous.,['# ::snt He remains anonymous.\n(r / remain-01\n      :ARG1 (h / he)\n      :ARG3 (a / anonymous))'],"[r, attr-instance, remain_01, attr-arg1, [h, attr-instance, he], attr-arg3, [a, attr-instance, anonymous]]"
606,606,606,606,752,1928,anonymitat,"Wenn er einen Brief schreibt, unterschreibt er nicht.",3_long,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,"0:=Wenn 1:=er 2:=einen 3:=Brief 4:=schreibt, 5:=unterschreibt 6:=er 7:=nicht.",2,"[[0, 1, 3, 4], [5, 6, 7]]","When he writes a letter, he doesn't sign it.","[""# ::snt When he writes a letter, he doesn't sign it.\n(s / sign-01\n      :polarity -\n      :ARG0 (h / he)\n      :ARG1 (l / letter)\n      :time (w / write-01\n            :ARG0 h\n            :ARG1 l))""]","[s, attr-instance, sign_01, attr-polarity, negative, attr-arg0, [h, attr-instance, he], attr-arg1, [l, attr-instance, letter], attr-time, [w, attr-instance, write_01, attr-arg0, h, attr-arg1, l]]"
607,607,607,607,753,1929,anonymitat,Er schreibt seinen Namen auch nicht auf den Brief.,4_long,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,0:=Er 1:=schreibt 2:=seinen 3:=Namen 4:=auch 5:=nicht 6:=auf 7:=den 8:=Brief.,1,,He doesn't write his name on the letter either.,"[""# ::snt He doesn't write his name on the letter either.\n(w / write-01\n      :polarity -\n      :ARG0 (h / he)\n      :ARG1 (n / name\n            :poss h)\n      :location (l / letter)\n      :mod (e / either))""]","[w, attr-instance, write_01, attr-polarity, negative, attr-arg0, [h, attr-instance, he], attr-arg1, [n, attr-instance, name, attr-poss, h], attr-location, [l, attr-instance, letter], attr-mod, [e, attr-instance, either]]"
608,608,608,608,754,1930,anonymitat,"Dann weiss niemand, wer den Brief geschrieben hat.",5_long,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,"0:=Dann 1:=weiss 2:=niemand, 3:=wer 4:=den 5:=Brief 6:=geschrieben 7:=hat.",2,"[[0, 1, 2], [3, 5, 6, 7]]",Then nobody knows who wrote the letter.,['# ::snt Then nobody knows who wrote the letter.\n(k / know-01\n      :ARG0 (n / nobody)\n      :ARG1 (p / person\n            :ARG0-of (w / write-01\n                  :ARG1 (l / letter)))\n      :mod (t / then))'],"[k, attr-instance, know_01, attr-arg0, [n, attr-instance, nobody], attr-arg1, [p, attr-instance, person, attr-arg0_of, [w, attr-instance, write_01, attr-arg1, [l, attr-instance, letter]]], attr-mod, [t, attr-instance, then]]"
609,609,609,609,755,1931,anonymitat,"Dafür kann es mehrere Gründe geben, \newline etwa: \newline  er will etwas sagen, hat aber Angst, deswegen Ärger zu bekommen.",6_long,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,"0:=Dafür 1:=kann 2:=es 3:=mehrere 4:=Gründe 5:=geben, 6:=\newline 7:=etwa: 8:=\newline 9:= 10:=er 11:=will 12:=etwas 13:=sagen, 14:=hat 15:=aber 16:=Angst, 17:=deswegen 18:=Ärger 19:=zu 20:=bekommen.",4,"[[0, 1, 2, 3, 4, 5], [10, 11, 12, 13], [10, 14, 16], [17, 18, 19, 20]]","There can be several reasons for this, \newline for example: \newline he wants to say something but is afraid of getting into trouble.","['# ::snt There can be several reasons for this, \\newline for example: \\newline he wants to say something but is afraid of getting into trouble.\n(p / possible-01\n      :ARG1 (r / reason\n            :quant (s / several)\n            :ARG0-of (c / cause-01\n                  :ARG1 (t / this))\n            :example (w / want-01\n                  :ARG0 (p2 / person\n                        :name (n / name\n                              :op1 ""Newline""))\n                  :ARG1 (s2 / say-01\n                        :ARG0 p2\n                        :ARG1 (s3 / something))\n                  :ARG1-of (c2 / contrast-01\n                        :ARG2 (f / fear-01\n                              :ARG0 p2\n                              :ARG1 (g / get-03\n                                    :ARG1 p2\n                                    :ARG2 (ii / in-trouble-02\n                                          :ARG1 p2)))))))']","[p, attr-instance, possible_01, attr-arg1, [r, attr-instance, reason, attr-quant, [s, attr-instance, several], attr-arg0_of, [c, attr-instance, cause_01, attr-arg1, [t, attr-instance, this]], attr-example, [w, attr-instance, want_01, attr-arg0, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""newline""]], attr-arg1, [s2, attr-instance, say_01, attr-arg0, p2, attr-arg1, [s3, attr-instance, something]], attr-arg1_of, [c2, attr-instance, contrast_01, attr-arg2, [f, attr-instance, fear_01, attr-arg0, p2, attr-arg1, [g, attr-instance, get_03, attr-arg1, p2, attr-arg2, [ii, attr-instance, in_trouble_02, attr-arg1, p2]]]]]]]"
610,610,610,610,756,1932,anonymitat,"er will, dass die Leute das Gesagte wichtig nehmen, nicht seine Person.",7_long,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,"0:=er 1:=will, 2:=dass 3:=die 4:=Leute 5:=das 6:=Gesagte 7:=wichtig 8:=nehmen, 9:=nicht 10:=seine 11:=Person.",3,"[[0, 1], [2, 4, 6, 7, 8], [9, 10, 11, 7, 8]]","he wants people to take what he says seriously, not his person.","['# ::snt he wants people to take what he says seriously, not his person.\n(w / want-01\n      :ARG0 (h / he)\n      :ARG1 (a / and\n            :op1 (t / take-04\n                  :ARG0 (p / person)\n                  :ARG1 (t2 / thing\n                        :ARG1-of (s / say-01\n                              :ARG0 h))\n                  :ARG2 (s2 / serious-01))\n            :op2 (t3 / take-04\n                  :polarity -\n                  :ARG0 p\n                  :ARG1 t2\n                  :ARG2 (p2 / person\n                        :poss h))))']","[w, attr-instance, want_01, attr-arg0, [h, attr-instance, he], attr-arg1, [a, attr-instance, and, attr-op1, [t, attr-instance, take_04, attr-arg0, [p, attr-instance, person], attr-arg1, [t2, attr-instance, thing, attr-arg1_of, [s, attr-instance, say_01, attr-arg0, h]], attr-arg2, [s2, attr-instance, serious_01]], attr-op2, [t3, attr-instance, take_04, attr-polarity, negative, attr-arg0, p, attr-arg1, t2, attr-arg2, [p2, attr-instance, person, attr-poss, h]]]]"
611,611,611,611,757,1933,anonymitat,"Das Wort ""Anonymität"" kann auch heißen,  \newline dass man in einer großen Menge von Menschen nicht mehr wichtig ist.",8_long,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,"0:=Das 1:=Wort 2:=""Anonymität"" 3:=kann 4:=auch 5:=heißen, 6:= 7:=\newline 8:=dass 9:=man 10:=in 11:=einer 12:=großen 13:=Menge 14:=von 15:=Menschen 16:=nicht 17:=mehr 18:=wichtig 19:=ist.",3,"[[1, 2, 3, 4, 5], [8, 9, 16, 17, 18, 19], [12, 13, 14, 15]]","The word ""anonymity"" can also mean that you are no longer important in a large crowd of people.","['# ::snt The word ""anonymity"" can also mean that you are no longer important in a large crowd of people.\n(p / possible-01\n      :ARG1 (m / mean-01\n            :ARG1 (w / word\n                  :mod (a / anonymous))\n            :ARG2 (ii / important-01\n                  :ARG1 (y / you)\n                  :time (n / no-longer)\n                  :location (c / crowd\n                        :mod (l / large)\n                        :consist-of (p2 / person)))\n            :mod (a2 / also)))']","[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, mean_01, attr-arg1, [w, attr-instance, word, attr-mod, [a, attr-instance, anonymous]], attr-arg2, [ii, attr-instance, important_01, attr-arg1, [y, attr-instance, you], attr-time, [n, attr-instance, no_longer], attr-location, [c, attr-instance, crowd, attr-mod, [l, attr-instance, large], attr-consist_of, [p2, attr-instance, person]]], attr-mod, [a2, attr-instance, also]]]"
612,612,612,612,759,1935,anonymitat,"Das Wort ""anonym"" ist ein Lehnwort aus dem Alt-Griechischen.",10_long,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,"0:=Das 1:=Wort 2:=""anonym"" 3:=ist 4:=ein 5:=Lehnwort 6:=aus 7:=dem 8:=Alt-Griechischen.",2,"[[5], [6, 8]]","The word ""anonymous"" is a loanword from ancient Greek.","['# ::snt The word ""anonymous"" is a loanword from ancient Greek.\n(l / loanword\n      :source (l2 / language\n            :name (n / name\n                  :op1 ""Greek"")\n            :mod (a / ancient))\n      :domain (w / word\n            :mod (a2 / anonymous)))']","[l, attr-instance, loanword, attr-source, [l2, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""greek""], attr-mod, [a, attr-instance, ancient]], attr-domain, [w, attr-instance, word, attr-mod, [a2, attr-instance, anonymous]]]"
613,613,613,613,760,1936,anonymitat,anonym \newline bedeutet namenlos.,0_short,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,0:=anonym 1:=\newline 2:=bedeutet 3:=namenlos.,1,,anonymous \newline means nameless.,"['# ::snt anonymous \\newline means nameless.\n(m / mean-01\n      :ARG1 (n / name\n            :polarity -\n            :op1 ""ANonymous""\n            :op2 ""Newline"")\n      :ARG2 (n2 / nameless))']","[m, attr-instance, mean_01, attr-arg1, [n, attr-instance, name, attr-polarity, negative, attr-op1, ""anonymous"", attr-op2, ""newline""], attr-arg2, [n2, attr-instance, nameless]]"
614,614,614,614,761,1937,anonymitat,Anonymität ist das dazugehörige Hauptwort.,1_short,Ohne_Kategorie,2015-01-03T20:19:29Z,5ddcf7455ff456f1eb3baf0107f54e42,0:=Anonymität 1:=ist 2:=das 3:=dazugehörige 4:=Hauptwort.,1,,Anonymity is the corresponding noun.,['# ::snt Anonymity is the corresponding noun.\n(n / noun\n      :ARG1-of (c / correspond-02)\n      :domain (a / anonymous))'],"[n, attr-instance, noun, attr-arg1_of, [c, attr-instance, correspond_02], attr-domain, [a, attr-instance, anonymous]]"
615,615,615,615,762,1938,anonymous-gruppe,Anonymous-Gruppen machen Aktionen im Internet.,0_long,Internet|Computer,2015-02-25T20:52:12Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Anonymous-Gruppen 1:=machen 2:=Aktionen 3:=im 4:=Internet.,2,"[[0, 1], [3, 4]]",Anonymous groups carry out actions on the Internet.,['# ::snt Anonymous groups carry out actions on the Internet.\n(a / act-02\n      :ARG0 (g / group\n            :mod (a2 / anonymous))\n      :location (ii / internet))'],"[a, attr-instance, act_02, attr-arg0, [g, attr-instance, group, attr-mod, [a2, attr-instance, anonymous]], attr-location, [ii, attr-instance, internet]]"
616,616,616,616,764,1940,anonymous-gruppe,Sie möchten politisch etwas verändern.,2_long,Internet|Computer,2015-02-25T20:52:12Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Sie 1:=möchten 2:=politisch 3:=etwas 4:=verändern.,2,"[[0, 1, 3, 4], [2]]",They want to change something politically.,['# ::snt They want to change something politically.\n(w / want-01\n      :ARG0 (t / they)\n      :ARG1 (c / change-01\n            :ARG0 t\n            :ARG1 (s / something)\n            :manner (p / politics)))'],"[w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [c, attr-instance, change_01, attr-arg0, t, attr-arg1, [s, attr-instance, something], attr-manner, [p, attr-instance, politics]]]"
617,617,617,617,765,1941,anonymous-gruppe,"Wenn sie sich treffen, tragen sie manchmal Gesichts-masken.",3_long,Internet|Computer,2015-02-25T20:52:12Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,"0:=Wenn 1:=sie 2:=sich 3:=treffen, 4:=tragen 5:=sie 6:=manchmal 7:=Gesichts-masken.",2,"[[0, 1, 2, 3], [4, 5, 6, 7]]","When they meet, they sometimes wear face masks.","['# ::snt When they meet, they sometimes wear face masks.\n(w / wear-01\n      :ARG0 (t / they)\n      :ARG1 (m / mask\n            :mod (f / face))\n      :frequency (s / sometimes)\n      :time (m2 / meet-03\n            :ARG0 t))']","[w, attr-instance, wear_01, attr-arg0, [t, attr-instance, they], attr-arg1, [m, attr-instance, mask, attr-mod, [f, attr-instance, face]], attr-frequency, [s, attr-instance, sometimes], attr-time, [m2, attr-instance, meet_03, attr-arg0, t]]"
618,618,618,618,766,1942,anonymous-gruppe,Sie tragen die Gesichts-maske von Guy Fawkes.,4_long,Internet|Computer,2015-02-25T20:52:12Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Sie 1:=tragen 2:=die 3:=Gesichts-maske 4:=von 5:=Guy 6:=Fawkes.,2,"[[0, 1], [4, 5, 6]]",They wear the face mask of Guy Fawkes.,"['# ::snt They wear the face mask of Guy Fawkes.\n(w / wear-01\n      :ARG0 (t / they)\n      :ARG1 (m / mask\n            :mod (f / face)\n            :poss (p / person\n                  :name (n / name\n                        :op1 ""Guy""\n                        :op2 ""Fawkes""))))']","[w, attr-instance, wear_01, attr-arg0, [t, attr-instance, they], attr-arg1, [m, attr-instance, mask, attr-mod, [f, attr-instance, face], attr-poss, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""guy"", attr-op2, ""fawkes""]]]]"
619,619,619,619,767,1943,anonymous-gruppe,Anonymous-Gruppen gibt es auf der ganzen Welt.,5_long,Internet|Computer,2015-02-25T20:52:12Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Anonymous-Gruppen 1:=gibt 2:=es 3:=auf 4:=der 5:=ganzen 6:=Welt.,1,,Anonymous groups exist all over the world.,['# ::snt Anonymous groups exist all over the world.\n(e / exist-01\n      :ARG1 (g / group\n            :mod (a / anonymous))\n      :location (a2 / all-over\n            :op1 (w / world)))'],"[e, attr-instance, exist_01, attr-arg1, [g, attr-instance, group, attr-mod, [a, attr-instance, anonymous]], attr-location, [a2, attr-instance, all_over, attr-op1, [w, attr-instance, world]]]"
620,620,620,620,768,1944,anonymous-gruppe,Anonymous ist ein Internet-phänomen.,6_long,Internet|Computer,2015-02-25T20:52:12Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Anonymous 1:=ist 2:=ein 3:=Internet-phänomen.,1,,Anonymous is an internet phenomenon.,['# ::snt Anonymous is an internet phenomenon.\n(p / phenomenon\n      :mod (ii / internet)\n      :domain (a / anonymous))'],"[p, attr-instance, phenomenon, attr-mod, [ii, attr-instance, internet], attr-domain, [a, attr-instance, anonymous]]"
621,621,621,621,769,1945,anonymous-gruppe,"Die Anonymous-Gruppe sind verschiedene Menschen,  \newline die zusammen gegen bestimmte Sachen protestieren.",0_short,Internet|Computer,2015-02-25T20:52:12Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,"0:=Die 1:=Anonymous-Gruppe 2:=sind 3:=verschiedene 4:=Menschen, 5:= 6:=\newline 7:=die 8:=zusammen 9:=gegen 10:=bestimmte 11:=Sachen 12:=protestieren.",3,"[[1, 2, 3, 4], [8, 9, 11, 12], [10, 11]]",The Anonymous group is made up of different people who protest together against certain things.,"['# ::snt The Anonymous group is made up of different people who protest together against certain things.\n(m / make-up-07\n      :ARG1 (g / group\n            :name (n / name\n                  :op1 ""Anonymous""))\n      :ARG2 (p / person\n            :ARG1-of (d / differ-02)\n            :ARG0-of (p2 / protest-01\n                  :ARG1 (t / thing\n                        :mod (c / certain))\n                  :manner (t2 / together))))']","[m, attr-instance, make_up_07, attr-arg1, [g, attr-instance, group, attr-name, [n, attr-instance, name, attr-op1, ""anonymous""]], attr-arg2, [p, attr-instance, person, attr-arg1_of, [d, attr-instance, differ_02], attr-arg0_of, [p2, attr-instance, protest_01, attr-arg1, [t, attr-instance, thing, attr-mod, [c, attr-instance, certain]], attr-manner, [t2, attr-instance, together]]]]"
622,622,622,622,771,1947,anonym,Eine Person ist anonym.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2020-12-21T18:37:41Z,b6c01781fe786ad5f897a3a52a684275,0:=Eine 1:=Person 2:=ist 3:=anonym.,1,,A person is anonymous.,['# ::snt A person is anonymous.\n(a / anonymous\n      :domain (p / person))'],"[a, attr-instance, anonymous, attr-domain, [p, attr-instance, person]]"
623,623,623,623,772,1948,anonym,Also weiß niemand: Wer ist diese Person?,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2020-12-21T18:37:41Z,b6c01781fe786ad5f897a3a52a684275,0:=Also 1:=weiß 2:=niemand: 3:=Wer 4:=ist 5:=diese 6:=Person?,2,"[[0, 1, 2], [3, 4, 5, 6]]",So nobody knows: who is this person?,['# ::snt So nobody knows: who is this person?\n(k / know-01\n      :ARG0 (n / nobody)\n      :ARG1 (p / person\n            :domain (a / amr-unknown)\n            :mod (t / this)))'],"[k, attr-instance, know_01, attr-arg0, [n, attr-instance, nobody], attr-arg1, [p, attr-instance, person, attr-domain, [a, attr-instance, amr_unknown], attr-mod, [t, attr-instance, this]]]"
624,624,624,624,778,1954,anorexie,Anorexie ist ein Fachbegriff und ein Kunstwort.,4_long,Gesundheit,2013-11-19T10:00:18Z,4fb76af6644df80663ac679b7fa308cd,0:=Anorexie 1:=ist 2:=ein 3:=Fachbegriff 4:=und 5:=ein 6:=Kunstwort.,2,"[[3], [6]]",Anorexia is a technical term and a made-up word.,['# ::snt Anorexia is a technical term and a made-up word.\n(a / and\n      :op1 (t / term\n            :mod (t2 / technical)\n            :domain (a2 / anorexia))\n      :op2 (w / word\n            :ARG1-of (m / make-up-10)\n            :domain a2))'],"[a, attr-instance, and, attr-op1, [t, attr-instance, term, attr-mod, [t2, attr-instance, technical], attr-domain, [a2, attr-instance, anorexia]], attr-op2, [w, attr-instance, word, attr-arg1_of, [m, attr-instance, make_up_10], attr-domain, a2]]"
625,625,625,625,779,1955,anorexie,Bei einer Anorexie hat man keine Lust etwas zu essen.,0_short,Gesundheit,2013-11-19T10:00:18Z,4fb76af6644df80663ac679b7fa308cd,0:=Bei 1:=einer 2:=Anorexie 3:=hat 4:=man 5:=keine 6:=Lust 7:=etwas 8:=zu 9:=essen.,2,"[[0, 2, 3, 4, 5, 6], [7, 8, 9]]","If you have anorexia, you have no desire to eat anything.","['# ::snt If you have anorexia, you have no desire to eat anything.\n(d / desire-01\n      :polarity -\n      :ARG0 (y / you)\n      :ARG1 (e / eat-01\n            :ARG0 y\n            :ARG1 (a / anything))\n      :condition (h / have-03\n            :ARG0 y\n            :ARG1 (a2 / anorexia)))']","[d, attr-instance, desire_01, attr-polarity, negative, attr-arg0, [y, attr-instance, you], attr-arg1, [e, attr-instance, eat_01, attr-arg0, y, attr-arg1, [a, attr-instance, anything]], attr-condition, [h, attr-instance, have_03, attr-arg0, y, attr-arg1, [a2, attr-instance, anorexia]]]"
626,626,626,626,780,1956,anorexie,"Wenn die Anorexie länger geht, \newline verschwindet auch der Hunger.",1_short,Gesundheit,2013-11-19T10:00:18Z,4fb76af6644df80663ac679b7fa308cd,"0:=Wenn 1:=die 2:=Anorexie 3:=länger 4:=geht, 5:=\newline 6:=verschwindet 7:=auch 8:=der 9:=Hunger.",2,"[[0, 2, 3, 4], [6, 7, 9]]","If anorexia lasts longer, \newline hunger also disappears.","['# ::snt If anorexia lasts longer, \\newline hunger also disappears.\n(d / disappear-01\n      :ARG1 (h / hunger-01\n            :mod (l / line))\n      :mod (a / also)\n      :condition (l2 / last-01\n            :ARG1 (a2 / anorexia)\n            :ARG2 (l3 / long-03\n                  :ARG1 a2\n                  :ARG2-of (h2 / have-degree-91\n                        :ARG1 a2\n                        :ARG3 (m / more)))))']","[d, attr-instance, disappear_01, attr-arg1, [h, attr-instance, hunger_01, attr-mod, [l, attr-instance, line]], attr-mod, [a, attr-instance, also], attr-condition, [l2, attr-instance, last_01, attr-arg1, [a2, attr-instance, anorexia], attr-arg2, [l3, attr-instance, long_03, attr-arg1, a2, attr-arg2_of, [h2, attr-instance, have_degree_91, attr-arg1, a2, attr-arg3, [m, attr-instance, more]]]]]"
627,627,627,627,781,1957,anrainer,Ein Anrainer kann auch ein Land sein.,0_long,Recht_und_Gesetz,2014-04-18T14:19:03Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Anrainer 2:=kann 3:=auch 4:=ein 5:=Land 6:=sein.,1,,A neighboring country can also be a country.,['# ::snt A neighboring country can also be a country.\n(p / possible-01\n      :ARG1 (c / country\n            :ARG1-of (n / neighbor-01)\n            :domain (c2 / country)\n            :mod (a / also)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, country, attr-arg1_of, [n, attr-instance, neighbor_01], attr-domain, [c2, attr-instance, country], attr-mod, [a, attr-instance, also]]]"
628,628,628,628,782,1958,anrainer,Das ist ein: • Anrainerstaat,1_long,Recht_und_Gesetz,2014-04-18T14:19:03Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=ist 2:=ein: 3:=• 4:=Anrainerstaat,1,,This is a: • Neighbouring country,['# ::snt This is a: • Neighbouring country\n(c / country\n      :ARG0-of (n / neighbor-01)\n      :domain (t / this))'],"[c, attr-instance, country, attr-arg0_of, [n, attr-instance, neighbor_01], attr-domain, [t, attr-instance, this]]"
629,629,629,629,783,1959,anrainer,Ein Anrainer ist ein Nachbar.,0_short,Recht_und_Gesetz,2014-04-18T14:19:03Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Anrainer 2:=ist 3:=ein 4:=Nachbar.,1,,A resident is a neighbor.,['# ::snt A resident is a neighbor.\n(n / neighbor\n      :domain (p / person\n            :ARG0-of (r / reside-01)))'],"[n, attr-instance, neighbor, attr-domain, [p, attr-instance, person, attr-arg0_of, [r, attr-instance, reside_01]]]"
630,630,630,630,784,1960,anrainer,Das heißt: \newline jemand wohnt neben dran,1_short,Recht_und_Gesetz,2014-04-18T14:19:03Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=heißt: 2:=\newline 3:=jemand 4:=wohnt 5:=neben 6:=dran,1,,That means: \newline someone lives next door,['# ::snt That means: \\newline someone lives next door\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (l / live-01\n            :ARG0 (s / someone)\n            :location (d / door\n                  :mod (n / next))\n            :mod (n2 / newline)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [l, attr-instance, live_01, attr-arg0, [s, attr-instance, someone], attr-location, [d, attr-instance, door, attr-mod, [n, attr-instance, next]], attr-mod, [n2, attr-instance, newline]]]"
631,631,631,631,785,1961,anschlag-am-1-januar-2017-istanbul,Der Mann hat absichtlich auf die Menschen geschossen.,0_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Mann 2:=hat 3:=absichtlich 4:=auf 5:=die 6:=Menschen 7:=geschossen.,2,"[[1, 2, 4, 6, 7], [3]]",The man shot at the people intentionally.,['# ::snt The man shot at the people intentionally.\n(s / shoot-02\n      :ARG0 (m / man)\n      :ARG2 (p / person)\n      :ARG1-of (ii / intend-01\n            :ARG0 m))'],"[s, attr-instance, shoot_02, attr-arg0, [m, attr-instance, man], attr-arg2, [p, attr-instance, person], attr-arg1_of, [ii, attr-instance, intend_01, attr-arg0, m]]"
632,632,632,632,786,1962,anschlag-am-1-januar-2017-istanbul,Keiner weiß wer der Mann ist.,1_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Keiner 1:=weiß 2:=wer 3:=der 4:=Mann 5:=ist.,2,"[[0, 1], [2, 4, 5]]",Nobody knows who the man is.,['# ::snt Nobody knows who the man is.\n(k / know-01\n      :ARG0 (n / nobody)\n      :ARG1 (m / man))'],"[k, attr-instance, know_01, attr-arg0, [n, attr-instance, nobody], attr-arg1, [m, attr-instance, man]]"
633,633,633,633,787,1963,anschlag-am-1-januar-2017-istanbul,Und warum er das gemacht hat.,2_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=warum 2:=er 3:=das 4:=gemacht 5:=hat.,1,,And why he did that.,['# ::snt And why he did that.\n(a / and\n      :op2 (t / thing\n            :ARG0-of (c / cause-01\n                  :ARG1 (d / do-02\n                        :ARG0 (h / he)\n                        :ARG1 (t2 / that)))))'],"[a, attr-instance, and, attr-op2, [t, attr-instance, thing, attr-arg0_of, [c, attr-instance, cause_01, attr-arg1, [d, attr-instance, do_02, attr-arg0, [h, attr-instance, he], attr-arg1, [t2, attr-instance, that]]]]]"
634,634,634,634,788,1964,anschlag-am-1-januar-2017-istanbul,Und keiner weiß wo der Mann ist.,3_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=keiner 2:=weiß 3:=wo 4:=der 5:=Mann 6:=ist.,2,"[[1, 2], [3, 5, 6]]",And nobody knows where the man is.,['# ::snt And nobody knows where the man is.\n(a / and\n      :op2 (k / know-01\n            :ARG0 (n / nobody)\n            :ARG1 (l / location\n                  :location-of (m / man))))'],"[a, attr-instance, and, attr-op2, [k, attr-instance, know_01, attr-arg0, [n, attr-instance, nobody], attr-arg1, [l, attr-instance, location, attr-location_of, [m, attr-instance, man]]]]"
635,635,635,635,789,1965,anschlag-am-1-januar-2017-istanbul,Er ist danach abgehauen.,4_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=ist 2:=danach 3:=abgehauen.,1,,He ran away after that.,['# ::snt He ran away after that.\n(r / run-02\n      :ARG0 (h / he)\n      :direction (a / away)\n      :time (a2 / after\n            :op1 (t / that)))'],"[r, attr-instance, run_02, attr-arg0, [h, attr-instance, he], attr-direction, [a, attr-instance, away], attr-time, [a2, attr-instance, after, attr-op1, [t, attr-instance, that]]]"
636,636,636,636,790,1966,anschlag-am-1-januar-2017-istanbul,Die Polizei und Experten versuchen heraus zu finden wer der Mann ist.,5_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Polizei 2:=und 3:=Experten 4:=versuchen 5:=heraus 6:=zu 7:=finden 8:=wer 9:=der 10:=Mann 11:=ist.,4,"[[1], [2], [4, 5, 6, 7], [8, 10, 11]]",The police and experts are trying to find out who the man is.,['# ::snt The police and experts are trying to find out who the man is.\n(t / try-01\n      :ARG0 (a / and\n            :op1 (p / police)\n            :op2 (p2 / person\n                  :ARG1-of (e / expert-01)))\n      :ARG1 (f / find-out-03\n            :ARG0 a\n            :ARG1 (m / man)))'],"[t, attr-instance, try_01, attr-arg0, [a, attr-instance, and, attr-op1, [p, attr-instance, police], attr-op2, [p2, attr-instance, person, attr-arg1_of, [e, attr-instance, expert_01]]], attr-arg1, [f, attr-instance, find_out_03, attr-arg0, a, attr-arg1, [m, attr-instance, man]]]"
637,637,637,637,791,1967,anschlag-am-1-januar-2017-istanbul,Und wo der Mann sich versteckt hat.,6_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=wo 2:=der 3:=Mann 4:=sich 5:=versteckt 6:=hat.,1,,And where the man hid.,['# ::snt And where the man hid.\n(a / and\n      :op2 (t / thing\n            :location-of (h / hide-01\n                  :ARG0 (m / man))))'],"[a, attr-instance, and, attr-op2, [t, attr-instance, thing, attr-location_of, [h, attr-instance, hide_01, attr-arg0, [m, attr-instance, man]]]]"
638,638,638,638,792,1968,anschlag-am-1-januar-2017-istanbul,Die Polizei in der Türkei sagt: der Mann hat Terrorismus gemacht.,7_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Polizei 2:=in 3:=der 4:=Türkei 5:=sagt: 6:=der 7:=Mann 8:=hat 9:=Terrorismus 10:=gemacht.,3,"[[1, 5], [2, 4], [7, 8, 9, 10]]",The police in Turkey say: the man committed terrorism.,"['# ::snt The police in Turkey say: the man committed terrorism.\n(s / say-01\n      :ARG0 (p / police\n            :location (c / country\n                  :name (n / name\n                        :op1 ""Turkey"")))\n      :ARG1 (c2 / commit-02\n            :ARG0 (m / man)\n            :ARG1 (t / terrorism)))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, police, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""turkey""]]], attr-arg1, [c2, attr-instance, commit_02, attr-arg0, [m, attr-instance, man], attr-arg1, [t, attr-instance, terrorism]]]"
639,639,639,639,793,1969,anschlag-am-1-januar-2017-istanbul,Und der Mann hat eine Lang-waffe zum schießen benutzt.,8_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=der 2:=Mann 3:=hat 4:=eine 5:=Lang-waffe 6:=zum 7:=schießen 8:=benutzt.,2,"[[5, 8], [6, 7]]",And the man used a long gun to shoot.,['# ::snt And the man used a long gun to shoot.\n(a / and\n      :op2 (u / use-01\n            :ARG0 (m / man)\n            :ARG1 (g / gun\n                  :ARG1-of (l / long-03))\n            :ARG2 (s / shoot-01\n                  :ARG0 m)))'],"[a, attr-instance, and, attr-op2, [u, attr-instance, use_01, attr-arg0, [m, attr-instance, man], attr-arg1, [g, attr-instance, gun, attr-arg1_of, [l, attr-instance, long_03]], attr-arg2, [s, attr-instance, shoot_01, attr-arg0, m]]]"
640,640,640,640,794,1970,anschlag-am-1-januar-2017-istanbul,Die IS Gruppe hat gesagt: wir haben den Anschlag gemacht.,9_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=IS 2:=Gruppe 3:=hat 4:=gesagt: 5:=wir 6:=haben 7:=den 8:=Anschlag 9:=gemacht.,2,"[[1, 2, 3, 4], [5, 6, 8, 9]]",The IS group said: we carried out the attack.,"['# ::snt The IS group said: we carried out the attack.\n(s / say-01\n      :ARG0 (g / group\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Islam"")))\n      :ARG1 (c / carry-out-03\n            :ARG0 g\n            :ARG1 (a / attack-01)))']","[s, attr-instance, say_01, attr-arg0, [g, attr-instance, group, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""islam""]]], attr-arg1, [c, attr-instance, carry_out_03, attr-arg0, g, attr-arg1, [a, attr-instance, attack_01]]]"
641,641,641,641,795,1971,anschlag-am-1-januar-2017-istanbul,Und der Mann gehört zu unserer Gruppe.,10_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=der 2:=Mann 3:=gehört 4:=zu 5:=unserer 6:=Gruppe.,1,,And the man belongs to our group.,['# ::snt And the man belongs to our group.\n(a / and\n      :op2 (b / belong-01\n            :ARG0 (m / man)\n            :ARG1 (g / group\n                  :poss (w / we))))'],"[a, attr-instance, and, attr-op2, [b, attr-instance, belong_01, attr-arg0, [m, attr-instance, man], attr-arg1, [g, attr-instance, group, attr-poss, [w, attr-instance, we]]]]"
642,642,642,642,796,1972,anschlag-am-1-januar-2017-istanbul,Der Mann dem der Nacht-club gehört hat gesagt: der Geheim-dienst von den Vereinigte Staaten hat ihn gewarnt.,11_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Mann 2:=dem 3:=der 4:=Nacht-club 5:=gehört 6:=hat 7:=gesagt: 8:=der 9:=Geheim-dienst 10:=von 11:=den 12:=Vereinigte 13:=Staaten 14:=hat 15:=ihn 16:=gewarnt.,4,"[[1, 6, 7], [1, 2, 4, 5], [9, 14, 15, 16], [9, 10, 12, 13]]",The man who owns the nightclub said the United States intelligence service warned him.,"['# ::snt The man who owns the nightclub said the United States intelligence service warned him.\n(s / say-01\n      :ARG0 (m / man\n            :ARG0-of (o / own-01\n                  :ARG1 (n / nightclub)))\n      :ARG1 (w / warn-01\n            :ARG0 (g / government-organization\n                  :name (n2 / name\n                        :op1 ""United""\n                        :op2 ""States""\n                        :op3 ""Intelligence""\n                        :op4 ""Service""))\n            :ARG2 m))']","[s, attr-instance, say_01, attr-arg0, [m, attr-instance, man, attr-arg0_of, [o, attr-instance, own_01, attr-arg1, [n, attr-instance, nightclub]]], attr-arg1, [w, attr-instance, warn_01, attr-arg0, [g, attr-instance, government_organization, attr-name, [n2, attr-instance, name, attr-op1, ""united"", attr-op2, ""states"", attr-op3, ""intelligence"", attr-op4, ""service""]], attr-arg2, m]]"
643,643,643,643,797,1973,anschlag-am-1-januar-2017-istanbul,Der Geheim-dienst hat gesagt es gibt einen Anschlag auf den Nacht-club.,12_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Geheim-dienst 2:=hat 3:=gesagt 4:=es 5:=gibt 6:=einen 7:=Anschlag 8:=auf 9:=den 10:=Nacht-club.,3,"[[1, 2, 3], [4, 5, 6, 7], [7, 8, 10]]",The secret service said there was an attack on the nightclub.,['# ::snt The secret service said there was an attack on the nightclub.\n(s / say-01\n      :ARG0 (s2 / service\n            :mod (s3 / secret))\n      :ARG1 (a / attack-01\n            :ARG1 (n / nightclub)))'],"[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, service, attr-mod, [s3, attr-instance, secret]], attr-arg1, [a, attr-instance, attack_01, attr-arg1, [n, attr-instance, nightclub]]]"
644,644,644,644,798,1974,anschlag-am-1-januar-2017-istanbul,Der Geheim-dienst von Amerika sagt das stimmt nicht.,13_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Geheim-dienst 2:=von 3:=Amerika 4:=sagt 5:=das 6:=stimmt 7:=nicht.,3,"[[1, 4], [1, 2, 3], [5, 6, 7]]",The American secret service says that is not true.,"['# ::snt The American secret service says that is not true.\n(s / say-01\n      :ARG0 (s2 / service\n            :mod (s3 / secret)\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""America"")))\n      :ARG1 (t / true-01\n            :polarity -\n            :ARG1 (t2 / that)))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, service, attr-mod, [s3, attr-instance, secret], attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""america""]]], attr-arg1, [t, attr-instance, true_01, attr-polarity, negative, attr-arg1, [t2, attr-instance, that]]]"
645,645,645,645,799,1975,anschlag-am-1-januar-2017-istanbul,"Angela Merkel hat gesagt, \newline dass der Anschlag böse und schrecklich gewesen ist.",14_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Angela 1:=Merkel 2:=hat 3:=gesagt, 4:=\newline 5:=dass 6:=der 7:=Anschlag 8:=böse 9:=und 10:=schrecklich 11:=gewesen 12:=ist.",3,"[[0, 1, 2, 3], [5, 7, 8, 11, 12], [5, 7, 10, 11, 12]]",Angela Merkel said that the attack was evil and terrible.,"['# ::snt Angela Merkel said that the attack was evil and terrible.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Angela""\n                  :op2 ""Merkel""))\n      :ARG1 (a / and\n            :op1 (e / evil)\n            :op2 (t / terrible-01)\n            :domain (a2 / attack-01)))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""angela"", attr-op2, ""merkel""]], attr-arg1, [a, attr-instance, and, attr-op1, [e, attr-instance, evil], attr-op2, [t, attr-instance, terrible_01], attr-domain, [a2, attr-instance, attack_01]]]"
646,646,646,646,800,1976,anschlag-am-1-januar-2017-istanbul,Sie denkt an die gestorbenen Menschen.,15_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=denkt 2:=an 3:=die 4:=gestorbenen 5:=Menschen.,1,,She thinks about the people who died.,['# ::snt She thinks about the people who died.\n(t / think-01\n      :ARG0 (s / she)\n      :ARG2 (p / person\n            :ARG1-of (d / die-01)))'],"[t, attr-instance, think_01, attr-arg0, [s, attr-instance, she], attr-arg2, [p, attr-instance, person, attr-arg1_of, [d, attr-instance, die_01]]]"
647,647,647,647,802,1978,anschlag-am-1-januar-2017-istanbul,In der Türkei hat es schon viele Anschläge gegeben.,17_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=In 1:=der 2:=Türkei 3:=hat 4:=es 5:=schon 6:=viele 7:=Anschläge 8:=gegeben.,2,"[[0, 1], [3, 4, 5, 6, 7, 8]]",There have already been many attacks in Turkey.,"['# ::snt There have already been many attacks in Turkey.\n(a / attack-01\n      :quant (m / many)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Turkey""))\n      :time (a2 / already))']","[a, attr-instance, attack_01, attr-quant, [m, attr-instance, many], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""turkey""]], attr-time, [a2, attr-instance, already]]"
648,648,648,648,803,1979,anschlag-am-1-januar-2017-istanbul,Im Jahr 2016 hat es 20 Anschläge gegeben.,18_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Jahr 2:=2016 3:=hat 4:=es 5:=20 6:=Anschläge 7:=gegeben.,2,"[[0, 1, 2], [3, 4, 5, 6, 7]]",There were 20 attacks in 2016.,['# ::snt There were 20 attacks in 2016.\n(a / attack-01\n      :quant 20\n      :time (d / date-entity\n            :year 2016))'],"[a, attr-instance, attack_01, attr-quant, 20, attr-time, [d, attr-instance, date_entity, attr-year, 2016]]"
649,649,649,649,806,1982,anschlag-am-1-januar-2017-istanbul,Der Anschlag in Istanbul ist am 1. Januar 2017 gewesen.,0_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Anschlag 2:=in 3:=Istanbul 4:=ist 5:=am 6:=1. 7:=Januar 8:=2017 9:=gewesen.,2,"[[2, 3], [5, 6, 7, 8]]","The attack in Istanbul took place on January 1, 2017.","['# ::snt The attack in Istanbul took place on January 1, 2017.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Istanbul""))\n      :time (d / date-entity\n            :day 1\n            :month 1\n            :year 2017))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""istanbul""]], attr-time, [d, attr-instance, date_entity, attr-day, 1, attr-month, 1, attr-year, 2017]]"
650,650,650,650,807,1983,anschlag-am-1-januar-2017-istanbul,Dabei sind 37 Menschen getötet.,1_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Dabei 1:=sind 2:=37 3:=Menschen 4:=getötet.,1,,37 people were killed.,['# ::snt 37 people were killed.\n(k / kill-01\n      :ARG1 (p / person\n            :quant 37))'],"[k, attr-instance, kill_01, attr-arg1, [p, attr-instance, person, attr-quant, 37]]"
651,651,651,651,808,1984,anschlag-am-1-januar-2017-istanbul,Und sehr viele Menschen sind verletzt.,2_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sehr 2:=viele 3:=Menschen 4:=sind 5:=verletzt.,1,,And a lot of people are injured.,['# ::snt And a lot of people are injured.\n(a / and\n      :op2 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (l / lot))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, [l, attr-instance, lot]]]]"
652,652,652,652,809,1985,anschlag-am-1-januar-2017-istanbul,Ein Mann hat mit einer Waffe auf viele Menschen geschossen.,3_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Mann 2:=hat 3:=mit 4:=einer 5:=Waffe 6:=auf 7:=viele 8:=Menschen 9:=geschossen.,3,"[[1, 2, 9], [3, 5], [6, 7, 8]]",A man shot many people with a gun.,['# ::snt A man shot many people with a gun.\n(s / shoot-02\n      :ARG0 (m / man)\n      :ARG1 (p / person\n            :quant (m2 / many))\n      :ARG2 (g / gun))'],"[s, attr-instance, shoot_02, attr-arg0, [m, attr-instance, man], attr-arg1, [p, attr-instance, person, attr-quant, [m2, attr-instance, many]], attr-arg2, [g, attr-instance, gun]]"
653,653,653,653,810,1986,anschlag-am-1-januar-2017-istanbul,Gemacht hat das der Mann in einem Nacht-club.,4_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Gemacht 1:=hat 2:=das 3:=der 4:=Mann 5:=in 6:=einem 7:=Nacht-club.,1,,The man did this in a nightclub.,['# ::snt The man did this in a nightclub.\n(d / do-02\n      :ARG0 (m / man)\n      :ARG1 (t / this)\n      :location (n / nightclub))'],"[d, attr-instance, do_02, attr-arg0, [m, attr-instance, man], attr-arg1, [t, attr-instance, this], attr-location, [n, attr-instance, nightclub]]"
654,654,654,654,811,1987,anschlag-am-1-januar-2017-istanbul,Viele Menschen haben dort gefeiert.,5_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Viele 1:=Menschen 2:=haben 3:=dort 4:=gefeiert.,1,,Many people celebrated there.,['# ::snt Many people celebrated there.\n(c / celebrate-02\n      :ARG0 (p / person\n            :quant (m / many))\n      :location (t / there))'],"[c, attr-instance, celebrate_02, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-location, [t, attr-instance, there]]"
655,655,655,655,812,1988,anschlag-am-1-januar-2017-istanbul,Im Nacht-club haben über 700 Menschen gefeiert.,6_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Nacht-club 2:=haben 3:=über 4:=700 5:=Menschen 6:=gefeiert.,2,"[[0, 1], [3, 4, 5]]",Over 700 people celebrated in the nightclub.,['# ::snt Over 700 people celebrated in the nightclub.\n(c / celebrate-02\n      :ARG0 (p / person\n            :quant (o / over\n                  :op1 700))\n      :location (n / nightclub))'],"[c, attr-instance, celebrate_02, attr-arg0, [p, attr-instance, person, attr-quant, [o, attr-instance, over, attr-op1, 700]], attr-location, [n, attr-instance, nightclub]]"
656,656,656,656,813,1989,anschlag-am-1-januar-2017-istanbul,Der Anschlag ist in der Stadt Istanbul gewesen.,7_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Anschlag 2:=ist 3:=in 4:=der 5:=Stadt 6:=Istanbul 7:=gewesen.,1,,The attack took place in the city of Istanbul.,"['# ::snt The attack took place in the city of Istanbul.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Istanbul"")))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""istanbul""]]]"
657,657,657,657,814,1990,anschlag-am-1-januar-2017-istanbul,Das ist in der Türkei.,8_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-01-03T08:02:25Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=ist 2:=in 3:=der 4:=Türkei.,1,,This is in Turkey.,"['# ::snt This is in Turkey.\n(t / this\n      :location (c / country\n            :name (n / name\n                  :op1 ""Turkey"")))']","[t, attr-instance, this, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""turkey""]]]"
658,658,658,658,815,1991,anschlag-am-10-dezember-2016-in-istanbul,Am 10. Dezember 2016 hat es diese 2 Anschläge gegeben.,0_long,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Am 1:=10. 2:=Dezember 3:=2016 4:=hat 5:=es 6:=diese 7:=2 8:=Anschläge 9:=gegeben.,2,"[[0, 1, 2, 3], [4, 5, 6, 7, 8, 9]]","On December 10, 2016, these two attacks took place.","['# ::snt On December 10, 2016, these two attacks took place.\n(a / attack-01\n      :quant 2\n      :mod (t / this)\n      :time (d / date-entity\n            :day 10\n            :month 12\n            :year 2016))']","[a, attr-instance, attack_01, attr-quant, 2, attr-mod, [t, attr-instance, this], attr-time, [d, attr-instance, date_entity, attr-day, 10, attr-month, 12, attr-year, 2016]]"
659,659,659,659,816,1992,anschlag-am-10-dezember-2016-in-istanbul,Der Anschlag in Istanbul ist am 10. Dezember 2016 gewesen.,0_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=in 3:=Istanbul 4:=ist 5:=am 6:=10. 7:=Dezember 8:=2016 9:=gewesen.,2,"[[2, 3], [5, 6, 7, 8]]","The attack in Istanbul took place on December 10, 2016.","['# ::snt The attack in Istanbul took place on December 10, 2016.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Istanbul""))\n      :time (d / date-entity\n            :day 10\n            :month 12\n            :year 2016))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""istanbul""]], attr-time, [d, attr-instance, date_entity, attr-day, 10, attr-month, 12, attr-year, 2016]]"
660,660,660,660,817,1993,anschlag-am-10-dezember-2016-in-istanbul,Dabei sind 44 Menschen getötet.,1_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Dabei 1:=sind 2:=44 3:=Menschen 4:=getötet.,1,,44 people were killed.,['# ::snt 44 people were killed.\n(k / kill-01\n      :ARG1 (p / person\n            :quant 44))'],"[k, attr-instance, kill_01, attr-arg1, [p, attr-instance, person, attr-quant, 44]]"
661,661,661,661,818,1994,anschlag-am-10-dezember-2016-in-istanbul,Und viele Menschen sind verletzt.,2_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=viele 2:=Menschen 3:=sind 4:=verletzt.,1,,And many people are injured.,['# ::snt And many people are injured.\n(a / and\n      :op2 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (m / many))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]]]"
662,662,662,662,819,1995,anschlag-am-10-dezember-2016-in-istanbul,Jemand hat ein Auto in die Luft gesprengt.,3_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Jemand 1:=hat 2:=ein 3:=Auto 4:=in 5:=die 6:=Luft 7:=gesprengt.,1,,Someone blew up a car.,['# ::snt Someone blew up a car.\n(b / blow-up-06\n      :ARG0 (s / someone)\n      :ARG1 (c / car))'],"[b, attr-instance, blow_up_06, attr-arg0, [s, attr-instance, someone], attr-arg1, [c, attr-instance, car]]"
663,663,663,663,820,1996,anschlag-am-10-dezember-2016-in-istanbul,Und ein Mann hat sich in die Luft gesprengt.,4_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=ein 2:=Mann 3:=hat 4:=sich 5:=in 6:=die 7:=Luft 8:=gesprengt.,1,,And a man blew himself up.,['# ::snt And a man blew himself up.\n(a / and\n      :op2 (b / blow-up-06\n            :ARG0 (m / man)\n            :ARG1 m))'],"[a, attr-instance, and, attr-op2, [b, attr-instance, blow_up_06, attr-arg0, [m, attr-instance, man], attr-arg1, m]]"
664,664,664,664,821,1997,anschlag-am-10-dezember-2016-in-istanbul,Die Täter haben das absichtlich gemacht.,5_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Täter 2:=haben 3:=das 4:=absichtlich 5:=gemacht.,1,,The perpetrators did this intentionally.,['# ::snt The perpetrators did this intentionally.\n(d / do-02\n      :ARG0 (p / person\n            :ARG0-of (p2 / perpetrate-01))\n      :ARG1 (t / this)\n      :ARG1-of (ii / intend-01\n            :ARG0 p))'],"[d, attr-instance, do_02, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, perpetrate_01]], attr-arg1, [t, attr-instance, this], attr-arg1_of, [ii, attr-instance, intend_01, attr-arg0, p]]"
665,665,665,665,822,1998,anschlag-am-10-dezember-2016-in-istanbul,Sie haben viele Menschen töten und verletzen wollen.,6_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=haben 2:=viele 3:=Menschen 4:=töten 5:=und 6:=verletzen 7:=wollen.,2,"[[4], [6]]",They wanted to kill and hurt many people.,['# ::snt They wanted to kill and hurt many people.\n(w / want-01\n      :ARG0 (t / they)\n      :ARG1 (a / and\n            :op1 (k / kill-01\n                  :ARG0 t\n                  :ARG1 (p / person\n                        :quant (m / many)))\n            :op2 (h / hurt-01\n                  :ARG0 t\n                  :ARG1 p)))'],"[w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [a, attr-instance, and, attr-op1, [k, attr-instance, kill_01, attr-arg0, t, attr-arg1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]], attr-op2, [h, attr-instance, hurt_01, attr-arg0, t, attr-arg1, p]]]"
666,666,666,666,823,1999,anschlag-am-10-dezember-2016-in-istanbul,Die Täter sind dabei selbst gestorben.,7_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Täter 2:=sind 3:=dabei 4:=selbst 5:=gestorben.,1,,The perpetrators themselves died in the process.,['# ::snt The perpetrators themselves died in the process.\n(d / die-01\n      :ARG1 (p / person\n            :ARG0-of (p2 / perpetrate-01))\n      :time (p3 / process-02))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, perpetrate_01]], attr-time, [p3, attr-instance, process_02]]"
667,667,667,667,824,2000,anschlag-am-10-dezember-2016-in-istanbul,Der Anschlag ist in der Stadt Istanbul gewesen.,8_short,Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-15T07:06:25Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=ist 3:=in 4:=der 5:=Stadt 6:=Istanbul 7:=gewesen.,1,,The attack took place in the city of Istanbul.,"['# ::snt The attack took place in the city of Istanbul.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Istanbul"")))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""istanbul""]]]"
668,668,668,668,825,2002,anschlag-am-12-januar-2016-in-istanbul,"Der Mann der sich in die Luft gesprengt hat, \newline ist ein Selbst-mord-Attentäter.",0_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,"0:=Der 1:=Mann 2:=der 3:=sich 4:=in 5:=die 6:=Luft 7:=gesprengt 8:=hat, 9:=\newline 10:=ist 11:=ein 12:=Selbst-mord-Attentäter.",2,"[[10, 12], [2, 3, 4, 6, 7, 8]]","The man who blew himself up,\newline is a suicide bomber.","['# ::snt The man who blew himself up,\\newline is a suicide bomber.\n(b / bomb-01\n      :mod (s / suicide)\n      :domain (m / man\n            :ARG0-of (b2 / blow-up-06)\n            :ARG1-of b2)\n      :ARG1-of (n / new-line-07))']","[b, attr-instance, bomb_01, attr-mod, [s, attr-instance, suicide], attr-domain, [m, attr-instance, man, attr-arg0_of, [b2, attr-instance, blow_up_06], attr-arg1_of, b2], attr-arg1_of, [n, attr-instance, new_line_07]]"
669,669,669,669,826,2003,anschlag-am-12-januar-2016-in-istanbul,Sein Name ist Nabil Fadli.,1_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Sein 1:=Name 2:=ist 3:=Nabil 4:=Fadli.,1,,His name is Nabil Fadli.,"['# ::snt His name is Nabil Fadli.\n(n / name-01\n      :ARG1 (h / he)\n      :ARG2 (p / person\n            :name (n2 / name\n                  :op1 ""Nabil""\n                  :op2 ""Fadli"")))']","[n, attr-instance, name_01, attr-arg1, [h, attr-instance, he], attr-arg2, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""nabil"", attr-op2, ""fadli""]]]"
670,670,670,670,827,2004,anschlag-am-12-januar-2016-in-istanbul,Er hat sich an einem Platz mit vielen Menschen in die Luft gesprengt.,2_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Er 1:=hat 2:=sich 3:=an 4:=einem 5:=Platz 6:=mit 7:=vielen 8:=Menschen 9:=in 10:=die 11:=Luft 12:=gesprengt.,2,"[[3, 4, 9, 10, 11, 12], [6, 7, 8]]",He blew himself up in a place where there were a lot of people.,['# ::snt He blew himself up in a place where there were a lot of people.\n(b / blow-up-06\n      :ARG0 (h / he)\n      :ARG1 h\n      :location (p / place\n            :location-of (p2 / person\n                  :quant (l / lot))))'],"[b, attr-instance, blow_up_06, attr-arg0, [h, attr-instance, he], attr-arg1, h, attr-location, [p, attr-instance, place, attr-location_of, [p2, attr-instance, person, attr-quant, [l, attr-instance, lot]]]]"
671,671,671,671,828,2005,anschlag-am-12-januar-2016-in-istanbul,"Nabil Fadli  hat sich zu den anderen Menschen gestellt und dann die Bombe gezündet, \newline Er ist dabei selbst gestorben.",3_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,"0:=Nabil 1:=Fadli 2:= 3:=hat 4:=sich 5:=zu 6:=den 7:=anderen 8:=Menschen 9:=gestellt 10:=und 11:=dann 12:=die 13:=Bombe 14:=gezündet, 15:=\newline 16:=Er 17:=ist 18:=dabei 19:=selbst 20:=gestorben.",3,"[[5, 6, 7, 8, 9], [11, 13, 14], [16, 17, 18, 19, 20]]",Nabil Fadli stood with the other people and then detonated the bomb. \newline He died in the process.,"['# ::snt Nabil Fadli stood with the other people and then detonated the bomb.\n(a / and\n      :op1 (s / stand-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 ""Nabil""\n                        :op2 ""Fadli""))\n            :accompanier (p2 / person\n                  :mod (o / other)))\n      :op2 (d / detonate-01\n            :ARG0 p\n            :ARG1 (b / bomb)\n            :time (t / then)))', '# ::snt \\newline He died in the process.\n(d / die-01\n      :ARG1 (h / he)\n      :time (p / process-02)\n      :ARG1-of (n / new-01))']","[a, attr-instance, and, attr-op1, [s, attr-instance, stand_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""nabil"", attr-op2, ""fadli""]], attr-accompanier, [p2, attr-instance, person, attr-mod, [o, attr-instance, other]]], attr-op2, [d, attr-instance, detonate_01, attr-arg0, p, attr-arg1, [b, attr-instance, bomb], attr-time, [t, attr-instance, then]]]"
672,672,672,672,829,2006,anschlag-am-12-januar-2016-in-istanbul,Der Platz heißt Sultan-Ahmed-Platz und ist sehr bekannt.,4_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Platz 2:=heißt 3:=Sultan-Ahmed-Platz 4:=und 5:=ist 6:=sehr 7:=bekannt.,2,"[[2, 3], [5, 6, 7]]",The square is called Sultan Ahmed Square and is very famous.,"['# ::snt The square is called Sultan Ahmed Square and is very famous.\n(a / and\n      :op1 (c / call-01\n            :ARG1 (s / square)\n            :ARG2 s\n            :name (n / name\n                  :op1 ""Sultan""\n                  :op2 ""Ahmed""\n                  :op3 ""Square""))\n      :op2 (f / fame-01\n            :ARG1 s\n            :degree (v / very)))']","[a, attr-instance, and, attr-op1, [c, attr-instance, call_01, attr-arg1, [s, attr-instance, square], attr-arg2, s, attr-name, [n, attr-instance, name, attr-op1, ""sultan"", attr-op2, ""ahmed"", attr-op3, ""square""]], attr-op2, [f, attr-instance, fame_01, attr-arg1, s, attr-degree, [v, attr-instance, very]]]"
673,673,673,673,830,2007,anschlag-am-12-januar-2016-in-istanbul,Sehr viele Touristen besuchen den Platz.,5_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Sehr 1:=viele 2:=Touristen 3:=besuchen 4:=den 5:=Platz.,1,,A lot of tourists visit the place.,['# ::snt A lot of tourists visit the place.\n(v / visit-01\n      :ARG0 (p / person\n            :ARG0-of (t / tour-01)\n            :quant (l / lot))\n      :ARG1 (p2 / place))'],"[v, attr-instance, visit_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [t, attr-instance, tour_01], attr-quant, [l, attr-instance, lot]], attr-arg1, [p2, attr-instance, place]]"
674,674,674,674,831,2008,anschlag-am-12-januar-2016-in-istanbul,Nabil Fadli ist 28 Jahre alt gewesen.,6_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Nabil 1:=Fadli 2:=ist 3:=28 4:=Jahre 5:=alt 6:=gewesen.,1,,Nabil Fadli was 28 years old.,"['# ::snt Nabil Fadli was 28 years old.\n(p / person\n      :name (n / name\n            :op1 ""Nabil""\n            :op2 ""Fadli"")\n      :age (t / temporal-quantity\n            :quant 28\n            :unit (y / year)))']","[p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""nabil"", attr-op2, ""fadli""], attr-age, [t, attr-instance, temporal_quantity, attr-quant, 28, attr-unit, [y, attr-instance, year]]]"
675,675,675,675,832,2009,anschlag-am-12-januar-2016-in-istanbul,Er gehört zur IS Gruppe.,7_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Er 1:=gehört 2:=zur 3:=IS 4:=Gruppe.,1,,He belongs to the IS group.,"['# ::snt He belongs to the IS group.\n(b / belong-01\n      :ARG0 (h / he)\n      :ARG1 (g / group\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Islam""))))']","[b, attr-instance, belong_01, attr-arg0, [h, attr-instance, he], attr-arg1, [g, attr-instance, group, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""islam""]]]]"
676,676,676,676,833,2010,anschlag-am-12-januar-2016-in-istanbul,Nach dem Anschlag hat es eine Nachrichten-sperre gegeben.,8_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Nach 1:=dem 2:=Anschlag 3:=hat 4:=es 5:=eine 6:=Nachrichten-sperre 7:=gegeben.,2,"[[0, 2], [3, 4, 6, 7]]",After the attack there was a news blackout.,['# ::snt After the attack there was a news blackout.\n(b / blackout\n      :mod (n / news)\n      :time (a / after\n            :op1 (a2 / attack-01)))'],"[b, attr-instance, blackout, attr-mod, [n, attr-instance, news], attr-time, [a, attr-instance, after, attr-op1, [a2, attr-instance, attack_01]]]"
677,677,677,677,834,2011,anschlag-am-12-januar-2016-in-istanbul,"Das heißt,  \newline Informationen weiter zu geben ist verboten.",9_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,"0:=Das 1:=heißt, 2:= 3:=\newline 4:=Informationen 5:=weiter 6:=zu 7:=geben 8:=ist 9:=verboten.",2,"[[4, 5, 6, 7], [8, 9]]",This means that passing on \newline information is prohibited.,['# ::snt This means that passing on \\newline information is prohibited.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (p / prohibit-01\n            :ARG1 (p2 / pass-on-09\n                  :ARG1 (ii / information\n                        :mod (l / line\n                              :mod (n / new))))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [p, attr-instance, prohibit_01, attr-arg1, [p2, attr-instance, pass_on_09, attr-arg1, [ii, attr-instance, information, attr-mod, [l, attr-instance, line, attr-mod, [n, attr-instance, new]]]]]]"
678,678,678,678,835,2012,anschlag-am-12-januar-2016-in-istanbul,10 Menschen sind bei dem Anschlag getötet worden.,10_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=10 1:=Menschen 2:=sind 3:=bei 4:=dem 5:=Anschlag 6:=getötet 7:=worden.,1,,10 people were killed in the attack.,['# ::snt 10 people were killed in the attack.\n(k / kill-01\n      :ARG1 (p / person\n            :quant 10)\n      :location (a / attack-01))'],"[k, attr-instance, kill_01, attr-arg1, [p, attr-instance, person, attr-quant, 10], attr-location, [a, attr-instance, attack_01]]"
679,679,679,679,836,2013,anschlag-am-12-januar-2016-in-istanbul,8 Menschen kommen aus Deutschland und eine Person kommt aus Peru.,11_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=8 1:=Menschen 2:=kommen 3:=aus 4:=Deutschland 5:=und 6:=eine 7:=Person 8:=kommt 9:=aus 10:=Peru.,2,"[[0, 1, 2, 3, 4], [6, 7, 8, 9, 10]]",8 people come from Germany and one person comes from Peru.,"['# ::snt 8 people come from Germany and one person comes from Peru.\n(a / and\n      :op1 (p / person\n            :quant 8\n            :source (c / country\n                  :name (n / name\n                        :op1 ""Germany"")))\n      :op2 (p2 / person\n            :quant 1\n            :source (c2 / country\n                  :name (n2 / name\n                        :op1 ""Peru""))))']","[a, attr-instance, and, attr-op1, [p, attr-instance, person, attr-quant, 8, attr-source, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]], attr-op2, [p2, attr-instance, person, attr-quant, 1, attr-source, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""peru""]]]]"
680,680,680,680,837,2014,anschlag-am-12-januar-2016-in-istanbul,Der Anschlag in Istanbul ist am 12. Januar 2016 gewesen.,0_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=in 3:=Istanbul 4:=ist 5:=am 6:=12. 7:=Januar 8:=2016 9:=gewesen.,2,"[[2, 3], [5, 6, 7, 8]]","The attack in Istanbul took place on January 12, 2016.","['# ::snt The attack in Istanbul took place on January 12, 2016.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Istanbul""))\n      :time (d / date-entity\n            :day 12\n            :month 1\n            :year 2016))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""istanbul""]], attr-time, [d, attr-instance, date_entity, attr-day, 12, attr-month, 1, attr-year, 2016]]"
681,681,681,681,838,2015,anschlag-am-12-januar-2016-in-istanbul,Dabei sind 10 Menschen getötet worden.,1_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Dabei 1:=sind 2:=10 3:=Menschen 4:=getötet 5:=worden.,1,,10 people were killed.,['# ::snt 10 people were killed.\n(k / kill-01\n      :ARG1 (p / person\n            :quant 10))'],"[k, attr-instance, kill_01, attr-arg1, [p, attr-instance, person, attr-quant, 10]]"
682,682,682,682,839,2016,anschlag-am-12-januar-2016-in-istanbul,Und viele Menschen sind verletzt worden.,2_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=viele 2:=Menschen 3:=sind 4:=verletzt 5:=worden.,1,,And many people were injured.,['# ::snt And many people were injured.\n(a / and\n      :op2 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (m / many))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]]]"
683,683,683,683,840,2017,anschlag-am-12-januar-2016-in-istanbul,Ein Mann hat sich auf einem Platz mit vielen Menschen in die Luft gesprengt.,3_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Ein 1:=Mann 2:=hat 3:=sich 4:=auf 5:=einem 6:=Platz 7:=mit 8:=vielen 9:=Menschen 10:=in 11:=die 12:=Luft 13:=gesprengt.,3,"[[10, 11, 12, 13], [4, 5, 6, 10, 11, 12, 13], [6, 7, 8, 9]]",A man blew himself up in a square full of people.,['# ::snt A man blew himself up in a square full of people.\n(b / blow-up-06\n      :ARG0 (m / man)\n      :ARG1 m\n      :location (s / square\n            :ARG1-of (f / full-09\n                  :ARG2 (p / person))))'],"[b, attr-instance, blow_up_06, attr-arg0, [m, attr-instance, man], attr-arg1, m, attr-location, [s, attr-instance, square, attr-arg1_of, [f, attr-instance, full_09, attr-arg2, [p, attr-instance, person]]]]"
684,684,684,684,841,2018,anschlag-am-12-januar-2016-in-istanbul,Das hat der Täter absichtlich gemacht.,4_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=hat 2:=der 3:=Täter 4:=absichtlich 5:=gemacht.,1,,The perpetrator did this intentionally.,['# ::snt The perpetrator did this intentionally.\n(d / do-02\n      :ARG0 (p / person\n            :ARG0-of (p2 / perpetrate-01))\n      :ARG1 (t / this)\n      :ARG1-of (ii / intend-01\n            :ARG0 p))'],"[d, attr-instance, do_02, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, perpetrate_01]], attr-arg1, [t, attr-instance, this], attr-arg1_of, [ii, attr-instance, intend_01, attr-arg0, p]]"
685,685,685,685,842,2019,anschlag-am-12-januar-2016-in-istanbul,Der Täter ist dabei selbst gestorben.,5_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Täter 2:=ist 3:=dabei 4:=selbst 5:=gestorben.,1,,The perpetrator himself died in the process.,['# ::snt The perpetrator himself died in the process.\n(d / die-01\n      :ARG1 (p / person\n            :ARG0-of (p2 / perpetrate-01))\n      :time (p3 / process-02))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, perpetrate_01]], attr-time, [p3, attr-instance, process_02]]"
686,686,686,686,843,2020,anschlag-am-12-januar-2016-in-istanbul,Der Anschlag ist in der Stadt Istanbul gewesen.,6_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=ist 3:=in 4:=der 5:=Stadt 6:=Istanbul 7:=gewesen.,2,"[[3, 6], [5, 6]]",The attack took place in the city of Istanbul.,"['# ::snt The attack took place in the city of Istanbul.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Istanbul"")))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""istanbul""]]]"
687,687,687,687,844,2021,anschlag-am-12-januar-2016-in-istanbul,Das ist in der Türkei.,7_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-01-12T19:45:16Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=ist 2:=in 3:=der 4:=Türkei.,1,,This is in Turkey.,"['# ::snt This is in Turkey.\n(t / this\n      :location (c / country\n            :name (n / name\n                  :op1 ""Turkey"")))']","[t, attr-instance, this, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""turkey""]]]"
688,688,688,688,845,2022,anschlag-auf-charlie-hebdo,Bei dem Attentat wurden 12 Menschen getötet.,0_long,Politik|Attentat,2015-01-08T12:46:55Z,af28a20dfb151690981ee13d72ce655c,0:=Bei 1:=dem 2:=Attentat 3:=wurden 4:=12 5:=Menschen 6:=getötet.,1,,12 people were killed in the attack.,['# ::snt 12 people were killed in the attack.\n(k / kill-01\n      :ARG1 (p / person\n            :quant 12)\n      :location (a / attack-01))'],"[k, attr-instance, kill_01, attr-arg1, [p, attr-instance, person, attr-quant, 12], attr-location, [a, attr-instance, attack_01]]"
689,689,689,689,846,2023,anschlag-auf-charlie-hebdo,Und 11 Menschen wurden verletzt.,1_long,Politik|Attentat,2015-01-08T12:46:55Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=11 2:=Menschen 3:=wurden 4:=verletzt.,1,,And 11 people were injured.,['# ::snt And 11 people were injured.\n(a / and\n      :op2 (ii / injure-01\n            :ARG1 (p / person\n                  :quant 11)))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, 11]]]"
690,690,690,690,847,2024,anschlag-auf-charlie-hebdo,Es war ein Terror Anschlag.,2_long,Politik|Attentat,2015-01-08T12:46:55Z,af28a20dfb151690981ee13d72ce655c,0:=Es 1:=war 2:=ein 3:=Terror 4:=Anschlag.,1,,It was a terrorist attack.,['# ::snt It was a terrorist attack.\n(a / attack-01\n      :mod (t / terrorist)\n      :domain (ii / it))'],"[a, attr-instance, attack_01, attr-mod, [t, attr-instance, terrorist], attr-domain, [ii, attr-instance, it]]"
691,691,691,691,848,2025,anschlag-auf-charlie-hebdo,Der Anschlag auf Charlie Hebdo ist am 7. Januar 2015 passiert.,0_short,Politik|Attentat,2015-01-08T12:46:55Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=auf 3:=Charlie 4:=Hebdo 5:=ist 6:=am 7:=7. 8:=Januar 9:=2015 10:=passiert.,2,"[[2, 3, 4], [6, 7, 8, 9]]","The attack on Charlie Hebdo happened on January 7, 2015.","['# ::snt The attack on Charlie Hebdo happened on January 7, 2015.\n(a / attack-01\n      :ARG1 (m / magazine\n            :name (n / name\n                  :op1 ""Charlie""\n                  :op2 ""Ch Hebdo""))\n      :time (d / date-entity\n            :day 7\n            :month 1\n            :year 2015))']","[a, attr-instance, attack_01, attr-arg1, [m, attr-instance, magazine, attr-name, [n, attr-instance, name, attr-op1, ""charlie"", attr-op2, ""ch, hebdo""]], attr-time, [d, attr-instance, date_entity, attr-day, 7, attr-month, 1, attr-year, 2015]]"
692,692,692,692,849,2026,anschlag-auf-charlie-hebdo,2 Männer haben mit Waffen auf andere Menschen geschossen.,1_short,Politik|Attentat,2015-01-08T12:46:55Z,af28a20dfb151690981ee13d72ce655c,0:=2 1:=Männer 2:=haben 3:=mit 4:=Waffen 5:=auf 6:=andere 7:=Menschen 8:=geschossen.,3,"[[0, 1], [3, 4], [5, 6, 7]]",2 men shot other people with weapons.,['# ::snt 2 men shot other people with weapons.\n(s / shoot-02\n      :ARG0 (m / man\n            :quant 2)\n      :ARG1 (p / person\n            :mod (o / other))\n      :ARG2 (w / weapon))'],"[s, attr-instance, shoot_02, attr-arg0, [m, attr-instance, man, attr-quant, 2], attr-arg1, [p, attr-instance, person, attr-mod, [o, attr-instance, other]], attr-arg2, [w, attr-instance, weapon]]"
693,693,693,693,850,2027,anschlag-auf-charlie-hebdo,Das ist in Paris in den Räumen von Charlie Hebdo passiert.,2_short,Politik|Attentat,2015-01-08T12:46:55Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=ist 2:=in 3:=Paris 4:=in 5:=den 6:=Räumen 7:=von 8:=Charlie 9:=Hebdo 10:=passiert.,2,"[[2, 3], [4, 6, 7, 8, 9]]",This happened in Paris in the offices of Charlie Hebdo.,"['# ::snt This happened in Paris in the offices of Charlie Hebdo.\n(b / be-located-at-91\n      :ARG1 (t / this)\n      :ARG2 (o / office\n            :poss (p / publication\n                  :name (n / name\n                        :op1 ""Charlie""\n                        :op2 ""Be Hebdo"")))\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""Paris"")))']","[b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, this], attr-arg2, [o, attr-instance, office, attr-poss, [p, attr-instance, publication, attr-name, [n, attr-instance, name, attr-op1, ""charlie"", attr-op2, ""be, hebdo""]]], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""paris""]]]"
694,694,694,694,851,2028,anschlag-auf-den-bus-von-borussia-dortmund,Fußball-spieler von Borussia Dortmund sind mit dem Bus gefahren.,0_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Fußball-spieler 1:=von 2:=Borussia 3:=Dortmund 4:=sind 5:=mit 6:=dem 7:=Bus 8:=gefahren.,2,"[[1, 2, 3], [4, 5, 7, 8]]",Football players from Borussia Dortmund traveled by bus.,"['# ::snt Football players from Borussia Dortmund traveled by bus.\n(t / travel-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / play-01\n                  :ARG1 (f / football))\n            :source (t2 / team\n                  :name (n / name\n                        :op1 ""Borussia""\n                        :op2 ""Dortmund"")))\n      :manner (b / bus))']","[t, attr-instance, travel_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01, attr-arg1, [f, attr-instance, football]], attr-source, [t2, attr-instance, team, attr-name, [n, attr-instance, name, attr-op1, ""borussia"", attr-op2, ""dortmund""]]], attr-manner, [b, attr-instance, bus]]"
695,695,695,695,852,2029,anschlag-auf-den-bus-von-borussia-dortmund,Sie sind zu einem UEFA Spiel gefahren.,1_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=sind 2:=zu 3:=einem 4:=UEFA 5:=Spiel 6:=gefahren.,1,,They went to a UEFA match.,"['# ::snt They went to a UEFA match.\n(g / go-02\n      :ARG0 (t / they)\n      :ARG4 (m / match\n            :mod (o / organization\n                  :name (n / name\n                        :op1 ""UEFA""))))']","[g, attr-instance, go_02, attr-arg0, [t, attr-instance, they], attr-arg4, [m, attr-instance, match, attr-mod, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""uefa""]]]]"
696,696,696,696,854,2031,anschlag-auf-den-bus-von-borussia-dortmund,Ein Mann hat auf der Straße 3 Spreng-bomben versteckt.,3_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Mann 2:=hat 3:=auf 4:=der 5:=Straße 6:=3 7:=Spreng-bomben 8:=versteckt.,2,"[[1], [3, 4, 5]]",A man has hidden three explosive bombs on the street.,['# ::snt A man has hidden three explosive bombs on the street.\n(h / hide-01\n      :ARG0 (m / man)\n      :ARG1 (b / bomb\n            :quant 3\n            :ARG1-of (e / explode-01\n                  :ARG1-of (p / possible-01)))\n      :location (s / street))'],"[h, attr-instance, hide_01, attr-arg0, [m, attr-instance, man], attr-arg1, [b, attr-instance, bomb, attr-quant, 3, attr-arg1_of, [e, attr-instance, explode_01, attr-arg1_of, [p, attr-instance, possible_01]]], attr-location, [s, attr-instance, street]]"
697,697,697,697,855,2032,anschlag-auf-den-bus-von-borussia-dortmund,"Als der Bus mit den Fußball-spieler vorbei-gefahren ist, \newline sind die Spreng-bomben explodiert.",4_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Als 1:=der 2:=Bus 3:=mit 4:=den 5:=Fußball-spieler 6:=vorbei-gefahren 7:=ist, 8:=\newline 9:=sind 10:=die 11:=Spreng-bomben 12:=explodiert.",3,"[[0, 2, 6, 7], [2, 3, 4], [9, 11, 12]]","As the bus with the football players drove past, \newline the bombs exploded.","['# ::snt As the bus with the football players drove past, \\newline the bombs exploded.\n(e / explode-01\n      :ARG1 (b / bomb)\n      :time (d / drive-01\n            :ARG0 (b2 / bus\n                  :accompanier (p / person\n                        :ARG0-of (p2 / play-01\n                              :ARG1 (f / football))))\n            :ARG1 (p3 / past))\n      :ARG1-of (n / new-line-04))']","[e, attr-instance, explode_01, attr-arg1, [b, attr-instance, bomb], attr-time, [d, attr-instance, drive_01, attr-arg0, [b2, attr-instance, bus, attr-accompanier, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01, attr-arg1, [f, attr-instance, football]]]], attr-arg1, [p3, attr-instance, past]], attr-arg1_of, [n, attr-instance, new_line_04]]"
698,698,698,698,856,2033,anschlag-auf-den-bus-von-borussia-dortmund,Bei dem Anschlag ist ein Fußball-spieler und ein Polizist verletzt worden.,5_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Bei 1:=dem 2:=Anschlag 3:=ist 4:=ein 5:=Fußball-spieler 6:=und 7:=ein 8:=Polizist 9:=verletzt 10:=worden.,3,"[[0, 2], [4, 5], [7, 8]]",A football player and a police officer were injured in the attack.,['# ::snt A football player and a police officer were injured in the attack.\n(ii / injure-01\n      :ARG1 (a / and\n            :op1 (p / person\n                  :ARG0-of (p2 / play-01\n                        :ARG1 (f / football)))\n            :op2 (p3 / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (p4 / police)\n                        :ARG2 (o / officer))))\n      :ARG2 (a2 / attack-01))'],"[ii, attr-instance, injure_01, attr-arg1, [a, attr-instance, and, attr-op1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01, attr-arg1, [f, attr-instance, football]]], attr-op2, [p3, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg1, [p4, attr-instance, police], attr-arg2, [o, attr-instance, officer]]]], attr-arg2, [a2, attr-instance, attack_01]]"
699,699,699,699,857,2034,anschlag-auf-den-bus-von-borussia-dortmund,Das Fußball-spiel ist wegen dem Anschlag abgesagt worden.,6_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Fußball-spiel 2:=ist 3:=wegen 4:=dem 5:=Anschlag 6:=abgesagt 7:=worden.,2,"[[1], [3, 4, 5]]",The football game was cancelled because of the attack.,['# ::snt The football game was cancelled because of the attack.\n(c / cancel-01\n      :ARG1 (g / game\n            :mod (f / football))\n      :ARG1-of (c2 / cause-01\n            :ARG0 (a / attack-01)))'],"[c, attr-instance, cancel_01, attr-arg1, [g, attr-instance, game, attr-mod, [f, attr-instance, football]], attr-arg1_of, [c2, attr-instance, cause_01, attr-arg0, [a, attr-instance, attack_01]]]"
700,700,700,700,858,2035,anschlag-auf-den-bus-von-borussia-dortmund,"Manche sagen, \newline die IS Gruppe hat den Anschlag gemacht.",7_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Manche 1:=sagen, 2:=\newline 3:=die 4:=IS 5:=Gruppe 6:=hat 7:=den 8:=Anschlag 9:=gemacht.",1,,Some say the IS group carried out the attack.,"['# ::snt Some say the IS group carried out the attack.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (c / carry-out-03\n            :ARG0 (g / group\n                  :mod (r / religious-group\n                        :name (n / name\n                              :op1 ""Islam"")))\n            :ARG1 (a / attack-01)))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [c, attr-instance, carry_out_03, attr-arg0, [g, attr-instance, group, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""islam""]]], attr-arg1, [a, attr-instance, attack_01]]]"
701,701,701,701,859,2036,anschlag-auf-den-bus-von-borussia-dortmund,"Die Polizei sagt,  \newline das ist falsch.",8_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Die 1:=Polizei 2:=sagt, 3:= 4:=\newline 5:=das 6:=ist 7:=falsch.",2,"[[1, 2], [5, 6, 7]]","The police say, \newline that's wrong.","[""# ::snt The police say, \\newline that's wrong.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (w / wrong-04\n            :ARG1 (t / that))\n      :mod (n / newline))""]","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, police], attr-arg1, [w, attr-instance, wrong_04, attr-arg1, [t, attr-instance, that]], attr-mod, [n, attr-instance, newline]]"
702,702,702,702,860,2037,anschlag-auf-den-bus-von-borussia-dortmund,Die Polizei hat 3 Bekenner-schreiben gefunden.,9_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Polizei 2:=hat 3:=3 4:=Bekenner-schreiben 5:=gefunden.,1,,The police found three letters of confession.,['# ::snt The police found three letters of confession.\n(f / find-01\n      :ARG0 (p / police)\n      :ARG1 (l / letter\n            :quant 3\n            :topic (c / confess-01)))'],"[f, attr-instance, find_01, attr-arg0, [p, attr-instance, police], attr-arg1, [l, attr-instance, letter, attr-quant, 3, attr-topic, [c, attr-instance, confess_01]]]"
703,703,703,703,861,2038,anschlag-auf-den-bus-von-borussia-dortmund,Und sie hat einen Mann fest-genommen.,10_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=hat 3:=einen 4:=Mann 5:=fest-genommen.,1,,And she arrested a man.,['# ::snt And she arrested a man.\n(a / and\n      :op2 (a2 / arrest-01\n            :ARG0 (s / she)\n            :ARG1 (m / man)))'],"[a, attr-instance, and, attr-op2, [a2, attr-instance, arrest_01, attr-arg0, [s, attr-instance, she], attr-arg1, [m, attr-instance, man]]]"
704,704,704,704,862,2039,anschlag-auf-den-bus-von-borussia-dortmund,Der Mann heißt Sergej W.  \newline Er ist 28 Jahre alt.,11_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Mann 2:=heißt 3:=Sergej 4:=W. 5:= 6:=\newline 7:=Er 8:=ist 9:=28 10:=Jahre 11:=alt.,2,"[[1, 2, 3, 4], [7, 8, 9, 10, 11]]",The man's name is Sergej W. \newline He is 28 years old.,"['# ::snt The man\'s name is Sergej W. \\newline He is 28 years old.\n(n / name-01\n      :ARG1 (m / man)\n      :ARG2 (p / person\n            :name (n2 / name\n                  :op1 ""Sergej""\n                  :op2 ""W.""\n                  :op3 ""Clinton""))\n      :age (t / temporal-quantity\n            :quant 28\n            :unit (y / year)))']","[n, attr-instance, name_01, attr-arg1, [m, attr-instance, man], attr-arg2, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""sergej"", attr-op2, ""w"", attr-op3, ""clinton""]], attr-age, [t, attr-instance, temporal_quantity, attr-quant, 28, attr-unit, [y, attr-instance, year]]]"
705,705,705,705,863,2040,anschlag-auf-den-bus-von-borussia-dortmund,Er hat die Bomben gemacht.,12_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=die 3:=Bomben 4:=gemacht.,1,,He made the bombs.,['# ::snt He made the bombs.\n(m / make-01\n      :ARG0 (h / he)\n      :ARG1 (b / bomb))'],"[m, attr-instance, make_01, attr-arg0, [h, attr-instance, he], attr-arg1, [b, attr-instance, bomb]]"
706,706,706,706,865,2042,anschlag-auf-den-bus-von-borussia-dortmund,Er wollte das die Aktien vom Fußball-verein Borussia Dortmund weniger Wert sind.,14_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=wollte 2:=das 3:=die 4:=Aktien 5:=vom 6:=Fußball-verein 7:=Borussia 8:=Dortmund 9:=weniger 10:=Wert 11:=sind.,3,"[[0, 1], [2, 4, 9, 10, 11], [4, 5, 6, 7, 8]]",He wanted the shares of the football club Borussia Dortmund to be worth less.,"['# ::snt He wanted the shares of the football club Borussia Dortmund to be worth less.\n(w / want-01\n      :ARG0 (h / he)\n      :ARG1 (w2 / worth-01\n            :ARG1 (s / share\n                  :poss (c / club\n                        :mod (f / football)\n                        :mod (t / team\n                              :name (n / name\n                                    :op1 ""Borussia""\n                                    :op2 ""Dortmund""))))\n            :ARG2 (l / less)))']","[w, attr-instance, want_01, attr-arg0, [h, attr-instance, he], attr-arg1, [w2, attr-instance, worth_01, attr-arg1, [s, attr-instance, share, attr-poss, [c, attr-instance, club, attr-mod, [f, attr-instance, football], attr-mod, [t, attr-instance, team, attr-name, [n, attr-instance, name, attr-op1, ""borussia"", attr-op2, ""dortmund""]]]], attr-arg2, [l, attr-instance, less]]]"
707,707,707,707,866,2043,anschlag-auf-den-bus-von-borussia-dortmund,Er wollte damit viel Geld verdienen.,15_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=wollte 2:=damit 3:=viel 4:=Geld 5:=verdienen.,1,,He wanted to make a lot of money with it.,['# ::snt He wanted to make a lot of money with it.\n(w / want-01\n      :ARG0 (h / he)\n      :ARG1 (m / make-05\n            :ARG0 h\n            :ARG1 (m2 / money\n                  :quant (l / lot))\n            :ARG2 (ii / it)))'],"[w, attr-instance, want_01, attr-arg0, [h, attr-instance, he], attr-arg1, [m, attr-instance, make_05, attr-arg0, h, attr-arg1, [m2, attr-instance, money, attr-quant, [l, attr-instance, lot]], attr-arg2, [ii, attr-instance, it]]]"
708,708,708,708,867,2044,anschlag-auf-den-bus-von-borussia-dortmund,Darum hat er vor dem Anschlag Options-schein gekauft.,16_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Darum 1:=hat 2:=er 3:=vor 4:=dem 5:=Anschlag 6:=Options-schein 7:=gekauft.,2,"[[1, 2, 6, 7], [3, 5]]",That's why he bought warrants before the attack.,"[""# ::snt That's why he bought warrants before the attack.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (b / buy-01\n            :ARG0 (h / he)\n            :ARG1 (w / warrant)\n            :time (b2 / before\n                  :op1 (a / attack-01))))""]","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [b, attr-instance, buy_01, attr-arg0, [h, attr-instance, he], attr-arg1, [w, attr-instance, warrant], attr-time, [b2, attr-instance, before, attr-op1, [a, attr-instance, attack_01]]]]"
709,709,709,709,868,2045,anschlag-auf-den-bus-von-borussia-dortmund,Der Anschlag auf den Bus von Borussia Dortmund ist am 11. April 2017 passiert.,0_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Anschlag 2:=auf 3:=den 4:=Bus 5:=von 6:=Borussia 7:=Dortmund 8:=ist 9:=am 10:=11. 11:=April 12:=2017 13:=passiert.,3,"[[2, 4], [4, 5, 6, 7], [9, 10, 11, 12]]","The attack on the Borussia Dortmund bus happened on April 11, 2017.","['# ::snt The attack on the Borussia Dortmund bus happened on April 11, 2017.\n(a / attack-01\n      :ARG1 (b / bus\n            :poss (t / team\n                  :name (n / name\n                        :op1 ""Borussia""\n                        :op2 ""Dortmund"")))\n      :time (d / date-entity\n            :day 11\n            :month 4\n            :year 2017))']","[a, attr-instance, attack_01, attr-arg1, [b, attr-instance, bus, attr-poss, [t, attr-instance, team, attr-name, [n, attr-instance, name, attr-op1, ""borussia"", attr-op2, ""dortmund""]]], attr-time, [d, attr-instance, date_entity, attr-day, 11, attr-month, 4, attr-year, 2017]]"
710,710,710,710,869,2046,anschlag-auf-den-bus-von-borussia-dortmund,Jemand hat auf er Straße Spreng-stoff versteckt.,1_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Jemand 1:=hat 2:=auf 3:=er 4:=Straße 5:=Spreng-stoff 6:=versteckt.,1,,Someone has hidden explosives on the street.,['# ::snt Someone has hidden explosives on the street.\n(h / hide-01\n      :ARG0 (s / someone)\n      :ARG1 (e / explosive)\n      :location (s2 / street))'],"[h, attr-instance, hide_01, attr-arg0, [s, attr-instance, someone], attr-arg1, [e, attr-instance, explosive], attr-location, [s2, attr-instance, street]]"
711,711,711,711,870,2047,anschlag-auf-den-bus-von-borussia-dortmund,"Als der Bus von Borussia Dortmund vorbei-gefahren ist, \newline ist der Spreng-stoff explodiert.",2_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Als 1:=der 2:=Bus 3:=von 4:=Borussia 5:=Dortmund 6:=vorbei-gefahren 7:=ist, 8:=\newline 9:=ist 10:=der 11:=Spreng-stoff 12:=explodiert.",3,"[[0, 2, 6, 7], [2, 3, 4, 5], [9, 11, 12]]","As the Borussia Dortmund bus drove past, the explosives exploded.","['# ::snt As the Borussia Dortmund bus drove past, the explosives exploded.\n(e / explode-01\n      :ARG0 (e2 / explosive)\n      :time (d / drive-01\n            :ARG0 (b / bus\n                  :poss (t / team\n                        :name (n / name\n                              :op1 ""Borussia""\n                              :op2 ""Dortmund"")))\n            :path (p / past)))']","[e, attr-instance, explode_01, attr-arg0, [e2, attr-instance, explosive], attr-time, [d, attr-instance, drive_01, attr-arg0, [b, attr-instance, bus, attr-poss, [t, attr-instance, team, attr-name, [n, attr-instance, name, attr-op1, ""borussia"", attr-op2, ""dortmund""]]], attr-path, [p, attr-instance, past]]]"
712,712,712,712,871,2048,anschlag-auf-den-bus-von-borussia-dortmund,Ein Polizist und ein Fußball-spieler sind verletzt.,3_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Polizist 2:=und 3:=ein 4:=Fußball-spieler 5:=sind 6:=verletzt.,2,"[[1], [4]]",A policeman and a football player are injured.,['# ::snt A policeman and a football player are injured.\n(ii / injure-01\n      :ARG1 (a / and\n            :op1 (p / policeman)\n            :op2 (p2 / person\n                  :ARG0-of (p3 / play-01\n                        :ARG1 (f / football)))))'],"[ii, attr-instance, injure_01, attr-arg1, [a, attr-instance, and, attr-op1, [p, attr-instance, policeman], attr-op2, [p2, attr-instance, person, attr-arg0_of, [p3, attr-instance, play_01, attr-arg1, [f, attr-instance, football]]]]]"
713,713,713,713,872,2049,anschlag-auf-den-bus-von-borussia-dortmund,Der Anschlag ist in Höchsten passiert.,4_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Geschichte|Seiten_mit_defekten_Dateilinks,2017-04-15T05:42:54Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Anschlag 2:=ist 3:=in 4:=Höchsten 5:=passiert.,1,,The attack happened in Höchsten.,"['# ::snt The attack happened in Höchsten.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Höchsten"")))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""höchsten""]]]"
714,714,714,714,873,2050,anschlag-in-ankara-2015,In Ankara gab es eine Demonstration.,0_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=In 1:=Ankara 2:=gab 3:=es 4:=eine 5:=Demonstration.,2,"[[0, 1], [2, 3, 5]]",There was a demonstration in Ankara.,"['# ::snt There was a demonstration in Ankara.\n(d / demonstrate-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Anstanbul"")))']","[d, attr-instance, demonstrate_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""anstanbul""]]]"
715,715,715,715,874,2051,anschlag-in-ankara-2015,Die Menschen auf der Demonstration wollen das der Türkei-PKK-Konflikt aufhört.,1_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Menschen 2:=auf 3:=der 4:=Demonstration 5:=wollen 6:=das 7:=der 8:=Türkei-PKK-Konflikt 9:=aufhört.,3,"[[1, 5], [1, 2, 4], [6, 8, 9]]",The people at the demonstration want the Türkiye-PKK conflict to end.,"['# ::snt The people at the demonstration want the Türkiye-PKK conflict to end.\n(w / want-01\n      :ARG0 (p / person\n            :location (d / demonstrate-01))\n      :ARG1 (e / end-01\n            :ARG1 (c / conflict-01\n                  :ARG0 (e2 / ethnic-group\n                        :name (n / name\n                              :op1 ""Türkiye""))\n                  :ARG1 (e3 / ethnic-group\n                        :name (n2 / name\n                              :op1 ""PKK"")))))']","[w, attr-instance, want_01, attr-arg0, [p, attr-instance, person, attr-location, [d, attr-instance, demonstrate_01]], attr-arg1, [e, attr-instance, end_01, attr-arg1, [c, attr-instance, conflict_01, attr-arg0, [e2, attr-instance, ethnic_group, attr-name, [n, attr-instance, name, attr-op1, ""türkiye""]], attr-arg1, [e3, attr-instance, ethnic_group, attr-name, [n2, attr-instance, name, attr-op1, ""pkk""]]]]]"
716,716,716,716,875,2052,anschlag-in-ankara-2015,Es sind viele Menschen zur Demonstration gekommen.,2_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Es 1:=sind 2:=viele 3:=Menschen 4:=zur 5:=Demonstration 6:=gekommen.,2,"[[0, 1, 2, 3, 6], [4, 5]]",Many people came to the demonstration.,['# ::snt Many people came to the demonstration.\n(c / come-01\n      :ARG1 (p / person\n            :quant (m / many))\n      :ARG4 (d / demonstrate-01))'],"[c, attr-instance, come_01, attr-arg1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg4, [d, attr-instance, demonstrate_01]]"
717,717,717,717,876,2053,anschlag-in-ankara-2015,Es gab eine große Menschen-menge.,3_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Es 1:=gab 2:=eine 3:=große 4:=Menschen-menge.,1,,There was a large crowd of people.,['# ::snt There was a large crowd of people.\n(c / crowd-01\n      :ARG1 (p / person)\n      :mod (l / large))'],"[c, attr-instance, crowd_01, attr-arg1, [p, attr-instance, person], attr-mod, [l, attr-instance, large]]"
718,718,718,718,877,2054,anschlag-in-ankara-2015,Dann hat jemand in der Menschen-menge eine Bombe gezündet.,4_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Dann 1:=hat 2:=jemand 3:=in 4:=der 5:=Menschen-menge 6:=eine 7:=Bombe 8:=gezündet.,2,"[[1, 2, 7, 8], [3, 5]]",Then someone in the crowd detonated a bomb.,['# ::snt Then someone in the crowd detonated a bomb.\n(d / detonate-01\n      :ARG0 (s / someone\n            :ARG1-of (ii / include-91\n                  :ARG2 (c / crowd)))\n      :ARG1 (b / bomb)\n      :time (t / then))'],"[d, attr-instance, detonate_01, attr-arg0, [s, attr-instance, someone, attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [c, attr-instance, crowd]]], attr-arg1, [b, attr-instance, bomb], attr-time, [t, attr-instance, then]]"
719,719,719,719,878,2055,anschlag-in-ankara-2015,"Wer den Anschlag gemacht hat, \newline weiß man noch nicht.",5_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,"0:=Wer 1:=den 2:=Anschlag 3:=gemacht 4:=hat, 5:=\newline 6:=weiß 7:=man 8:=noch 9:=nicht.",2,"[[0, 2, 3, 4], [6, 7, 8, 9]]",It is not yet known who carried out the attack.\newline,['# ::snt It is not yet known who carried out the attack.\\newline\n(k / know-01\n      :polarity -\n      :ARG1 (p / person\n            :ARG0-of (a / attack-01))\n      :time (y / yet))'],"[k, attr-instance, know_01, attr-polarity, negative, attr-arg1, [p, attr-instance, person, attr-arg0_of, [a, attr-instance, attack_01]], attr-time, [y, attr-instance, yet]]"
720,720,720,720,879,2056,anschlag-in-ankara-2015,Manche sagen es war die IS Gruppe.,6_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Manche 1:=sagen 2:=es 3:=war 4:=die 5:=IS 6:=Gruppe.,1,,Some say it was the ISIS group.,"['# ::snt Some say it was the ISIS group.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (g / group\n            :domain (ii / it)\n            :mod (c / criminal-organization\n                  :name (n / name\n                        :op1 ""ISIS""))))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [g, attr-instance, group, attr-domain, [ii, attr-instance, it], attr-mod, [c, attr-instance, criminal_organization, attr-name, [n, attr-instance, name, attr-op1, ""isis""]]]]"
721,721,721,721,880,2057,anschlag-in-ankara-2015,Manche sagen die Bomben waren ähnlich wie beim Anschlag in Suruc.,7_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Manche 1:=sagen 2:=die 3:=Bomben 4:=waren 5:=ähnlich 6:=wie 7:=beim 8:=Anschlag 9:=in 10:=Suruc.,1,,Some say the bombs were similar to the Suruc attack.,"['# ::snt Some say the bombs were similar to the Suruc attack.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (r / resemble-01\n            :ARG1 (b / bomb)\n            :ARG2 (a / attack-01\n                  :ARG1 (c / city\n                        :name (n / name\n                              :op1 ""Suruc"")))))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [r, attr-instance, resemble_01, attr-arg1, [b, attr-instance, bomb], attr-arg2, [a, attr-instance, attack_01, attr-arg1, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""suruc""]]]]]"
722,722,722,722,881,2058,anschlag-in-ankara-2015,Die Menschen auf der Demo wollen das der Türkei-PKK-Konflikt aufhört.,8_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Menschen 2:=auf 3:=der 4:=Demo 5:=wollen 6:=das 7:=der 8:=Türkei-PKK-Konflikt 9:=aufhört.,3,"[[1, 5], [1, 2, 4], [6, 8, 9]]",The people at the demonstration want the Türkiye-PKK conflict to end.,"['# ::snt The people at the demonstration want the Türkiye-PKK conflict to end.\n(w / want-01\n      :ARG0 (p / person\n            :location (d / demonstrate-01))\n      :ARG1 (e / end-01\n            :ARG1 (c / conflict-01\n                  :ARG0 (e2 / ethnic-group\n                        :name (n / name\n                              :op1 ""Türkiye""))\n                  :ARG1 (e3 / ethnic-group\n                        :name (n2 / name\n                              :op1 ""PKK"")))))']","[w, attr-instance, want_01, attr-arg0, [p, attr-instance, person, attr-location, [d, attr-instance, demonstrate_01]], attr-arg1, [e, attr-instance, end_01, attr-arg1, [c, attr-instance, conflict_01, attr-arg0, [e2, attr-instance, ethnic_group, attr-name, [n, attr-instance, name, attr-op1, ""türkiye""]], attr-arg1, [e3, attr-instance, ethnic_group, attr-name, [n2, attr-instance, name, attr-op1, ""pkk""]]]]]"
723,723,723,723,883,2060,anschlag-in-ankara-2015,Und sehr viele Menschen sind verletzt worden.,1_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=sehr 2:=viele 3:=Menschen 4:=sind 5:=verletzt 6:=worden.,1,,And a lot of people were injured.,['# ::snt And a lot of people were injured.\n(a / and\n      :op2 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (l / lot))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, [l, attr-instance, lot]]]]"
724,724,724,724,884,2061,anschlag-in-ankara-2015,Jemand hat 2 Bomben gezündet.,2_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Jemand 1:=hat 2:=2 3:=Bomben 4:=gezündet.,2,"[[0, 1, 4], [2]]",Someone detonated two bombs.,['# ::snt Someone detonated two bombs.\n(d / detonate-01\n      :ARG0 (s / someone)\n      :ARG1 (b / bomb\n            :quant 2))'],"[d, attr-instance, detonate_01, attr-arg0, [s, attr-instance, someone], attr-arg1, [b, attr-instance, bomb, attr-quant, 2]]"
725,725,725,725,885,2062,anschlag-in-ankara-2015,Das haben die Täter absichtlich gemacht.,3_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=haben 2:=die 3:=Täter 4:=absichtlich 5:=gemacht.,1,,The perpetrators did this intentionally.,['# ::snt The perpetrators did this intentionally.\n(d / do-02\n      :ARG0 (p / person\n            :ARG0-of (p2 / perpetrate-01))\n      :ARG1 (t / this)\n      :ARG1-of (ii / intend-01\n            :ARG0 p))'],"[d, attr-instance, do_02, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, perpetrate_01]], attr-arg1, [t, attr-instance, this], attr-arg1_of, [ii, attr-instance, intend_01, attr-arg0, p]]"
726,726,726,726,886,2063,anschlag-in-ankara-2015,Die Täter sind dabei selbst gestorben.,4_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Täter 2:=sind 3:=dabei 4:=selbst 5:=gestorben.,1,,The perpetrators themselves died in the process.,['# ::snt The perpetrators themselves died in the process.\n(d / die-01\n      :ARG1 (p / person\n            :ARG0-of (p2 / perpetrate-01))\n      :time (p3 / process-02))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, perpetrate_01]], attr-time, [p3, attr-instance, process_02]]"
727,727,727,727,887,2064,anschlag-in-ankara-2015,Der Anschlag war in der Stadt Ankara.,5_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=war 3:=in 4:=der 5:=Stadt 6:=Ankara.,2,"[[5], [6]]",The attack was in the city of Ankara.,"['# ::snt The attack was in the city of Ankara.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Ankara"")))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""ankara""]]]"
728,728,728,728,888,2065,anschlag-in-ankara-2015,Das ist in der Türkei.,6_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-10-12T15:11:33Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=ist 2:=in 3:=der 4:=Türkei.,1,,This is in Turkey.,"['# ::snt This is in Turkey.\n(t / this\n      :location (c / country\n            :name (n / name\n                  :op1 ""Turkey"")))']","[t, attr-instance, this, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""turkey""]]]"
729,729,729,729,889,2066,anschlag-in-ankara-2016,Die Täter haben Bomben in ihrem Auto versteckt.,0_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Täter 2:=haben 3:=Bomben 4:=in 5:=ihrem 6:=Auto 7:=versteckt.,2,"[[1, 2, 3, 7], [4, 5, 6]]",The perpetrators hid bombs in their car.,['# ::snt The perpetrators hid bombs in their car.\n(h / hide-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / perpetrate-01))\n      :ARG1 (b / bomb)\n      :location (c / car\n            :poss p))'],"[h, attr-instance, hide_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, perpetrate_01]], attr-arg1, [b, attr-instance, bomb], attr-location, [c, attr-instance, car, attr-poss, p]]"
730,730,730,730,890,2067,anschlag-in-ankara-2016,Dann sind sie mit dem Auto los-gefahren.,1_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Dann 1:=sind 2:=sie 3:=mit 4:=dem 5:=Auto 6:=los-gefahren.,2,"[[0, 1, 2, 6], [3, 5]]",Then they drove off in the car.,['# ::snt Then they drove off in the car.\n(d / drive-01\n      :ARG0 (t / they)\n      :time (t2 / then)\n      :manner (o / off)\n      :destination (c / car))'],"[d, attr-instance, drive_01, attr-arg0, [t, attr-instance, they], attr-time, [t2, attr-instance, then], attr-manner, [o, attr-instance, off], attr-destination, [c, attr-instance, car]]"
731,731,731,731,891,2068,anschlag-in-ankara-2016,"Als sie an vielen Fahrzeugen vorbei-gefahren sind, \newline haben sie die Bombe gezündet.",2_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,"0:=Als 1:=sie 2:=an 3:=vielen 4:=Fahrzeugen 5:=vorbei-gefahren 6:=sind, 7:=\newline 8:=haben 9:=sie 10:=die 11:=Bombe 12:=gezündet.",2,"[[0, 1, 2, 3, 4, 5, 6], [8, 9, 11, 12]]","As they passed many vehicles, \newline they detonated the bomb.","['# ::snt As they passed many vehicles, \\newline they detonated the bomb.\n(d / detonate-01\n      :ARG0 (t / they)\n      :ARG1 (b / bomb)\n      :time (p / pass-02\n            :ARG0 t\n            :ARG1 (v / vehicle\n                  :quant (m / many))\n            :mod (n / newline)))']","[d, attr-instance, detonate_01, attr-arg0, [t, attr-instance, they], attr-arg1, [b, attr-instance, bomb], attr-time, [p, attr-instance, pass_02, attr-arg0, t, attr-arg1, [v, attr-instance, vehicle, attr-quant, [m, attr-instance, many]], attr-mod, [n, attr-instance, newline]]]"
732,732,732,732,892,2069,anschlag-in-ankara-2016,In den anderen Fahrzeugen sind Soldaten gewesen.,3_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=In 1:=den 2:=anderen 3:=Fahrzeugen 4:=sind 5:=Soldaten 6:=gewesen.,1,,There were soldiers in the other vehicles.,['# ::snt There were soldiers in the other vehicles.\n(s / soldier\n      :location (v / vehicle\n            :mod (o / other)))'],"[s, attr-instance, soldier, attr-location, [v, attr-instance, vehicle, attr-mod, [o, attr-instance, other]]]"
733,733,733,733,893,2070,anschlag-in-ankara-2016,Es hat eine Explosion und viel Feuer gegeben.,4_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Es 1:=hat 2:=eine 3:=Explosion 4:=und 5:=viel 6:=Feuer 7:=gegeben.,2,"[[3], [5, 6]]",There was an explosion and a lot of fire.,['# ::snt There was an explosion and a lot of fire.\n(f / fire-03\n      :quant (l / lot))'],"[f, attr-instance, fire_03, attr-quant, [l, attr-instance, lot]]"
734,734,734,734,894,2071,anschlag-in-ankara-2016,"Wer den Anschlag gemacht hat, \newline weiß man noch nicht.",5_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,"0:=Wer 1:=den 2:=Anschlag 3:=gemacht 4:=hat, 5:=\newline 6:=weiß 7:=man 8:=noch 9:=nicht.",2,"[[0, 2, 3, 4], [6, 7, 8, 9]]",It is not yet known who carried out the attack.\newline,['# ::snt It is not yet known who carried out the attack.\\newline\n(k / know-01\n      :polarity -\n      :ARG1 (p / person\n            :ARG0-of (a / attack-01))\n      :time (y / yet))'],"[k, attr-instance, know_01, attr-polarity, negative, attr-arg1, [p, attr-instance, person, attr-arg0_of, [a, attr-instance, attack_01]], attr-time, [y, attr-instance, yet]]"
735,735,735,735,895,2072,anschlag-in-ankara-2016,Manche sagen es ist die IS Gruppe gewesen.,6_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Manche 1:=sagen 2:=es 3:=ist 4:=die 5:=IS 6:=Gruppe 7:=gewesen.,1,,Some say it was the IS group.,"['# ::snt Some say it was the IS group.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (g / group\n            :domain (ii / it)\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Islam""))))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [g, attr-instance, group, attr-domain, [ii, attr-instance, it], attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""islam""]]]]"
736,736,736,736,896,2073,anschlag-in-ankara-2016,Weil die Türkei im Krieg in Syrien mitmacht.,7_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Weil 1:=die 2:=Türkei 3:=im 4:=Krieg 5:=in 6:=Syrien 7:=mitmacht.,1,,Because Turkey is involved in the war in Syria.,"['# ::snt Because Turkey is involved in the war in Syria.\n(c / cause-01\n      :ARG0 (ii / involve-01\n            :ARG1 (c2 / country\n                  :name (n / name\n                        :op1 ""Turkey""))\n            :ARG2 (w / war\n                  :location (c3 / country\n                        :name (n2 / name\n                              :op1 ""Syria"")))))']","[c, attr-instance, cause_01, attr-arg0, [ii, attr-instance, involve_01, attr-arg1, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""turkey""]], attr-arg2, [w, attr-instance, war, attr-location, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""syria""]]]]]"
737,737,737,737,897,2074,anschlag-in-ankara-2016,Manche sagen es ist die PKK Gruppe gewesen.,8_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Manche 1:=sagen 2:=es 3:=ist 4:=die 5:=PKK 6:=Gruppe 7:=gewesen.,1,,Some say it was the PKK group.,"['# ::snt Some say it was the PKK group.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (c / criminal-organization\n            :name (n / name\n                  :op1 ""PKK"")\n            :domain (ii / it)))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [c, attr-instance, criminal_organization, attr-name, [n, attr-instance, name, attr-op1, ""pkk""], attr-domain, [ii, attr-instance, it]]]"
738,738,738,738,898,2075,anschlag-in-ankara-2016,Weil die Türkei Streit mit der PKK hat.,9_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Weil 1:=die 2:=Türkei 3:=Streit 4:=mit 5:=der 6:=PKK 7:=hat.,1,,Because Turkey has a dispute with the PKK.,"['# ::snt Because Turkey has a dispute with the PKK.\n(c / cause-01\n      :ARG0 (d / dispute-01\n            :ARG0 (c2 / country\n                  :name (n / name\n                        :op1 ""Turkey""))\n            :ARG1 (c3 / criminal-organization\n                  :name (n2 / name\n                        :op1 ""PKK""))))']","[c, attr-instance, cause_01, attr-arg0, [d, attr-instance, dispute_01, attr-arg0, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""turkey""]], attr-arg1, [c3, attr-instance, criminal_organization, attr-name, [n2, attr-instance, name, attr-op1, ""pkk""]]]]"
739,739,739,739,899,2076,anschlag-in-ankara-2016,"Angela Merkel hat gesagt, \newline dass der Anschlag böse und schrecklich gewesen ist.",10_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,"0:=Angela 1:=Merkel 2:=hat 3:=gesagt, 4:=\newline 5:=dass 6:=der 7:=Anschlag 8:=böse 9:=und 10:=schrecklich 11:=gewesen 12:=ist.",3,"[[0, 1, 2, 3], [5, 7, 8, 11, 12], [5, 7, 10, 11, 12]]",Angela Merkel said that the attack was evil and terrible.,"['# ::snt Angela Merkel said that the attack was evil and terrible.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Angela""\n                  :op2 ""Merkel""))\n      :ARG1 (a / and\n            :op1 (e / evil)\n            :op2 (t / terrible-01)\n            :domain (a2 / attack-01)))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""angela"", attr-op2, ""merkel""]], attr-arg1, [a, attr-instance, and, attr-op1, [e, attr-instance, evil], attr-op2, [t, attr-instance, terrible_01], attr-domain, [a2, attr-instance, attack_01]]]"
740,740,740,740,900,2077,anschlag-in-ankara-2016,Sie denkt an die gestorbenen Menschen.,11_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=denkt 2:=an 3:=die 4:=gestorbenen 5:=Menschen.,1,,She thinks about the people who died.,['# ::snt She thinks about the people who died.\n(t / think-01\n      :ARG0 (s / she)\n      :ARG2 (p / person\n            :ARG1-of (d / die-01)))'],"[t, attr-instance, think_01, attr-arg0, [s, attr-instance, she], attr-arg2, [p, attr-instance, person, attr-arg1_of, [d, attr-instance, die_01]]]"
741,741,741,741,902,2079,anschlag-in-ankara-2016,"Angela Merkel hat auch gesagt, \newline die Menschen die das gemacht haben müssen bestraft werden.",13_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,"0:=Angela 1:=Merkel 2:=hat 3:=auch 4:=gesagt, 5:=\newline 6:=die 7:=Menschen 8:=die 9:=das 10:=gemacht 11:=haben 12:=müssen 13:=bestraft 14:=werden.",3,"[[0, 1, 2, 3, 4], [7, 12, 13], [7, 8, 9, 10, 11]]","Angela Merkel also said, \newline the people who did this must be punished.","['# ::snt Angela Merkel also said, \\newline the people who did this must be punished.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Angela""\n                  :op2 ""Merkel""))\n      :ARG1 (o / obligate-01\n            :ARG2 (p2 / punish-01\n                  :ARG1 (p3 / person\n                        :ARG0-of (d / do-02\n                              :ARG1 (t / this)))))\n      :mod (a / also))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""angela"", attr-op2, ""merkel""]], attr-arg1, [o, attr-instance, obligate_01, attr-arg2, [p2, attr-instance, punish_01, attr-arg1, [p3, attr-instance, person, attr-arg0_of, [d, attr-instance, do_02, attr-arg1, [t, attr-instance, this]]]]], attr-mod, [a, attr-instance, also]]"
742,742,742,742,903,2080,anschlag-in-ankara-2016,Deutschland hilft der Türkei diese Menschen zu finden und zu bestrafen.,14_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Deutschland 1:=hilft 2:=der 3:=Türkei 4:=diese 5:=Menschen 6:=zu 7:=finden 8:=und 9:=zu 10:=bestrafen.,3,"[[0, 1, 4, 5, 6, 7], [0, 1, 3], [0, 1, 4, 5, 9, 10]]",Germany is helping Turkey to find and punish these people.,"['# ::snt Germany is helping Turkey to find and punish these people.\n(h / help-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""Germany""))\n      :ARG1 (a / and\n            :op1 (f / find-01\n                  :ARG0 (c2 / country\n                        :name (n2 / name\n                              :op1 ""Turkey""))\n                  :ARG1 (p / person\n                        :mod (t / this)))\n            :op2 (p2 / punish-01\n                  :ARG0 c2\n                  :ARG1 p))\n      :ARG2 c2)']","[h, attr-instance, help_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]], attr-arg1, [a, attr-instance, and, attr-op1, [f, attr-instance, find_01, attr-arg0, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""turkey""]], attr-arg1, [p, attr-instance, person, attr-mod, [t, attr-instance, this]]], attr-op2, [p2, attr-instance, punish_01, attr-arg0, c2, attr-arg1, p]], attr-arg2, c2]"
743,743,743,743,904,2081,anschlag-in-ankara-2016,In der Türkei hat es schon viele Anschläge gegeben.,15_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=In 1:=der 2:=Türkei 3:=hat 4:=es 5:=schon 6:=viele 7:=Anschläge 8:=gegeben.,2,"[[0, 2], [3, 4, 5, 6, 7, 8]]",There have already been many attacks in Turkey.,"['# ::snt There have already been many attacks in Turkey.\n(a / attack-01\n      :quant (m / many)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Turkey""))\n      :time (a2 / already))']","[a, attr-instance, attack_01, attr-quant, [m, attr-instance, many], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""turkey""]], attr-time, [a2, attr-instance, already]]"
744,744,744,744,905,2082,anschlag-in-ankara-2016,Der letzte ist am 12. Januar 2016 gewesen.,16_long,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=letzte 2:=ist 3:=am 4:=12. 5:=Januar 6:=2016 7:=gewesen.,1,,"The last one was on January 12, 2016.","['# ::snt The last one was on January 12, 2016.\n(b / be-temporally-at-91\n      :ARG1 (o / one\n            :mod (l / last))\n      :ARG2 (d / date-entity\n            :day 12\n            :month 1\n            :year 2016))']","[b, attr-instance, be_temporally_at_91, attr-arg1, [o, attr-instance, one, attr-mod, [l, attr-instance, last]], attr-arg2, [d, attr-instance, date_entity, attr-day, 12, attr-month, 1, attr-year, 2016]]"
745,745,745,745,906,2083,anschlag-in-ankara-2016,Der Anschlag in Ankara 2016 ist am 17. Februar 2016 gewesen.,0_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=in 3:=Ankara 4:=2016 5:=ist 6:=am 7:=17. 8:=Februar 9:=2016 10:=gewesen.,2,"[[2, 3, 4], [6, 7, 8, 9]]","The 2016 Ankara attack took place on February 17, 2016.","['# ::snt The 2016 Ankara attack took place on February 17, 2016.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Anstanbul""))\n      :time (d / date-entity\n            :year 2016\n            :month 2\n            :day 17))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""anstanbul""]], attr-time, [d, attr-instance, date_entity, attr-year, 2016, attr-month, 2, attr-day, 17]]"
746,746,746,746,907,2084,anschlag-in-ankara-2016,Dabei sind 26 Menschen gestorben.,1_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Dabei 1:=sind 2:=26 3:=Menschen 4:=gestorben.,2,"[[0, 1, 4], [2]]",26 people died.,['# ::snt 26 people died.\n(d / die-01\n      :ARG1 (p / person\n            :quant 26))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-quant, 26]]"
747,747,747,747,908,2085,anschlag-in-ankara-2016,Und viele Menschen sind verletzt worden.,2_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=viele 2:=Menschen 3:=sind 4:=verletzt 5:=worden.,1,,And many people were injured.,['# ::snt And many people were injured.\n(a / and\n      :op2 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (m / many))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]]]"
748,748,748,748,909,2086,anschlag-in-ankara-2016,Jemand hat ein Auto in die Luft gesprengt.,3_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Jemand 1:=hat 2:=ein 3:=Auto 4:=in 5:=die 6:=Luft 7:=gesprengt.,1,,Someone blew up a car.,['# ::snt Someone blew up a car.\n(b / blow-up-06\n      :ARG0 (s / someone)\n      :ARG1 (c / car))'],"[b, attr-instance, blow_up_06, attr-arg0, [s, attr-instance, someone], attr-arg1, [c, attr-instance, car]]"
749,749,749,749,910,2087,anschlag-in-ankara-2016,Das haben die Täter absichtlich gemacht.,4_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=haben 2:=die 3:=Täter 4:=absichtlich 5:=gemacht.,1,,The perpetrators did this intentionally.,['# ::snt The perpetrators did this intentionally.\n(d / do-02\n      :ARG0 (p / person\n            :ARG0-of (p2 / perpetrate-01))\n      :ARG1 (t / this)\n      :ARG1-of (ii / intend-01\n            :ARG0 p))'],"[d, attr-instance, do_02, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, perpetrate_01]], attr-arg1, [t, attr-instance, this], attr-arg1_of, [ii, attr-instance, intend_01, attr-arg0, p]]"
750,750,750,750,911,2088,anschlag-in-ankara-2016,Sie haben viele Menschen töten und verletzen wollen.,5_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=haben 2:=viele 3:=Menschen 4:=töten 5:=und 6:=verletzen 7:=wollen.,2,"[[4], [6]]",They wanted to kill and hurt many people.,['# ::snt They wanted to kill and hurt many people.\n(w / want-01\n      :ARG0 (t / they)\n      :ARG1 (a / and\n            :op1 (k / kill-01\n                  :ARG0 t\n                  :ARG1 (p / person\n                        :quant (m / many)))\n            :op2 (h / hurt-01\n                  :ARG0 t\n                  :ARG1 p)))'],"[w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [a, attr-instance, and, attr-op1, [k, attr-instance, kill_01, attr-arg0, t, attr-arg1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]], attr-op2, [h, attr-instance, hurt_01, attr-arg0, t, attr-arg1, p]]]"
751,751,751,751,912,2089,anschlag-in-ankara-2016,Die Täter sind dabei selbst gestorben.,6_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Täter 2:=sind 3:=dabei 4:=selbst 5:=gestorben.,1,,The perpetrators themselves died in the process.,['# ::snt The perpetrators themselves died in the process.\n(d / die-01\n      :ARG1 (p / person\n            :ARG0-of (p2 / perpetrate-01))\n      :time (p3 / process-02))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, perpetrate_01]], attr-time, [p3, attr-instance, process_02]]"
752,752,752,752,913,2090,anschlag-in-ankara-2016,Der Anschlag ist in der Stadt Ankara gewesen.,7_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=ist 3:=in 4:=der 5:=Stadt 6:=Ankara 7:=gewesen.,2,"[[5], [6]]",The attack took place in the city of Ankara.,"['# ::snt The attack took place in the city of Ankara.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Anstanbul"")))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""anstanbul""]]]"
753,753,753,753,914,2091,anschlag-in-ankara-2016,Das ist in der Türkei.,8_short,Ohne_Kategorie|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-02-21T09:24:48Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=ist 2:=in 3:=der 4:=Türkei.,1,,This is in Turkey.,"['# ::snt This is in Turkey.\n(t / this\n      :location (c / country\n            :name (n / name\n                  :op1 ""Turkey"")))']","[t, attr-instance, this, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""turkey""]]]"
754,754,754,754,915,2092,anschlag-in-bangkok-im-august-2015,Die Bombe explodierte um 18:56 Uhr.,0_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Bombe 2:=explodierte 3:=um 4:=18:56 5:=Uhr.,2,"[[1, 2], [3, 4, 5]]",The bomb exploded at 6:56 p.m.,"['# ::snt The bomb exploded at 6:56 p.m.\n(e / explode-01\n      :ARG1 (b / bomb)\n      :time (d / date-entity\n            :time ""6:56""))']","[e, attr-instance, explode_01, attr-arg1, [b, attr-instance, bomb], attr-time, [d, attr-instance, date_entity, attr-time, ""6attr-56""]]"
755,755,755,755,916,2093,anschlag-in-bangkok-im-august-2015,"Wer die Bombe gezündet hat, \newline weiß man nicht.",1_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,"0:=Wer 1:=die 2:=Bombe 3:=gezündet 4:=hat, 5:=\newline 6:=weiß 7:=man 8:=nicht.",2,"[[0, 2, 3, 4], [6, 7, 8]]",It is not known who detonated the bomb.\newline,['# ::snt It is not known who detonated the bomb.\\newline\n(k / know-01\n      :polarity -\n      :ARG1 (p / person\n            :ARG0-of (d / detonate-01\n                  :ARG1 (b / bomb))))'],"[k, attr-instance, know_01, attr-polarity, negative, attr-arg1, [p, attr-instance, person, attr-arg0_of, [d, attr-instance, detonate_01, attr-arg1, [b, attr-instance, bomb]]]]"
756,756,756,756,917,2094,anschlag-in-bangkok-im-august-2015,Bis jetzt hat sich niemand dazu bekannt.,2_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Bis 1:=jetzt 2:=hat 3:=sich 4:=niemand 5:=dazu 6:=bekannt.,2,"[[0, 1], [2, 3, 4, 5, 6]]","So far, no one has claimed responsibility.","['# ::snt So far, no one has claimed responsibility.\n(c / claim-02\n      :ARG0 (n / no-one)\n      :ARG1 (r / responsible-01)\n      :time (s / so-far))']","[c, attr-instance, claim_02, attr-arg0, [n, attr-instance, no_one], attr-arg1, [r, attr-instance, responsible_01], attr-time, [s, attr-instance, so_far]]"
757,757,757,757,918,2095,anschlag-in-bangkok-im-august-2015,Viele glauben das es wegen politischer Meinungen gemacht worden ist.,3_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Viele 1:=glauben 2:=das 3:=es 4:=wegen 5:=politischer 6:=Meinungen 7:=gemacht 8:=worden 9:=ist.,3,"[[0, 1], [2, 3, 4, 6, 7, 8, 9], [5, 6]]",Many believe it was done because of political opinions.,['# ::snt Many believe it was done because of political opinions.\n(b / believe-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (d / do-02\n            :ARG1 (ii / it)\n            :ARG1-of (c / cause-01\n                  :ARG0 (o / opine-01\n                        :ARG0 (p2 / politics)))))'],"[b, attr-instance, believe_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [d, attr-instance, do_02, attr-arg1, [ii, attr-instance, it], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [o, attr-instance, opine_01, attr-arg0, [p2, attr-instance, politics]]]]]"
758,758,758,758,921,2098,anschlag-in-bangkok-im-august-2015,Die Bombe explodierte zwischen vielen Menschen.,6_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Bombe 2:=explodierte 3:=zwischen 4:=vielen 5:=Menschen.,1,,The bomb exploded among many people.,['# ::snt The bomb exploded among many people.\n(e / explode-01\n      :ARG1 (b / bomb)\n      :location (a / among\n            :op1 (p / person\n                  :quant (m / many))))'],"[e, attr-instance, explode_01, attr-arg1, [b, attr-instance, bomb], attr-location, [a, attr-instance, among, attr-op1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]]]"
759,759,759,759,922,2099,anschlag-in-bangkok-im-august-2015,Es waren sehr viele Urlauber an dem Ort.,7_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Es 1:=waren 2:=sehr 3:=viele 4:=Urlauber 5:=an 6:=dem 7:=Ort.,1,,There were a lot of holidaymakers at the place.,['# ::snt There were a lot of holidaymakers at the place.\n(b / be-located-at-91\n      :ARG1 (p / person\n            :ARG0-of (m / make-01\n                  :ARG1 (h / holiday))\n            :quant (l / lot))\n      :ARG2 (p2 / place))'],"[b, attr-instance, be_located_at_91, attr-arg1, [p, attr-instance, person, attr-arg0_of, [m, attr-instance, make_01, attr-arg1, [h, attr-instance, holiday]], attr-quant, [l, attr-instance, lot]], attr-arg2, [p2, attr-instance, place]]"
760,760,760,760,923,2100,anschlag-in-bangkok-im-august-2015,Sie waren gerade im Ratchaprasong-viertel einkaufen.,8_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=waren 2:=gerade 3:=im 4:=Ratchaprasong-viertel 5:=einkaufen.,2,"[[0, 1, 2, 5], [3, 4]]",They were just shopping in the Ratchaprasong district.,"['# ::snt They were just shopping in the Ratchaprasong district.\n(s / shop-01\n      :ARG0 (t / they)\n      :location (d / district\n            :name (n / name\n                  :op1 ""Ratchaprasong""))\n      :mod (j / just))']","[s, attr-instance, shop_01, attr-arg0, [t, attr-instance, they], attr-location, [d, attr-instance, district, attr-name, [n, attr-instance, name, attr-op1, ""ratchaprasong""]], attr-mod, [j, attr-instance, just]]"
761,761,761,761,924,2101,anschlag-in-bangkok-im-august-2015,Oder haben den Erawan-Schrein besucht.,9_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Oder 1:=haben 2:=den 3:=Erawan-Schrein 4:=besucht.,1,,Or visited the Erawan Shrine.,"['# ::snt Or visited the Erawan Shrine.\n(o / or\n      :op2 (v / visit-01\n            :ARG1 (w / worship-place\n                  :name (n / name\n                        :op1 ""Erawan""\n                        :op2 ""Shrine""))))']","[o, attr-instance, or, attr-op2, [v, attr-instance, visit_01, attr-arg1, [w, attr-instance, worship_place, attr-name, [n, attr-instance, name, attr-op1, ""erawan"", attr-op2, ""shrine""]]]]"
762,762,762,762,925,2102,anschlag-in-bangkok-im-august-2015,In Thailand gab es schon viele Anschläge.,10_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=In 1:=Thailand 2:=gab 3:=es 4:=schon 5:=viele 6:=Anschläge.,1,,There have been many attacks in Thailand.,"['# ::snt There have been many attacks in Thailand.\n(a / attack-01\n      :quant (m / many)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Thailand"")))']","[a, attr-instance, attack_01, attr-quant, [m, attr-instance, many], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""thailand""]]]"
763,763,763,763,927,2104,anschlag-in-bangkok-im-august-2015,Wie viele genau weiß man nicht.,12_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Wie 1:=viele 2:=genau 3:=weiß 4:=man 5:=nicht.,1,,It is not known exactly how many.,['# ::snt It is not known exactly how many.\n(k / know-01\n      :polarity -\n      :ARG1 (n / number\n            :quant-of (t / they))\n      :manner (e / exact))'],"[k, attr-instance, know_01, attr-polarity, negative, attr-arg1, [n, attr-instance, number, attr-quant_of, [t, attr-instance, they]], attr-manner, [e, attr-instance, exact]]"
764,764,764,764,928,2105,anschlag-in-bangkok-im-august-2015,Die Polizei in Bangkok untersucht den Anschlag noch.,13_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Polizei 2:=in 3:=Bangkok 4:=untersucht 5:=den 6:=Anschlag 7:=noch.,2,"[[4, 6, 7], [2, 3]]",Police in Bangkok are still investigating the attack.,"['# ::snt Police in Bangkok are still investigating the attack.\n(ii / investigate-01\n      :ARG0 (p / police\n            :location (c / city\n                  :name (n / name\n                        :op1 ""Bangkok"")))\n      :ARG1 (a / attack-01)\n      :mod (s / still))']","[ii, attr-instance, investigate_01, attr-arg0, [p, attr-instance, police, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""bangkok""]]], attr-arg1, [a, attr-instance, attack_01], attr-mod, [s, attr-instance, still]]"
765,765,765,765,929,2106,anschlag-in-bangkok-im-august-2015,"Die Menschen die gestorben sind kommen aus diesen Ländern: \newline China, Thailand, Philippinen.",14_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,"0:=Die 1:=Menschen 2:=die 3:=gestorben 4:=sind 5:=kommen 6:=aus 7:=diesen 8:=Ländern: 9:=\newline 10:=China, 11:=Thailand, 12:=Philippinen.",5,"[[1, 5, 6, 7, 8], [1, 2, 3, 4], [10], [11], [12]]","The people who died come from these countries: \newline China, Thailand, Philippines.","['# ::snt The people who died come from these countries: \\newline China, Thailand, Philippines.\n(c / come-01\n      :ARG1 (p / person\n            :ARG1-of (d / die-01))\n      :ARG3 (c2 / country\n            :mod (t / this)\n            :ARG2-of (ii / include-91\n                  :ARG1 (a / and\n                        :op1 (c3 / country\n                              :name (n / name\n                                    :op1 ""China""))\n                        :op2 (c4 / country\n                              :name (n2 / name\n                                    :op1 ""Thailand""))\n                        :op3 (c5 / country\n                              :name (n3 / name\n                                    :op1 ""Philippines""))))))']","[c, attr-instance, come_01, attr-arg1, [p, attr-instance, person, attr-arg1_of, [d, attr-instance, die_01]], attr-arg3, [c2, attr-instance, country, attr-mod, [t, attr-instance, this], attr-arg2_of, [ii, attr-instance, include_91, attr-arg1, [a, attr-instance, and, attr-op1, [c3, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""china""]], attr-op2, [c4, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""thailand""]], attr-op3, [c5, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""philippines""]]]]]]"
766,766,766,766,930,2107,anschlag-in-bangkok-im-august-2015,Bei vielen Menschen weiß man noch nicht woher sie kommen.,15_long,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Bei 1:=vielen 2:=Menschen 3:=weiß 4:=man 5:=noch 6:=nicht 7:=woher 8:=sie 9:=kommen.,2,"[[0, 1, 2, 3, 4, 5, 6], [7, 8, 9]]",For many people we still don’t know where they come from.,['# ::snt For many people we still don’t know where they come from.\n(k / know-01\n      :polarity -\n      :ARG0 (w / we)\n      :ARG1 (l / location\n            :ARG3-of (c / come-01\n                  :ARG1 (t / they)))\n      :ARG2 (p / person\n            :quant (m / many))\n      :mod (s / still))'],"[k, attr-instance, know_01, attr-polarity, negative, attr-arg0, [w, attr-instance, we], attr-arg1, [l, attr-instance, location, attr-arg3_of, [c, attr-instance, come_01, attr-arg1, [t, attr-instance, they]]], attr-arg2, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-mod, [s, attr-instance, still]]"
767,767,767,767,932,2109,anschlag-in-bangkok-im-august-2015,Und sehr viele Menschen sind verletzt worden.,1_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=sehr 2:=viele 3:=Menschen 4:=sind 5:=verletzt 6:=worden.,1,,And a lot of people were injured.,['# ::snt And a lot of people were injured.\n(a / and\n      :op2 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (l / lot))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, [l, attr-instance, lot]]]]"
768,768,768,768,933,2110,anschlag-in-bangkok-im-august-2015,"Das ist passiert,  \newline weil jemand eine Bombe gezündet hat.",2_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,"0:=Das 1:=ist 2:=passiert, 3:= 4:=\newline 5:=weil 6:=jemand 7:=eine 8:=Bombe 9:=gezündet 10:=hat.",2,"[[0, 1, 2], [5, 6, 8, 9, 10]]",This happened \newline because someone detonated a bomb.,['# ::snt This happened \\newline because someone detonated a bomb.\n(c / cause-01\n      :ARG0 (d / detonate-01\n            :ARG0 (s / someone)\n            :ARG1 (b / bomb))\n      :ARG1 (t / this)\n      :mod (l / line\n            :mod (n / newline)))'],"[c, attr-instance, cause_01, attr-arg0, [d, attr-instance, detonate_01, attr-arg0, [s, attr-instance, someone], attr-arg1, [b, attr-instance, bomb]], attr-arg1, [t, attr-instance, this], attr-mod, [l, attr-instance, line, attr-mod, [n, attr-instance, newline]]]"
769,769,769,769,934,2111,anschlag-in-bangkok-im-august-2015,Das wurde absichtlich gemacht.,3_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=wurde 2:=absichtlich 3:=gemacht.,1,,This was done intentionally.,['# ::snt This was done intentionally.\n(d / do-02\n      :ARG1 (t / this)\n      :ARG1-of (ii / intend-01))'],"[d, attr-instance, do_02, attr-arg1, [t, attr-instance, this], attr-arg1_of, [ii, attr-instance, intend_01]]"
770,770,770,770,935,2112,anschlag-in-bangkok-im-august-2015,Der Anschlag war in der Stadt Bangkok.,4_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=war 3:=in 4:=der 5:=Stadt 6:=Bangkok.,2,"[[5], [6]]",The attack was in the city of Bangkok.,"['# ::snt The attack was in the city of Bangkok.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Bangkok"")))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""bangkok""]]]"
771,771,771,771,936,2113,anschlag-in-bangkok-im-august-2015,Das ist in Thailand.,5_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=ist 2:=in 3:=Thailand.,1,,This is in Thailand.,"['# ::snt This is in Thailand.\n(t / this\n      :location (c / country\n            :name (n / name\n                  :op1 ""Thailand"")))']","[t, attr-instance, this, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""thailand""]]]"
772,772,772,772,937,2114,anschlag-in-bangkok-im-august-2015,Die Bombe wurde in der Nähe von einer Einkaufs-straße gezündet.,6_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Bombe 2:=wurde 3:=in 4:=der 5:=Nähe 6:=von 7:=einer 8:=Einkaufs-straße 9:=gezündet.,2,"[[1], [3, 5, 6, 8]]",The bomb was detonated near a shopping street.,['# ::snt The bomb was detonated near a shopping street.\n(d / detonate-01\n      :ARG1 (b / bomb)\n      :ARG1-of (n / near-02\n            :ARG2 (s / street\n                  :purpose (s2 / shop-01))))'],"[d, attr-instance, detonate_01, attr-arg1, [b, attr-instance, bomb], attr-arg1_of, [n, attr-instance, near_02, attr-arg2, [s, attr-instance, street, attr-purpose, [s2, attr-instance, shop_01]]]]"
773,773,773,773,938,2115,anschlag-in-bangkok-im-august-2015,Dort waren sehr viele Menschen.,7_short,Ohne_Kategorie|Geschichte|Seiten_mit_defekten_Dateilinks,2015-08-17T20:33:11Z,af28a20dfb151690981ee13d72ce655c,0:=Dort 1:=waren 2:=sehr 3:=viele 4:=Menschen.,1,,There were a lot of people there.,['# ::snt There were a lot of people there.\n(p / person\n      :quant (l / lot)\n      :location (t / there))'],"[p, attr-instance, person, attr-quant, [l, attr-instance, lot], attr-location, [t, attr-instance, there]]"
774,774,774,774,939,2116,anschlag-in-berlin-2016,Der Last-wagen hat Menschen bei einem Weihnachts-markt überfahren.,0_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Last-wagen 2:=hat 3:=Menschen 4:=bei 5:=einem 6:=Weihnachts-markt 7:=überfahren.,2,"[[1, 2, 3, 7], [4, 6]]",The truck ran over people at a Christmas market.,"['# ::snt The truck ran over people at a Christmas market.\n(r / run-over-12\n      :ARG0 (t / truck)\n      :ARG1 (p / person)\n      :location (m / market\n            :mod (f / festival\n                  :name (n / name\n                        :op1 ""Christmas""))))']","[r, attr-instance, run_over_12, attr-arg0, [t, attr-instance, truck], attr-arg1, [p, attr-instance, person], attr-location, [m, attr-instance, market, attr-mod, [f, attr-instance, festival, attr-name, [n, attr-instance, name, attr-op1, ""christmas""]]]]"
775,775,775,775,940,2117,anschlag-in-berlin-2016,Im Last-wagen sind 2 Männer gesessen.,1_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Im 1:=Last-wagen 2:=sind 3:=2 4:=Männer 5:=gesessen.,1,,There were two men sitting in the truck.,['# ::snt There were two men sitting in the truck.\n(s / sit-01\n      :ARG1 (m / man\n            :quant 2)\n      :ARG2 (t / truck))'],"[s, attr-instance, sit_01, attr-arg1, [m, attr-instance, man, attr-quant, 2], attr-arg2, [t, attr-instance, truck]]"
776,776,776,776,941,2118,anschlag-in-berlin-2016,Der Last-wagen-fahrer ist von der Polizei festgenommen.,2_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Last-wagen-fahrer 2:=ist 3:=von 4:=der 5:=Polizei 6:=festgenommen.,2,"[[1, 2, 6], [3, 5]]",The truck driver has been arrested by the police.,['# ::snt The truck driver has been arrested by the police.\n(a / arrest-01\n      :ARG0 (p / police)\n      :ARG1 (p2 / person\n            :ARG0-of (d / drive-01\n                  :ARG1 (t / truck))))'],"[a, attr-instance, arrest_01, attr-arg0, [p, attr-instance, police], attr-arg1, [p2, attr-instance, person, attr-arg0_of, [d, attr-instance, drive_01, attr-arg1, [t, attr-instance, truck]]]]"
777,777,777,777,942,2119,anschlag-in-berlin-2016,Der zweite Mann ist von der Polizei verfolgt worden.,3_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=zweite 2:=Mann 3:=ist 4:=von 5:=der 6:=Polizei 7:=verfolgt 8:=worden.,2,"[[1, 2, 3, 7, 8], [4, 6]]",The second man was pursued by the police.,['# ::snt The second man was pursued by the police.\n(p / pursue-01\n      :ARG0 (p2 / police)\n      :ARG1 (m / man\n            :ord (o / ordinal-entity\n                  :value 2)))'],"[p, attr-instance, pursue_01, attr-arg0, [p2, attr-instance, police], attr-arg1, [m, attr-instance, man, attr-ord, [o, attr-instance, ordinal_entity, attr-value, 2]]]"
778,778,778,778,943,2120,anschlag-in-berlin-2016,Dabei ist er gestorben.,4_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Dabei 1:=ist 2:=er 3:=gestorben.,1,,He died in the process.,['# ::snt He died in the process.\n(d / die-01\n      :ARG1 (h / he)\n      :time (p / process-02))'],"[d, attr-instance, die_01, attr-arg1, [h, attr-instance, he], attr-time, [p, attr-instance, process_02]]"
779,779,779,779,944,2121,anschlag-in-berlin-2016,"Warum der Anschlag in Berlin passiert ist, \newline weiß die Polizei nicht.",5_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,"0:=Warum 1:=der 2:=Anschlag 3:=in 4:=Berlin 5:=passiert 6:=ist, 7:=\newline 8:=weiß 9:=die 10:=Polizei 11:=nicht.",3,"[[0, 2, 5, 6], [2, 3, 4], [8, 10, 11]]",The police do not know why the attack happened in Berlin.,"['# ::snt The police do not know why the attack happened in Berlin.\n(k / know-01\n      :polarity -\n      :ARG0 (p / police)\n      :ARG1 (t / thing\n            :ARG0-of (c / cause-01\n                  :ARG1 (a / attack-01\n                        :location (c2 / city\n                              :name (n / name\n                                    :op1 ""Berlin""))))))']","[k, attr-instance, know_01, attr-polarity, negative, attr-arg0, [p, attr-instance, police], attr-arg1, [t, attr-instance, thing, attr-arg0_of, [c, attr-instance, cause_01, attr-arg1, [a, attr-instance, attack_01, attr-location, [c2, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""berlin""]]]]]]"
780,780,780,780,945,2122,anschlag-in-berlin-2016,Die Polizei versucht es heraus-zu-finden.,6_long,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Polizei 2:=versucht 3:=es 4:=heraus-zu-finden.,1,,The police are trying to find out.,['# ::snt The police are trying to find out.\n(t / try-01\n      :ARG0 (p / police)\n      :ARG1 (f / find-out-03\n            :ARG0 p))'],"[t, attr-instance, try_01, attr-arg0, [p, attr-instance, police], attr-arg1, [f, attr-instance, find_out_03, attr-arg0, p]]"
781,781,781,781,946,2123,anschlag-in-berlin-2016,Der Anschlag in Berlin 2016 ist am 19. Dezember 2016 passiert.,0_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=in 3:=Berlin 4:=2016 5:=ist 6:=am 7:=19. 8:=Dezember 9:=2016 10:=passiert.,2,"[[2, 3, 4], [6, 7, 8, 9]]","The 2016 Berlin attack happened on December 19, 2016.","['# ::snt The 2016 Berlin attack happened on December 19, 2016.\n(a / attack-01\n      :ARG1 (c / city\n            :name (n / name\n                  :op1 ""Berlin""))\n      :time (d / date-entity\n            :day 19\n            :month 12\n            :year 2016))']","[a, attr-instance, attack_01, attr-arg1, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""berlin""]], attr-time, [d, attr-instance, date_entity, attr-day, 19, attr-month, 12, attr-year, 2016]]"
782,782,782,782,947,2124,anschlag-in-berlin-2016,Der Anschlag ist in Berlin passiert.,1_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=ist 3:=in 4:=Berlin 5:=passiert.,1,,The attack happened in Berlin.,"['# ::snt The attack happened in Berlin.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Berlin"")))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""berlin""]]]"
783,783,783,783,949,2126,anschlag-in-berlin-2016,Ein Last-wagen ist in eine Menschen-menge gefahren.,3_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Ein 1:=Last-wagen 2:=ist 3:=in 4:=eine 5:=Menschen-menge 6:=gefahren.,1,,A truck drove into a crowd of people.,['# ::snt A truck drove into a crowd of people.\n(d / drive-01\n      :ARG0 (t / truck)\n      :ARG1 (c / crowd\n            :consist-of (p / person)))'],"[d, attr-instance, drive_01, attr-arg0, [t, attr-instance, truck], attr-arg1, [c, attr-instance, crowd, attr-consist_of, [p, attr-instance, person]]]"
784,784,784,784,950,2127,anschlag-in-berlin-2016,Der Fahrer hat die Menschen absichtlich überfahren.,4_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Fahrer 2:=hat 3:=die 4:=Menschen 5:=absichtlich 6:=überfahren.,2,"[[1, 2, 4, 6], [5]]",The driver deliberately ran over the people.,['# ::snt The driver deliberately ran over the people.\n(r / run-over-12\n      :ARG0 (p / person\n            :ARG0-of (d / drive-01))\n      :ARG1 (p2 / person)\n      :manner (d2 / deliberate))'],"[r, attr-instance, run_over_12, attr-arg0, [p, attr-instance, person, attr-arg0_of, [d, attr-instance, drive_01]], attr-arg1, [p2, attr-instance, person], attr-manner, [d2, attr-instance, deliberate]]"
785,785,785,785,951,2128,anschlag-in-berlin-2016,Dabei sind 12 Menschen gestorben.,5_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Dabei 1:=sind 2:=12 3:=Menschen 4:=gestorben.,1,,12 people died.,['# ::snt 12 people died.\n(d / die-01\n      :ARG1 (p / person\n            :quant 12))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-quant, 12]]"
786,786,786,786,952,2129,anschlag-in-berlin-2016,Viele Menschen sind verletzt.,6_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Viele 1:=Menschen 2:=sind 3:=verletzt.,1,,Many people are injured.,['# ::snt Many people are injured.\n(ii / injure-01\n      :ARG1 (p / person\n            :quant (m / many)))'],"[ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]]"
787,787,787,787,953,2130,anschlag-in-berlin-2016,Der Anschlag ist von der IS Gruppe gemacht worden.,7_short,Ohne_Kategorie|Hurraki:Überarbeiten|Aus_den_Nachrichten|Geschichte|Seiten_mit_defekten_Dateilinks,2016-12-21T09:57:24Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Anschlag 2:=ist 3:=von 4:=der 5:=IS 6:=Gruppe 7:=gemacht 8:=worden.,1,,The attack was carried out by the IS group.,"['# ::snt The attack was carried out by the IS group.\n(c / carry-out-03\n      :ARG0 (g / group\n            :name (n / name\n                  :op1 ""IS""))\n      :ARG1 (a / attack-01))']","[c, attr-instance, carry_out_03, attr-arg0, [g, attr-instance, group, attr-name, [n, attr-instance, name, attr-op1, ""is""]], attr-arg1, [a, attr-instance, attack_01]]"
788,788,788,788,954,2131,anschlag-in-charlottesville,Bei der Demonstration sind mehrere Rechte Gruppen dabei gewesen.,0_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Bei 1:=der 2:=Demonstration 3:=sind 4:=mehrere 5:=Rechte 6:=Gruppen 7:=dabei 8:=gewesen.,2,"[[0, 2], [3, 4, 5, 6, 7, 8]]",Several right-wing groups took part in the demonstration.,['# ::snt Several right-wing groups took part in the demonstration.\n(p / participate-01\n      :ARG0 (g / group\n            :ARG1-of (r / right-08)\n            :quant (s / several))\n      :ARG1 (d / demonstrate-01))'],"[p, attr-instance, participate_01, attr-arg0, [g, attr-instance, group, attr-arg1_of, [r, attr-instance, right_08], attr-quant, [s, attr-instance, several]], attr-arg1, [d, attr-instance, demonstrate_01]]"
789,789,789,789,956,2133,anschlag-in-charlottesville,Die Rechten Gruppen haben Waffen dabei gehabt.,2_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Rechten 2:=Gruppen 3:=haben 4:=Waffen 5:=dabei 6:=gehabt.,1,,The right-wing groups had weapons with them.,['# ::snt The right-wing groups had weapons with them.\n(h / have-03\n      :ARG0 (g / group\n            :ARG1-of (r / right-08))\n      :ARG1 (w / weapon)\n      :prep-with g)'],"[h, attr-instance, have_03, attr-arg0, [g, attr-instance, group, attr-arg1_of, [r, attr-instance, right_08]], attr-arg1, [w, attr-instance, weapon], attr-prep_with, g]"
790,790,790,790,957,2134,anschlag-in-charlottesville,Und sind mit Fackeln durch die Stadt gelaufen.,3_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sind 2:=mit 3:=Fackeln 4:=durch 5:=die 6:=Stadt 7:=gelaufen.,2,"[[2, 3], [4, 6]]",And walked through the city with torches.,['# ::snt And walked through the city with torches.\n(a / and\n      :op2 (w / walk-01\n            :ARG2 (t / through\n                  :op1 (c / city))\n            :accompanier (t2 / torch)))'],"[a, attr-instance, and, attr-op2, [w, attr-instance, walk_01, attr-arg2, [t, attr-instance, through, attr-op1, [c, attr-instance, city]], attr-accompanier, [t2, attr-instance, torch]]]"
791,791,791,791,958,2135,anschlag-in-charlottesville,Sie wollen das eine Reiter-figur in der Stadt bleibt.,4_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=wollen 2:=das 3:=eine 4:=Reiter-figur 5:=in 6:=der 7:=Stadt 8:=bleibt.,2,"[[0, 1, 2, 4], [5, 6, 7]]",They want a rider figure to remain in the city.,['# ::snt They want a rider figure to remain in the city.\n(w / want-01\n      :ARG0 (t / they)\n      :ARG1 (f / figure\n            :topic (p / person\n                  :ARG0-of (r / ride-01))\n            :ARG1-of (r2 / remain-01\n                  :location (c / city))))'],"[w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [f, attr-instance, figure, attr-topic, [p, attr-instance, person, attr-arg0_of, [r, attr-instance, ride_01]], attr-arg1_of, [r2, attr-instance, remain_01, attr-location, [c, attr-instance, city]]]]"
792,792,792,792,959,2136,anschlag-in-charlottesville,Die Reiter-figur hat eine Rechte Bedeutung.,5_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Reiter-figur 2:=hat 3:=eine 4:=Rechte 5:=Bedeutung.,2,"[[1, 2], [4]]",The rider figure has a real meaning.,['# ::snt The rider figure has a real meaning.\n(m / mean-01\n      :ARG1 (f / figure\n            :topic (p / person\n                  :ARG0-of (r / ride-01)))\n      :ARG1-of (r2 / real-04))'],"[m, attr-instance, mean_01, attr-arg1, [f, attr-instance, figure, attr-topic, [p, attr-instance, person, attr-arg0_of, [r, attr-instance, ride_01]]], attr-arg1_of, [r2, attr-instance, real_04]]"
793,793,793,793,960,2137,anschlag-in-charlottesville,Die Rechten Gruppen haben die Gegen-demonstranten angegriffen.,6_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Rechten 2:=Gruppen 3:=haben 4:=die 5:=Gegen-demonstranten 6:=angegriffen.,1,,The right-wing groups attacked the counter-demonstrators.,['# ::snt The right-wing groups attacked the counter-demonstrators.\n(a / attack-01\n      :ARG0 (g / group\n            :ARG1-of (r / right-08))\n      :ARG1 (p / person\n            :ARG0-of (d / demonstrate-01)\n            :ARG0-of (c / counter-01)))'],"[a, attr-instance, attack_01, attr-arg0, [g, attr-instance, group, attr-arg1_of, [r, attr-instance, right_08]], attr-arg1, [p, attr-instance, person, attr-arg0_of, [d, attr-instance, demonstrate_01], attr-arg0_of, [c, attr-instance, counter_01]]]"
794,794,794,794,961,2138,anschlag-in-charlottesville,Die Gruppen sind gegen Menschen die anders sind als sie selbst.,7_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Gruppen 2:=sind 3:=gegen 4:=Menschen 5:=die 6:=anders 7:=sind 8:=als 9:=sie 10:=selbst.,2,"[[1, 2, 3, 4], [5, 6, 7, 8, 9, 10]]",The groups are against people who are different from themselves.,['# ::snt The groups are against people who are different from themselves.\n(o / oppose-01\n      :ARG0 (g / group)\n      :ARG1 (p / person\n            :ARG1-of (d / differ-02\n                  :ARG2 g)))'],"[o, attr-instance, oppose_01, attr-arg0, [g, attr-instance, group], attr-arg1, [p, attr-instance, person, attr-arg1_of, [d, attr-instance, differ_02, attr-arg2, g]]]"
795,795,795,795,962,2139,anschlag-in-charlottesville,Einer von einer Rechten Gruppe ist mit dem Auto in die Gegen-demonstration gefahren.,8_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Einer 1:=von 2:=einer 3:=Rechten 4:=Gruppe 5:=ist 6:=mit 7:=dem 8:=Auto 9:=in 10:=die 11:=Gegen-demonstration 12:=gefahren.,3,"[[1, 3, 4], [6, 8], [9, 11]]",One of a right-wing group drove into the counter-demonstration.,['# ::snt One of a right-wing group drove into the counter-demonstration.\n(d / drive-01\n      :ARG0 (p / person\n            :quant 1\n            :ARG1-of (ii / include-91\n                  :ARG2 (g / group\n                        :ARG1-of (r / right-08))))\n      :destination (d2 / demonstrate-01\n            :ARG0-of (c / counter-01)))'],"[d, attr-instance, drive_01, attr-arg0, [p, attr-instance, person, attr-quant, 1, attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [g, attr-instance, group, attr-arg1_of, [r, attr-instance, right_08]]]], attr-destination, [d2, attr-instance, demonstrate_01, attr-arg0_of, [c, attr-instance, counter_01]]]"
796,796,796,796,963,2140,anschlag-in-charlottesville,Er hat dabei eine Frau getötet.,9_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=dabei 3:=eine 4:=Frau 5:=getötet.,1,,He killed a woman.,['# ::snt He killed a woman.\n(k / kill-01\n      :ARG0 (h / he)\n      :ARG1 (w / woman))'],"[k, attr-instance, kill_01, attr-arg0, [h, attr-instance, he], attr-arg1, [w, attr-instance, woman]]"
797,797,797,797,964,2141,anschlag-in-charlottesville,Und über 19 Menschen sind verletzt.,10_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=über 2:=19 3:=Menschen 4:=sind 5:=verletzt.,1,,And over 19 people are injured.,['# ::snt And over 19 people are injured.\n(a / and\n      :op2 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (o / over\n                        :op1 19))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, [o, attr-instance, over, attr-op1, 19]]]]"
798,798,798,798,965,2142,anschlag-in-charlottesville,Polizisten haben den Mann gestoppt.,11_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Polizisten 1:=haben 2:=den 3:=Mann 4:=gestoppt.,1,,Police stopped the man.,['# ::snt Police stopped the man.\n(s / stop-01\n      :ARG0 (p / police)\n      :ARG1 (m / man))'],"[s, attr-instance, stop_01, attr-arg0, [p, attr-instance, police], attr-arg1, [m, attr-instance, man]]"
799,799,799,799,966,2143,anschlag-in-charlottesville,Und haben ihn verhaftet.,12_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=haben 2:=ihn 3:=verhaftet.,1,,And arrested him.,['# ::snt And arrested him.\n(a / and\n      :op2 (a2 / arrest-01\n            :ARG1 (h / he)))'],"[a, attr-instance, and, attr-op2, [a2, attr-instance, arrest_01, attr-arg1, [h, attr-instance, he]]]"
800,800,800,800,967,2144,anschlag-in-charlottesville,Die Polizei sagt das er Terror gemacht hat.,13_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Polizei 2:=sagt 3:=das 4:=er 5:=Terror 6:=gemacht 7:=hat.,2,"[[1, 2], [3, 4, 5, 6, 7]]",The police say he committed terrorism.,['# ::snt The police say he committed terrorism.\n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (c / commit-02\n            :ARG0 (h / he)\n            :ARG1 (t / terrorism)))'],"[s, attr-instance, say_01, attr-arg0, [p, attr-instance, police], attr-arg1, [c, attr-instance, commit_02, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, terrorism]]]"
801,801,801,801,968,2145,anschlag-in-charlottesville,Er bekommt dafür eine sehr hohe Strafe.,14_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=bekommt 2:=dafür 3:=eine 4:=sehr 5:=hohe 6:=Strafe.,1,,He gets a very heavy punishment for this.,['# ::snt He gets a very heavy punishment for this.\n(p / punish-01\n      :ARG1 (h / he)\n      :ARG2 (t / this)\n      :manner (h2 / heavy\n            :degree (v / very)))'],"[p, attr-instance, punish_01, attr-arg1, [h, attr-instance, he], attr-arg2, [t, attr-instance, this], attr-manner, [h2, attr-instance, heavy, attr-degree, [v, attr-instance, very]]]"
802,802,802,802,969,2146,anschlag-in-charlottesville,Der Präsident Donald Trump hat bei dem Anschlag wenig gegen Rechts-extremismus gesagt.,15_long,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Präsident 2:=Donald 3:=Trump 4:=hat 5:=bei 6:=dem 7:=Anschlag 8:=wenig 9:=gegen 10:=Rechts-extremismus 11:=gesagt.,4,"[[1, 4, 8, 11], [1, 2, 3], [8, 9, 10], [5, 7]]",President Donald Trump said little against right-wing extremism during the attack.,"['# ::snt President Donald Trump said little against right-wing extremism during the attack.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Donald""\n                  :op2 ""Trump"")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (p2 / president)))\n      :ARG1 (l / little)\n      :ARG3 (e / extremism\n            :ARG1-of (r / right-08))\n      :time (a / attack-01))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""donald"", attr-op2, ""trump""], attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [p2, attr-instance, president]]], attr-arg1, [l, attr-instance, little], attr-arg3, [e, attr-instance, extremism, attr-arg1_of, [r, attr-instance, right_08]], attr-time, [a, attr-instance, attack_01]]"
803,803,803,803,970,2147,anschlag-in-charlottesville,Der Anschlag in Charlottesville ist im August 2017 passiert.,0_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Anschlag 2:=in 3:=Charlottesville 4:=ist 5:=im 6:=August 7:=2017 8:=passiert.,2,"[[2, 3], [5, 6, 7]]",The attack in Charlottesville happened in August 2017.,"['# ::snt The attack in Charlottesville happened in August 2017.\n(a / attack-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Charlottesville""))\n      :time (d / date-entity\n            :month 8\n            :year 2017))']","[a, attr-instance, attack_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""charlottesville""]], attr-time, [d, attr-instance, date_entity, attr-month, 8, attr-year, 2017]]"
804,804,804,804,973,2150,anschlag-in-charlottesville,Die Rechten Gruppen sind gegen Menschen die anders sind als sie selbst.,3_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Rechten 2:=Gruppen 3:=sind 4:=gegen 5:=Menschen 6:=die 7:=anders 8:=sind 9:=als 10:=sie 11:=selbst.,2,"[[1, 2, 3, 4], [6, 7, 8, 9, 10, 11]]",The right-wing groups are against people who are different from themselves.,['# ::snt The right-wing groups are against people who are different from themselves.\n(o / oppose-01\n      :ARG0 (g / group\n            :ARG1-of (r / right-08))\n      :ARG1 (p / person\n            :ARG1-of (d / differ-02\n                  :ARG2 g)))'],"[o, attr-instance, oppose_01, attr-arg0, [g, attr-instance, group, attr-arg1_of, [r, attr-instance, right_08]], attr-arg1, [p, attr-instance, person, attr-arg1_of, [d, attr-instance, differ_02, attr-arg2, g]]]"
805,805,805,805,974,2151,anschlag-in-charlottesville,Andere Gruppen haben eine Gegen-demonstration gemacht.,4_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Andere 1:=Gruppen 2:=haben 3:=eine 4:=Gegen-demonstration 5:=gemacht.,1,,Other groups held a counter-demonstration.,['# ::snt Other groups held a counter-demonstration.\n(h / hold-04\n      :ARG0 (g / group\n            :mod (o / other))\n      :ARG1 (d / demonstrate-01\n            :ARG0-of (c / counter-01)))'],"[h, attr-instance, hold_04, attr-arg0, [g, attr-instance, group, attr-mod, [o, attr-instance, other]], attr-arg1, [d, attr-instance, demonstrate_01, attr-arg0_of, [c, attr-instance, counter_01]]]"
806,806,806,806,975,2152,anschlag-in-charlottesville,Sie haben gegen die Rechten Gruppen demonstriert.,5_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=haben 2:=gegen 3:=die 4:=Rechten 5:=Gruppen 6:=demonstriert.,2,"[[0, 1, 6], [2, 4, 5]]",They demonstrated against the right-wing groups.,['# ::snt They demonstrated against the right-wing groups.\n(d / demonstrate-01\n      :ARG0 (t / they)\n      :prep-against (g / group\n            :ARG1-of (r / right-08)))'],"[d, attr-instance, demonstrate_01, attr-arg0, [t, attr-instance, they], attr-prep_against, [g, attr-instance, group, attr-arg1_of, [r, attr-instance, right_08]]]"
807,807,807,807,976,2153,anschlag-in-charlottesville,Beide Gruppen sind aufeinander los gegangen.,6_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beide 1:=Gruppen 2:=sind 3:=aufeinander 4:=los 5:=gegangen.,1,,Both groups attacked each other.,['# ::snt Both groups attacked each other.\n(a / attack-01\n      :ARG0 (g / group\n            :mod (b / both)\n            :ARG1-of a))'],"[a, attr-instance, attack_01, attr-arg0, [g, attr-instance, group, attr-mod, [b, attr-instance, both], attr-arg1_of, a]]"
808,808,808,808,977,2154,anschlag-in-charlottesville,Ein Rechter ist mit einem Auto in die Gegen-demonstration gefahren.,7_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Rechter 2:=ist 3:=mit 4:=einem 5:=Auto 6:=in 7:=die 8:=Gegen-demonstration 9:=gefahren.,2,"[[3, 5], [6, 8]]",A right-winger drove a car into the counter-demonstration.,['# ::snt A right-winger drove a car into the counter-demonstration.\n(d / drive-01\n      :ARG0 (p / person\n            :ARG1-of (r / right-08))\n      :ARG1 (c / car)\n      :destination (d2 / demonstrate-01\n            :ARG0-of (c2 / counter-01)))'],"[d, attr-instance, drive_01, attr-arg0, [p, attr-instance, person, attr-arg1_of, [r, attr-instance, right_08]], attr-arg1, [c, attr-instance, car], attr-destination, [d2, attr-instance, demonstrate_01, attr-arg0_of, [c2, attr-instance, counter_01]]]"
809,809,809,809,978,2155,anschlag-in-charlottesville,Eine Frau ist dabei gestorben.,8_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Frau 2:=ist 3:=dabei 4:=gestorben.,1,,A woman died.,['# ::snt A woman died.\n(d / die-01\n      :ARG1 (w / woman))'],"[d, attr-instance, die_01, attr-arg1, [w, attr-instance, woman]]"
810,810,810,810,979,2156,anschlag-in-charlottesville,Und viele Menschen sind verletzt.,9_short,Aus_den_Nachrichten|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2017-08-20T04:11:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=viele 2:=Menschen 3:=sind 4:=verletzt.,1,,And many people are injured.,['# ::snt And many people are injured.\n(a / and\n      :op2 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (m / many))))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, injure_01, attr-arg1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]]]"
811,811,811,811,980,9663,currywurst,Die Curry-wurst ist ein Essen aus Deutschland.,0_long,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Die 1:=Curry-wurst 2:=ist 3:=ein 4:=Essen 5:=aus 6:=Deutschland.,2,"[[4], [6]]",The currywurst is a dish from Germany.,"['# ::snt The currywurst is a dish from Germany.\n(d / dish\n      :domain (c / currywurst)\n      :source (c2 / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[d, attr-instance, dish, attr-domain, [c, attr-instance, currywurst], attr-source, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
812,812,812,812,981,9664,currywurst,Die Curry-wurst ist eine Brat-wurst.,1_long,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Die 1:=Curry-wurst 2:=ist 3:=eine 4:=Brat-wurst.,1,,The currywurst is a fried sausage.,['# ::snt The currywurst is a fried sausage.\n(s / sausage\n      :ARG1-of (f / fry-01)\n      :domain (c / currywurst))'],"[s, attr-instance, sausage, attr-arg1_of, [f, attr-instance, fry_01], attr-domain, [c, attr-instance, currywurst]]"
813,813,813,813,982,9665,currywurst,Oder sie ist eine Brüh-wurst.,2_long,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Oder 1:=sie 2:=ist 3:=eine 4:=Brüh-wurst.,1,,Or it is a boiled sausage.,['# ::snt Or it is a boiled sausage.\n(o / or\n      :op2 (s / sausage\n            :ARG1-of (b / boil-01)\n            :domain (ii / it)))'],"[o, attr-instance, or, attr-op2, [s, attr-instance, sausage, attr-arg1_of, [b, attr-instance, boil_01], attr-domain, [ii, attr-instance, it]]]"
814,814,814,814,983,9666,currywurst,Die Curry-wurst wird in kleinen Stücken von einem Teller gegessen.,3_long,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Die 1:=Curry-wurst 2:=wird 3:=in 4:=kleinen 5:=Stücken 6:=von 7:=einem 8:=Teller 9:=gegessen.,3,"[[1, 2, 9], [3, 4, 5], [6, 8]]",The currywurst is eaten in small pieces from a plate.,['# ::snt The currywurst is eaten in small pieces from a plate.\n(e / eat-01\n      :ARG1 (c / currywurst)\n      :manner (p / piece\n            :mod (s / small)\n            :source (p2 / plate)))'],"[e, attr-instance, eat_01, attr-arg1, [c, attr-instance, currywurst], attr-manner, [p, attr-instance, piece, attr-mod, [s, attr-instance, small], attr-source, [p2, attr-instance, plate]]]"
815,815,815,815,984,9667,currywurst,Dazu gibt es eine Soße mit Tomaten und Curry-Pulver.,4_long,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Dazu 1:=gibt 2:=es 3:=eine 4:=Soße 5:=mit 6:=Tomaten 7:=und 8:=Curry-Pulver.,3,"[[0, 1, 2, 4], [5, 6], [5, 8]]",It is served with a sauce with tomatoes and curry powder.,['# ::snt It is served with a sauce with tomatoes and curry powder.\n(s / serve-02\n      :ARG1 (ii / it)\n      :accompanier (s2 / sauce\n            :accompanier (a / and\n                  :op1 (t / tomato)\n                  :op2 (p / powder\n                        :mod (c / curry)))))'],"[s, attr-instance, serve_02, attr-arg1, [ii, attr-instance, it], attr-accompanier, [s2, attr-instance, sauce, attr-accompanier, [a, attr-instance, and, attr-op1, [t, attr-instance, tomato], attr-op2, [p, attr-instance, powder, attr-mod, [c, attr-instance, curry]]]]]"
816,816,816,816,985,9668,currywurst,Oder die Wurst wird mit Curry-Ketchup übergossen.,5_long,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Oder 1:=die 2:=Wurst 3:=wird 4:=mit 5:=Curry-Ketchup 6:=übergossen.,1,,Or the sausage is covered with curry ketchup.,['# ::snt Or the sausage is covered with curry ketchup.\n(o / or\n      :op2 (c / cover-02\n            :ARG1 (s / sausage)\n            :ARG2 (k / ketchup\n                  :mod (c2 / curry))))'],"[o, attr-instance, or, attr-op2, [c, attr-instance, cover_02, attr-arg1, [s, attr-instance, sausage], attr-arg2, [k, attr-instance, ketchup, attr-mod, [c2, attr-instance, curry]]]]"
817,817,817,817,986,9669,currywurst,Die Curry-wurst ist sehr beliebt.,6_long,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Die 1:=Curry-wurst 2:=ist 3:=sehr 4:=beliebt.,1,,The currywurst is very popular.,['# ::snt The currywurst is very popular.\n(p / popular-02\n      :ARG1 (c / currywurst)\n      :degree (v / very))'],"[p, attr-instance, popular_02, attr-arg1, [c, attr-instance, currywurst], attr-degree, [v, attr-instance, very]]"
818,818,818,818,987,9670,currywurst,Sie wird gerne mit Toast-Brot gegessen.,7_long,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Sie 1:=wird 2:=gerne 3:=mit 4:=Toast-Brot 5:=gegessen.,1,,It is often eaten with toast.,['# ::snt It is often eaten with toast.\n(e / eat-01\n      :ARG1 (ii / it)\n      :accompanier (t / toast-01)\n      :frequency (o / often))'],"[e, attr-instance, eat_01, attr-arg1, [ii, attr-instance, it], attr-accompanier, [t, attr-instance, toast_01], attr-frequency, [o, attr-instance, often]]"
819,819,819,819,989,9672,currywurst,Eine Curry-wurst ist eine Brat-wurst.,0_short,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Eine 1:=Curry-wurst 2:=ist 3:=eine 4:=Brat-wurst.,1,,A currywurst is a bratwurst.,['# ::snt A currywurst is a bratwurst.\n(b / bratwurst\n      :domain (c / currywurst))'],"[b, attr-instance, bratwurst, attr-domain, [c, attr-instance, currywurst]]"
820,820,820,820,990,9673,currywurst,Oder sie ist eine Brüh-wurst.,1_short,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Oder 1:=sie 2:=ist 3:=eine 4:=Brüh-wurst.,1,,Or it is a boiled sausage.,['# ::snt Or it is a boiled sausage.\n(o / or\n      :op2 (s / sausage\n            :ARG1-of (b / boil-01)\n            :domain (ii / it)))'],"[o, attr-instance, or, attr-op2, [s, attr-instance, sausage, attr-arg1_of, [b, attr-instance, boil_01], attr-domain, [ii, attr-instance, it]]]"
821,821,821,821,991,9674,currywurst,Sie wird mit einer Soße aus Tomaten und Curry-Pulver gegessen.,2_short,Essen_und_Trinken,2019-05-23T21:15:19Z,cb1e31ab104c40efee60452f9427ce6d,0:=Sie 1:=wird 2:=mit 3:=einer 4:=Soße 5:=aus 6:=Tomaten 7:=und 8:=Curry-Pulver 9:=gegessen.,4,"[[0, 1, 9], [2, 4], [4, 5, 6], [4, 5, 8]]",It is eaten with a sauce made from tomatoes and curry powder.,['# ::snt It is eaten with a sauce made from tomatoes and curry powder.\n(e / eat-01\n      :ARG1 (ii / it)\n      :accompanier (s / sauce\n            :ARG1-of (m / make-01\n                  :ARG2 (a / and\n                        :op1 (t / tomato)\n                        :op2 (p / powder\n                              :mod (c / curry))))))'],"[e, attr-instance, eat_01, attr-arg1, [ii, attr-instance, it], attr-accompanier, [s, attr-instance, sauce, attr-arg1_of, [m, attr-instance, make_01, attr-arg2, [a, attr-instance, and, attr-op1, [t, attr-instance, tomato], attr-op2, [p, attr-instance, powder, attr-mod, [c, attr-instance, curry]]]]]]"
822,822,822,822,992,9675,cyanogenmod,CyanogenMod  stammt von dem Betriebs-system Android ab.,0_long,Computer,2013-11-27T06:06:48Z,28d34f2e053dee2c0e9399a7924cd978,0:=CyanogenMod 1:= 2:=stammt 3:=von 4:=dem 5:=Betriebs-system 6:=Android 7:=ab.,2,"[[5], [6]]",CyanogenMod comes from the Android operating system.,"['# ::snt CyanogenMod comes from the Android operating system.\n(c / come-01\n      :ARG1 (p / product\n            :name (n / name\n                  :op1 ""CyanogenMod""))\n      :ARG3 (s / system\n            :ARG0-of (o / operate-01)\n            :mod p\n            :name (n2 / name\n                  :op1 ""Android"")))']","[c, attr-instance, come_01, attr-arg1, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""cyanogenmod""]], attr-arg3, [s, attr-instance, system, attr-arg0_of, [o, attr-instance, operate_01], attr-mod, p, attr-name, [n2, attr-instance, name, attr-op1, ""android""]]]"
823,823,823,823,993,9676,cyanogenmod,Android ist von der Firma Google.,1_long,Computer,2013-11-27T06:06:48Z,28d34f2e053dee2c0e9399a7924cd978,0:=Android 1:=ist 2:=von 3:=der 4:=Firma 5:=Google.,2,"[[4], [5]]",Android is from the company Google.,"['# ::snt Android is from the company Google.\n(b / be-from-91\n      :ARG1 (p / product\n            :name (n / name\n                  :op1 ""Android""))\n      :ARG2 (c / company\n            :name (n2 / name\n                  :op1 ""Google"")))']","[b, attr-instance, be_from_91, attr-arg1, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""android""]], attr-arg2, [c, attr-instance, company, attr-name, [n2, attr-instance, name, attr-op1, ""google""]]]"
824,824,824,824,994,9677,cyanogenmod,Manche Handy-firmen haben das Betriebs-system Android verändert.,2_long,Computer,2013-11-27T06:06:48Z,28d34f2e053dee2c0e9399a7924cd978,0:=Manche 1:=Handy-firmen 2:=haben 3:=das 4:=Betriebs-system 5:=Android 6:=verändert.,2,"[[4], [5]]",Some mobile phone companies have changed the Android operating system.,"['# ::snt Some mobile phone companies have changed the Android operating system.\n(c / change-01\n      :ARG0 (c2 / company\n            :mod (p / phone\n                  :ARG1-of (m / mobile-02))\n            :quant (s / some))\n      :ARG1 (s2 / system\n            :ARG0-of (o / operate-01)\n            :mod (p2 / product\n                  :name (n / name\n                        :op1 ""Android""))))']","[c, attr-instance, change_01, attr-arg0, [c2, attr-instance, company, attr-mod, [p, attr-instance, phone, attr-arg1_of, [m, attr-instance, mobile_02]], attr-quant, [s, attr-instance, some]], attr-arg1, [s2, attr-instance, system, attr-arg0_of, [o, attr-instance, operate_01], attr-mod, [p2, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""android""]]]]"
825,825,825,825,995,9678,cyanogenmod,"Das heißt:  \newline Je nach dem von welcher Firma man ein Handy kauft, \newline hat man ein verändertes Android Betriebssystem auf dem Handy.",3_long,Computer,2013-11-27T06:06:48Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Das 1:=heißt: 2:= 3:=\newline 4:=Je 5:=nach 6:=dem 7:=von 8:=welcher 9:=Firma 10:=man 11:=ein 12:=Handy 13:=kauft, 14:=\newline 15:=hat 16:=man 17:=ein 18:=verändertes 19:=Android 20:=Betriebssystem 21:=auf 22:=dem 23:=Handy.",4,"[[4, 5, 7, 8, 9, 10, 12, 13], [15, 16, 18, 19], [15, 16, 18, 20], [21, 23]]","This means: \newline Depending on which company you buy a cell phone from, \newline you have a different Android operating system on your phone.","['# ::snt This means: \\newline Depending on which company you buy a cell phone from, \\newline you have a different Android operating system on your phone.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (s / system\n                  :ARG0-of (o / operate-01\n                        :ARG1 (p / phone\n                              :mod (c / cell)))\n                  :ARG1-of (d / differ-02)\n                  :mod (p2 / product\n                        :name (n / name\n                              :op1 ""Android"")))\n            :location (p3 / phone\n                  :poss y)\n            :ARG0-of (d2 / depend-01\n                  :ARG1 (c2 / company\n                        :ARG2-of (b / buy-01\n                              :ARG0 y\n                              :ARG1 p3)))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, system, attr-arg0_of, [o, attr-instance, operate_01, attr-arg1, [p, attr-instance, phone, attr-mod, [c, attr-instance, cell]]], attr-arg1_of, [d, attr-instance, differ_02], attr-mod, [p2, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""android""]]], attr-location, [p3, attr-instance, phone, attr-poss, y], attr-arg0_of, [d2, attr-instance, depend_01, attr-arg1, [c2, attr-instance, company, attr-arg2_of, [b, attr-instance, buy_01, attr-arg0, y, attr-arg1, p3]]]]]"
826,826,826,826,996,9679,cyanogenmod,Manche benutzen lieber CyanogenMod.,4_long,Computer,2013-11-27T06:06:48Z,28d34f2e053dee2c0e9399a7924cd978,0:=Manche 1:=benutzen 2:=lieber 3:=CyanogenMod.,1,,Some prefer to use CyanogenMod.,"['# ::snt Some prefer to use CyanogenMod.\n(p / prefer-01\n      :ARG0 (s / some)\n      :ARG1 (u / use-01\n            :ARG0 s\n            :ARG1 (p2 / product\n                  :name (n / name\n                        :op1 ""CyanogenMod""))))']","[p, attr-instance, prefer_01, attr-arg0, [s, attr-instance, some], attr-arg1, [u, attr-instance, use_01, attr-arg0, s, attr-arg1, [p2, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""cyanogenmod""]]]]"
827,827,827,827,997,9680,cyanogenmod,zum Beispiel: • weil die Handy-firma noch nicht die neuste Android Version für das eigene Handy gemacht hat,5_long,Computer,2013-11-27T06:06:48Z,28d34f2e053dee2c0e9399a7924cd978,0:=zum 1:=Beispiel: 2:=• 3:=weil 4:=die 5:=Handy-firma 6:=noch 7:=nicht 8:=die 9:=neuste 10:=Android 11:=Version 12:=für 13:=das 14:=eigene 15:=Handy 16:=gemacht 17:=hat,3,"[[3, 5, 6, 7, 9, 10, 11, 16, 17], [9, 10, 11], [12, 14, 15]]",for example: • because the mobile phone company has not yet made the latest Android version for your phone,"['# ::snt for example: • because the mobile phone company has not yet made the latest Android version for your phone\n(e / exemplify-01\n      :ARG0 (c / cause-01\n            :ARG0 (m / make-01\n                  :polarity -\n                  :ARG0 (c2 / company\n                        :mod (p / phone\n                              :mod (m2 / mobile)))\n                  :ARG1 (v / version\n                        :mod (p2 / product\n                              :name (n / name\n                                    :op1 ""Android""))\n                        :mod (l / last))\n                  :time (y / yet)\n                  :beneficiary (p3 / phone\n                        :poss (y2 / you)))))']","[e, attr-instance, exemplify_01, attr-arg0, [c, attr-instance, cause_01, attr-arg0, [m, attr-instance, make_01, attr-polarity, negative, attr-arg0, [c2, attr-instance, company, attr-mod, [p, attr-instance, phone, attr-mod, [m2, attr-instance, mobile]]], attr-arg1, [v, attr-instance, version, attr-mod, [p2, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""android""]], attr-mod, [l, attr-instance, last]], attr-time, [y, attr-instance, yet], attr-beneficiary, [p3, attr-instance, phone, attr-poss, [y2, attr-instance, you]]]]]"
828,828,828,828,999,9682,cyanogenmod,zum Beispiel: • mit CyanogenMod kann man alles so einstellen wie man will,7_long,Computer,2013-11-27T06:06:48Z,28d34f2e053dee2c0e9399a7924cd978,0:=zum 1:=Beispiel: 2:=• 3:=mit 4:=CyanogenMod 5:=kann 6:=man 7:=alles 8:=so 9:=einstellen 10:=wie 11:=man 12:=will,2,"[[3, 4, 5, 6, 7, 8, 9], [10, 11, 12]]",for example: • with CyanogenMod you can set everything as you want,"['# ::snt for example: • with CyanogenMod you can set everything as you want\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :ARG1 (s / set-02\n                  :ARG0 (y / you)\n                  :ARG1 (e2 / everything)\n                  :ARG2 (w / want-01\n                        :ARG0 y))\n            :instrument (p2 / product\n                  :name (n / name\n                        :op1 ""CyanogenMod""))))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [s, attr-instance, set_02, attr-arg0, [y, attr-instance, you], attr-arg1, [e2, attr-instance, everything], attr-arg2, [w, attr-instance, want_01, attr-arg0, y]], attr-instrument, [p2, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""cyanogenmod""]]]]"
829,829,829,829,1000,9683,cyanogenmod,zum Beispiel: • bei CyanogenMod gibt es eine PrivacyGuard.,8_long,Computer,2013-11-27T06:06:48Z,28d34f2e053dee2c0e9399a7924cd978,0:=zum 1:=Beispiel: 2:=• 3:=bei 4:=CyanogenMod 5:=gibt 6:=es 7:=eine 8:=PrivacyGuard.,1,,for example: • CyanogenMod has a PrivacyGuard.,"['# ::snt for example: • CyanogenMod has a PrivacyGuard.\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (p / product\n                  :name (n / name\n                        :op1 ""CyanogenMod""))\n            :ARG1 p\n            :name n\n            :op1 ""PrivacyGuard""))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""cyanogenmod""]], attr-arg1, p, attr-name, n, attr-op1, ""privacyguard""]]"
830,830,830,830,1002,9685,cyanogenmod,CyanogenMod ist ein Betriebs-system für das Smart-phone.,0_short,Computer,2013-11-27T06:06:48Z,28d34f2e053dee2c0e9399a7924cd978,0:=CyanogenMod 1:=ist 2:=ein 3:=Betriebs-system 4:=für 5:=das 6:=Smart-phone.,2,"[[3], [4, 6]]",CyanogenMod is an operating system for smartphones.,"['# ::snt CyanogenMod is an operating system for smartphones.\n(s / system\n      :ARG0-of (o / operate-01\n            :ARG1 (s2 / smartphone))\n      :domain (p / product\n            :name (n / name\n                  :op1 ""CyanogenMod"")))']","[s, attr-instance, system, attr-arg0_of, [o, attr-instance, operate_01, attr-arg1, [s2, attr-instance, smartphone]], attr-domain, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""cyanogenmod""]]]"
831,831,831,831,1003,9686,cyber-monday,Cyber Monday ist ein Einkaufs-tag im Internet.,0_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Cyber 1:=Monday 2:=ist 3:=ein 4:=Einkaufs-tag 5:=im 6:=Internet.,2,"[[0, 1, 2], [5, 6]]",Cyber ​​Monday is a shopping day on the Internet.,['# ::snt Cyber \u200b\u200bMonday is a shopping day on the Internet.\n(d / day\n      :purpose (s / shop-01\n            :medium (ii / internet))\n      :domain (c / cyber))'],"[d, attr-instance, day, attr-purpose, [s, attr-instance, shop_01, attr-medium, [ii, attr-instance, internet]], attr-domain, [c, attr-instance, cyber]]"
832,832,832,832,1004,9687,cyber-monday,Die Internet-gschäfte verkaufen an diesem Tag manche Sachen billiger.,1_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Internet-gschäfte 2:=verkaufen 3:=an 4:=diesem 5:=Tag 6:=manche 7:=Sachen 8:=billiger.,2,"[[1, 2, 6, 7, 8], [3, 4, 5]]",The online shops sell some things cheaper on this day.,['# ::snt The online shops sell some things cheaper on this day.\n(s / sell-01\n      :ARG0 (s2 / shop\n            :mod (o / online))\n      :ARG1 (t / thing\n            :quant (s3 / some))\n      :time (d / day\n            :mod (t2 / this))\n      :ARG1-of (h / have-degree-91\n            :ARG2 (c / cheap-02\n                  :ARG1 t)\n            :ARG3 (m / more)))'],"[s, attr-instance, sell_01, attr-arg0, [s2, attr-instance, shop, attr-mod, [o, attr-instance, online]], attr-arg1, [t, attr-instance, thing, attr-quant, [s3, attr-instance, some]], attr-time, [d, attr-instance, day, attr-mod, [t2, attr-instance, this]], attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [c, attr-instance, cheap_02, attr-arg1, t], attr-arg3, [m, attr-instance, more]]]"
833,833,833,833,1005,9688,cyber-monday,Man kann für wenig Geld mehr ein-kaufen.,2_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=kann 2:=für 3:=wenig 4:=Geld 5:=mehr 6:=ein-kaufen.,2,"[[0, 1, 5, 6], [2, 3, 4]]",You can buy more for less money.,['# ::snt You can buy more for less money.\n(p / possible-01\n      :ARG1 (b / buy-01\n            :ARG0 (y / you)\n            :ARG1 (m / more)\n            :ARG3 (m2 / money\n                  :mod (l / less))))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, buy_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, more], attr-arg3, [m2, attr-instance, money, attr-mod, [l, attr-instance, less]]]]"
834,834,834,834,1006,9689,cyber-monday,Die Weihnachts-einkaufs-tage fangen mit Black Friday an.,3_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Weihnachts-einkaufs-tage 2:=fangen 3:=mit 4:=Black 5:=Friday 6:=an.,1,,The Christmas shopping days start with Black Friday.,"['# ::snt The Christmas shopping days start with Black Friday.\n(s / start-01\n      :ARG1 (d / day\n            :time-of (s2 / shop-01\n                  :time (f / festival\n                        :name (n / name\n                              :op1 ""Christmas""))))\n      :ARG2 (e / event\n            :name n\n            :op1 ""Black""\n            :op2 ""Friday""))']","[s, attr-instance, start_01, attr-arg1, [d, attr-instance, day, attr-time_of, [s2, attr-instance, shop_01, attr-time, [f, attr-instance, festival, attr-name, [n, attr-instance, name, attr-op1, ""christmas""]]]], attr-arg2, [e, attr-instance, event, attr-name, n, attr-op1, ""black"", attr-op2, ""friday""]]"
835,835,835,835,1007,9690,cyber-monday,Am Montag danach kommt der Cyber Monday.,4_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=Montag 2:=danach 3:=kommt 4:=der 5:=Cyber 6:=Monday.,1,,The following Monday is Cyber ​​Monday.,['# ::snt The following Monday is Cyber \u200b\u200bMonday.\n(d / date-entity\n      :weekday (m / monday)\n      :domain (d2 / date-entity\n            :weekday (m2 / monday)\n            :ARG1-of (f / follow-01)))'],"[d, attr-instance, date_entity, attr-weekday, [m, attr-instance, monday], attr-domain, [d2, attr-instance, date_entity, attr-weekday, [m2, attr-instance, monday], attr-arg1_of, [f, attr-instance, follow_01]]]"
836,836,836,836,1008,9691,cyber-monday,Die Internet-geschäfte verdienen am Cyber Monday mehr Geld.,5_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Internet-geschäfte 2:=verdienen 3:=am 4:=Cyber 5:=Monday 6:=mehr 7:=Geld.,2,"[[1, 2, 6, 7], [3, 4, 5]]",Online stores make more money on Cyber ​​Monday.,['# ::snt Online stores make more money on Cyber \u200b\u200bMonday.\n(m / make-05\n      :ARG0 (s / store\n            :mod (o / online))\n      :ARG1 (m2 / money\n            :quant (m3 / more))\n      :time (d / date-entity\n            :weekday (m4 / monday)\n            :mod (c / cyber)))'],"[m, attr-instance, make_05, attr-arg0, [s, attr-instance, store, attr-mod, [o, attr-instance, online]], attr-arg1, [m2, attr-instance, money, attr-quant, [m3, attr-instance, more]], attr-time, [d, attr-instance, date_entity, attr-weekday, [m4, attr-instance, monday], attr-mod, [c, attr-instance, cyber]]]"
837,837,837,837,1010,9693,cyber-monday,Cyber Monday sind englische Wörter.,7_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Cyber 1:=Monday 2:=sind 3:=englische 4:=Wörter.,1,,Cyber ​​Monday are English words.,"['# ::snt Cyber \u200b\u200bMonday are English words.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English""))\n      :domain (c / cyber\n            :weekday (m / monday)))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-domain, [c, attr-instance, cyber, attr-weekday, [m, attr-instance, monday]]]"
838,838,838,838,1011,9694,cyber-monday,Cyber Monday heißt auf Deutsch Internet Montag.,8_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Cyber 1:=Monday 2:=heißt 3:=auf 4:=Deutsch 5:=Internet 6:=Montag.,1,,Cyber ​​Monday means Internet Monday in German.,"['# ::snt Cyber \u200b\u200bMonday means Internet Monday in German.\n(m / mean-01\n      :ARG1 (d / date-entity\n            :weekday (m2 / monday))\n      :ARG2 (ii / internet)\n      :ARG3 (d2 / date-entity\n            :weekday m2)\n      :medium (l / language\n            :name (n / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [d, attr-instance, date_entity, attr-weekday, [m2, attr-instance, monday]], attr-arg2, [ii, attr-instance, internet], attr-arg3, [d2, attr-instance, date_entity, attr-weekday, m2], attr-medium, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""german""]]]"
839,839,839,839,1012,9695,cyber-monday,So spricht man Cyber Monday: Saiber Mandäi.,9_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=So 1:=spricht 2:=man 3:=Cyber 4:=Monday: 5:=Saiber 6:=Mandäi.,1,,This is how you pronounce Cyber ​​Monday: Saiber Mandäi.,"['# ::snt This is how you pronounce Cyber \u200b\u200bMonday: Saiber Mandäi.\n(p / pronounce-01\n      :ARG0 (y / you)\n      :ARG1 (c / cyber)\n      :ARG2 (p2 / person\n            :name (n / name\n                  :op1 ""Saiber""\n                  :op2 ""Mandäi""))\n      :manner (t / this)\n      :time (d / date-entity\n            :weekday (m / monday)))']","[p, attr-instance, pronounce_01, attr-arg0, [y, attr-instance, you], attr-arg1, [c, attr-instance, cyber], attr-arg2, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""saiber"", attr-op2, ""mandäi""]], attr-manner, [t, attr-instance, this], attr-time, [d, attr-instance, date_entity, attr-weekday, [m, attr-instance, monday]]]"
840,840,840,840,1013,9696,cyber-monday,Cyber Monday ist ein Internet-einkaufs-tag.,0_short,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Cyber 1:=Monday 2:=ist 3:=ein 4:=Internet-einkaufs-tag.,1,,Cyber ​​Monday is an internet shopping day.,['# ::snt Cyber \u200b\u200bMonday is an internet shopping day.\n(d / day\n      :purpose (s / shop-01\n            :medium (ii / internet))\n      :domain (c / cyber))'],"[d, attr-instance, day, attr-purpose, [s, attr-instance, shop_01, attr-medium, [ii, attr-instance, internet]], attr-domain, [c, attr-instance, cyber]]"
841,841,841,841,1014,9697,cyber-monday,Er ist jedes Jahr im November.,1_short,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2019-12-05T21:56:26Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=ist 2:=jedes 3:=Jahr 4:=im 5:=November.,1,,It is in November every year.,['# ::snt It is in November every year.\n(b / be-temporally-at-91\n      :ARG1 (ii / it)\n      :ARG2 (d / date-entity\n            :month 11)\n      :frequency (y / year\n            :mod (e / every)))'],"[b, attr-instance, be_temporally_at_91, attr-arg1, [ii, attr-instance, it], attr-arg2, [d, attr-instance, date_entity, attr-month, 11], attr-frequency, [y, attr-instance, year, attr-mod, [e, attr-instance, every]]]"
842,842,842,842,1017,9700,d-a-ch,"Die Buchstaben D, A und CH sind Abkürzungen für Nationalitätszeichen.",0_long,Geopolitik,2014-02-20T08:33:55Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Die 1:=Buchstaben 2:=D, 3:=A 4:=und 5:=CH 6:=sind 7:=Abkürzungen 8:=für 9:=Nationalitätszeichen.",4,"[[1, 2, 6], [1, 3, 6], [1, 5, 6], [8, 9]]","The letters D, A and CH are abbreviations for nationality symbols.","['# ::snt The letters D, A and CH are abbreviations for nationality symbols.\n(a / alphabetize-01\n      :ARG1 (l / letter\n            :mod (s / string-entity\n                  :value ""D""))\n      :ARG2 (l2 / letter\n            :mod (s2 / string-entity\n                  :value ""A""))\n      :ARG3 (s3 / symbolize-01\n            :ARG2 (n / nationality)))']","[a, attr-instance, alphabetize_01, attr-arg1, [l, attr-instance, letter, attr-mod, [s, attr-instance, string_entity, attr-value, ""d""]], attr-arg2, [l2, attr-instance, letter, attr-mod, [s2, attr-instance, string_entity, attr-value, ""a""]], attr-arg3, [s3, attr-instance, symbolize_01, attr-arg2, [n, attr-instance, nationality]]]"
843,843,843,843,1020,9703,d-a-ch,D-A-CH ist ein Kunstwort.,3_long,Geopolitik,2014-02-20T08:33:55Z,eaab3232dd7a824a6a774fd2f2814e47,0:=D-A-CH 1:=ist 2:=ein 3:=Kunstwort.,1,,D-A-CH is an artificial word.,"['# ::snt D-A-CH is an artificial word.\n(w / word\n      :mod (a / artificial)\n      :domain (s / string-entity\n            :value ""D-A-CH""))']","[w, attr-instance, word, attr-mod, [a, attr-instance, artificial], attr-domain, [s, attr-instance, string_entity, attr-value, ""d_a_ch""]]"
844,844,844,844,1021,9704,d-a-ch,"D-A-CH ist ein kurzes Wort für diese 3 Länder: \newline Deutschland, Österreich, Schweiz",0_short,Geopolitik,2014-02-20T08:33:55Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=D-A-CH 1:=ist 2:=ein 3:=kurzes 4:=Wort 5:=für 6:=diese 7:=3 8:=Länder: 9:=\newline 10:=Deutschland, 11:=Österreich, 12:=Schweiz",4,"[[6, 7, 8], [10], [11], [12]]","D-A-CH is a short word for these 3 countries: \newline Germany, Austria, Switzerland","['# ::snt D-A-CH is a short word for these 3 countries: \\newline Germany, Austria, Switzerland\n(w / word\n      :ARG1-of (s / short-07)\n      :domain (s2 / string-entity\n            :value ""D-A-CH"")\n      :beneficiary (c / country\n            :quant 3\n            :mod (t / this)\n            :ARG2-of (ii / include-91\n                  :ARG1 (a / and\n                        :op1 (c2 / country\n                              :name (n / name\n                                    :op1 ""Germany""))\n                        :op2 (c3 / country\n                              :name (n2 / name\n                                    :op1 ""Austria""))\n                        :op3 (c4 / country\n                              :name (n3 / name\n                                    :op1 ""Switzerland""))))))']","[w, attr-instance, word, attr-arg1_of, [s, attr-instance, short_07], attr-domain, [s2, attr-instance, string_entity, attr-value, ""d_a_ch""], attr-beneficiary, [c, attr-instance, country, attr-quant, 3, attr-mod, [t, attr-instance, this], attr-arg2_of, [ii, attr-instance, include_91, attr-arg1, [a, attr-instance, and, attr-op1, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]], attr-op2, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""austria""]], attr-op3, [c4, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""switzerland""]]]]]]"
845,845,845,845,1022,9705,da-steppt-der-bar,Beispiel: \newline Auf der Geburtstagsfeier steppt der Bär.,0_long,Redewendungen,2012-02-28T08:59:39Z,a9f29492ed8786de5125371472bcc003,0:=Beispiel: 1:=\newline 2:=Auf 3:=der 4:=Geburtstagsfeier 5:=steppt 6:=der 7:=Bär.,2,"[[2, 4], [5, 7]]",Example: \newline The bear is dancing at the birthday party.,"['# ::snt Example:\n(e / exemplify-01)', '# ::snt \\newline The bear is dancing at the birthday party.\n(m / multi-sentence\n      :snt1 (b / broadcast-program\n            :name (n / name\n                  :op1 ""Newline""))\n      :snt2 (d / dance-01\n            :ARG0 (b2 / bear)\n            :location (p / party\n                  :mod (b3 / birthday))))']","[e, attr-instance, exemplify_01]"
846,846,846,846,1023,9706,da-steppt-der-bar,Auf der Geburtstagsfeier ist ganz viel los.,1_long,Redewendungen,2012-02-28T08:59:39Z,a9f29492ed8786de5125371472bcc003,0:=Auf 1:=der 2:=Geburtstagsfeier 3:=ist 4:=ganz 5:=viel 6:=los.,2,"[[0, 2], [3, 4, 5, 6]]",There is a lot going on at the birthday party.,['# ::snt There is a lot going on at the birthday party.\n(g / go-on-15\n      :ARG1 (l / lot)\n      :location (p / party-01\n            :mod (b / birthday)))'],"[g, attr-instance, go_on_15, attr-arg1, [l, attr-instance, lot], attr-location, [p, attr-instance, party_01, attr-mod, [b, attr-instance, birthday]]]"
847,847,847,847,1024,9707,da-steppt-der-bar,Auf der Geburtstagsfeier haben alle gute Laune.,2_long,Redewendungen,2012-02-28T08:59:39Z,a9f29492ed8786de5125371472bcc003,0:=Auf 1:=der 2:=Geburtstagsfeier 3:=haben 4:=alle 5:=gute 6:=Laune.,2,"[[0, 2], [3, 4, 5, 6]]",Everyone is in a good mood at the birthday party.,['# ::snt Everyone is in a good mood at the birthday party.\n(h / have-03\n      :ARG0 (e / everyone)\n      :ARG1 (m / mood\n            :ARG1-of (g / good-02))\n      :location (p / party-01\n            :mod (b / birthday)))'],"[h, attr-instance, have_03, attr-arg0, [e, attr-instance, everyone], attr-arg1, [m, attr-instance, mood, attr-arg1_of, [g, attr-instance, good_02]], attr-location, [p, attr-instance, party_01, attr-mod, [b, attr-instance, birthday]]]"
848,848,848,848,1026,9711,da-steppt-der-bar,"Das heißt, \newline alle haben gute Laune.",2_short,Redewendungen,2012-02-28T08:59:39Z,a9f29492ed8786de5125371472bcc003,"0:=Das 1:=heißt, 2:=\newline 3:=alle 4:=haben 5:=gute 6:=Laune.",1,,That means \newline everyone is in a good mood.,['# ::snt That means \\newline everyone is in a good mood.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (m2 / mood\n            :ARG1-of (g / good-02)\n            :domain (e / everyone))\n      :mod (n / newline))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [m2, attr-instance, mood, attr-arg1_of, [g, attr-instance, good_02], attr-domain, [e, attr-instance, everyone]], attr-mod, [n, attr-instance, newline]]"
849,849,849,849,1027,9712,dabbawala,Dabba-wala ist ein Beruf.,0_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Dabba-wala 1:=ist 2:=ein 3:=Beruf.,1,,Dabba-wala is a profession.,['# ::snt Dabba-wala is a profession.\n(p / profession\n      :domain (d / dabba-wala))'],"[p, attr-instance, profession, attr-domain, [d, attr-instance, dabba_wala]]"
850,850,850,850,1028,9713,dabbawala,Die Essens-dosen nennt man dabbas.,1_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Essens-dosen 2:=nennt 3:=man 4:=dabbas.,1,,The food containers are called dabbas.,['# ::snt The food containers are called dabbas.\n(c / call-01\n      :ARG1 (c2 / container\n            :purpose (f / food))\n      :ARG2 (d / dabba))'],"[c, attr-instance, call_01, attr-arg1, [c2, attr-instance, container, attr-purpose, [f, attr-instance, food]], attr-arg2, [d, attr-instance, dabba]]"
851,851,851,851,1029,9714,dabbawala,Sie sind so ähnlich wie ein Henkel-mann.,2_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=sind 2:=so 3:=ähnlich 4:=wie 5:=ein 6:=Henkel-mann.,1,,They are similar to a Henkel man.,"['# ::snt They are similar to a Henkel man.\n(r / resemble-01\n      :ARG1 (t / they)\n      :ARG2 (m / man\n            :mod (c / company\n                  :name (n / name\n                        :op1 ""Henkel""))))']","[r, attr-instance, resemble_01, attr-arg1, [t, attr-instance, they], attr-arg2, [m, attr-instance, man, attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""henkel""]]]]"
852,852,852,852,1030,9715,dabbawala,Dabba-walas gibt es in Indien.,3_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Dabba-walas 1:=gibt 2:=es 3:=in 4:=Indien.,1,,Dabba-walas exist in India.,"['# ::snt Dabba-walas exist in India.\n(e / exist-01\n      :ARG1 (c / caste\n            :name (n / name\n                  :op1 ""Dabba-Wala""))\n      :location (c2 / country\n            :name (n2 / name\n                  :op1 ""India"")))']","[e, attr-instance, exist_01, attr-arg1, [c, attr-instance, caste, attr-name, [n, attr-instance, name, attr-op1, ""dabba_wala""]], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""india""]]]"
853,853,853,853,1031,9716,dabbawala,Viele gibt es in großen Städten.,4_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Viele 1:=gibt 2:=es 3:=in 4:=großen 5:=Städten.,1,,There are many in big cities.,['# ::snt There are many in big cities.\n(b / be-located-at-91\n      :ARG1 (t / thing\n            :quant (m / many))\n      :ARG2 (c / city\n            :mod (b2 / big)))'],"[b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, thing, attr-quant, [m, attr-instance, many]], attr-arg2, [c, attr-instance, city, attr-mod, [b2, attr-instance, big]]]"
854,854,854,854,1033,9718,dabbawala,Die dabbas haben Farben.,6_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=dabbas 2:=haben 3:=Farben.,1,,The dabbas have colors.,['# ::snt The dabbas have colors.\n(h / have-03\n      :ARG0 (d / dabba)\n      :ARG1 (c / color))'],"[h, attr-instance, have_03, attr-arg0, [d, attr-instance, dabba], attr-arg1, [c, attr-instance, color]]"
855,855,855,855,1034,9719,dabbawala,Und sie haben Zahlen.,7_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=haben 3:=Zahlen.,1,,And they have numbers.,['# ::snt And they have numbers.\n(a / and\n      :op2 (h / have-03\n            :ARG0 (t / they)\n            :ARG1 (n / number)))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [n, attr-instance, number]]]"
856,856,856,856,1035,9720,dabbawala,Und sie haben Buch-staben.,8_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=haben 3:=Buch-staben.,1,,And they have letters.,['# ::snt And they have letters.\n(a / and\n      :op2 (h / have-03\n            :ARG0 (t / they)\n            :ARG1 (l / letter)))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [l, attr-instance, letter]]]"
857,857,857,857,1036,9721,dabbawala,Damit die Dabba-walas wissen wohin das Essen gebracht werden muss.,9_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=die 2:=Dabba-walas 3:=wissen 4:=wohin 5:=das 6:=Essen 7:=gebracht 8:=werden 9:=muss.,2,"[[0, 2, 3], [4, 6, 7, 8, 9]]",So that the Dabba-walas know where the food has to be brought.,"['# ::snt So that the Dabba-walas know where the food has to be brought.\n(c / cause-01\n      :ARG1 (k / know-01\n            :ARG0 (p / person\n                  :mod (o / organization\n                        :name (n / name\n                              :op1 ""Dabba-Walas"")))\n            :ARG1 (t / thing\n                  :location-of (o2 / obligate-01\n                        :ARG2 (b / bring-01\n                              :ARG1 (f / food))))))']","[c, attr-instance, cause_01, attr-arg1, [k, attr-instance, know_01, attr-arg0, [p, attr-instance, person, attr-mod, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""dabba_walas""]]], attr-arg1, [t, attr-instance, thing, attr-location_of, [o2, attr-instance, obligate_01, attr-arg2, [b, attr-instance, bring_01, attr-arg1, [f, attr-instance, food]]]]]]"
858,858,858,858,1037,9722,dabbawala,Die leeren dabbas werden wieder zurück-gebracht.,10_long,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=leeren 2:=dabbas 3:=werden 4:=wieder 5:=zurück-gebracht.,1,,The empty dabbas are brought back.,['# ::snt The empty dabbas are brought back.\n(b / bring-01\n      :ARG1 (d / dabba\n            :ARG1-of (e / empty-02))\n      :ARG3 (b2 / back))'],"[b, attr-instance, bring_01, attr-arg1, [d, attr-instance, dabba, attr-arg1_of, [e, attr-instance, empty_02]], attr-arg3, [b2, attr-instance, back]]"
859,859,859,859,1039,9724,dabbawala,Ein Dabbawala ist eine Person.,0_short,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Dabbawala 2:=ist 3:=eine 4:=Person.,1,,A Dabbawala is a person.,"['# ::snt A Dabbawala is a person.\n(p / person\n      :domain (o / organization\n            :name (n / name\n                  :op1 ""Dabbawala"")))']","[p, attr-instance, person, attr-domain, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""dabbawala""]]]"
860,860,860,860,1040,9725,dabbawala,Ein Dabbawala bringt Essen.,1_short,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Dabbawala 2:=bringt 3:=Essen.,1,,A dabbawala brings food.,['# ::snt A dabbawala brings food.\n(b / bring-01\n      :ARG0 (d / dabbawala)\n      :ARG1 (f / food))'],"[b, attr-instance, bring_01, attr-arg0, [d, attr-instance, dabbawala], attr-arg1, [f, attr-instance, food]]"
861,861,861,861,1041,9726,dabbawala,Man kann eigenes Essen beim Dabba-wala bestellen.,2_short,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=kann 2:=eigenes 3:=Essen 4:=beim 5:=Dabba-wala 6:=bestellen.,3,"[[0, 3, 6], [2, 3], [4, 5]]",You can order your own food from the Dabba-wala.,"['# ::snt You can order your own food from the Dabba-wala.\n(p / possible-01\n      :ARG1 (o / order-02\n            :ARG0 (y / you)\n            :ARG1 (f / food\n                  :poss y)\n            :ARG3 (o2 / organization\n                  :name (n / name\n                        :op1 ""Dabba-wala""))))']","[p, attr-instance, possible_01, attr-arg1, [o, attr-instance, order_02, attr-arg0, [y, attr-instance, you], attr-arg1, [f, attr-instance, food, attr-poss, y], attr-arg3, [o2, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""dabba_wala""]]]]"
862,862,862,862,1043,9728,dabbawala,Ein Dabba-wala holt Essen in der Küche ab.,4_short,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Dabba-wala 2:=holt 3:=Essen 4:=in 5:=der 6:=Küche 7:=ab.,2,"[[1, 2, 3, 7], [4, 6]]",A dabba-wala collects food from the kitchen.,"['# ::snt A dabba-wala collects food from the kitchen.\n(c / collect-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""A""\n                  :op2 ""Dabba-wala""))\n      :ARG1 (f / food)\n      :ARG2 (k / kitchen))']","[c, attr-instance, collect_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""a"", attr-op2, ""dabba_wala""]], attr-arg1, [f, attr-instance, food], attr-arg2, [k, attr-instance, kitchen]]"
863,863,863,863,1044,9729,dabbawala,Und bringt es zum Arbeits-platz.,5_short,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=bringt 2:=es 3:=zum 4:=Arbeits-platz.,1,,And bring it to the workplace.,['# ::snt And bring it to the workplace.\n(a / and\n      :op2 (b / bring-01\n            :ARG1 (ii / it)\n            :ARG2 (w / workplace)))'],"[a, attr-instance, and, attr-op2, [b, attr-instance, bring_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [w, attr-instance, workplace]]]"
864,864,864,864,1045,9730,dabbawala,Das Essen wird in Dosen ver-packt.,6_short,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Essen 2:=wird 3:=in 4:=Dosen 5:=ver-packt.,1,,The food is packed in cans.,['# ::snt The food is packed in cans.\n(p / pack-01\n      :ARG1 (f / food)\n      :ARG2 (c / can))'],"[p, attr-instance, pack_01, attr-arg1, [f, attr-instance, food], attr-arg2, [c, attr-instance, can]]"
865,865,865,865,1046,9731,dabbawala,Damit das Essen warm bleibt.,7_short,Seiten_mit_defekten_Dateilinks|Essen_und_Trinken|Beruf,2019-03-23T09:47:38Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=das 2:=Essen 3:=warm 4:=bleibt.,1,,So that the food stays warm.,['# ::snt So that the food stays warm.\n(c / cause-01\n      :ARG1 (s / stay-01\n            :ARG1 (f / food)\n            :ARG3 (w / warm-07\n                  :ARG1 f)))'],"[c, attr-instance, cause_01, attr-arg1, [s, attr-instance, stay_01, attr-arg1, [f, attr-instance, food], attr-arg3, [w, attr-instance, warm_07, attr-arg1, f]]]"
866,866,866,866,1047,9732,dagger-complex,Die Wörter Dagger Complex kommen aus der englischen Sprache.,0_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Wörter 2:=Dagger 3:=Complex 4:=kommen 5:=aus 6:=der 7:=englischen 8:=Sprache.,2,"[[2], [3]]",The words Dagger Complex come from the English language.,"['# ::snt The words Dagger Complex come from the English language.\n(c / come-03\n      :ARG1 (w / word\n            :mod (c2 / complex\n                  :name (n / name\n                        :op1 ""Dagger""\n                        :op2 ""Complex"")))\n      :ARG2 (l / language\n            :name (n2 / name\n                  :op1 ""English"")))']","[c, attr-instance, come_03, attr-arg1, [w, attr-instance, word, attr-mod, [c2, attr-instance, complex, attr-name, [n, attr-instance, name, attr-op1, ""dagger"", attr-op2, ""complex""]]], attr-arg2, [l, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""english""]]]"
867,867,867,867,1048,9733,dagger-complex,Auf Deutsch heißt Dagger Complex: • Anlage Dolch,1_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Auf 1:=Deutsch 2:=heißt 3:=Dagger 4:=Complex: 5:=• 6:=Anlage 7:=Dolch,1,,"In German, Dagger Complex means: • Dagger Complex","['# ::snt In German, Dagger Complex means: • Dagger Complex\n(m / mean-01\n      :ARG1 (p / product\n            :name (n / name\n                  :op1 ""Dagger""\n                  :op2 ""Complex""))\n      :ARG2 (n2 / name\n            :op1 ""Dagger""\n            :op2 ""Complex"")\n      :medium (l / language\n            :name (n3 / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""dagger"", attr-op2, ""complex""]], attr-arg2, [n2, attr-instance, name, attr-op1, ""dagger"", attr-op2, ""complex""], attr-medium, [l, attr-instance, language, attr-name, [n3, attr-instance, name, attr-op1, ""german""]]]"
868,868,868,868,1049,9734,dagger-complex,Dagger Complex wird so gesprochen:,2_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Dagger 1:=Complex 2:=wird 3:=so 4:=gesprochen:,1,,Dagger Complex is pronounced like this:,"['# ::snt Dagger Complex is pronounced like this:\n(p / pronounce-01\n      :ARG1 (c / complex\n            :name (n / name\n                  :op1 ""Dagger""\n                  :op2 ""Complex""))\n      :ARG1-of (r / resemble-01\n            :ARG2 (t / this)))']","[p, attr-instance, pronounce_01, attr-arg1, [c, attr-instance, complex, attr-name, [n, attr-instance, name, attr-op1, ""dagger"", attr-op2, ""complex""]], attr-arg1_of, [r, attr-instance, resemble_01, attr-arg2, [t, attr-instance, this]]]"
869,869,869,869,1050,9735,dagger-complex,Auf Deutsch heißt Dagger Complex: • Däggar Komplex,3_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Auf 1:=Deutsch 2:=heißt 3:=Dagger 4:=Complex: 5:=• 6:=Däggar 7:=Komplex,1,,"In German, Dagger Complex means: • Däggar Komplex","['# ::snt In German, Dagger Complex means: • Däggar Komplex\n(m / mean-01\n      :ARG1 (c / complex\n            :name (n / name\n                  :op1 ""Dagger""\n                  :op2 ""Complex""))\n      :ARG2 (s / string-entity\n            :value ""Däggar""\n            :op3 ""Komplex"")\n      :medium (l / language\n            :name (n2 / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [c, attr-instance, complex, attr-name, [n, attr-instance, name, attr-op1, ""dagger"", attr-op2, ""complex""]], attr-arg2, [s, attr-instance, string_entity, attr-value, ""däggar"", attr-op3, ""komplex""], attr-medium, [l, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""german""]]]"
870,870,870,870,1052,9738,dagger-complex,Deutschland hat noch 858.000 Euro dazu gegeben.,6_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Deutschland 1:=hat 2:=noch 3:=858.000 4:=Euro 5:=dazu 6:=gegeben.,1,,"Germany added another 858,000 euros.","['# ::snt Germany added another 858,000 euros.\n(a / add-02\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""Germany""))\n      :ARG1 (m / monetary-quantity\n            :quant 858000\n            :unit (e / euro)\n            :mod (a2 / another)))']","[a, attr-instance, add_02, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]], attr-arg1, [m, attr-instance, monetary_quantity, attr-quant, 858000, attr-unit, [e, attr-instance, euro], attr-mod, [a2, attr-instance, another]]]"
871,871,871,871,1054,9740,dagger-complex,Heute ist um das Grundstück ein Zaun mit Stacheldraht.,8_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Heute 1:=ist 2:=um 3:=das 4:=Grundstück 5:=ein 6:=Zaun 7:=mit 8:=Stacheldraht.,3,"[[0], [2, 3, 4, 6], [6, 7, 8]]",Today there is a fence with barbed wire around the property.,['# ::snt Today there is a fence with barbed wire around the property.\n(f / fence\n      :ARG0-of (h / have-03\n            :ARG1 (w / wire\n                  :ARG1-of (b / barbed-02)))\n      :location (a / around\n            :op1 (p / property))\n      :time (t / today))'],"[f, attr-instance, fence, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [w, attr-instance, wire, attr-arg1_of, [b, attr-instance, barbed_02]]], attr-location, [a, attr-instance, around, attr-op1, [p, attr-instance, property]], attr-time, [t, attr-instance, today]]"
872,872,872,872,1055,9741,dagger-complex,Das amerikanische Militär sagt nicht was sie auf dem Grundstück machen.,9_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=amerikanische 2:=Militär 3:=sagt 4:=nicht 5:=was 6:=sie 7:=auf 8:=dem 9:=Grundstück 10:=machen.,3,"[[1, 2, 3, 4], [5, 6, 10], [7, 9]]",The American military does not say what they do on the property.,"['# ::snt The American military does not say what they do on the property.\n(s / say-01\n      :polarity -\n      :ARG0 (m / military\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""America"")))\n      :ARG1 (t / thing\n            :ARG1-of (d / do-02\n                  :ARG0 m\n                  :location (p / property))))']","[s, attr-instance, say_01, attr-polarity, negative, attr-arg0, [m, attr-instance, military, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""america""]]], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, do_02, attr-arg0, m, attr-location, [p, attr-instance, property]]]]"
873,873,873,873,1056,9742,dagger-complex,Manche sagen: • es gibt viele unterirdische Räume auf dem Dagger Complex,10_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Manche 1:=sagen: 2:=• 3:=es 4:=gibt 5:=viele 6:=unterirdische 7:=Räume 8:=auf 9:=dem 10:=Dagger 11:=Complex,3,"[[3, 4, 5, 7], [6, 7], [8, 10, 11]]",Some say: • There are many underground rooms on the Dagger Complex,"['# ::snt Some say: • There are many underground rooms on the Dagger Complex\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (r / room\n            :location (c / complex\n                  :name (n / name\n                        :op1 ""Dagger""\n                        :op2 ""Complex""))\n            :quant (m / many)\n            :location (u / underground)))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [r, attr-instance, room, attr-location, [c, attr-instance, complex, attr-name, [n, attr-instance, name, attr-op1, ""dagger"", attr-op2, ""complex""]], attr-quant, [m, attr-instance, many], attr-location, [u, attr-instance, underground]]]"
874,874,874,874,1057,9743,dagger-complex,Manche sagen: • Früher war hier Technik der Echelon Spinonage Anlage,11_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Manche 1:=sagen: 2:=• 3:=Früher 4:=war 5:=hier 6:=Technik 7:=der 8:=Echelon 9:=Spinonage 10:=Anlage,1,,"Some say: • Previously, this was the technology of the Echelon Spinonage plant","['# ::snt Some say: • Previously, this was the technology of the Echelon Spinonage plant\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (t / technology\n            :domain (t2 / this)\n            :poss (p / plant\n                  :name (n / name\n                        :op1 ""Echelon""\n                        :op2 ""Spinonage""))\n            :time (p2 / previous)))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [t, attr-instance, technology, attr-domain, [t2, attr-instance, this], attr-poss, [p, attr-instance, plant, attr-name, [n, attr-instance, name, attr-op1, ""echelon"", attr-op2, ""spinonage""]], attr-time, [p2, attr-instance, previous]]]"
875,875,875,875,1058,9744,dagger-complex,Manche sagen: • Die NSA hat hier Technik.,12_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Manche 1:=sagen: 2:=• 3:=Die 4:=NSA 5:=hat 6:=hier 7:=Technik.,1,,Some say: • The NSA has technology here.,"['# ::snt Some say: • The NSA has technology here.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (h / have-03\n            :ARG0 (g / government-organization\n                  :name (n / name\n                        :op1 ""NSA""))\n            :ARG1 (t / technology)\n            :location (h2 / here)))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [h, attr-instance, have_03, attr-arg0, [g, attr-instance, government_organization, attr-name, [n, attr-instance, name, attr-op1, ""nsa""]], attr-arg1, [t, attr-instance, technology], attr-location, [h2, attr-instance, here]]]"
876,876,876,876,1060,9746,dagger-complex,"Er hat gesagt,  \newline dass der amerikanische Geheimdienst Daten in Deutschland sammelt.",14_long,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,"0:=Er 1:=hat 2:=gesagt, 3:= 4:=\newline 5:=dass 6:=der 7:=amerikanische 8:=Geheimdienst 9:=Daten 10:=in 11:=Deutschland 12:=sammelt.",3,"[[0, 1, 2], [5, 7, 8, 9, 12], [10, 11]]",He said that the American secret service is collecting data in Germany.,"['# ::snt He said that the American secret service is collecting data in Germany.\n(s / say-01\n      :ARG0 (h / he)\n      :ARG1 (c / collect-01\n            :ARG0 (s2 / service\n                  :mod (s3 / secret)\n                  :mod (c2 / country\n                        :name (n / name\n                              :op1 ""America"")))\n            :ARG1 (d / data)\n            :location (c3 / country\n                  :name (n2 / name\n                        :op1 ""Germany""))))']","[s, attr-instance, say_01, attr-arg0, [h, attr-instance, he], attr-arg1, [c, attr-instance, collect_01, attr-arg0, [s2, attr-instance, service, attr-mod, [s3, attr-instance, secret], attr-mod, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""america""]]], attr-arg1, [d, attr-instance, data], attr-location, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""germany""]]]]"
877,877,877,877,1062,9748,dagger-complex,Dagger Complex ist der Name eines Grundstücks.,0_short,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Dagger 1:=Complex 2:=ist 3:=der 4:=Name 5:=eines 6:=Grundstücks.,1,,Dagger Complex is the name of a property.,"['# ::snt Dagger Complex is the name of a property.\n(n / name-01\n      :ARG1 (c / complex\n            :name (n2 / name\n                  :op1 ""Dagger""\n                  :op2 ""Complex""))\n      :ARG2 (p / property))']","[n, attr-instance, name_01, attr-arg1, [c, attr-instance, complex, attr-name, [n2, attr-instance, name, attr-op1, ""dagger"", attr-op2, ""complex""]], attr-arg2, [p, attr-instance, property]]"
878,878,878,878,1063,9749,dagger-complex,Das Grundstück ist in der Nähe von Darmstadt.,1_short,Ohne_Kategorie,2013-09-01T17:43:42Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=Grundstück 2:=ist 3:=in 4:=der 5:=Nähe 6:=von 7:=Darmstadt.,1,,The property is near Darmstadt.,"['# ::snt The property is near Darmstadt.\n(n / near-02\n      :ARG1 (p / property)\n      :ARG2 (c / city\n            :name (n2 / name\n                  :op1 ""Darmstadt"")))']","[n, attr-instance, near_02, attr-arg1, [p, attr-instance, property], attr-arg2, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""darmstadt""]]]"
879,879,879,879,1066,9752,dalai-lama,Der Dalai Lama ist das Oberhaupt der Buddhisten in Tibet.,0_long,Religion,2008-02-05T15:10:08Z,e3afed0047b08059d0fada10f400c1e5,0:=Der 1:=Dalai 2:=Lama 3:=ist 4:=das 5:=Oberhaupt 6:=der 7:=Buddhisten 8:=in 9:=Tibet.,2,"[[1, 2, 3, 5, 7], [8, 9]]",The Dalai Lama is the head of the Buddhists in Tibet.,"['# ::snt The Dalai Lama is the head of the Buddhists in Tibet.\n(h / head-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Dalai""\n                  :op2 ""Lama""))\n      :ARG1 (r / religious-group\n            :name (n2 / name\n                  :op1 ""Buddhist"")\n            :location (p2 / province\n                  :name (n3 / name\n                        :op1 ""Tibet""))))']","[h, attr-instance, head_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""dalai"", attr-op2, ""lama""]], attr-arg1, [r, attr-instance, religious_group, attr-name, [n2, attr-instance, name, attr-op1, ""buddhist""], attr-location, [p2, attr-instance, province, attr-name, [n3, attr-instance, name, attr-op1, ""tibet""]]]]"
880,880,880,880,1067,9753,dalai-lama,Der Buddhismus ist eine Religion.,1_long,Religion,2008-02-05T15:10:08Z,e3afed0047b08059d0fada10f400c1e5,0:=Der 1:=Buddhismus 2:=ist 3:=eine 4:=Religion.,1,,Buddhism is a religion.,"['# ::snt Buddhism is a religion.\n(r / religion\n      :domain r\n      :name (n / name\n            :op1 ""Buddhism""))']","[r, attr-instance, religion, attr-domain, r, attr-name, [n, attr-instance, name, attr-op1, ""buddhism""]]"
881,881,881,881,1068,9754,dalai-lama,"Wenn man mit dem Dalai Lama spricht, sagt man ""Seine Heiligkeit"" zu ihm.",2_long,Religion,2008-02-05T15:10:08Z,e3afed0047b08059d0fada10f400c1e5,"0:=Wenn 1:=man 2:=mit 3:=dem 4:=Dalai 5:=Lama 6:=spricht, 7:=sagt 8:=man 9:=""Seine 10:=Heiligkeit"" 11:=zu 12:=ihm.",2,"[[0, 1, 2, 4, 5, 6], [7, 8, 9, 10, 11, 12]]","When you speak to the Dalai Lama, you address him as ""His Holiness.""","['# ::snt When you speak to the Dalai Lama, you address him as ""His Holiness.""\n(a / address-01\n      :ARG0 (y / you)\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Dalai""\n                  :op2 ""Lama""))\n      :ARG2 (h / holiness\n            :poss p)\n      :time (s / speak-01\n            :ARG0 y\n            :ARG2 p))']","[a, attr-instance, address_01, attr-arg0, [y, attr-instance, you], attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""dalai"", attr-op2, ""lama""]], attr-arg2, [h, attr-instance, holiness, attr-poss, p], attr-time, [s, attr-instance, speak_01, attr-arg0, y, attr-arg2, p]]"
882,882,882,882,1069,9755,dalai-lama,Dalai Lama ist ein Titel.,0_short,Religion,2008-02-05T15:10:08Z,e3afed0047b08059d0fada10f400c1e5,0:=Dalai 1:=Lama 2:=ist 3:=ein 4:=Titel.,1,,Dalai Lama is a title.,"['# ::snt Dalai Lama is a title.\n(t / title\n      :domain (p / person\n            :name (n / name\n                  :op1 ""Dalai""\n                  :op2 ""Lama"")))']","[t, attr-instance, title, attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""dalai"", attr-op2, ""lama""]]]"
883,883,883,883,1070,9756,dalai-lama,Der Dalai Lama ist das Oberhaupt der Buddhisten.,1_short,Religion,2008-02-05T15:10:08Z,e3afed0047b08059d0fada10f400c1e5,0:=Der 1:=Dalai 2:=Lama 3:=ist 4:=das 5:=Oberhaupt 6:=der 7:=Buddhisten.,1,,The Dalai Lama is the head of the Buddhists.,"['# ::snt The Dalai Lama is the head of the Buddhists.\n(h / head-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Dalai""\n                  :op2 ""Lama""))\n      :ARG1 (r / religious-group\n            :name (n2 / name\n                  :op1 ""Buddhist"")))']","[h, attr-instance, head_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""dalai"", attr-op2, ""lama""]], attr-arg1, [r, attr-instance, religious_group, attr-name, [n2, attr-instance, name, attr-op1, ""buddhist""]]]"
884,884,884,884,1071,9757,dalmatiner,Es gibt verschiedene Hunderassen.,0_long,Tiere,2008-05-26T18:54:01Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Es 1:=gibt 2:=verschiedene 3:=Hunderassen.,1,,There are different breeds of dogs.,['# ::snt There are different breeds of dogs.\n(b / breed\n      :ARG1-of (d / differ-02)\n      :mod (d2 / dog))'],"[b, attr-instance, breed, attr-arg1_of, [d, attr-instance, differ_02], attr-mod, [d2, attr-instance, dog]]"
885,885,885,885,1072,9758,dalmatiner,Eine Hunderasse heißt Dalmatiner.,1_long,Tiere,2008-05-26T18:54:01Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Eine 1:=Hunderasse 2:=heißt 3:=Dalmatiner.,1,,One breed of dog is called Dalmatian.,"['# ::snt One breed of dog is called Dalmatian.\n(c / call-01\n      :ARG1 (b / breed\n            :quant 1\n            :mod (d / dog))\n      :ARG2 (n / name\n            :op1 ""Dalmatian""))']","[c, attr-instance, call_01, attr-arg1, [b, attr-instance, breed, attr-quant, 1, attr-mod, [d, attr-instance, dog]], attr-arg2, [n, attr-instance, name, attr-op1, ""dalmatian""]]"
886,886,886,886,1073,9759,dalmatiner,Ein Dalmatiner ist ein Hund mit weißem Fell.,2_long,Tiere,2008-05-26T18:54:01Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Ein 1:=Dalmatiner 2:=ist 3:=ein 4:=Hund 5:=mit 6:=weißem 7:=Fell.,2,"[[1, 2], [5, 6, 7]]",A Dalmatian is a dog with white fur.,"['# ::snt A Dalmatian is a dog with white fur.\n(d / dog\n      :domain (s / species\n            :name (n / name\n                  :op1 ""Dalmatian""))\n      :ARG1-of (f / fur-01\n            :ARG1-of (w / white-03)))']","[d, attr-instance, dog, attr-domain, [s, attr-instance, species, attr-name, [n, attr-instance, name, attr-op1, ""dalmatian""]], attr-arg1_of, [f, attr-instance, fur_01, attr-arg1_of, [w, attr-instance, white_03]]]"
887,887,887,887,1074,9760,dalmatiner,Auf dem Fell sind schwarze Punkte.,3_long,Tiere,2008-05-26T18:54:01Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Auf 1:=dem 2:=Fell 3:=sind 4:=schwarze 5:=Punkte.,1,,There are black spots on the fur.,['# ::snt There are black spots on the fur.\n(s / spot\n      :ARG1-of (b / black-04)\n      :location (f / fur))'],"[s, attr-instance, spot, attr-arg1_of, [b, attr-instance, black_04], attr-location, [f, attr-instance, fur]]"
888,888,888,888,1075,9761,dalmatiner,Ein Dalmatiner ist ein Hund.,0_short,Tiere,2008-05-26T18:54:01Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Ein 1:=Dalmatiner 2:=ist 3:=ein 4:=Hund.,1,,A Dalmatian is a dog.,"['# ::snt A Dalmatian is a dog.\n(d / dog\n      :domain (a / animal\n            :name (n / name\n                  :op1 ""Dalmatian"")))']","[d, attr-instance, dog, attr-domain, [a, attr-instance, animal, attr-name, [n, attr-instance, name, attr-op1, ""dalmatian""]]]"
889,889,889,889,1076,9762,dampflokomotive,Die erste Lokomotive war mit Dampf.,0_long,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Die 1:=erste 2:=Lokomotive 3:=war 4:=mit 5:=Dampf.,1,,The first locomotive was steam-powered.,['# ::snt The first locomotive was steam-powered.\n(p / power-01\n      :ARG0 (s / steam)\n      :ARG1 s\n      :ARG2 (l / locomotive\n            :ord (o / ordinal-entity\n                  :value 1)))'],"[p, attr-instance, power_01, attr-arg0, [s, attr-instance, steam], attr-arg1, s, attr-arg2, [l, attr-instance, locomotive, attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]]]"
890,890,890,890,1077,9763,dampflokomotive,In der Lokomotive sitzt ein Fahrer und ein Heizer.,1_long,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=In 1:=der 2:=Lokomotive 3:=sitzt 4:=ein 5:=Fahrer 6:=und 7:=ein 8:=Heizer.,2,"[[5], [8]]",There is a driver and a stoker in the locomotive.,['# ::snt There is a driver and a stoker in the locomotive.\n(b / be-located-at-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :ARG0-of (d / drive-01)\n                  :op2-of a)\n            :ARG0-of (s / stoker-01))\n      :ARG2 (l / locomotive))'],"[b, attr-instance, be_located_at_91, attr-arg1, [a, attr-instance, and, attr-op1, [p, attr-instance, person, attr-arg0_of, [d, attr-instance, drive_01], attr-op2_of, a], attr-arg0_of, [s, attr-instance, stoker_01]], attr-arg2, [l, attr-instance, locomotive]]"
891,891,891,891,1078,9764,dampflokomotive,Der Heizer schmeißt die Kohle in den Ofen.,2_long,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Der 1:=Heizer 2:=schmeißt 3:=die 4:=Kohle 5:=in 6:=den 7:=Ofen.,2,"[[1, 2, 4], [5, 7]]",The stoker throws the coal into the stove.,['# ::snt The stoker throws the coal into the stove.\n(t / throw-01\n      :ARG0 (s / stoker)\n      :ARG1 (c / coal)\n      :ARG2 (s2 / stove))'],"[t, attr-instance, throw_01, attr-arg0, [s, attr-instance, stoker], attr-arg1, [c, attr-instance, coal], attr-arg2, [s2, attr-instance, stove]]"
892,892,892,892,1079,9765,dampflokomotive,Die Lokomotive kann man gut erkennen.,3_long,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Die 1:=Lokomotive 2:=kann 3:=man 4:=gut 5:=erkennen.,1,,The locomotive can be clearly seen.,['# ::snt The locomotive can be clearly seen.\n(p / possible-01\n      :ARG1 (s / see-01\n            :ARG1 (e / engine)\n            :ARG1-of (c / clear-06)))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, see_01, attr-arg1, [e, attr-instance, engine], attr-arg1_of, [c, attr-instance, clear_06]]]"
893,893,893,893,1080,9766,dampflokomotive,Über der Lokomotive gibt es eine große Dampf-wolke.,4_long,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Über 1:=der 2:=Lokomotive 3:=gibt 4:=es 5:=eine 6:=große 7:=Dampf-wolke.,3,"[[0, 2], [3, 4, 7], [6, 7]]",There is a large cloud of steam above the locomotive.,['# ::snt There is a large cloud of steam above the locomotive.\n(c / cloud\n      :consist-of (s / steam)\n      :mod (l / large)\n      :location (a / above\n            :op1 (o / otive)))'],"[c, attr-instance, cloud, attr-consist_of, [s, attr-instance, steam], attr-mod, [l, attr-instance, large], attr-location, [a, attr-instance, above, attr-op1, [o, attr-instance, otive]]]"
894,894,894,894,1081,9767,dampflokomotive,Eine Dampf-lokomotive ist ein Fahrzeug auf Schienen.,0_short,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Eine 1:=Dampf-lokomotive 2:=ist 3:=ein 4:=Fahrzeug 5:=auf 6:=Schienen.,2,"[[4], [5, 6]]",A steam locomotive is a vehicle on rails.,['# ::snt A steam locomotive is a vehicle on rails.\n(v / vehicle\n      :location (r / rail)\n      :domain (s / steam-engine))'],"[v, attr-instance, vehicle, attr-location, [r, attr-instance, rail], attr-domain, [s, attr-instance, steam_engine]]"
895,895,895,895,1082,9768,dampflokomotive,Die Lok zieht den Zug.,1_short,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Die 1:=Lok 2:=zieht 3:=den 4:=Zug.,1,,The locomotive pulls the train.,['# ::snt The locomotive pulls the train.\n(p / pull-01\n      :ARG0 (s / steam-engine)\n      :ARG1 (t / train))'],"[p, attr-instance, pull_01, attr-arg0, [s, attr-instance, steam_engine], attr-arg1, [t, attr-instance, train]]"
896,896,896,896,1083,9769,dampflokomotive,Die Dampf-lokomotive fährt mit Wasser-dampt.,2_short,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Die 1:=Dampf-lokomotive 2:=fährt 3:=mit 4:=Wasser-dampt.,1,,The steam locomotive runs on water steam.,['# ::snt The steam locomotive runs on water steam.\n(r / run-04\n      :ARG1 (s / steam\n            :mod (s2 / steam))\n      :prep-on (s3 / steam\n            :mod (w / water)))'],"[r, attr-instance, run_04, attr-arg1, [s, attr-instance, steam, attr-mod, [s2, attr-instance, steam]], attr-prep_on, [s3, attr-instance, steam, attr-mod, [w, attr-instance, water]]]"
897,897,897,897,1084,9770,dampflokomotive,Für den Dampf braucht man Kohle und Wasser.,3_short,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Für 1:=den 2:=Dampf 3:=braucht 4:=man 5:=Kohle 6:=und 7:=Wasser.,2,"[[5], [7]]",Coal and water are needed for steam.,['# ::snt Coal and water are needed for steam.\n(n / need-01\n      :ARG0 (s / steam)\n      :ARG1 (a / and\n            :op1 (c / coal)\n            :op2 (w / water)))'],"[n, attr-instance, need_01, attr-arg0, [s, attr-instance, steam], attr-arg1, [a, attr-instance, and, attr-op1, [c, attr-instance, coal], attr-op2, [w, attr-instance, water]]]"
898,898,898,898,1085,9771,dampflokomotive,Das Wasser wird mit der Kohle im Ofen zu Dampf gemacht.,4_short,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Das 1:=Wasser 2:=wird 3:=mit 4:=der 5:=Kohle 6:=im 7:=Ofen 8:=zu 9:=Dampf 10:=gemacht.,3,"[[1, 2, 8, 9, 10], [3, 5], [6, 7]]",The water is turned into steam with the coal in the oven.,['# ::snt The water is turned into steam with the coal in the oven.\n(t / turn-02\n      :ARG1 (w / water)\n      :ARG2 (s / steam)\n      :instrument (c / coal\n            :location (o / oven)))'],"[t, attr-instance, turn_02, attr-arg1, [w, attr-instance, water], attr-arg2, [s, attr-instance, steam], attr-instrument, [c, attr-instance, coal, attr-location, [o, attr-instance, oven]]]"
899,899,899,899,1086,9772,dampflokomotive,Der Dampf hat große Kraft und bewegt die Räder.,5_short,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,0:=Der 1:=Dampf 2:=hat 3:=große 4:=Kraft 5:=und 6:=bewegt 7:=die 8:=Räder.,3,"[[1, 4], [3], [6, 8]]",The steam has great power and moves the wheels.,['# ::snt The steam has great power and moves the wheels.\n(a / and\n      :op1 (h / have-03\n            :ARG0 (s / steam)\n            :ARG1 (p / power\n                  :mod (g / great)))\n      :op2 (m / move-01\n            :ARG0 s\n            :ARG1 (w / wheel)))'],"[a, attr-instance, and, attr-op1, [h, attr-instance, have_03, attr-arg0, [s, attr-instance, steam], attr-arg1, [p, attr-instance, power, attr-mod, [g, attr-instance, great]]], attr-op2, [m, attr-instance, move_01, attr-arg0, s, attr-arg1, [w, attr-instance, wheel]]]"
900,900,900,900,1087,9773,dampflokomotive,"Er hat genug Kraft, um damit einen Zug zu ziehen.",6_short,Verkehr|Seiten_mit_defekten_Dateilinks,2023-01-30T15:21:08Z,99280970af8d54864c10b22240ecda16,"0:=Er 1:=hat 2:=genug 3:=Kraft, 4:=um 5:=damit 6:=einen 7:=Zug 8:=zu 9:=ziehen.",2,"[[0, 1, 2, 3], [4, 5, 7, 8, 9]]",It has enough power to pull a train.,['# ::snt It has enough power to pull a train.\n(p / power-01\n      :ARG1 (ii / it)\n      :ARG1-of (h / have-quant-91\n            :ARG3 (e / enough)\n            :ARG6 (p2 / pull-01\n                  :ARG0 ii\n                  :ARG1 (t / train))))'],"[p, attr-instance, power_01, attr-arg1, [ii, attr-instance, it], attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg3, [e, attr-instance, enough], attr-arg6, [p2, attr-instance, pull_01, attr-arg0, ii, attr-arg1, [t, attr-instance, train]]]]"
901,901,901,901,1088,9774,dandy-wortklarung,Das Wort Dandy kann verschiedenen Bedeutungen haben.,0_short,Wörter_mit_verschiedenen_Bedeutungen,2018-10-26T12:54:51Z,28d34f2e053dee2c0e9399a7924cd978,0:=Das 1:=Wort 2:=Dandy 3:=kann 4:=verschiedenen 5:=Bedeutungen 6:=haben.,1,,The word dandy can have different meanings.,"['# ::snt The word dandy can have different meanings.\n(p / possible-01\n      :ARG1 (m / mean-01\n            :ARG1 (s / string-entity\n                  :value ""dandy"")\n            :ARG2 (t / thing\n                  :ARG1-of (d / differ-02))))']","[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, mean_01, attr-arg1, [s, attr-instance, string_entity, attr-value, ""dandy""], attr-arg2, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, differ_02]]]]"
902,902,902,902,1089,9775,dandy-wortklarung,Zum Beispiel: • Ein Dandy ist ein Mann der sehr auffallende Kleider anzieht.,1_short,Wörter_mit_verschiedenen_Bedeutungen,2018-10-26T12:54:51Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=Ein 4:=Dandy 5:=ist 6:=ein 7:=Mann 8:=der 9:=sehr 10:=auffallende 11:=Kleider 12:=anzieht.,2,"[[4, 5, 7], [8, 9, 10, 11, 12]]",For example: • A dandy is a man who wears very flashy clothes.,['# ::snt For example: • A dandy is a man who wears very flashy clothes.\n(e / exemplify-01\n      :ARG0 (m / man\n            :ARG0-of (w / wear-01\n                  :ARG1 (c / clothes\n                        :ARG1-of (d / dazzle-01\n                              :degree (v / very))))\n            :domain (d2 / dandy)))'],"[e, attr-instance, exemplify_01, attr-arg0, [m, attr-instance, man, attr-arg0_of, [w, attr-instance, wear_01, attr-arg1, [c, attr-instance, clothes, attr-arg1_of, [d, attr-instance, dazzle_01, attr-degree, [v, attr-instance, very]]]], attr-domain, [d2, attr-instance, dandy]]]"
903,903,903,903,1090,9776,dandy-wortklarung, • Früher gab es eine Auto-marke mit dem Namen Dandy.,2_short,Wörter_mit_verschiedenen_Bedeutungen,2018-10-26T12:54:51Z,28d34f2e053dee2c0e9399a7924cd978,0:= 1:=• 2:=Früher 3:=gab 4:=es 5:=eine 6:=Auto-marke 7:=mit 8:=dem 9:=Namen 10:=Dandy.,1,,• There used to be a car brand called Dandy.,"['# ::snt • There used to be a car brand called Dandy.\n(b / brand\n      :name (n / name\n            :op1 ""Dandy"")\n      :mod (c / car)\n      :time (u / use-03))']","[b, attr-instance, brand, attr-name, [n, attr-instance, name, attr-op1, ""dandy""], attr-mod, [c, attr-instance, car], attr-time, [u, attr-instance, use_03]]"
904,904,904,904,1092,9778,dandy,Ein sehr berühmter Dandy war: \newline Oscar Wilde,1_long,Kleider,2013-12-05T08:56:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=sehr 2:=berühmter 3:=Dandy 4:=war: 5:=\newline 6:=Oscar 7:=Wilde,2,"[[1, 2], [3]]",A very famous dandy was: \newline Oscar Wilde,"['# ::snt A very famous dandy was: \\newline Oscar Wilde\n(d / dandy\n      :ARG1-of (f / fame-01\n            :degree (v / very))\n      :domain (p / person\n            :name (n / name\n                  :op1 ""Oscar""\n                  :op2 ""Wilde"")))']","[d, attr-instance, dandy, attr-arg1_of, [f, attr-instance, fame_01, attr-degree, [v, attr-instance, very]], attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""oscar"", attr-op2, ""wilde""]]]"
905,905,905,905,1093,9779,dandy,Ein Dandy ist ein Mann der sehr auffallende Kleider anzieht.,0_short,Kleider,2013-12-05T08:56:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Dandy 2:=ist 3:=ein 4:=Mann 5:=der 6:=sehr 7:=auffallende 8:=Kleider 9:=anzieht.,2,"[[1, 2, 4], [5, 6, 7, 8, 9]]",A dandy is a man who wears very flashy clothes.,['# ::snt A dandy is a man who wears very flashy clothes.\n(m / man\n      :domain (d / dandy)\n      :ARG0-of (w / wear-01\n            :ARG1 (c / clothes\n                  :ARG1-of (f / flash-02\n                        :degree (v / very)))))'],"[m, attr-instance, man, attr-domain, [d, attr-instance, dandy], attr-arg0_of, [w, attr-instance, wear_01, attr-arg1, [c, attr-instance, clothes, attr-arg1_of, [f, attr-instance, flash_02, attr-degree, [v, attr-instance, very]]]]]"
906,906,906,906,1094,9780,danemark,Dänemark hat eine lange Küste und viele Inseln.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Dänemark 1:=hat 2:=eine 3:=lange 4:=Küste 5:=und 6:=viele 7:=Inseln.,3,"[[0, 1, 4], [3, 4], [0, 1, 6, 7]]",Denmark has a long coastline and many islands.,"['# ::snt Denmark has a long coastline and many islands.\n(h / have-03\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""Denmark""))\n      :ARG1 (a / and\n            :op1 (c2 / coastline\n                  :ARG1-of (l / long-03))\n            :op2 (ii / island\n                  :quant (m / many))))']","[h, attr-instance, have_03, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]], attr-arg1, [a, attr-instance, and, attr-op1, [c2, attr-instance, coastline, attr-arg1_of, [l, attr-instance, long_03]], attr-op2, [ii, attr-instance, island, attr-quant, [m, attr-instance, many]]]]"
907,907,907,907,1096,9782,danemark,Die Flagge von Dänemark ist rot mit einem weißen Kreuz.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Die 1:=Flagge 2:=von 3:=Dänemark 4:=ist 5:=rot 6:=mit 7:=einem 8:=weißen 9:=Kreuz.,3,"[[1, 2, 3], [1, 4, 5], [5, 6, 8, 9]]",The flag of Denmark is red with a white cross.,"['# ::snt The flag of Denmark is red with a white cross.\n(r / red-02\n      :ARG1 (f / flag\n            :poss (c / country\n                  :name (n / name\n                        :op1 ""Denmark""))\n            :part (c2 / cross\n                  :ARG1-of (w / white-02))))']","[r, attr-instance, red_02, attr-arg1, [f, attr-instance, flag, attr-poss, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]], attr-part, [c2, attr-instance, cross, attr-arg1_of, [w, attr-instance, white_02]]]]"
908,908,908,908,1097,9783,danemark,Die Amts-sprache in Dänemark ist Dänisch.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Die 1:=Amts-sprache 2:=in 3:=Dänemark 4:=ist 5:=Dänisch.,1,,The official language in Denmark is Danish.,"['# ::snt The official language in Denmark is Danish.\n(l / language\n      :mod (o / official)\n      :domain (l2 / language\n            :name (n / name\n                  :op1 ""Denmark"")))']","[l, attr-instance, language, attr-mod, [o, attr-instance, official], attr-domain, [l2, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]]]"
909,909,909,909,1098,9784,danemark,Viele Menschen in Dänemark sprechen auch Englisch.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Viele 1:=Menschen 2:=in 3:=Dänemark 4:=sprechen 5:=auch 6:=Englisch.,1,,Many people in Denmark also speak English.,"['# ::snt Many people in Denmark also speak English.\n(s / speak-01\n      :ARG0 (p / person\n            :quant (m / many)\n            :location (c / country\n                  :name (n / name\n                        :op1 ""Denmark"")))\n      :ARG3 (l / language\n            :name (n2 / name\n                  :op1 ""English""))\n      :mod (a / also))']","[s, attr-instance, speak_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]]], attr-arg3, [l, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""english""]], attr-mod, [a, attr-instance, also]]"
910,910,910,910,1099,9785,danemark,Dänemark hat eine viel-fältige Geschichte und Kultur.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Dänemark 1:=hat 2:=eine 3:=viel-fältige 4:=Geschichte 5:=und 6:=Kultur.,2,"[[4], [6]]",Denmark has a diverse history and culture.,"['# ::snt Denmark has a diverse history and culture.\n(h / have-03\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""Denmark""))\n      :ARG1 (a / and\n            :op1 (h2 / history)\n            :op2 (c2 / culture)\n            :mod (d / diverse)))']","[h, attr-instance, have_03, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]], attr-arg1, [a, attr-instance, and, attr-op1, [h2, attr-instance, history], attr-op2, [c2, attr-instance, culture], attr-mod, [d, attr-instance, diverse]]]"
911,911,911,911,1100,9786,danemark,"Dänemark ist bekannt für Schlösser, Kathedralen und Museen.",6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,"0:=Dänemark 1:=ist 2:=bekannt 3:=für 4:=Schlösser, 5:=Kathedralen 6:=und 7:=Museen.",3,"[[4], [5], [7]]","Denmark is known for castles, cathedrals and museums.","['# ::snt Denmark is known for castles, cathedrals and museums.\n(k / know-02\n      :ARG1 (c / country\n            :name (n / name\n                  :op1 ""Denmark""))\n      :ARG2 (a / and\n            :op1 (c2 / castle)\n            :op2 (c3 / cathedrals)\n            :op3 (m / museum)))']","[k, attr-instance, know_02, attr-arg1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]], attr-arg2, [a, attr-instance, and, attr-op1, [c2, attr-instance, castle], attr-op2, [c3, attr-instance, cathedrals], attr-op3, [m, attr-instance, museum]]]"
912,912,912,912,1101,9787,danemark,"Und Dänemark ist berühmt für Fischgerichte und Gebäcke wie ""smørrebrød"".",7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,"0:=Und 1:=Dänemark 2:=ist 3:=berühmt 4:=für 5:=Fischgerichte 6:=und 7:=Gebäcke 8:=wie 9:=""smørrebrød"".",3,"[[1, 2, 3, 4, 5], [1, 2, 3, 4, 7], [7, 8, 9]]","And Denmark is famous for fish dishes and pastries such as ""smørrebrød"".","['# ::snt And Denmark is famous for fish dishes and pastries such as ""smørrebrød"".\n(a / and\n      :op2 (f / fame-01\n            :ARG1 (c / country\n                  :name (n / name\n                        :op1 ""Denmark""))\n            :ARG2 (a2 / and\n                  :op1 (d / dish\n                        :mod (f2 / fish))\n                  :op2 (p / pastry\n                        :example (t / thing\n                              :name (n2 / name\n                                    :op1 ""smørrebrød""))))))']","[a, attr-instance, and, attr-op2, [f, attr-instance, fame_01, attr-arg1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]], attr-arg2, [a2, attr-instance, and, attr-op1, [d, attr-instance, dish, attr-mod, [f2, attr-instance, fish]], attr-op2, [p, attr-instance, pastry, attr-example, [t, attr-instance, thing, attr-name, [n2, attr-instance, name, attr-op1, ""smørrebrød""]]]]]]"
913,913,913,913,1102,9788,danemark,Das Klima in Dänemark ist oft kühl und feucht.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Das 1:=Klima 2:=in 3:=Dänemark 4:=ist 5:=oft 6:=kühl 7:=und 8:=feucht.,2,"[[6], [8]]",The climate in Denmark is often cool and humid.,"['# ::snt The climate in Denmark is often cool and humid.\n(a / and\n      :op1 (c / cool-06\n            :ARG1 (c2 / climate\n                  :location (c3 / country\n                        :name (n / name\n                              :op1 ""Denmark""))))\n      :op2 (h / humid-02\n            :ARG1 c2)\n      :frequency (o / often))']","[a, attr-instance, and, attr-op1, [c, attr-instance, cool_06, attr-arg1, [c2, attr-instance, climate, attr-location, [c3, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]]]], attr-op2, [h, attr-instance, humid_02, attr-arg1, c2], attr-frequency, [o, attr-instance, often]]"
914,914,914,914,1103,9789,danemark,Im Winter fällt oft Schnee und die Temperaturen können unter den Gefrier-punkt fallen.,9_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Im 1:=Winter 2:=fällt 3:=oft 4:=Schnee 5:=und 6:=die 7:=Temperaturen 8:=können 9:=unter 10:=den 11:=Gefrier-punkt 12:=fallen.,3,"[[0, 1], [2, 3, 4], [7, 8, 9, 11, 12]]","In winter, snow often falls and temperatures can fall below freezing.","['# ::snt In winter, snow often falls and temperatures can fall below freezing.\n(a / and\n      :op1 (f / fall-01\n            :ARG1 (s / snow)\n            :frequency (o / often))\n      :op2 (p / possible-01\n            :ARG1 (f2 / fall-01\n                  :ARG1 (t / temperature)\n                  :ARG4 (b / below\n                        :op1 (f3 / freeze-01))))\n      :time (d / date-entity\n            :season (w / winter)))']","[a, attr-instance, and, attr-op1, [f, attr-instance, fall_01, attr-arg1, [s, attr-instance, snow], attr-frequency, [o, attr-instance, often]], attr-op2, [p, attr-instance, possible_01, attr-arg1, [f2, attr-instance, fall_01, attr-arg1, [t, attr-instance, temperature], attr-arg4, [b, attr-instance, below, attr-op1, [f3, attr-instance, freeze_01]]]], attr-time, [d, attr-instance, date_entity, attr-season, [w, attr-instance, winter]]]"
915,915,915,915,1104,9790,danemark,"Im Sommer kann es sehr angenehm sein, mit Temperaturen zwischen 20 und 25 Grad Celsius.",10_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,"0:=Im 1:=Sommer 2:=kann 3:=es 4:=sehr 5:=angenehm 6:=sein, 7:=mit 8:=Temperaturen 9:=zwischen 10:=20 11:=und 12:=25 13:=Grad 14:=Celsius.",4,"[[0, 1], [2, 3, 4, 5, 6], [7, 8, 9, 10, 13, 14], [7, 8, 9, 12, 13, 14]]","In summer it can be very pleasant, with temperatures between 20 and 25 degrees Celsius.","['# ::snt In summer it can be very pleasant, with temperatures between 20 and 25 degrees Celsius.\n(p / possible-01\n      :ARG1 (p2 / pleasant-02\n            :ARG1 (ii / it)\n            :degree (v / very)\n            :time (d / date-entity\n                  :season (s / summer))\n            :accompanier (t / temperature\n                  :quant (b / between\n                        :op1 20\n                        :op2 25\n                        :scale (c / celsius)))))']","[p, attr-instance, possible_01, attr-arg1, [p2, attr-instance, pleasant_02, attr-arg1, [ii, attr-instance, it], attr-degree, [v, attr-instance, very], attr-time, [d, attr-instance, date_entity, attr-season, [s, attr-instance, summer]], attr-accompanier, [t, attr-instance, temperature, attr-quant, [b, attr-instance, between, attr-op1, 20, attr-op2, 25, attr-scale, [c, attr-instance, celsius]]]]]"
916,916,916,916,1105,9791,danemark,"Legoland ist ein bekannter Freizeitpark in Dänemark, der komplett aus Lego-Steinen gebaut ist.",11_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,"0:=Legoland 1:=ist 2:=ein 3:=bekannter 4:=Freizeitpark 5:=in 6:=Dänemark, 7:=der 8:=komplett 9:=aus 10:=Lego-Steinen 11:=gebaut 12:=ist.",4,"[[0, 1, 4], [3, 4], [5, 6], [7, 8, 9, 10, 11, 12]]",Legoland is a famous theme park in Denmark that is built entirely from Lego bricks.,"['# ::snt Legoland is a famous theme park in Denmark that is built entirely from Lego bricks.\n(p / park\n      :name (n / name\n            :op1 ""Legoland"")\n      :mod (t / theme)\n      :ARG1-of (f / fame-01)\n      :location (c / country\n            :name (n2 / name\n                  :op1 ""Denmark""))\n      :ARG1-of (b / build-01\n            :ARG2 (b2 / brick\n                  :mod (p2 / product\n                        :name (n3 / name\n                              :op1 ""Legoland"")))\n            :degree (e / entire)))']","[p, attr-instance, park, attr-name, [n, attr-instance, name, attr-op1, ""legoland""], attr-mod, [t, attr-instance, theme], attr-arg1_of, [f, attr-instance, fame_01], attr-location, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""denmark""]], attr-arg1_of, [b, attr-instance, build_01, attr-arg2, [b2, attr-instance, brick, attr-mod, [p2, attr-instance, product, attr-name, [n3, attr-instance, name, attr-op1, ""legoland""]]], attr-degree, [e, attr-instance, entire]]]"
917,917,917,917,1106,9792,danemark,Die Währung in Dänemark ist die dänische Krone.,12_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Die 1:=Währung 2:=in 3:=Dänemark 4:=ist 5:=die 6:=dänische 7:=Krone.,1,,The currency in Denmark is the Danish krone.,"['# ::snt The currency in Denmark is the Danish krone.\n(c / currency\n      :mod (c2 / country\n            :name (n / name\n                  :op1 ""Denmark""))\n      :domain c\n      :mod c2)']","[c, attr-instance, currency, attr-mod, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]], attr-domain, c, attr-mod, c2]"
918,918,918,918,1107,9793,danemark,Dänemark ist ein kleines Land im Norden von Europa.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Dänemark 1:=ist 2:=ein 3:=kleines 4:=Land 5:=im 6:=Norden 7:=von 8:=Europa.,4,"[[0, 1, 4], [3, 4], [4, 5, 6], [6, 7, 8]]",Denmark is a small country in the north of Europe.,"['# ::snt Denmark is a small country in the north of Europe.\n(c / country\n      :mod (s / small)\n      :domain (c2 / country\n            :name (n / name\n                  :op1 ""Denmark""))\n      :location (n2 / north\n            :part-of (c3 / continent\n                  :name (n3 / name\n                        :op1 ""Europe""))))']","[c, attr-instance, country, attr-mod, [s, attr-instance, small], attr-domain, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]], attr-location, [n2, attr-instance, north, attr-part_of, [c3, attr-instance, continent, attr-name, [n3, attr-instance, name, attr-op1, ""europe""]]]]"
919,919,919,919,1108,9794,danemark,Dänemark ist auf einer Halb-insel.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Dänemark 1:=ist 2:=auf 3:=einer 4:=Halb-insel.,1,,Denmark is on a peninsula.,"['# ::snt Denmark is on a peninsula.\n(p / peninsula\n      :location-of (c / country\n            :name (n / name\n                  :op1 ""Denmark"")))']","[p, attr-instance, peninsula, attr-location_of, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""denmark""]]]"
920,920,920,920,1109,9795,danemark,Die Halb-insel heißt Jütland.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Die 1:=Halb-insel 2:=heißt 3:=Jütland.,1,,The peninsula is called Jutland.,"['# ::snt The peninsula is called Jutland.\n(c / call-01\n      :ARG1 (p / peninsula)\n      :ARG2 (c2 / country-region\n            :name (n / name\n                  :op1 ""Jutland"")))']","[c, attr-instance, call_01, attr-arg1, [p, attr-instance, peninsula], attr-arg2, [c2, attr-instance, country_region, attr-name, [n, attr-instance, name, attr-op1, ""jutland""]]]"
921,921,921,921,1110,9796,danemark,Die Hauptstadt von Dänemark heißt Kopenhagen.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Die 1:=Hauptstadt 2:=von 3:=Dänemark 4:=heißt 5:=Kopenhagen.,1,,The capital of Denmark is called Copenhagen.,"['# ::snt The capital of Denmark is called Copenhagen.\n(c / call-01\n      :ARG1 (c2 / city\n            :name (n / name\n                  :op1 ""Copenhagen"")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c3 / country\n                        :name (n2 / name\n                              :op1 ""Denmark""))\n                  :ARG2 (c4 / capital))))']","[c, attr-instance, call_01, attr-arg1, [c2, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""copenhagen""], attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg1, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""denmark""]], attr-arg2, [c4, attr-instance, capital]]]]"
922,922,922,922,1111,9797,danemark,Kopenhagen liegt an der Ost-see.,4_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Kopenhagen 1:=liegt 2:=an 3:=der 4:=Ost-see.,1,,Copenhagen is located on the Baltic Sea.,"['# ::snt Copenhagen is located on the Baltic Sea.\n(b / be-located-at-91\n      :ARG1 (c / city\n            :name (n / name\n                  :op1 ""Copenhagen""))\n      :ARG2 (s / sea\n            :name (n2 / name\n                  :op1 ""Baltic""\n                  :op2 ""Sea"")))']","[b, attr-instance, be_located_at_91, attr-arg1, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""copenhagen""]], attr-arg2, [s, attr-instance, sea, attr-name, [n2, attr-instance, name, attr-op1, ""baltic"", attr-op2, ""sea""]]]"
923,923,923,923,1112,9798,danemark,Zum Königreich Dänemark gehören 3 Länder.,5_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-04-04T08:35:33Z,f3d525674a904e48b4a41a13ef2a54a5,0:=Zum 1:=Königreich 2:=Dänemark 3:=gehören 4:=3 5:=Länder.,1,,The Kingdom of Denmark consists of 3 countries.,"['# ::snt The Kingdom of Denmark consists of 3 countries.\n(c / consist-01\n      :ARG1 (k / kingdom\n            :poss (c2 / country\n                  :name (n / name\n                        :op1 ""Kingdom""\n                        :op2 ""of""\n                        :op3 ""Denmark"")))\n      :ARG2 (c3 / country\n            :quant 3))']","[c, attr-instance, consist_01, attr-arg1, [k, attr-instance, kingdom, attr-poss, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""kingdom"", attr-op2, ""of"", attr-op3, ""denmark""]]], attr-arg2, [c3, attr-instance, country, attr-quant, 3]]"
924,924,924,924,1117,9803,das-a-und-o,So spricht Gott der Herr.,1_long,Redewendungen|Seiten_mit_defekten_Dateilinks,2021-12-29T12:53:48Z,e800bebc9060331edfac65e663a55570,0:=So 1:=spricht 2:=Gott 3:=der 4:=Herr.,2,"[[0, 1], [4]]",Thus says the Lord God.,"['# ::snt Thus says the Lord God.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lord""\n                  :op2 ""God""))\n      :ARG1 (t / thus))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lord"", attr-op2, ""god""]], attr-arg1, [t, attr-instance, thus]]"
925,925,925,925,1118,9804,das-a-und-o,Der Bibel-vers steht in Die Offenbarung des Johannes.,2_long,Redewendungen|Seiten_mit_defekten_Dateilinks,2021-12-29T12:53:48Z,e800bebc9060331edfac65e663a55570,0:=Der 1:=Bibel-vers 2:=steht 3:=in 4:=Die 5:=Offenbarung 6:=des 7:=Johannes.,1,,The Bible verse is in The Revelation of John.,"['# ::snt The Bible verse is in The Revelation of John.\n(v / verse\n      :mod (b / book\n            :name (n / name\n                  :op1 ""Bible""))\n      :location (b2 / book\n            :name (n2 / name\n                  :op1 ""Revelation""\n                  :op2 ""of""\n                  :op3 ""John"")))']","[v, attr-instance, verse, attr-mod, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""bible""]], attr-location, [b2, attr-instance, book, attr-name, [n2, attr-instance, name, attr-op1, ""revelation"", attr-op2, ""of"", attr-op3, ""john""]]]"
926,926,926,926,1124,9810,das-bildnis-des-dorian-gray,Das Bildnis des Dorian Gray ist ein Roman.,0_short,Lesen_und_Bücher,2022-01-22T14:04:56Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=Bildnis 2:=des 3:=Dorian 4:=Gray 5:=ist 6:=ein 7:=Roman.,1,,The Picture of Dorian Gray is a novel.,"['# ::snt The Picture of Dorian Gray is a novel.\n(n / novel\n      :domain (p / picture\n            :poss (p2 / person\n                  :name (n2 / name\n                        :op1 ""Dorian""\n                        :op2 ""Gray""))))']","[n, attr-instance, novel, attr-domain, [p, attr-instance, picture, attr-poss, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""dorian"", attr-op2, ""gray""]]]]"
927,927,927,927,1125,9811,das-bildnis-des-dorian-gray,Oscar Wilde hat den Roman geschrieben.,1_short,Lesen_und_Bücher,2022-01-22T14:04:56Z,e800bebc9060331edfac65e663a55570,0:=Oscar 1:=Wilde 2:=hat 3:=den 4:=Roman 5:=geschrieben.,1,,Oscar Wilde wrote the novel.,"['# ::snt Oscar Wilde wrote the novel.\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Oscar""\n                  :op2 ""Wilde""))\n      :ARG1 (n2 / novel))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""oscar"", attr-op2, ""wilde""]], attr-arg1, [n2, attr-instance, novel]]"
928,928,928,928,1126,9812,das-bildnis-des-dorian-gray,Im Jahr 1890: \newline Erscheint die erste Ausgabe.,2_short,Lesen_und_Bücher,2022-01-22T14:04:56Z,e800bebc9060331edfac65e663a55570,0:=Im 1:=Jahr 2:=1890: 3:=\newline 4:=Erscheint 5:=die 6:=erste 7:=Ausgabe.,2,"[[0, 1, 2], [4, 6, 7]]",In 1890: \newline The first edition appears.,"['# ::snt In 1890:\n(d / date-entity\n      :year 1890)', '# ::snt \\newline The first edition appears.\n(a / appear-01\n      :ARG1 (e / edition\n            :ord (o / ordinal-entity\n                  :value 1))\n      :mod (n / newsline))']","[d, attr-instance, date_entity, attr-year, 1890]"
929,929,929,929,1128,9814,das-bildnis-des-dorian-gray,Im Jahr 1891: \newline Kommt der Roman als Buch heraus.,4_short,Lesen_und_Bücher,2022-01-22T14:04:56Z,e800bebc9060331edfac65e663a55570,0:=Im 1:=Jahr 2:=1891: 3:=\newline 4:=Kommt 5:=der 6:=Roman 7:=als 8:=Buch 9:=heraus.,3,"[[0, 1, 2], [4, 6, 9], [7, 8]]",In 1891: \newline The novel is published as a book.,"['# ::snt In 1891:\n(d / date-entity\n      :year 1891)', '# ::snt \\newline The novel is published as a book.\n(p / publish-01\n      :ARG1 (n / novel)\n      :prep-as (b / book)\n      :ARG1-of (n2 / newline-00))']","[d, attr-instance, date_entity, attr-year, 1891]"
930,930,930,930,1129,9815,das-bildnis-des-dorian-gray,Seiner-zeit gilt der Roman als: \newline Roman mit schlechtem Ruf.,5_short,Lesen_und_Bücher,2022-01-22T14:04:56Z,e800bebc9060331edfac65e663a55570,0:=Seiner-zeit 1:=gilt 2:=der 3:=Roman 4:=als: 5:=\newline 6:=Roman 7:=mit 8:=schlechtem 9:=Ruf.,2,"[[0], [1, 3, 4, 6, 7, 8, 9]]","At the time, the novel was considered a: \newline novel with a bad reputation.","['# ::snt At the time, the novel was considered a: \\newline novel with a bad reputation.\n(c / consider-01\n      :ARG1 (n / novel\n            :domain (n2 / novel\n                  :mod (n3 / newline)\n                  :ARG1-of (r / repute-01\n                        :ARG2 (b / bad-07))))\n      :time (t / time))']","[c, attr-instance, consider_01, attr-arg1, [n, attr-instance, novel, attr-domain, [n2, attr-instance, novel, attr-mod, [n3, attr-instance, newline], attr-arg1_of, [r, attr-instance, repute_01, attr-arg2, [b, attr-instance, bad_07]]]], attr-time, [t, attr-instance, time]]"
931,931,931,931,1130,9816,das-bildnis-des-dorian-gray,Darum stellt man Wilde vor Gericht.,6_short,Lesen_und_Bücher,2022-01-22T14:04:56Z,e800bebc9060331edfac65e663a55570,0:=Darum 1:=stellt 2:=man 3:=Wilde 4:=vor 5:=Gericht.,1,,That's why savages are put on trial.,"[""# ::snt That's why savages are put on trial.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (t2 / try-02\n            :ARG1 (p / person\n                  :mod (s / savage))))""]","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [t2, attr-instance, try_02, attr-arg1, [p, attr-instance, person, attr-mod, [s, attr-instance, savage]]]]"
932,932,932,932,1131,9817,das-bildnis-des-dorian-gray,"Man beschuldigt ihn, \newline Sex mit einem Mann zu haben.",7_short,Lesen_und_Bücher,2022-01-22T14:04:56Z,e800bebc9060331edfac65e663a55570,"0:=Man 1:=beschuldigt 2:=ihn, 3:=\newline 4:=Sex 5:=mit 6:=einem 7:=Mann 8:=zu 9:=haben.",3,"[[0, 1, 2], [4, 8, 9], [5, 7]]",He is accused of having \newline sex with a man.,['# ::snt He is accused of having \\newline sex with a man.\n(a / accuse-01\n      :ARG1 (h / he)\n      :ARG2 (s / sex-01\n            :ARG0 h\n            :ARG1 (m / man)\n            :mod (o / on-line)))'],"[a, attr-instance, accuse_01, attr-arg1, [h, attr-instance, he], attr-arg2, [s, attr-instance, sex_01, attr-arg0, h, attr-arg1, [m, attr-instance, man], attr-mod, [o, attr-instance, on_line]]]"
933,933,933,933,1132,9818,das-blaue-sofa,Das blaue Sofa gibt es auf Buchmessen.,0_long,Ohne_Kategorie,2014-10-08T15:05:20Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=blaue 2:=Sofa 3:=gibt 4:=es 5:=auf 6:=Buchmessen.,2,"[[1], [3, 4, 5, 6]]",The blue sofa is available at book fairs.,['# ::snt The blue sofa is available at book fairs.\n(a / available-02\n      :ARG2 (c / couch\n            :mod (b / blue))\n      :location (f / fair\n            :mod (b2 / book)))'],"[a, attr-instance, available_02, attr-arg2, [c, attr-instance, couch, attr-mod, [b, attr-instance, blue]], attr-location, [f, attr-instance, fair, attr-mod, [b2, attr-instance, book]]]"
934,934,934,934,1133,9819,das-blaue-sofa,Autoren reden über ihre neuen Bücher.,1_long,Ohne_Kategorie,2014-10-08T15:05:20Z,af28a20dfb151690981ee13d72ce655c,0:=Autoren 1:=reden 2:=über 3:=ihre 4:=neuen 5:=Bücher.,3,"[[0, 1, 2, 5], [3], [4]]",Authors talk about their new books.,['# ::snt Authors talk about their new books.\n(t / talk-01\n      :ARG0 (p / person\n            :ARG0-of (a / author-01))\n      :ARG1 (b / book\n            :ARG1-of (n / new-01)\n            :poss p))'],"[t, attr-instance, talk_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [a, attr-instance, author_01]], attr-arg1, [b, attr-instance, book, attr-arg1_of, [n, attr-instance, new_01], attr-poss, p]]"
935,935,935,935,1134,9820,das-blaue-sofa,Ein Gespräch dauert 30 Minuten.,2_long,Ohne_Kategorie,2014-10-08T15:05:20Z,af28a20dfb151690981ee13d72ce655c,0:=Ein 1:=Gespräch 2:=dauert 3:=30 4:=Minuten.,1,,A conversation lasts 30 minutes.,['# ::snt A conversation lasts 30 minutes.\n(l / last-01\n      :ARG1 (c / converse-01)\n      :ARG2 (t / temporal-quantity\n            :quant 30\n            :unit (m / minute)))'],"[l, attr-instance, last_01, attr-arg1, [c, attr-instance, converse_01], attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 30, attr-unit, [m, attr-instance, minute]]]"
936,936,936,936,1135,9821,das-blaue-sofa,Das blaue Sofa ist ein Sofa.,0_short,Ohne_Kategorie,2014-10-08T15:05:20Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=blaue 2:=Sofa 3:=ist 4:=ein 5:=Sofa.,1,,The blue sofa is a sofa.,['# ::snt The blue sofa is a sofa.\n(c / couch\n      :mod (b / blue)\n      :domain (s / sofa))'],"[c, attr-instance, couch, attr-mod, [b, attr-instance, blue], attr-domain, [s, attr-instance, sofa]]"
937,937,937,937,1136,9822,das-blaue-sofa,Auf dem Sofa sitzen bekannte Personen.,1_short,Ohne_Kategorie,2014-10-08T15:05:20Z,af28a20dfb151690981ee13d72ce655c,0:=Auf 1:=dem 2:=Sofa 3:=sitzen 4:=bekannte 5:=Personen.,2,"[[0, 2, 3, 5], [4]]",Famous people are sitting on the sofa.,['# ::snt Famous people are sitting on the sofa.\n(s / sit-01\n      :ARG1 (p / person\n            :mod (f / fame))\n      :ARG2 (s2 / sofa))'],"[s, attr-instance, sit_01, attr-arg1, [p, attr-instance, person, attr-mod, [f, attr-instance, fame]], attr-arg2, [s2, attr-instance, sofa]]"
938,938,938,938,1139,9825,das-feuerzeug,Das Feuerzeug ist ein Märchen.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-17T10:35:21Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=Feuerzeug 2:=ist 3:=ein 4:=Märchen.,1,,The lighter is a fairy tale.,['# ::snt The lighter is a fairy tale.\n(t / tale\n      :mod (f / fairy)\n      :domain (l / lighter))'],"[t, attr-instance, tale, attr-mod, [f, attr-instance, fairy], attr-domain, [l, attr-instance, lighter]]"
939,939,939,939,1140,9826,das-feuerzeug,Hans Christian Andersen schreibt es im Jahr 1835.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-17T10:35:21Z,e800bebc9060331edfac65e663a55570,0:=Hans 1:=Christian 2:=Andersen 3:=schreibt 4:=es 5:=im 6:=Jahr 7:=1835.,2,"[[0, 1, 2, 3, 4], [5, 6, 7]]",Hans Christian Andersen wrote it in 1835.,"['# ::snt Hans Christian Andersen wrote it in 1835.\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Hans""\n                  :op2 ""Christian""\n                  :op3 ""Anders""))\n      :ARG1 (ii / it)\n      :time (d / date-entity\n            :year 1835))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""hans"", attr-op2, ""christian"", attr-op3, ""anders""]], attr-arg1, [ii, attr-instance, it], attr-time, [d, attr-instance, date_entity, attr-year, 1835]]"
940,940,940,940,1141,9827,das-gespenst-von-canterville,Das Gespenst von Canterville ist eine Geschichte.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-21T16:42:12Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=Gespenst 2:=von 3:=Canterville 4:=ist 5:=eine 6:=Geschichte.,1,,The Canterville Ghost is a story.,"['# ::snt The Canterville Ghost is a story.\n(s / story\n      :domain (w / work-of-art\n            :name (n / name\n                  :op1 ""The""\n                  :op2 ""Canterville""\n                  :op3 ""Ghost"")))']","[s, attr-instance, story, attr-domain, [w, attr-instance, work_of_art, attr-name, [n, attr-instance, name, attr-op1, ""the"", attr-op2, ""canterville"", attr-op3, ""ghost""]]]"
941,941,941,941,1142,9828,das-gespenst-von-canterville,Es ist die erste Geschichte von Oscar Wild.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-21T16:42:12Z,e800bebc9060331edfac65e663a55570,0:=Es 1:=ist 2:=die 3:=erste 4:=Geschichte 5:=von 6:=Oscar 7:=Wild.,2,"[[1, 2, 4, 5, 6, 7], [3]]",It is the first story by Oscar Wilde.,"['# ::snt It is the first story by Oscar Wilde.\n(s / story\n      :ord (o / ordinal-entity\n            :value 1)\n      :source (p / person\n            :name (n / name\n                  :op1 ""Oscar""\n                  :op2 ""Wilde""))\n      :domain (ii / it))']","[s, attr-instance, story, attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1], attr-source, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""oscar"", attr-op2, ""wilde""]], attr-domain, [ii, attr-instance, it]]"
942,942,942,942,1143,9829,das-gespenst-von-canterville,Im Jahr 1887: \newline Steht diese Geschichte in einer Londoner Zeitschrift.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-21T16:42:12Z,e800bebc9060331edfac65e663a55570,0:=Im 1:=Jahr 2:=1887: 3:=\newline 4:=Steht 5:=diese 6:=Geschichte 7:=in 8:=einer 9:=Londoner 10:=Zeitschrift.,3,"[[0, 1, 2], [4, 5, 6, 7, 10], [9, 10]]",In 1887: \newline This story appears in a London magazine.,"['# ::snt In 1887:\n(d / date-entity\n      :year 1887)', '# ::snt \\newline This story appears in a London magazine.\n(a / appear-01\n      :ARG1 (s / story\n            :mod (t / this))\n      :location (m / magazine\n            :location (c / city\n                  :name (n / name\n                        :op1 ""London"")))\n      :mod (n2 / newsline))']","[d, attr-instance, date_entity, attr-year, 1887]"
943,943,943,943,1144,9830,das-hassliche-entlein,Das hässliche Entlein ist ein Märchen.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-15T15:29:20Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=hässliche 2:=Entlein 3:=ist 4:=ein 5:=Märchen.,1,,The ugly duckling is a fairy tale.,['# ::snt The ugly duckling is a fairy tale.\n(t / tale\n      :mod (f / fairy)\n      :domain (d / duckling\n            :mod (u / ugly)))'],"[t, attr-instance, tale, attr-mod, [f, attr-instance, fairy], attr-domain, [d, attr-instance, duckling, attr-mod, [u, attr-instance, ugly]]]"
944,944,944,944,1145,9831,das-hassliche-entlein,Hans Christian Andersen schreibt es im Jahr 1843.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-15T15:29:20Z,e800bebc9060331edfac65e663a55570,0:=Hans 1:=Christian 2:=Andersen 3:=schreibt 4:=es 5:=im 6:=Jahr 7:=1843.,2,"[[0, 1, 2, 3, 4], [5, 6, 7]]",Hans Christian Andersen wrote it in 1843.,"['# ::snt Hans Christian Andersen wrote it in 1843.\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Hans""\n                  :op2 ""Christian""\n                  :op3 ""Anders""))\n      :ARG1 (ii / it)\n      :time (d / date-entity\n            :year 1843))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""hans"", attr-op2, ""christian"", attr-op3, ""anders""]], attr-arg1, [ii, attr-instance, it], attr-time, [d, attr-instance, date_entity, attr-year, 1843]]"
945,945,945,945,1146,9832,das-kalte-herz,Das kalte Herz ist ein Märchen.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-23T16:43:28Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=kalte 2:=Herz 3:=ist 4:=ein 5:=Märchen.,1,,The cold heart is a fairy tale.,['# ::snt The cold heart is a fairy tale.\n(t / tale\n      :mod (f / fairy)\n      :domain (h / heart\n            :ARG1-of (c / cold-01)))'],"[t, attr-instance, tale, attr-mod, [f, attr-instance, fairy], attr-domain, [h, attr-instance, heart, attr-arg1_of, [c, attr-instance, cold_01]]]"
946,946,946,946,1147,9833,das-kalte-herz,Wilhelm Hauff schreibt das Märchen.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-23T16:43:28Z,e800bebc9060331edfac65e663a55570,0:=Wilhelm 1:=Hauff 2:=schreibt 3:=das 4:=Märchen.,1,,Wilhelm Hauff writes the fairy tale.,"['# ::snt Wilhelm Hauff writes the fairy tale.\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Wilhelm""\n                  :op2 ""Hauff""))\n      :ARG1 (t / tale\n            :mod (f / fairy)))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""wilhelm"", attr-op2, ""hauff""]], attr-arg1, [t, attr-instance, tale, attr-mod, [f, attr-instance, fairy]]]"
947,947,947,947,1150,9836,das-kleine-madchen-mit-den-schwefelholzern,Hans Christian Andersen schreibt es im Jahr 1845.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-16T11:52:05Z,e800bebc9060331edfac65e663a55570,0:=Hans 1:=Christian 2:=Andersen 3:=schreibt 4:=es 5:=im 6:=Jahr 7:=1845.,2,"[[0, 1, 2, 3, 4], [5, 6, 7]]",Hans Christian Andersen wrote it in 1845.,"['# ::snt Hans Christian Andersen wrote it in 1845.\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Hans""\n                  :op2 ""Christian""\n                  :op3 ""Anders""))\n      :ARG1 (ii / it)\n      :time (d / date-entity\n            :year 1845))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""hans"", attr-op2, ""christian"", attr-op3, ""anders""]], attr-arg1, [ii, attr-instance, it], attr-time, [d, attr-instance, date_entity, attr-year, 1845]]"
948,948,948,948,1151,9837,das-tapfere-schneiderlein,Das tapfere Schneiderlein ist ein Märchen.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-18T21:53:31Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=tapfere 2:=Schneiderlein 3:=ist 4:=ein 5:=Märchen.,1,,The Brave Little Tailor is a fairy tale.,"['# ::snt The Brave Little Tailor is a fairy tale.\n(t / tale\n      :mod (f / fairy)\n      :domain (b / book\n            :name (n / name\n                  :op1 ""The""\n                  :op2 ""Brave""\n                  :op3 ""Little""\n                  :op4 ""Tailor"")))']","[t, attr-instance, tale, attr-mod, [f, attr-instance, fairy], attr-domain, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""the"", attr-op2, ""brave"", attr-op3, ""little"", attr-op4, ""tailor""]]]"
949,949,949,949,1152,9838,das-tapfere-schneiderlein,Die Brüder Grimm machen das Märchen bekannt.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-18T21:53:31Z,e800bebc9060331edfac65e663a55570,0:=Die 1:=Brüder 2:=Grimm 3:=machen 4:=das 5:=Märchen 6:=bekannt.,1,,The Brothers Grimm made the fairy tale famous.,"['# ::snt The Brothers Grimm made the fairy tale famous.\n(m / make-02\n      :ARG0 (w / work-of-art\n            :name (n / name\n                  :op1 ""The""\n                  :op2 ""Brothers""\n                  :op3 ""G Grimm""))\n      :ARG1 (f / fame-01\n            :ARG1 (t / tale\n                  :mod (f2 / fairy))))']","[m, attr-instance, make_02, attr-arg0, [w, attr-instance, work_of_art, attr-name, [n, attr-instance, name, attr-op1, ""the"", attr-op2, ""brothers"", attr-op3, ""g, grimm""]], attr-arg1, [f, attr-instance, fame_01, attr-arg1, [t, attr-instance, tale, attr-mod, [f2, attr-instance, fairy]]]]"
950,950,950,950,1153,9839,das-wort-zum-sonntag,Die Sendung geht 4 Minuten lang.,0_long,Seiten_mit_defekten_Dateilinks|Radio_und_Fernsehen|Religion,2014-07-07T12:00:05Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Sendung 2:=geht 3:=4 4:=Minuten 5:=lang.,1,,The show lasts 4 minutes.,['# ::snt The show lasts 4 minutes.\n(l / last-01\n      :ARG1 (s / show-04)\n      :ARG2 (t / temporal-quantity\n            :quant 4\n            :unit (m / minute)))'],"[l, attr-instance, last_01, attr-arg1, [s, attr-instance, show_04], attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 4, attr-unit, [m, attr-instance, minute]]]"
951,951,951,951,1156,9842,das-wort-zum-sonntag,Aktuell sprechen 8 Personen (3) das Wort zum Sonntag.,3_long,Seiten_mit_defekten_Dateilinks|Radio_und_Fernsehen|Religion,2014-07-07T12:00:05Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Aktuell 1:=sprechen 2:=8 3:=Personen 4:=(3) 5:=das 6:=Wort 7:=zum 8:=Sonntag.,2,"[[0, 1, 2, 3, 6, 7, 8], [4]]",Currently 8 people (3) are speaking the word for Sunday.,['# ::snt Currently 8 people (3) are speaking the word for Sunday.\n(s / speak-01\n      :ARG0 (p / person\n            :quant 8\n            :ARG1-of (m / mean-01\n                  :ARG2 3))\n      :ARG1 (w / word\n            :topic (d / date-entity\n                  :weekday (s2 / sunday)))\n      :time (c / current))'],"[s, attr-instance, speak_01, attr-arg0, [p, attr-instance, person, attr-quant, 8, attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, 3]], attr-arg1, [w, attr-instance, word, attr-topic, [d, attr-instance, date_entity, attr-weekday, [s2, attr-instance, sunday]]], attr-time, [c, attr-instance, current]]"
952,952,952,952,1157,9843,das-wort-zum-sonntag,Das machen sie immer abwechselnd.,4_long,Seiten_mit_defekten_Dateilinks|Radio_und_Fernsehen|Religion,2014-07-07T12:00:05Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=machen 2:=sie 3:=immer 4:=abwechselnd.,1,,They always do this alternately.,['# ::snt They always do this alternately.\n(d / do-02\n      :ARG0 (t / they)\n      :ARG1 (t2 / this)\n      :time (a / always)\n      :ARG1-of (a2 / alternate-01))'],"[d, attr-instance, do_02, attr-arg0, [t, attr-instance, they], attr-arg1, [t2, attr-instance, this], attr-time, [a, attr-instance, always], attr-arg1_of, [a2, attr-instance, alternate_01]]"
953,953,953,953,1158,9844,das-wort-zum-sonntag,Die Sendung gibt es seit dem 8. Mai 1954.,5_long,Seiten_mit_defekten_Dateilinks|Radio_und_Fernsehen|Religion,2014-07-07T12:00:05Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Sendung 2:=gibt 3:=es 4:=seit 5:=dem 6:=8. 7:=Mai 8:=1954.,1,,"The show has been broadcast since May 8, 1954.","['# ::snt The show has been broadcast since May 8, 1954.\n(b / broadcast-01\n      :ARG1 (s / show-04)\n      :time (s2 / since\n            :op1 (d / date-entity\n                  :year 1954\n                  :month 5\n                  :day 8)))']","[b, attr-instance, broadcast_01, attr-arg1, [s, attr-instance, show_04], attr-time, [s2, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-year, 1954, attr-month, 5, attr-day, 8]]]"
954,954,954,954,1159,9845,das-wort-zum-sonntag,Das Wort zum Sonntag ist eine Fernseh-sendung.,0_short,Seiten_mit_defekten_Dateilinks|Radio_und_Fernsehen|Religion,2014-07-07T12:00:05Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=zum 3:=Sonntag 4:=ist 5:=eine 6:=Fernseh-sendung.,1,,The Word for Sunday is a television program.,"['# ::snt The Word for Sunday is a television program.\n(p / program\n      :medium (t / television)\n      :domain (p2 / publication\n            :name (n / name\n                  :op1 ""The""\n                  :op2 ""Word""\n                  :op3 ""for""\n                  :op4 ""Sunday"")))']","[p, attr-instance, program, attr-medium, [t, attr-instance, television], attr-domain, [p2, attr-instance, publication, attr-name, [n, attr-instance, name, attr-op1, ""the"", attr-op2, ""word"", attr-op3, ""for"", attr-op4, ""sunday""]]]"
955,955,955,955,1160,9846,das-wort-zum-sonntag,Die Sendung kommt jeden Samstag-abend.,1_short,Seiten_mit_defekten_Dateilinks|Radio_und_Fernsehen|Religion,2014-07-07T12:00:05Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Sendung 2:=kommt 3:=jeden 4:=Samstag-abend.,1,,The show airs every Saturday evening.,['# ::snt The show airs every Saturday evening.\n(a / air-01\n      :ARG1 (s / show)\n      :frequency (r / rate-entity-91\n            :ARG4 (d / date-entity\n                  :weekday (s2 / saturday)\n                  :dayperiod (e / evening))))'],"[a, attr-instance, air_01, attr-arg1, [s, attr-instance, show], attr-frequency, [r, attr-instance, rate_entity_91, attr-arg4, [d, attr-instance, date_entity, attr-weekday, [s2, attr-instance, saturday], attr-dayperiod, [e, attr-instance, evening]]]]"
956,956,956,956,1161,9847,das-wort-zum-sonntag,In der Sendung spricht 1 Person über das Thema: Religion.,2_short,Seiten_mit_defekten_Dateilinks|Radio_und_Fernsehen|Religion,2014-07-07T12:00:05Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=der 2:=Sendung 3:=spricht 4:=1 5:=Person 6:=über 7:=das 8:=Thema: 9:=Religion.,2,"[[0, 2, 3, 4, 5], [6, 8, 9]]",In the program 1 person speaks about the topic: Religion.,['# ::snt In the program 1 person speaks about the topic: Religion.\n(s / speak-01\n      :ARG0 (p / person\n            :quant 1)\n      :ARG1 (t / topic\n            :mod (r / religion))\n      :location (p2 / program))'],"[s, attr-instance, speak_01, attr-arg0, [p, attr-instance, person, attr-quant, 1], attr-arg1, [t, attr-instance, topic, attr-mod, [r, attr-instance, religion]], attr-location, [p2, attr-instance, program]]"
957,957,957,957,1162,9848,dashcam,Festgemacht wird die Dashcam im Auto drinnen.,0_long,Verkehr|Technik,2013-10-19T09:34:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Festgemacht 1:=wird 2:=die 3:=Dashcam 4:=im 5:=Auto 6:=drinnen.,2,"[[4, 5], [6]]",The dashcam is attached inside the car.,['# ::snt The dashcam is attached inside the car.\n(a / attach-01\n      :ARG1 (d / dashcam)\n      :ARG2 (ii / inside\n            :op1 (c / car)))'],"[a, attr-instance, attach_01, attr-arg1, [d, attr-instance, dashcam], attr-arg2, [ii, attr-instance, inside, attr-op1, [c, attr-instance, car]]]"
958,958,958,958,1165,9851,dashcam,Eine Dashcam ist digital.,3_long,Verkehr|Technik,2013-10-19T09:34:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Dashcam 2:=ist 3:=digital.,1,,A dashcam is digital.,['# ::snt A dashcam is digital.\n(d / digital\n      :domain (d2 / dashcam))'],"[d, attr-instance, digital, attr-domain, [d2, attr-instance, dashcam]]"
959,959,959,959,1166,9852,dashcam,Das hießt: \newline der Film wird auf einer Speicherkarte gespeichert.,4_long,Verkehr|Technik,2013-10-19T09:34:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=hießt: 2:=\newline 3:=der 4:=Film 5:=wird 6:=auf 7:=einer 8:=Speicherkarte 9:=gespeichert.,2,"[[4, 5, 9], [6, 8]]",This means: \newline the movie is saved on a memory card.,['# ::snt This means: \\newline the movie is saved on a memory card.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (s / save-02\n            :ARG1 (m2 / movie)\n            :ARG3 (c / card\n                  :mod (m3 / memory))\n            :manner (l / line\n                  :mod (o / old))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [s, attr-instance, save_02, attr-arg1, [m2, attr-instance, movie], attr-arg3, [c, attr-instance, card, attr-mod, [m3, attr-instance, memory]], attr-manner, [l, attr-instance, line, attr-mod, [o, attr-instance, old]]]]"
960,960,960,960,1167,9853,dashcam,Ist die Karte voll wird der alte Film überschrieben.,5_long,Verkehr|Technik,2013-10-19T09:34:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ist 1:=die 2:=Karte 3:=voll 4:=wird 5:=der 6:=alte 7:=Film 8:=überschrieben.,3,"[[0, 2, 3], [4, 7, 8], [6]]","If the card is full, the old film will be overwritten.","['# ::snt If the card is full, the old film will be overwritten.\n(o / overwritten-01\n      :ARG1 (f / film\n            :mod (o2 / old))\n      :condition (f2 / full-09\n            :ARG1 (c / card)))']","[o, attr-instance, overwritten_01, attr-arg1, [f, attr-instance, film, attr-mod, [o2, attr-instance, old]], attr-condition, [f2, attr-instance, full_09, attr-arg1, [c, attr-instance, card]]]"
961,961,961,961,1169,9855,dashcam,Der schützt die Speicher Funktion bei einem Unfall.,7_long,Verkehr|Technik,2013-10-19T09:34:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Der 1:=schützt 2:=die 3:=Speicher 4:=Funktion 5:=bei 6:=einem 7:=Unfall.,2,"[[1, 3, 4], [5, 7]]",This protects the memory function in the event of an accident.,['# ::snt This protects the memory function in the event of an accident.\n(p / protect-01\n      :ARG0 (t / this)\n      :ARG1 (f / function-01\n            :ARG0 (m / memory))\n      :condition (a / accident))'],"[p, attr-instance, protect_01, attr-arg0, [t, attr-instance, this], attr-arg1, [f, attr-instance, function_01, attr-arg0, [m, attr-instance, memory]], attr-condition, [a, attr-instance, accident]]"
962,962,962,962,1170,9856,dashcam,Das heißt: \newline Bei einem Unfall wird der alte Film nicht überschrieben.,8_long,Verkehr|Technik,2013-10-19T09:34:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=heißt: 2:=\newline 3:=Bei 4:=einem 5:=Unfall 6:=wird 7:=der 8:=alte 9:=Film 10:=nicht 11:=überschrieben.,3,"[[3, 5], [6, 9, 10, 11], [8, 9]]","This means: \newline In case of an accident, the old film will not be overwritten.","['# ::snt This means: \\newline\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (s / string-entity\n            :value ""lnline""))', '# ::snt In case of an accident, the old film will not be overwritten.\n(o / overwritten-01\n      :polarity -\n      :ARG1 (f / film\n            :mod (o2 / old))\n      :condition (a / accident))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [s, attr-instance, string_entity, attr-value, ""lnline""]]"
963,963,963,963,1171,9857,dashcam,In Österreich sind Dashcams verboten.,9_long,Verkehr|Technik,2013-10-19T09:34:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=Österreich 2:=sind 3:=Dashcams 4:=verboten.,1,,Dashcams are banned in Austria.,"['# ::snt Dashcams are banned in Austria.\n(b / ban-01\n      :ARG1 (d / dash-01)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Austria"")))']","[b, attr-instance, ban_01, attr-arg1, [d, attr-instance, dash_01], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""austria""]]]"
964,964,964,964,1172,9858,dashcam,Eine Dashcam ist eine Video Kamera im Auto.,0_short,Verkehr|Technik,2013-10-19T09:34:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Dashcam 2:=ist 3:=eine 4:=Video 5:=Kamera 6:=im 7:=Auto.,2,"[[1, 2, 4, 5], [6, 7]]",A dashcam is a video camera in the car.,['# ::snt A dashcam is a video camera in the car.\n(c / camera\n      :mod (v / video)\n      :location (c2 / car)\n      :domain (c3 / camera\n            :instrument-of (d / dash-01)))'],"[c, attr-instance, camera, attr-mod, [v, attr-instance, video], attr-location, [c2, attr-instance, car], attr-domain, [c3, attr-instance, camera, attr-instrument_of, [d, attr-instance, dash_01]]]"
965,965,965,965,1173,9859,dashcam,Die Kamera filmt die Auto Fahrt.,1_short,Verkehr|Technik,2013-10-19T09:34:11Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Kamera 2:=filmt 3:=die 4:=Auto 5:=Fahrt.,1,,The camera films the car ride.,['# ::snt The camera films the car ride.\n(f / film-01\n      :ARG0 (c / camera)\n      :ARG1 (r / ride-01\n            :ARG1 (c2 / car)))'],"[f, attr-instance, film_01, attr-arg0, [c, attr-instance, camera], attr-arg1, [r, attr-instance, ride_01, attr-arg1, [c2, attr-instance, car]]]"
966,966,966,966,1174,9860,datenschutz-grundverordnung,Das DSGVO ist eine Verordnung der Europäischen Union.,0_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=DSGVO 2:=ist 3:=eine 4:=Verordnung 5:=der 6:=Europäischen 7:=Union.,2,"[[1, 2, 4], [5, 6, 7]]",The GDPR is a regulation of the European Union.,"['# ::snt The GDPR is a regulation of the European Union.\n(r / regulate-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 ""European""\n                  :op2 ""Union""))\n      :ARG1 (l / law\n            :name (n2 / name\n                  :op1 ""GDPR"")))']","[r, attr-instance, regulate_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""european"", attr-op2, ""union""]], attr-arg1, [l, attr-instance, law, attr-name, [n2, attr-instance, name, attr-op1, ""gdpr""]]]"
967,967,967,967,1175,9861,datenschutz-grundverordnung,"Das heißt, \newline alle Länder in der Europäischen Union müssen sich daran halten.",1_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=alle 4:=Länder 5:=in 6:=der 7:=Europäischen 8:=Union 9:=müssen 10:=sich 11:=daran 12:=halten.",2,"[[3, 4, 9, 10, 11, 12], [5, 7, 8]]",This means that \newline all countries in the European Union must comply with it.,"['# ::snt This means that \\newline all countries in the European Union must comply with it.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (o / obligate-01\n            :ARG1 (c / country\n                  :mod (a / all)\n                  :location (o2 / organization\n                        :name (n / name\n                              :op1 ""European""\n                              :op2 ""Union"")))\n            :ARG2 (c2 / comply-01\n                  :ARG0 c\n                  :ARG1 (ii / it))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [o, attr-instance, obligate_01, attr-arg1, [c, attr-instance, country, attr-mod, [a, attr-instance, all], attr-location, [o2, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""european"", attr-op2, ""union""]]], attr-arg2, [c2, attr-instance, comply_01, attr-arg0, c, attr-arg1, [ii, attr-instance, it]]]]"
968,968,968,968,1176,9862,datenschutz-grundverordnung,Auch wenn sie Daten im Aus-land speichern.,2_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Auch 1:=wenn 2:=sie 3:=Daten 4:=im 5:=Aus-land 6:=speichern.,1,,Even if they store data abroad.,['# ::snt Even if they store data abroad.\n(h / have-concession-91\n      :ARG2 (e / even-if\n            :op1 (s / store-01\n                  :ARG0 (t / they)\n                  :ARG1 (d / data)\n                  :location (a / abroad))))'],"[h, attr-instance, have_concession_91, attr-arg2, [e, attr-instance, even_if, attr-op1, [s, attr-instance, store_01, attr-arg0, [t, attr-instance, they], attr-arg1, [d, attr-instance, data], attr-location, [a, attr-instance, abroad]]]]"
969,969,969,969,1177,9863,datenschutz-grundverordnung,Wenn die Daten von Menschen aus der Europäischen Union kommen.,3_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Wenn 1:=die 2:=Daten 3:=von 4:=Menschen 5:=aus 6:=der 7:=Europäischen 8:=Union 9:=kommen.,2,"[[3, 4], [5, 7, 8]]",If the data comes from people in the European Union.,"['# ::snt If the data comes from people in the European Union.\n(h / have-condition-91\n      :ARG2 (c / come-03\n            :ARG1 (d / data)\n            :ARG2 (p / person\n                  :location (o / organization\n                        :name (n / name\n                              :op1 ""European""\n                              :op2 ""Union"")))))']","[h, attr-instance, have_condition_91, attr-arg2, [c, attr-instance, come_03, attr-arg1, [d, attr-instance, data], attr-arg2, [p, attr-instance, person, attr-location, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""european"", attr-op2, ""union""]]]]]"
970,970,970,970,1180,9866,datenschutz-grundverordnung,Am 25. Januar 2012 hat es den Vorschlag gegeben.,6_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=25. 2:=Januar 3:=2012 4:=hat 5:=es 6:=den 7:=Vorschlag 8:=gegeben.,2,"[[0, 1, 2, 3], [4, 5, 7, 8]]",The proposal was made on 25 January 2012.,['# ::snt The proposal was made on 25 January 2012.\n(p / propose-01\n      :time (d / date-entity\n            :day 25\n            :month 1\n            :year 2012))'],"[p, attr-instance, propose_01, attr-time, [d, attr-instance, date_entity, attr-day, 25, attr-month, 1, attr-year, 2012]]"
971,971,971,971,1181,9867,datenschutz-grundverordnung,Am 21. Oktober 2013 hat das Europäische Parlament ab-gestimmt.,7_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=21. 2:=Oktober 3:=2013 4:=hat 5:=das 6:=Europäische 7:=Parlament 8:=ab-gestimmt.,2,"[[0, 1, 2, 3], [4, 6, 7, 8]]",The European Parliament voted on 21 October 2013.,"['# ::snt The European Parliament voted on 21 October 2013.\n(v / vote-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 ""European""\n                  :op2 ""Parliament""))\n      :time (d / date-entity\n            :day 21\n            :month 10\n            :year 2013))']","[v, attr-instance, vote_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""european"", attr-op2, ""parliament""]], attr-time, [d, attr-instance, date_entity, attr-day, 21, attr-month, 10, attr-year, 2013]]"
972,972,972,972,1182,9868,datenschutz-grundverordnung,Am 14. April 2016 hat die Europäischen Union den Vorschlag angenommen.,8_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=14. 2:=April 3:=2016 4:=hat 5:=die 6:=Europäischen 7:=Union 8:=den 9:=Vorschlag 10:=angenommen.,2,"[[0, 1, 2, 3], [4, 6, 7, 9, 10]]","On 14 April 2016, the European Union adopted the proposal.","['# ::snt On 14 April 2016, the European Union adopted the proposal.\n(a / adopt-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 ""European""\n                  :op2 ""Union""))\n      :ARG1 (t / thing\n            :ARG1-of (p / propose-01))\n      :time (d / date-entity\n            :day 14\n            :month 4\n            :year 2016))']","[a, attr-instance, adopt_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""european"", attr-op2, ""union""]], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [p, attr-instance, propose_01]], attr-time, [d, attr-instance, date_entity, attr-day, 14, attr-month, 4, attr-year, 2016]]"
973,973,973,973,1183,9869,datenschutz-grundverordnung,Am 24. Mai 2016 ist die DSGVO gültig geworden.,9_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=24. 2:=Mai 3:=2016 4:=ist 5:=die 6:=DSGVO 7:=gültig 8:=geworden.,2,"[[0, 1, 2, 3], [4, 6, 7, 8]]","The GDPR came into force on May 24, 2016.","['# ::snt The GDPR came into force on May 24, 2016.\n(e / enforce-01\n      :ARG1 (l / law\n            :name (n / name\n                  :op1 ""General""\n                  :op2 ""Certificate""\n                  :op3 ""of""\n                  :op4 ""Secondary""\n                  :op5 ""Education""))\n      :time (d / date-entity\n            :day 24\n            :month 5\n            :year 2016))']","[e, attr-instance, enforce_01, attr-arg1, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""general"", attr-op2, ""certificate"", attr-op3, ""of"", attr-op4, ""secondary"", attr-op5, ""education""]], attr-time, [d, attr-instance, date_entity, attr-day, 24, attr-month, 5, attr-year, 2016]]"
974,974,974,974,1184,9870,datenschutz-grundverordnung,Ab dem 25. Mai 2018 müssen sich alle an die DSGVO halten.,10_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ab 1:=dem 2:=25. 3:=Mai 4:=2018 5:=müssen 6:=sich 7:=alle 8:=an 9:=die 10:=DSGVO 11:=halten.,2,"[[0, 2, 3, 4], [5, 6, 7, 8, 10, 11]]","From May 25, 2018, everyone must comply with the GDPR.","['# ::snt From May 25, 2018, everyone must comply with the GDPR.\n(o / obligate-01\n      :ARG2 (c / comply-01\n            :ARG0 (e / everyone)\n            :ARG1 (l / law\n                  :name (n / name\n                        :op1 ""G GDPR"")))\n      :time (f / from\n            :op1 (d / date-entity\n                  :month 5\n                  :day 25\n                  :year 2018)))']","[o, attr-instance, obligate_01, attr-arg2, [c, attr-instance, comply_01, attr-arg0, [e, attr-instance, everyone], attr-arg1, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""g, gdpr""]]], attr-time, [f, attr-instance, from, attr-op1, [d, attr-instance, date_entity, attr-month, 5, attr-day, 25, attr-year, 2018]]]"
975,975,975,975,1186,9872,datenschutz-grundverordnung,Länder die sich nicht an die DSGVO halten bekommen Strafen.,12_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Länder 1:=die 2:=sich 3:=nicht 4:=an 5:=die 6:=DSGVO 7:=halten 8:=bekommen 9:=Strafen.,2,"[[0, 8, 9], [1, 2, 3, 4, 6, 7]]",Countries that do not comply with the GDPR face penalties.,"['# ::snt Countries that do not comply with the GDPR face penalties.\n(f / face-01\n      :ARG0 (c / country\n            :ARG0-of (c2 / comply-01\n                  :polarity -\n                  :ARG1 (l / law\n                        :name (n / name\n                              :op1 ""GDPR""))))\n      :ARG1 (p / penalize-01\n            :ARG1 c))']","[f, attr-instance, face_01, attr-arg0, [c, attr-instance, country, attr-arg0_of, [c2, attr-instance, comply_01, attr-polarity, negative, attr-arg1, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""gdpr""]]]], attr-arg1, [p, attr-instance, penalize_01, attr-arg1, c]]"
976,976,976,976,1187,9873,datenschutz-grundverordnung,Die Strafe kann bis zu 20 Millionen Euro (20.000.000 Euro) kosten.,13_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Strafe 2:=kann 3:=bis 4:=zu 5:=20 6:=Millionen 7:=Euro 8:=(20.000.000 9:=Euro) 10:=kosten.,2,"[[1, 2, 3, 4, 5, 6, 7, 10], [8, 9]]","The fine can be up to 20 million euros (20,000,000 euros).","['# ::snt The fine can be up to 20 million euros (20,000,000 euros).\n(p / possible-01\n      :ARG1 (f / fine-01\n            :ARG1 (u / up-to\n                  :op1 (m / monetary-quantity\n                        :quant 20000000\n                        :unit (e / euro)))))']","[p, attr-instance, possible_01, attr-arg1, [f, attr-instance, fine_01, attr-arg1, [u, attr-instance, up_to, attr-op1, [m, attr-instance, monetary_quantity, attr-quant, 20000000, attr-unit, [e, attr-instance, euro]]]]]"
977,977,977,977,1188,9874,datenschutz-grundverordnung,Die DSGVO hat 99 Regeln.,14_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=DSGVO 2:=hat 3:=99 4:=Regeln.,1,,The GDPR has 99 rules.,"['# ::snt The GDPR has 99 rules.\n(h / have-03\n      :ARG0 (l / law\n            :name (n / name\n                  :op1 ""GDPR""))\n      :ARG1 (r / rule\n            :quant 99))']","[h, attr-instance, have_03, attr-arg0, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""gdpr""]], attr-arg1, [r, attr-instance, rule, attr-quant, 99]]"
978,978,978,978,1189,9875,datenschutz-grundverordnung,"Darin steht, \newline wie man mit Angaben von Personen umgehen muss.",15_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Darin 1:=steht, 2:=\newline 3:=wie 4:=man 5:=mit 6:=Angaben 7:=von 8:=Personen 9:=umgehen 10:=muss.",3,"[[0, 1], [2, 3, 4, 5, 6, 9, 10], [6, 7, 8]]",It states \newline how to handle personal information.,['# ::snt It states \\newline how to handle personal information.\n(s / state-01\n      :ARG0 (ii / it)\n      :ARG1 (h / handle-01\n            :ARG0 (l / line)\n            :ARG1 (ii2 / information\n                  :ARG1-of (p / personal-02))\n            :manner (a / amr-unknown)))'],"[s, attr-instance, state_01, attr-arg0, [ii, attr-instance, it], attr-arg1, [h, attr-instance, handle_01, attr-arg0, [l, attr-instance, line], attr-arg1, [ii2, attr-instance, information, attr-arg1_of, [p, attr-instance, personal_02]], attr-manner, [a, attr-instance, amr_unknown]]]"
979,979,979,979,1190,9876,datenschutz-grundverordnung,Zum Beispiel wie man mit Namen von Personen umgehen muss.,16_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=wie 3:=man 4:=mit 5:=Namen 6:=von 7:=Personen 8:=umgehen 9:=muss.,1,,"For example, how to deal with people's names.","[""# ::snt For example, how to deal with people's names.\n(e / exemplify-01\n      :ARG0 (t / thing\n            :manner-of (d / deal-01\n                  :ARG2 (n / name\n                        :poss (p / person)))))""]","[e, attr-instance, exemplify_01, attr-arg0, [t, attr-instance, thing, attr-manner_of, [d, attr-instance, deal_01, attr-arg2, [n, attr-instance, name, attr-poss, [p, attr-instance, person]]]]]"
980,980,980,980,1191,9877,datenschutz-grundverordnung,Oder wie man mit Adressen umgehen muss.,17_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=wie 2:=man 3:=mit 4:=Adressen 5:=umgehen 6:=muss.,1,,Or how to handle addresses.,['# ::snt Or how to handle addresses.\n(o / or\n      :op2 (t / thing\n            :manner-of (h / handle-01\n                  :ARG1 (a / address))))'],"[o, attr-instance, or, attr-op2, [t, attr-instance, thing, attr-manner_of, [h, attr-instance, handle_01, attr-arg1, [a, attr-instance, address]]]]"
981,981,981,981,1192,9878,datenschutz-grundverordnung,Oder wie man mit Telefon-nummern umgehen muss.,18_long,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=wie 2:=man 3:=mit 4:=Telefon-nummern 5:=umgehen 6:=muss.,1,,Or how to handle telephone numbers.,['# ::snt Or how to handle telephone numbers.\n(o / or\n      :op2 (t / thing\n            :manner-of (h / handle-01\n                  :ARG1 (n / number\n                        :mod (t2 / telephone)))))'],"[o, attr-instance, or, attr-op2, [t, attr-instance, thing, attr-manner_of, [h, attr-instance, handle_01, attr-arg1, [n, attr-instance, number, attr-mod, [t2, attr-instance, telephone]]]]]"
982,982,982,982,1193,9879,datenschutz-grundverordnung,Die Datenschutz-Grundverordnung ist ein Gesetz.,0_short,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Datenschutz-Grundverordnung 2:=ist 3:=ein 4:=Gesetz.,1,,The General Data Protection Regulation is a law.,"['# ::snt The General Data Protection Regulation is a law.\n(l / law\n      :domain (l2 / law\n            :name (n / name\n                  :op1 ""General""\n                  :op2 ""Data""\n                  :op3 ""Protection""\n                  :op4 ""Regulations"")))']","[l, attr-instance, law, attr-domain, [l2, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""general"", attr-op2, ""data"", attr-op3, ""protection"", attr-op4, ""regulations""]]]"
983,983,983,983,1194,9880,datenschutz-grundverordnung,Es schützt Angaben und Daten von Personen.,1_short,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=schützt 2:=Angaben 3:=und 4:=Daten 5:=von 6:=Personen.,2,"[[2], [4]]",It protects personal information and data.,['# ::snt It protects personal information and data.\n(p / protect-01\n      :ARG0 (ii / it)\n      :ARG1 (a / and\n            :op1 (ii2 / information\n                  :ARG1-of (p2 / personal-02))\n            :op2 (d / data)))'],"[p, attr-instance, protect_01, attr-arg0, [ii, attr-instance, it], attr-arg1, [a, attr-instance, and, attr-op1, [ii2, attr-instance, information, attr-arg1_of, [p2, attr-instance, personal_02]], attr-op2, [d, attr-instance, data]]]"
984,984,984,984,1195,9881,datenschutz-grundverordnung,"Das heißt, \newline alles was sich mit einer Person verbinden lässt.",2_short,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=alles 4:=was 5:=sich 6:=mit 7:=einer 8:=Person 9:=verbinden 10:=lässt.",1,,"That is, \newline everything that can be connected to a person.","['# ::snt That is, \\newline everything that can be connected to a person.\n(l / line-01\n      :ARG1 (e / everything\n            :ARG1-of (c / connect-01\n                  :ARG2 (p / person)\n                  :ARG1-of (p2 / possible-01)))\n      :mod (t / that))']","[l, attr-instance, line_01, attr-arg1, [e, attr-instance, everything, attr-arg1_of, [c, attr-instance, connect_01, attr-arg2, [p, attr-instance, person], attr-arg1_of, [p2, attr-instance, possible_01]]], attr-mod, [t, attr-instance, that]]"
985,985,985,985,1198,9884,datenschutz-grundverordnung,Oder welche Daten man löschen muss.,5_short,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=welche 2:=Daten 3:=man 4:=löschen 5:=muss.,1,,Or which data needs to be deleted.,['# ::snt Or which data needs to be deleted.\n(o / or\n      :op2 (n / need-01\n            :ARG1 (d / delete-01\n                  :ARG1 (d2 / data\n                        :mod (a / amr-unknown)))))'],"[o, attr-instance, or, attr-op2, [n, attr-instance, need_01, attr-arg1, [d, attr-instance, delete_01, attr-arg1, [d2, attr-instance, data, attr-mod, [a, attr-instance, amr_unknown]]]]]"
986,986,986,986,1200,9886,datenschutz-grundverordnung,Keine Daten dürfen gespeichert werden.,7_short,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Keine 1:=Daten 2:=dürfen 3:=gespeichert 4:=werden.,1,,No data may be stored.,['# ::snt No data may be stored.\n(p / possible-01\n      :ARG1 (s / store-01\n            :polarity -\n            :ARG1 (d / data)))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, store_01, attr-polarity, negative, attr-arg1, [d, attr-instance, data]]]"
987,987,987,987,1201,9887,datenschutz-grundverordnung,Außer die Person gibt eine Erlaubnis dafür.,8_short,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Außer 1:=die 2:=Person 3:=gibt 4:=eine 5:=Erlaubnis 6:=dafür.,1,,Unless the person gives permission for it.,['# ::snt Unless the person gives permission for it.\n(h / have-condition-91\n      :ARG2 (p / permit-01\n            :polarity -\n            :ARG0 (p2 / person)\n            :ARG1 (ii / it)))'],"[h, attr-instance, have_condition_91, attr-arg2, [p, attr-instance, permit_01, attr-polarity, negative, attr-arg0, [p2, attr-instance, person], attr-arg1, [ii, attr-instance, it]]]"
988,988,988,988,1202,9888,datenschutz-grundverordnung,Mit der DSGVO soll jeder selbst über seine Daten bestimmen können.,9_short,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Mit 1:=der 2:=DSGVO 3:=soll 4:=jeder 5:=selbst 6:=über 7:=seine 8:=Daten 9:=bestimmen 10:=können.,3,"[[0, 2], [3, 4, 5, 9, 10], [6, 7, 8]]",The GDPR is intended to enable everyone to decide for themselves what happens to their data.,"['# ::snt The GDPR is intended to enable everyone to decide for themselves what happens to their data.\n(ii / intend-01\n      :ARG1 (e / enable-01\n            :ARG0 (l / law\n                  :name (n / name\n                        :op1 ""GDPR""))\n            :ARG1 (d / decide-01\n                  :ARG0 (e2 / everyone)\n                  :ARG1 (e3 / event\n                        :topic (d2 / data\n                              :poss e2))\n                  :mod (b / by-oneself))\n            :ARG2 e2))']","[ii, attr-instance, intend_01, attr-arg1, [e, attr-instance, enable_01, attr-arg0, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""gdpr""]], attr-arg1, [d, attr-instance, decide_01, attr-arg0, [e2, attr-instance, everyone], attr-arg1, [e3, attr-instance, event, attr-topic, [d2, attr-instance, data, attr-poss, e2]], attr-mod, [b, attr-instance, by_oneself]], attr-arg2, e2]]"
989,989,989,989,1203,9889,datenschutz-grundverordnung,Jeder soll die Kontrolle über seine eigenen Daten haben.,10_short,Recht_und_Gesetz,2018-06-04T15:22:46Z,48f66906899cc4a9477b6c9e32ff4424,0:=Jeder 1:=soll 2:=die 3:=Kontrolle 4:=über 5:=seine 6:=eigenen 7:=Daten 8:=haben.,2,"[[0, 1, 3, 8], [4, 5, 6, 7]]",Everyone should have control over their own data.,['# ::snt Everyone should have control over their own data.\n(r / recommend-01\n      :ARG1 (c / control-01\n            :ARG0 (e / everyone)\n            :ARG1 (d / data\n                  :poss e)))'],"[r, attr-instance, recommend_01, attr-arg1, [c, attr-instance, control_01, attr-arg0, [e, attr-instance, everyone], attr-arg1, [d, attr-instance, data, attr-poss, e]]]"
990,990,990,990,1204,9890,datenschutz,Beim Daten-schutz wird das Persönlich-keits-recht geschützt.,0_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beim 1:=Daten-schutz 2:=wird 3:=das 4:=Persönlich-keits-recht 5:=geschützt.,1,,Data protection protects personal rights.,['# ::snt Data protection protects personal rights.\n(p / protect-01\n      :ARG0 p\n      :ARG1 (d / data)\n      :ARG1 (r / right-05\n            :ARG1-of (p2 / personal-02)))'],"[p, attr-instance, protect_01, attr-arg0, p, attr-arg1, [d, attr-instance, data], attr-arg1, [r, attr-instance, right_05, attr-arg1_of, [p2, attr-instance, personal_02]]]"
991,991,991,991,1205,9891,datenschutz,Informationen über Menschen dürfen nicht weiter-gegeben werden.,1_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Informationen 1:=über 2:=Menschen 3:=dürfen 4:=nicht 5:=weiter-gegeben 6:=werden.,2,"[[0, 3, 4, 5, 6], [1, 2]]",Information about people must not be passed on.,['# ::snt Information about people must not be passed on.\n(o / obligate-01\n      :ARG2 (p / pass-on-14\n            :polarity -\n            :ARG1 (ii / information\n                  :topic (p2 / person))))'],"[o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, pass_on_14, attr-polarity, negative, attr-arg1, [ii, attr-instance, information, attr-topic, [p2, attr-instance, person]]]]"
992,992,992,992,1206,9892,datenschutz,Jeder hat ein Recht auf Privat-sphäre.,2_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Jeder 1:=hat 2:=ein 3:=Recht 4:=auf 5:=Privat-sphäre.,1,,Everyone has a right to privacy.,['# ::snt Everyone has a right to privacy.\n(r / right-05\n      :ARG1 (e / everyone)\n      :ARG2 (p / private-02\n            :ARG1 e))'],"[r, attr-instance, right_05, attr-arg1, [e, attr-instance, everyone], attr-arg2, [p, attr-instance, private_02, attr-arg1, e]]"
993,993,993,993,1207,9893,datenschutz,Darum müssen Daten ge-schützt werden.,3_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Darum 1:=müssen 2:=Daten 3:=ge-schützt 4:=werden.,1,,That is why data must be protected.,['# ::snt That is why data must be protected.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (o / obligate-01\n            :ARG2 (p / protect-01\n                  :ARG1 (d / data))))'],"[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, protect_01, attr-arg1, [d, attr-instance, data]]]]"
994,994,994,994,1208,9894,datenschutz,Alle Regeln für den  Daten-schutz stehen im Bundes-daten-schutz-gesetz.,4_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alle 1:=Regeln 2:=für 3:=den 4:= 5:=Daten-schutz 6:=stehen 7:=im 8:=Bundes-daten-schutz-gesetz.,2,"[[0, 6, 7, 8], [2, 5]]",All rules for data protection are contained in the Federal Data Protection Act.,"['# ::snt All rules for data protection are contained in the Federal Data Protection Act.\n(c / contain-01\n      :ARG0 (l / law\n            :name (n / name\n                  :op1 ""Federal""\n                  :op2 ""Data""\n                  :op3 ""Protection""\n                  :op4 ""Act""))\n      :ARG1 (r / rule-01\n            :ARG3 (p / protect-01\n                  :ARG1 (d / data))\n            :mod (a / all)))']","[c, attr-instance, contain_01, attr-arg0, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""federal"", attr-op2, ""data"", attr-op3, ""protection"", attr-op4, ""act""]], attr-arg1, [r, attr-instance, rule_01, attr-arg3, [p, attr-instance, protect_01, attr-arg1, [d, attr-instance, data]], attr-mod, [a, attr-instance, all]]]"
995,995,995,995,1209,9895,datenschutz,"Wer sich nicht an das Gesetz hält, \newline wird bestraft.",5_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Wer 1:=sich 2:=nicht 3:=an 4:=das 5:=Gesetz 6:=hält, 7:=\newline 8:=wird 9:=bestraft.",2,"[[0, 1, 2, 3, 5, 6], [8, 9]]",Anyone who does not obey the law will be punished.,['# ::snt Anyone who does not obey the law will be punished.\n(p / punish-01\n      :ARG1 (a / anyone\n            :ARG0-of (o / obey-01\n                  :polarity -\n                  :ARG1 (l / law))))'],"[p, attr-instance, punish_01, attr-arg1, [a, attr-instance, anyone, attr-arg0_of, [o, attr-instance, obey_01, attr-polarity, negative, attr-arg1, [l, attr-instance, law]]]]"
996,996,996,996,1210,9896,datenschutz,Datenschutz heißt auch: \newline Schutz des Rechts auf informationelle Selbstbestimmung.,6_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Datenschutz 1:=heißt 2:=auch: 3:=\newline 4:=Schutz 5:=des 6:=Rechts 7:=auf 8:=informationelle 9:=Selbstbestimmung.,1,,Data protection also means: \newline Protection of the right to informational self-determination.,['# ::snt Data protection also means: \\newline Protection of the right to informational self-determination.\n(m / mean-01\n      :ARG1 (p / protect-01\n            :ARG1 (d / data))\n      :ARG2 (p2 / protect-01\n            :ARG1 (r / right-05\n                  :ARG2 (d2 / decide-01\n                        :ARG0 (s / self)\n                        :ARG3 s\n                        :mod (ii / information)))\n            :mod (l / line))\n      :mod (a / also))'],"[m, attr-instance, mean_01, attr-arg1, [p, attr-instance, protect_01, attr-arg1, [d, attr-instance, data]], attr-arg2, [p2, attr-instance, protect_01, attr-arg1, [r, attr-instance, right_05, attr-arg2, [d2, attr-instance, decide_01, attr-arg0, [s, attr-instance, self], attr-arg3, s, attr-mod, [ii, attr-instance, information]]], attr-mod, [l, attr-instance, line]], attr-mod, [a, attr-instance, also]]"
997,997,997,997,1211,9897,datenschutz,Informationelle Selbstbestimmung heißt: \newline Jeder darf selber über seine Daten entscheiden.,7_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Informationelle 1:=Selbstbestimmung 2:=heißt: 3:=\newline 4:=Jeder 5:=darf 6:=selber 7:=über 8:=seine 9:=Daten 10:=entscheiden.,3,"[[0, 1, 2], [4, 5, 6, 10], [7, 8, 9]]",Informational self-determination means: \newline Everyone can decide for themselves about their data.,['# ::snt Informational self-determination means: \\newline Everyone can decide for themselves about their data.\n(m / mean-01\n      :ARG1 (d / decide-01\n            :ARG0 (e / everyone)\n            :ARG3 (d2 / data\n                  :poss e)\n            :mod (b / byline))\n      :ARG2 (d3 / decide-01\n            :ARG0 e\n            :ARG3 d2\n            :mod (ii / inherent)))'],"[m, attr-instance, mean_01, attr-arg1, [d, attr-instance, decide_01, attr-arg0, [e, attr-instance, everyone], attr-arg3, [d2, attr-instance, data, attr-poss, e], attr-mod, [b, attr-instance, byline]], attr-arg2, [d3, attr-instance, decide_01, attr-arg0, e, attr-arg3, d2, attr-mod, [ii, attr-instance, inherent]]]"
998,998,998,998,1212,9898,datenschutz,Zum Beispiel: • ob jemand Daten von mir haben kann,8_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel: 2:=• 3:=ob 4:=jemand 5:=Daten 6:=von 7:=mir 8:=haben 9:=kann,1,,For example: • whether someone can have data about me,['# ::snt For example: • whether someone can have data about me\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :ARG1 (h / have-03\n                  :ARG0 (s / someone)\n                  :ARG1 (d / data\n                        :topic (ii / i)))))'],"[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [h, attr-instance, have_03, attr-arg0, [s, attr-instance, someone], attr-arg1, [d, attr-instance, data, attr-topic, [ii, attr-instance, i]]]]]"
999,999,999,999,1213,9899,datenschutz,Zum Beispiel: • welche Daten jemand von mir haben kann,9_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel: 2:=• 3:=welche 4:=Daten 5:=jemand 6:=von 7:=mir 8:=haben 9:=kann,1,,For example: • what data someone can have about me,['# ::snt For example: • what data someone can have about me\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :ARG1 (h / have-03\n                  :ARG0 (s / someone)\n                  :ARG1 (d / data\n                        :topic (ii / i)))))'],"[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [h, attr-instance, have_03, attr-arg0, [s, attr-instance, someone], attr-arg1, [d, attr-instance, data, attr-topic, [ii, attr-instance, i]]]]]"
1000,1000,1000,1000,1214,9900,datenschutz,Zum Beispiel: • wer Daten von mir haben kann,10_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel: 2:=• 3:=wer 4:=Daten 5:=von 6:=mir 7:=haben 8:=kann,1,,For example: • who can have data about me,['# ::snt For example: • who can have data about me\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :ARG1 (h / have-03\n                  :ARG0 (a / amr-unknown)\n                  :ARG1 (d / data\n                        :topic (ii / i)))))'],"[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [h, attr-instance, have_03, attr-arg0, [a, attr-instance, amr_unknown], attr-arg1, [d, attr-instance, data, attr-topic, [ii, attr-instance, i]]]]]"
1001,1001,1001,1001,1215,9901,datenschutz,Zum Beispiel: • wer meine Daten wieder löschen soll,11_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel: 2:=• 3:=wer 4:=meine 5:=Daten 6:=wieder 7:=löschen 8:=soll,1,,For example: • who should delete my data,['# ::snt For example: • who should delete my data\n(e / exemplify-01\n      :ARG0 (r / recommend-01\n            :ARG1 (d / delete-01\n                  :ARG0 (a / amr-unknown)\n                  :ARG1 (d2 / data\n                        :poss (ii / i)))))'],"[e, attr-instance, exemplify_01, attr-arg0, [r, attr-instance, recommend_01, attr-arg1, [d, attr-instance, delete_01, attr-arg0, [a, attr-instance, amr_unknown], attr-arg1, [d2, attr-instance, data, attr-poss, [ii, attr-instance, i]]]]]"
1002,1002,1002,1002,1216,9902,datenschutz,Datenschutz ist für eine Demokratie wichtig.,12_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Datenschutz 1:=ist 2:=für 3:=eine 4:=Demokratie 5:=wichtig.,2,"[[0, 1, 5], [2, 4]]",Data protection is important for a democracy.,['# ::snt Data protection is important for a democracy.\n(ii / important-01\n      :ARG1 (p / protect-01\n            :ARG1 (d / data))\n      :ARG2 (d2 / democracy))'],"[ii, attr-instance, important_01, attr-arg1, [p, attr-instance, protect_01, attr-arg1, [d, attr-instance, data]], attr-arg2, [d2, attr-instance, democracy]]"
1003,1003,1003,1003,1217,9903,datenschutz,Datenschutz meint die Daten von Menschen.,13_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Datenschutz 1:=meint 2:=die 3:=Daten 4:=von 5:=Menschen.,2,"[[0, 1], [4, 5]]",Data protection means people’s data.,['# ::snt Data protection means people’s data.\n(m / mean-01\n      :ARG1 (p / protect-01\n            :ARG1 (d / data))\n      :ARG2 (d2 / data\n            :poss (p2 / person)))'],"[m, attr-instance, mean_01, attr-arg1, [p, attr-instance, protect_01, attr-arg1, [d, attr-instance, data]], attr-arg2, [d2, attr-instance, data, attr-poss, [p2, attr-instance, person]]]"
1004,1004,1004,1004,1219,9905,datenschutz,Es gibt auch öffentliche Daten.,15_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=auch 3:=öffentliche 4:=Daten.,1,,There is also public data.,['# ::snt There is also public data.\n(d / data\n      :ARG1-of (p / public-02)\n      :mod (a / also))'],"[d, attr-instance, data, attr-arg1_of, [p, attr-instance, public_02], attr-mod, [a, attr-instance, also]]"
1005,1005,1005,1005,1220,9906,datenschutz,Diese Daten gehören allen Bürgern.,16_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Diese 1:=Daten 2:=gehören 3:=allen 4:=Bürgern.,1,,This data belongs to all citizens.,['# ::snt This data belongs to all citizens.\n(b / belong-01\n      :ARG0 (d / data\n            :mod (t / this))\n      :ARG1 (c / citizen\n            :mod (a / all)))'],"[b, attr-instance, belong_01, attr-arg0, [d, attr-instance, data, attr-mod, [t, attr-instance, this]], attr-arg1, [c, attr-instance, citizen, attr-mod, [a, attr-instance, all]]]"
1006,1006,1006,1006,1221,9907,datenschutz,Für diese Daten gibt es keinen Daten-schutz.,17_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Für 1:=diese 2:=Daten 3:=gibt 4:=es 5:=keinen 6:=Daten-schutz.,2,"[[0, 2], [3, 4, 5, 6]]",There is no data protection for this data.,['# ::snt There is no data protection for this data.\n(p / protect-01\n      :polarity -\n      :ARG0 (d / data\n            :mod (t / this))\n      :ARG1 (d2 / data))'],"[p, attr-instance, protect_01, attr-polarity, negative, attr-arg0, [d, attr-instance, data, attr-mod, [t, attr-instance, this]], attr-arg1, [d2, attr-instance, data]]"
1007,1007,1007,1007,1223,9909,datenschutz,Daten sind Informationen über Menschen.,0_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Daten 1:=sind 2:=Informationen 3:=über 4:=Menschen.,2,"[[0, 1], [3, 4]]",Data is information about people.,['# ::snt Data is information about people.\n(ii / information\n      :topic (p / person)\n      :domain (d / data))'],"[ii, attr-instance, information, attr-topic, [p, attr-instance, person], attr-domain, [d, attr-instance, data]]"
1008,1008,1008,1008,1224,9910,datenschutz,Beim Daten-schutz werden diese Informationen geschützt.,1_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beim 1:=Daten-schutz 2:=werden 3:=diese 4:=Informationen 5:=geschützt.,1,,"With data protection, this information is protected.","['# ::snt With data protection, this information is protected.\n(p / protect-01\n      :ARG1 (ii / information\n            :mod (t / this))\n      :ARG3 (p2 / protect-01\n            :ARG1 (d / data)))']","[p, attr-instance, protect_01, attr-arg1, [ii, attr-instance, information, attr-mod, [t, attr-instance, this]], attr-arg3, [p2, attr-instance, protect_01, attr-arg1, [d, attr-instance, data]]]"
1009,1009,1009,1009,1229,9915,datenschutz,Keiner darf Daten von anderen ohne Fragen benutzen.,6_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Keiner 1:=darf 2:=Daten 3:=von 4:=anderen 5:=ohne 6:=Fragen 7:=benutzen.,3,"[[0, 1, 2, 7], [3, 4], [5, 6]]",No one may use other people’s data without asking.,['# ::snt No one may use other people’s data without asking.\n(p / possible-01\n      :ARG1 (u / use-01\n            :ARG0 (n / no-one)\n            :ARG1 (d / data\n                  :poss (p2 / person\n                        :mod (o / other)))\n            :manner (a / ask-02\n                  :polarity -\n                  :ARG0 n)))'],"[p, attr-instance, possible_01, attr-arg1, [u, attr-instance, use_01, attr-arg0, [n, attr-instance, no_one], attr-arg1, [d, attr-instance, data, attr-poss, [p2, attr-instance, person, attr-mod, [o, attr-instance, other]]], attr-manner, [a, attr-instance, ask_02, attr-polarity, negative, attr-arg0, n]]]"
1010,1010,1010,1010,1230,9916,datenschutz,Oder Daten an andere weitergeben.,7_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=Daten 2:=an 3:=andere 4:=weitergeben.,1,,Or pass on data to others.,['# ::snt Or pass on data to others.\n(o / or\n      :op2 (p / pass-on-09\n            :ARG1 (d / data)\n            :ARG2 (o2 / other)))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, pass_on_09, attr-arg1, [d, attr-instance, data], attr-arg2, [o2, attr-instance, other]]]"
1011,1011,1011,1011,1231,9917,datenschutz,"Jeder soll bestimmen können, \newline was mit seinen eigenen Daten passiert.",8_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Jeder 1:=soll 2:=bestimmen 3:=können, 4:=\newline 5:=was 6:=mit 7:=seinen 8:=eigenen 9:=Daten 10:=passiert.",2,"[[0, 1, 2, 3], [5, 6, 7, 8, 9, 10]]",Everyone should be able to decide what happens to their own data.,['# ::snt Everyone should be able to decide what happens to their own data.\n(r / recommend-01\n      :ARG1 (p / possible-01\n            :ARG1 (d / decide-01\n                  :ARG0 (e / everyone)\n                  :ARG1 (e2 / event\n                        :topic (d2 / data\n                              :poss e)))))'],"[r, attr-instance, recommend_01, attr-arg1, [p, attr-instance, possible_01, attr-arg1, [d, attr-instance, decide_01, attr-arg0, [e, attr-instance, everyone], attr-arg1, [e2, attr-instance, event, attr-topic, [d2, attr-instance, data, attr-poss, e]]]]]"
1012,1012,1012,1012,1232,9918,datenschutz,Jeder hat ein Recht auf Daten-schutz.,9_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2022-10-29T04:32:19Z,48f66906899cc4a9477b6c9e32ff4424,0:=Jeder 1:=hat 2:=ein 3:=Recht 4:=auf 5:=Daten-schutz.,1,,Everyone has a right to data protection.,['# ::snt Everyone has a right to data protection.\n(r / right-05\n      :ARG1 (e / everyone)\n      :ARG2 (p / protect-01\n            :ARG0 e\n            :ARG1 (d / data)))'],"[r, attr-instance, right_05, attr-arg1, [e, attr-instance, everyone], attr-arg2, [p, attr-instance, protect_01, attr-arg0, e, attr-arg1, [d, attr-instance, data]]]"
1013,1013,1013,1013,1233,9919,dauerwelle,Um eine Dauerwelle zu machen braucht man ein Mittel und Lockenwickler.,0_long,Frisur,2013-02-20T18:45:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Um 1:=eine 2:=Dauerwelle 3:=zu 4:=machen 5:=braucht 6:=man 7:=ein 8:=Mittel 9:=und 10:=Lockenwickler.,3,"[[0, 2, 3, 4], [5, 6, 8], [5, 6, 10]]",To do a perm you need a product and curlers.,['# ::snt To do a perm you need a product and curlers.\n(n / need-01\n      :ARG0 (y / you)\n      :ARG1 (a / and\n            :op1 (p / product)\n            :op2 (p2 / person\n                  :ARG0-of (c / curl-01)))\n      :purpose (d / do-02\n            :ARG0 y\n            :ARG1 (p3 / perm)))'],"[n, attr-instance, need_01, attr-arg0, [y, attr-instance, you], attr-arg1, [a, attr-instance, and, attr-op1, [p, attr-instance, product], attr-op2, [p2, attr-instance, person, attr-arg0_of, [c, attr-instance, curl_01]]], attr-purpose, [d, attr-instance, do_02, attr-arg0, y, attr-arg1, [p3, attr-instance, perm]]]"
1014,1014,1014,1014,1234,9920,dauerwelle,Zuerst kommt ein Mittel auf die Haare.,1_long,Frisur,2013-02-20T18:45:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zuerst 1:=kommt 2:=ein 3:=Mittel 4:=auf 5:=die 6:=Haare.,1,,"First, a product is applied to the hair.","['# ::snt First, a product is applied to the hair.\n(a / apply-02\n      :ARG1 (p / product)\n      :ARG2 (h / hair)\n      :ord (o / ordinal-entity\n            :value 1))']","[a, attr-instance, apply_02, attr-arg1, [p, attr-instance, product], attr-arg2, [h, attr-instance, hair], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]]"
1015,1015,1015,1015,1235,9921,dauerwelle,Dann werden die Lockenwickler in die Haare gemacht.,2_long,Frisur,2013-02-20T18:45:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Dann 1:=werden 2:=die 3:=Lockenwickler 4:=in 5:=die 6:=Haare 7:=gemacht.,1,,Then the curlers are put into the hair.,['# ::snt Then the curlers are put into the hair.\n(p / put-01\n      :ARG1 (c / curler)\n      :ARG2 (h / hair)\n      :time (t / then))'],"[p, attr-instance, put_01, attr-arg1, [c, attr-instance, curler], attr-arg2, [h, attr-instance, hair], attr-time, [t, attr-instance, then]]"
1016,1016,1016,1016,1236,9922,dauerwelle,Eine Dauerwelle ist eine Haar-Frisur.,3_long,Frisur,2013-02-20T18:45:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Dauerwelle 2:=ist 3:=eine 4:=Haar-Frisur.,1,,A perm is a hair style.,['# ::snt A perm is a hair style.\n(s / style\n      :mod (h / hair)\n      :domain (p / perm))'],"[s, attr-instance, style, attr-mod, [h, attr-instance, hair], attr-domain, [p, attr-instance, perm]]"
1017,1017,1017,1017,1237,9923,dauerwelle,Bei einer Dauerwelle werden Locken und Wellen in die Haaren gemacht.,0_short,Frisur,2013-02-20T18:45:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Bei 1:=einer 2:=Dauerwelle 3:=werden 4:=Locken 5:=und 6:=Wellen 7:=in 8:=die 9:=Haaren 10:=gemacht.,3,"[[3, 4, 10], [2, 6, 10], [7, 9]]",A perm involves creating curls and waves in the hair.,['# ::snt A perm involves creating curls and waves in the hair.\n(ii / involve-01\n      :ARG1 (c / create-01\n            :ARG1 (a / and\n                  :op1 (c2 / curl-01)\n                  :op2 (w / wave))\n            :location (h / hair))\n      :ARG2 (p / perm))'],"[ii, attr-instance, involve_01, attr-arg1, [c, attr-instance, create_01, attr-arg1, [a, attr-instance, and, attr-op1, [c2, attr-instance, curl_01], attr-op2, [w, attr-instance, wave]], attr-location, [h, attr-instance, hair]], attr-arg2, [p, attr-instance, perm]]"
1018,1018,1018,1018,1238,9924,daumelinchen,Däumelinchen ist ein Märchen.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-06T16:32:07Z,e800bebc9060331edfac65e663a55570,0:=Däumelinchen 1:=ist 2:=ein 3:=Märchen.,1,,Thumbelina is a fairy tale.,"['# ::snt Thumbelina is a fairy tale.\n(t / tale\n      :mod (f / fairy)\n      :domain (b / book\n            :name (n / name\n                  :op1 ""Thumbelina"")))']","[t, attr-instance, tale, attr-mod, [f, attr-instance, fairy], attr-domain, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""thumbelina""]]]"
1019,1019,1019,1019,1239,9925,daumelinchen,Hans Christian Andersen schreibt das Märchen.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-06T16:32:07Z,e800bebc9060331edfac65e663a55570,0:=Hans 1:=Christian 2:=Andersen 3:=schreibt 4:=das 5:=Märchen.,1,,Hans Christian Andersen writes the fairy tale.,"['# ::snt Hans Christian Andersen writes the fairy tale.\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Hans""\n                  :op2 ""Christian""\n                  :op3 ""Anders""))\n      :ARG1 (t / tale\n            :mod (f / fairy)))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""hans"", attr-op2, ""christian"", attr-op3, ""anders""]], attr-arg1, [t, attr-instance, tale, attr-mod, [f, attr-instance, fairy]]]"
1020,1020,1020,1020,1241,9927,daumenkino,Ein Daumen-kino kann man fertig kaufen.,0_long,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Daumen-kino 2:=kann 3:=man 4:=fertig 5:=kaufen.,2,"[[1, 2, 3, 5], [4]]",You can buy a flip book ready-made.,['# ::snt You can buy a flip book ready-made.\n(p / possible-01\n      :ARG1 (b / buy-01\n            :ARG0 (y / you)\n            :ARG1 (b2 / book\n                  :mod (f / flip)\n                  :ARG1-of (r / ready-01\n                        :ARG2 (m / make-01\n                              :ARG1 b2)))))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, buy_01, attr-arg0, [y, attr-instance, you], attr-arg1, [b2, attr-instance, book, attr-mod, [f, attr-instance, flip], attr-arg1_of, [r, attr-instance, ready_01, attr-arg2, [m, attr-instance, make_01, attr-arg1, b2]]]]]"
1021,1021,1021,1021,1242,9928,daumenkino,Oder selber basteln.,1_long,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Oder 1:=selber 2:=basteln.,1,,Or make it yourself.,['# ::snt Or make it yourself.\n(o / or\n      :op2 (m / make-01\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG1 (ii / it)\n            :ARG3 y))'],"[o, attr-instance, or, attr-op2, [m, attr-instance, make_01, attr-mode, imperative, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, it], attr-arg3, y]]"
1022,1022,1022,1022,1243,9929,daumenkino,Dazu braucht man: • einzelne Bilder,2_long,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Dazu 1:=braucht 2:=man: 3:=• 4:=einzelne 5:=Bilder,1,,For this you need: • individual images,['# ::snt For this you need: • individual images\n(n / need-01\n      :ARG0 (y / you)\n      :ARG1 (ii / image\n            :mod (ii2 / individual))\n      :purpose (t / this))'],"[n, attr-instance, need_01, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, image, attr-mod, [ii2, attr-instance, individual]], attr-purpose, [t, attr-instance, this]]"
1023,1023,1023,1023,1244,9930,daumenkino,Dazu braucht man: • Tacker,3_long,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Dazu 1:=braucht 2:=man: 3:=• 4:=Tacker,1,,You will need: • Stapler,"['# ::snt You will need: • Stapler\n(n / need-01\n      :ARG0 (y / you)\n      :ARG1 (t / thing\n            :name (n2 / name\n                  :op1 ""Stapler"")))']","[n, attr-instance, need_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-name, [n2, attr-instance, name, attr-op1, ""stapler""]]]"
1024,1024,1024,1024,1245,9931,daumenkino,Die Bilder werden dann zusammen ge-tackert.,4_long,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Bilder 2:=werden 3:=dann 4:=zusammen 5:=ge-tackert.,1,,The pictures are then stapled together.,['# ::snt The pictures are then stapled together.\n(s / stapled-01\n      :ARG1 (p / picture)\n      :ARG4 (t / together)\n      :time (t2 / then))'],"[s, attr-instance, stapled_01, attr-arg1, [p, attr-instance, picture], attr-arg4, [t, attr-instance, together], attr-time, [t2, attr-instance, then]]"
1025,1025,1025,1025,1246,9932,daumenkino,Das Daumenkino funktioniert durch den Stroboskop-effekt.,5_long,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Daumenkino 2:=funktioniert 3:=durch 4:=den 5:=Stroboskop-effekt.,1,,The flip book works through the strobe effect.,['# ::snt The flip book works through the strobe effect.\n(w / work-09\n      :ARG0 (b / book\n            :ARG1-of (f / flip-01))\n      :ARG1 (e / effect\n            :mod (s / strobe)))'],"[w, attr-instance, work_09, attr-arg0, [b, attr-instance, book, attr-arg1_of, [f, attr-instance, flip_01]], attr-arg1, [e, attr-instance, effect, attr-mod, [s, attr-instance, strobe]]]"
1026,1026,1026,1026,1247,9933,daumenkino,Das Wort Daumen-kino hat diese 2 Wörter: • Daumen,6_long,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Daumen-kino 3:=hat 4:=diese 5:=2 6:=Wörter: 7:=• 8:=Daumen,1,,The word flip-book has these 2 words: • thumb,['# ::snt The word flip-book has these 2 words: • thumb\n(h / have-03\n      :ARG0 (b / book\n            :mod (f / flip))\n      :ARG1 (w / word\n            :quant 2\n            :mod (t / this)\n            :ARG1-of (m / mean-01\n                  :ARG2 (t2 / thumb))))'],"[h, attr-instance, have_03, attr-arg0, [b, attr-instance, book, attr-mod, [f, attr-instance, flip]], attr-arg1, [w, attr-instance, word, attr-quant, 2, attr-mod, [t, attr-instance, this], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [t2, attr-instance, thumb]]]]"
1027,1027,1027,1027,1248,9934,daumenkino,Das Wort Daumen-kino hat diese 2 Wörter: • Kino,7_long,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Daumen-kino 3:=hat 4:=diese 5:=2 6:=Wörter: 7:=• 8:=Kino,1,,The word flip-book has these 2 words: • Kino,"['# ::snt The word flip-book has these 2 words: • Kino\n(h / have-03\n      :ARG0 (b / book\n            :mod (f / flip-book)\n            :mod (w / word))\n      :ARG1 (w2 / word\n            :quant 2\n            :mod (t / this)\n            :ARG1-of (m / mean-01\n                  :ARG2 (p / person\n                        :name (n / name\n                              :op1 ""Kino"")))))']","[h, attr-instance, have_03, attr-arg0, [b, attr-instance, book, attr-mod, [f, attr-instance, flip_book], attr-mod, [w, attr-instance, word]], attr-arg1, [w2, attr-instance, word, attr-quant, 2, attr-mod, [t, attr-instance, this], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""kino""]]]]]"
1028,1028,1028,1028,1249,9935,daumenkino,Das Wort Daumen-kino ist ein Substantiv.,8_long,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Daumen-kino 3:=ist 4:=ein 5:=Substantiv.,1,,The word flipbook is a noun.,['# ::snt The word flipbook is a noun.\n(n / noun\n      :domain (w / word\n            :mod (f / flipbook)))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [f, attr-instance, flipbook]]]"
1029,1029,1029,1029,1250,9936,daumenkino,Ein Daumenkino ist ein kleines Buch mit Bildern.,0_short,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Daumenkino 2:=ist 3:=ein 4:=kleines 5:=Buch 6:=mit 7:=Bildern.,3,"[[1, 2, 5], [4], [6, 7]]",A flip book is a small book with pictures.,['# ::snt A flip book is a small book with pictures.\n(b / book\n      :mod (s / small)\n      :ARG0-of (h / have-03\n            :ARG1 (p / picture))\n      :domain (b2 / book\n            :ARG1-of (f / flip-01)))'],"[b, attr-instance, book, attr-mod, [s, attr-instance, small], attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [p, attr-instance, picture]], attr-domain, [b2, attr-instance, book, attr-arg1_of, [f, attr-instance, flip_01]]]"
1030,1030,1030,1030,1251,9937,daumenkino,Auf jeder Buch-Seite ist 1 Bild.,1_short,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Auf 1:=jeder 2:=Buch-Seite 3:=ist 4:=1 5:=Bild.,1,,There is 1 picture on each page of the book.,['# ::snt There is 1 picture on each page of the book.\n(b / be-located-at-91\n      :ARG1 (p / picture\n            :quant 1)\n      :ARG2 (p2 / page\n            :mod (e / each)\n            :part-of (b2 / book)))'],"[b, attr-instance, be_located_at_91, attr-arg1, [p, attr-instance, picture, attr-quant, 1], attr-arg2, [p2, attr-instance, page, attr-mod, [e, attr-instance, each], attr-part_of, [b2, attr-instance, book]]]"
1031,1031,1031,1031,1252,9938,daumenkino,"Wenn man schnell durch blättert, \newline sieht es so aus als ob ein Film ab-läuft.",2_short,Film_und_Kino|Technik,2014-03-01T15:38:30Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Wenn 1:=man 2:=schnell 3:=durch 4:=blättert, 5:=\newline 6:=sieht 7:=es 8:=so 9:=aus 10:=als 11:=ob 12:=ein 13:=Film 14:=ab-läuft.",4,"[[0, 1, 3, 4], [2, 3, 4], [6, 7, 8, 9], [10, 11, 13, 14]]","If you flip through quickly, \newline it looks like a movie is playing.","['# ::snt If you flip through quickly, \\newline it looks like a movie is playing.\n(h / have-condition-91\n      :ARG1 (l / look-02\n            :ARG0 (ii / it)\n            :ARG1 (p / play-11\n                  :ARG0 (m / movie)))\n      :ARG2 (f / flip-01\n            :ARG0 (y / you)\n            :ARG1 (t / through)\n            :ARG1-of (q / quick-02)))']","[h, attr-instance, have_condition_91, attr-arg1, [l, attr-instance, look_02, attr-arg0, [ii, attr-instance, it], attr-arg1, [p, attr-instance, play_11, attr-arg0, [m, attr-instance, movie]]], attr-arg2, [f, attr-instance, flip_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, through], attr-arg1_of, [q, attr-instance, quick_02]]]"
1032,1032,1032,1032,1253,9939,daumenregister,Auf dem Daumenregister können zum Beispiel Buchstaben sein.,0_long,Sprache,2014-03-10T10:47:38Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Auf 1:=dem 2:=Daumenregister 3:=können 4:=zum 5:=Beispiel 6:=Buchstaben 7:=sein.,1,,"For example, there can be letters on the thumb register.","['# ::snt For example, there can be letters on the thumb register.\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :ARG1 (l / letter\n                  :location (r / register\n                        :mod (t / thumb)))))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [l, attr-instance, letter, attr-location, [r, attr-instance, register, attr-mod, [t, attr-instance, thumb]]]]]"
1033,1033,1033,1033,1254,9940,daumenregister,Es sieht aus wie eine Treppenstufe.,1_long,Sprache,2014-03-10T10:47:38Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Es 1:=sieht 2:=aus 3:=wie 4:=eine 5:=Treppenstufe.,1,,It looks like a stair step.,['# ::snt It looks like a stair step.\n(l / look-02\n      :ARG0 (ii / it)\n      :ARG1 (s / step-01\n            :ARG2 (s2 / stair)))'],"[l, attr-instance, look_02, attr-arg0, [ii, attr-instance, it], attr-arg1, [s, attr-instance, step_01, attr-arg2, [s2, attr-instance, stair]]]"
1034,1034,1034,1034,1255,9941,daumenregister,Ein Daumenregister ist eine Hilfe an einem Buch.,0_short,Sprache,2014-03-10T10:47:38Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Daumenregister 2:=ist 3:=eine 4:=Hilfe 5:=an 6:=einem 7:=Buch.,2,"[[4], [5, 7]]",A thumb index is an aid to a book.,['# ::snt A thumb index is an aid to a book.\n(a / aid-01\n      :ARG0 (ii / index\n            :mod (t / thumb))\n      :ARG2 (b / book))'],"[a, attr-instance, aid_01, attr-arg0, [ii, attr-instance, index, attr-mod, [t, attr-instance, thumb]], attr-arg2, [b, attr-instance, book]]"
1035,1035,1035,1035,1256,9942,daumenregister,Damit findet man Sachen im Buch schneller.,1_short,Sprache,2014-03-10T10:47:38Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Damit 1:=findet 2:=man 3:=Sachen 4:=im 5:=Buch 6:=schneller.,3,"[[0, 1, 2, 3], [4, 5], [6]]",This helps you find things in the book faster.,['# ::snt This helps you find things in the book faster.\n(h / help-01\n      :ARG0 (t / this)\n      :ARG1 (f / find-01\n            :ARG0 (y / you)\n            :ARG1 (t2 / thing)\n            :location (b / book)\n            :ARG1-of (h2 / have-degree-91\n                  :ARG2 (f2 / fast-02)\n                  :ARG3 (m / more)))\n      :ARG2 y)'],"[h, attr-instance, help_01, attr-arg0, [t, attr-instance, this], attr-arg1, [f, attr-instance, find_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t2, attr-instance, thing], attr-location, [b, attr-instance, book], attr-arg1_of, [h2, attr-instance, have_degree_91, attr-arg2, [f2, attr-instance, fast_02], attr-arg3, [m, attr-instance, more]]], attr-arg2, y]"
1036,1036,1036,1036,1257,9943,dau,"DAUs sind Personen, \newline die keine Ahnung von Computern haben.",0_long,Computer|Internet,2012-12-10T18:08:06Z,28d34f2e053dee2c0e9399a7924cd978,"0:=DAUs 1:=sind 2:=Personen, 3:=\newline 4:=die 5:=keine 6:=Ahnung 7:=von 8:=Computern 9:=haben.",3,"[[0, 1, 2], [4, 5, 6, 9], [6, 7, 8]]",DAUs are people \newline who have no idea about computers.,"['# ::snt DAUs are people \\newline who have no idea about computers.\n(p / person\n      :domain (o / organization\n            :name (n / name\n                  :op1 ""Democratic""\n                  :op2 ""Union""))\n      :ARG0-of (h / have-03\n            :polarity -\n            :ARG1 (ii / idea\n                  :topic (c / computer)))\n      :mod (n2 / newline))']","[p, attr-instance, person, attr-domain, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""democratic"", attr-op2, ""union""]], attr-arg0_of, [h, attr-instance, have_03, attr-polarity, negative, attr-arg1, [ii, attr-instance, idea, attr-topic, [c, attr-instance, computer]]], attr-mod, [n2, attr-instance, newline]]"
1037,1037,1037,1037,1258,9944,dau,DAU ist ein Akronym,1_long,Computer|Internet,2012-12-10T18:08:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=DAU 1:=ist 2:=ein 3:=Akronym,1,,DAU is an acronym,"['# ::snt DAU is an acronym\n(n / name\n      :op1 ""DAU""\n      :domain (a / acronym))']","[n, attr-instance, name, attr-op1, ""dau"", attr-domain, [a, attr-instance, acronym]]"
1038,1038,1038,1038,1259,9945,dau,DAU ist eine Abkürzung.,0_short,Computer|Internet,2012-12-10T18:08:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=DAU 1:=ist 2:=eine 3:=Abkürzung.,1,,DAU is an abbreviation.,"['# ::snt DAU is an abbreviation.\n(a / abbreviation\n      :domain (n / name\n            :op1 ""DAU""))']","[a, attr-instance, abbreviation, attr-domain, [n, attr-instance, name, attr-op1, ""dau""]]"
1039,1039,1039,1039,1260,9946,dau,Die Abkürzung steht für: \newline Dümmster anzunehmender User,1_short,Computer|Internet,2012-12-10T18:08:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Abkürzung 2:=steht 3:=für: 4:=\newline 5:=Dümmster 6:=anzunehmender 7:=User,1,,The abbreviation stands for: \newline Dumbest possible user,"['# ::snt The abbreviation stands for: \\newline Dumbest possible user\n(s / stand-08\n      :ARG1 (a / abbreviation)\n      :ARG2 (s2 / string-entity\n            :value ""umbline""\n            :ARG2-of (h / have-degree-91\n                  :ARG1 (p / person\n                        :ARG0-of (u / use-01))\n                  :ARG3 (m / most)\n                  :ARG5 (p2 / possible-01\n                        :ARG1 u))))']","[s, attr-instance, stand_08, attr-arg1, [a, attr-instance, abbreviation], attr-arg2, [s2, attr-instance, string_entity, attr-value, ""umbline"", attr-arg2_of, [h, attr-instance, have_degree_91, attr-arg1, [p, attr-instance, person, attr-arg0_of, [u, attr-instance, use_01]], attr-arg3, [m, attr-instance, most], attr-arg5, [p2, attr-instance, possible_01, attr-arg1, u]]]]"
1040,1040,1040,1040,1261,9947,david-bowie,David Bowie ist am 8. Januar 1947 geboren worden.,0_long,Musik|Personen,2016-01-11T18:42:10Z,28d34f2e053dee2c0e9399a7924cd978,0:=David 1:=Bowie 2:=ist 3:=am 4:=8. 5:=Januar 6:=1947 7:=geboren 8:=worden.,1,,"David Bowie was born on January 8, 1947.","['# ::snt David Bowie was born on January 8, 1947.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""David""\n                  :op2 ""B Bowie""))\n      :time (d / date-entity\n            :year 1947\n            :month 1\n            :day 8))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""david"", attr-op2, ""b, bowie""]], attr-time, [d, attr-instance, date_entity, attr-year, 1947, attr-month, 1, attr-day, 8]]"
1041,1041,1041,1041,1262,9948,david-bowie,"Das war in London, Großbritannien.",1_long,Musik|Personen,2016-01-11T18:42:10Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Das 1:=war 2:=in 3:=London, 4:=Großbritannien.",2,"[[3], [4]]","This was in London, UK.","['# ::snt This was in London, UK.\n(b / be-located-at-91\n      :ARG1 (t / this)\n      :ARG2 (c / city\n            :name (n / name\n                  :op1 ""London"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""UK""))))']","[b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, this], attr-arg2, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""london""], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""uk""]]]]"
1042,1042,1042,1042,1263,9949,david-bowie,David Bowie ist am 10. Januar 2016 gestorben.,2_long,Musik|Personen,2016-01-11T18:42:10Z,28d34f2e053dee2c0e9399a7924cd978,0:=David 1:=Bowie 2:=ist 3:=am 4:=10. 5:=Januar 6:=2016 7:=gestorben.,1,,"David Bowie died on January 10, 2016.","['# ::snt David Bowie died on January 10, 2016.\n(d / die-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""David""\n                  :op2 ""Bowie""))\n      :time (d2 / date-entity\n            :day 10\n            :month 1\n            :year 2016))']","[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""david"", attr-op2, ""bowie""]], attr-time, [d2, attr-instance, date_entity, attr-day, 10, attr-month, 1, attr-year, 2016]]"
1043,1043,1043,1043,1265,9951,david-bowie,"In dem Jahr hat er das Lied ""Space Oddity"" gemacht.",4_long,Musik|Personen,2016-01-11T18:42:10Z,28d34f2e053dee2c0e9399a7924cd978,"0:=In 1:=dem 2:=Jahr 3:=hat 4:=er 5:=das 6:=Lied 7:=""Space 8:=Oddity"" 9:=gemacht.",2,"[[0, 2], [3, 4, 6, 7, 8, 9]]","That year he made the song ""Space Oddity"".","['# ::snt That year he made the song ""Space Oddity"".\n(m / make-01\n      :ARG0 (h / he)\n      :ARG1 (s / song\n            :name (n / name\n                  :op1 ""Space""\n                  :op2 ""Oddity""))\n      :time (y / year\n            :mod (t / that)))']","[m, attr-instance, make_01, attr-arg0, [h, attr-instance, he], attr-arg1, [s, attr-instance, song, attr-name, [n, attr-instance, name, attr-op1, ""space"", attr-op2, ""oddity""]], attr-time, [y, attr-instance, year, attr-mod, [t, attr-instance, that]]]"
1044,1044,1044,1044,1266,9952,david-bowie,David Bowie hat mit vielen anderen Musikern und Gruppen zusammen gearbeitet.,5_long,Musik|Personen,2016-01-11T18:42:10Z,28d34f2e053dee2c0e9399a7924cd978,0:=David 1:=Bowie 2:=hat 3:=mit 4:=vielen 5:=anderen 6:=Musikern 7:=und 8:=Gruppen 9:=zusammen 10:=gearbeitet.,2,"[[6], [8]]",David Bowie has worked with many other musicians and groups.,"['# ::snt David Bowie has worked with many other musicians and groups.\n(w / work-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""David""\n                  :op2 ""B Bowie""))\n      :ARG3 (a / and\n            :op1 (m / musician)\n            :op2 (g / group)\n            :mod (o / other)\n            :quant (m2 / many)))']","[w, attr-instance, work_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""david"", attr-op2, ""b, bowie""]], attr-arg3, [a, attr-instance, and, attr-op1, [m, attr-instance, musician], attr-op2, [g, attr-instance, group], attr-mod, [o, attr-instance, other], attr-quant, [m2, attr-instance, many]]]"
1045,1045,1045,1045,1278,9964,david-bowie,David Bowie hat auch in Filmen mit gemacht.,17_long,Musik|Personen,2016-01-11T18:42:10Z,28d34f2e053dee2c0e9399a7924cd978,0:=David 1:=Bowie 2:=hat 3:=auch 4:=in 5:=Filmen 6:=mit 7:=gemacht.,1,,David Bowie also acted in films.,"['# ::snt David Bowie also acted in films.\n(a / act-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""David""\n                  :op2 ""Bowie""))\n      :ARG1 (f / film)\n      :mod (a2 / also))']","[a, attr-instance, act_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""david"", attr-op2, ""bowie""]], attr-arg1, [f, attr-instance, film], attr-mod, [a2, attr-instance, also]]"
1046,1046,1046,1046,1279,9965,david-bowie,Er hat einen Stern auf dem Hollywood Walk of Fame.,18_long,Musik|Personen,2016-01-11T18:42:10Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=hat 2:=einen 3:=Stern 4:=auf 5:=dem 6:=Hollywood 7:=Walk 8:=of 9:=Fame.,3,"[[0, 1, 3], [4, 7, 8, 9], [6]]",He has a star on the Hollywood Walk of Fame.,"['# ::snt He has a star on the Hollywood Walk of Fame.\n(h / have-03\n      :ARG0 (h2 / he)\n      :ARG1 (s / star\n            :location (f / facility\n                  :name (n / name\n                        :op1 ""Hollywood""\n                        :op2 ""Walk""\n                        :op3 ""of""\n                        :op4 ""Fame""))))']","[h, attr-instance, have_03, attr-arg0, [h2, attr-instance, he], attr-arg1, [s, attr-instance, star, attr-location, [f, attr-instance, facility, attr-name, [n, attr-instance, name, attr-op1, ""hollywood"", attr-op2, ""walk"", attr-op3, ""of"", attr-op4, ""fame""]]]]"
1047,1047,1047,1047,1280,9966,david-bowie,David Bowie war ein Musiker und Schauspieler.,0_short,Musik|Personen,2016-01-11T18:42:10Z,28d34f2e053dee2c0e9399a7924cd978,0:=David 1:=Bowie 2:=war 3:=ein 4:=Musiker 5:=und 6:=Schauspieler.,2,"[[4], [6]]",David Bowie was a musician and actor.,"['# ::snt David Bowie was a musician and actor.\n(a / and\n      :op1 (m / musician)\n      :op2 (p / person\n            :ARG0-of (a2 / act-01))\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""David""\n                  :op2 ""B Bowie"")))']","[a, attr-instance, and, attr-op1, [m, attr-instance, musician], attr-op2, [p, attr-instance, person, attr-arg0_of, [a2, attr-instance, act_01]], attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""david"", attr-op2, ""b, bowie""]]]"
1048,1048,1048,1048,1281,9967,dbt,DBT ist ein Therapieverfahren.,0_short,,2020-07-04T07:35:34Z,4a8d7c87339c287de35ba4be954bbfbf,0:=DBT 1:=ist 2:=ein 3:=Therapieverfahren.,1,,DBT is a therapy method.,"['# ::snt DBT is a therapy method.\n(m / method\n      :instrument-of (t / therapy)\n      :domain (p / product\n            :name (n / name\n                  :op1 ""DBT"")))']","[m, attr-instance, method, attr-instrument_of, [t, attr-instance, therapy], attr-domain, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""dbt""]]]"
1049,1049,1049,1049,1282,9968,dbt,Damit hilft man Menschen mit Borderline-Persönlichkeits-störung.,1_short,,2020-07-04T07:35:34Z,4a8d7c87339c287de35ba4be954bbfbf,0:=Damit 1:=hilft 2:=man 3:=Menschen 4:=mit 5:=Borderline-Persönlichkeits-störung.,2,"[[0, 1, 2, 3], [4, 5]]",This helps people with borderline personality disorder.,['# ::snt This helps people with borderline personality disorder.\n(h / help-01\n      :ARG0 (t / this)\n      :ARG1 (p / person\n            :ARG0-of (h2 / have-03\n                  :ARG1 (d / disorder\n                        :mod (p2 / personality\n                              :mod (b / borderline))))))'],"[h, attr-instance, help_01, attr-arg0, [t, attr-instance, this], attr-arg1, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_03, attr-arg1, [d, attr-instance, disorder, attr-mod, [p2, attr-instance, personality, attr-mod, [b, attr-instance, borderline]]]]]]"
1050,1050,1050,1050,1283,9969,dbt,Das ist eine Krankheit der Seele.,2_short,,2020-07-04T07:35:34Z,4a8d7c87339c287de35ba4be954bbfbf,0:=Das 1:=ist 2:=eine 3:=Krankheit 4:=der 5:=Seele.,2,"[[0, 1], [4, 5]]",This is a disease of the soul.,['# ::snt This is a disease of the soul.\n(d / disease\n      :domain (t / this)\n      :poss (s / soul))'],"[d, attr-instance, disease, attr-domain, [t, attr-instance, this], attr-poss, [s, attr-instance, soul]]"
1051,1051,1051,1051,1284,9970,dbt,Für die Therapie geht man zu einem Psycho-therapeuten.,3_short,,2020-07-04T07:35:34Z,4a8d7c87339c287de35ba4be954bbfbf,0:=Für 1:=die 2:=Therapie 3:=geht 4:=man 5:=zu 6:=einem 7:=Psycho-therapeuten.,2,"[[0, 2], [3, 4, 5, 7]]",For therapy you go to a psychotherapist.,['# ::snt For therapy you go to a psychotherapist.\n(g / go-02\n      :ARG0 (y / you)\n      :ARG4 (p / psychotherapist)\n      :purpose (t / therapy))'],"[g, attr-instance, go_02, attr-arg0, [y, attr-instance, you], attr-arg4, [p, attr-instance, psychotherapist], attr-purpose, [t, attr-instance, therapy]]"
1052,1052,1052,1052,1285,9971,dbt,Das ist ein Behandler für die Seele.,4_short,,2020-07-04T07:35:34Z,4a8d7c87339c287de35ba4be954bbfbf,0:=Das 1:=ist 2:=ein 3:=Behandler 4:=für 5:=die 6:=Seele.,2,"[[0, 1], [4, 6]]",This is a healer for the soul.,['# ::snt This is a healer for the soul.\n(h / heal-01\n      :ARG0 (t / this)\n      :ARG1 (s / soul))'],"[h, attr-instance, heal_01, attr-arg0, [t, attr-instance, this], attr-arg1, [s, attr-instance, soul]]"
1053,1053,1053,1053,1287,9973,dbt,D B T heißt ausgeschrieben Dialektisch-Behaviorale Therapie.,6_short,,2020-07-04T07:35:34Z,4a8d7c87339c287de35ba4be954bbfbf,0:=D 1:=B 2:=T 3:=heißt 4:=ausgeschrieben 5:=Dialektisch-Behaviorale 6:=Therapie.,1,,D B T stands for Dialectical Behavioral Therapy.,"['# ::snt D B T stands for Dialectical Behavioral Therapy.\n(s / stand-08\n      :ARG1 (s2 / string-entity\n            :value ""D""\n            :mod s2\n            :value ""T"")\n      :ARG2 (t / therapy\n            :mod (d / Dialectical\n                  :mod (b / Behavioral))))']","[s, attr-instance, stand_08, attr-arg1, [s2, attr-instance, string_entity, attr-value, ""d"", attr-mod, s2, attr-value, ""t""], attr-arg2, [t, attr-instance, therapy, attr-mod, [d, attr-instance, dialectical, attr-mod, [b, attr-instance, behavioral]]]]"
1054,1054,1054,1054,1288,9974,dbt,"Das bedeutet, dass hier behandelt wird, was man tut.",7_short,,2020-07-04T07:35:34Z,4a8d7c87339c287de35ba4be954bbfbf,"0:=Das 1:=bedeutet, 2:=dass 3:=hier 4:=behandelt 5:=wird, 6:=was 7:=man 8:=tut.",2,"[[2, 3, 4, 5], [6, 7, 8]]",This means that what you do is what is discussed here.,['# ::snt This means that what you do is what is discussed here.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (t2 / thing\n            :ARG1-of (d / do-02\n                  :ARG0 (y / you))\n            :domain (t3 / thing\n                  :ARG1-of (d2 / discuss-01\n                        :location (h / here)))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [t2, attr-instance, thing, attr-arg1_of, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you]], attr-domain, [t3, attr-instance, thing, attr-arg1_of, [d2, attr-instance, discuss_01, attr-location, [h, attr-instance, here]]]]]"
1055,1055,1055,1055,1289,9975,dbt,"Das kann zum Beispiel sein, dass man sich selbst oder anderen weh tut.",8_short,,2020-07-04T07:35:34Z,4a8d7c87339c287de35ba4be954bbfbf,"0:=Das 1:=kann 2:=zum 3:=Beispiel 4:=sein, 5:=dass 6:=man 7:=sich 8:=selbst 9:=oder 10:=anderen 11:=weh 12:=tut.",3,"[[0, 1, 2, 3, 4], [5, 6, 7, 8, 11, 12], [5, 6, 10, 11, 12]]","This could, for example, mean hurting yourself or others.","['# ::snt This could, for example, mean hurting yourself or others.\n(p / possible-01\n      :ARG1 (m / mean-01\n            :ARG1 (t / this)\n            :ARG2 (h / hurt-01\n                  :ARG1 (o / or\n                        :op1 (y / you)\n                        :op2 (p2 / person\n                              :mod (o2 / other)))))\n      :ARG0-of (e / exemplify-01))']","[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [h, attr-instance, hurt_01, attr-arg1, [o, attr-instance, or, attr-op1, [y, attr-instance, you], attr-op2, [p2, attr-instance, person, attr-mod, [o2, attr-instance, other]]]]], attr-arg0_of, [e, attr-instance, exemplify_01]]"
1056,1056,1056,1056,1290,9976,dbt,"DBT hilft einem dabei, das nicht mehr zu machen.",9_short,,2020-07-04T07:35:34Z,4a8d7c87339c287de35ba4be954bbfbf,"0:=DBT 1:=hilft 2:=einem 3:=dabei, 4:=das 5:=nicht 6:=mehr 7:=zu 8:=machen.",2,"[[0, 1, 2, 3], [4, 5, 6, 7, 8]]",DBT helps you stop doing that.,"['# ::snt DBT helps you stop doing that.\n(h / help-01\n      :ARG0 (p / product\n            :name (n / name\n                  :op1 ""DBT""))\n      :ARG1 (s / stop-01\n            :ARG0 (y / you)\n            :ARG1 (d / do-02\n                  :ARG0 y\n                  :ARG1 (t / that)))\n      :ARG2 y)']","[h, attr-instance, help_01, attr-arg0, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""dbt""]], attr-arg1, [s, attr-instance, stop_01, attr-arg0, [y, attr-instance, you], attr-arg1, [d, attr-instance, do_02, attr-arg0, y, attr-arg1, [t, attr-instance, that]]], attr-arg2, y]"
1057,1057,1057,1057,1291,9977,de-cix,Jede Telefon-firma hat Telefon-leitungen.,0_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-02-01T21:54:47Z,28d34f2e053dee2c0e9399a7924cd978,0:=Jede 1:=Telefon-firma 2:=hat 3:=Telefon-leitungen.,1,,Every telephone company has telephone lines.,['# ::snt Every telephone company has telephone lines.\n(h / have-03\n      :ARG0 (c / company\n            :mod (e / every)\n            :mod (t / telephone))\n      :ARG1 (l / line\n            :mod (t2 / telephone)))'],"[h, attr-instance, have_03, attr-arg0, [c, attr-instance, company, attr-mod, [e, attr-instance, every], attr-mod, [t, attr-instance, telephone]], attr-arg1, [l, attr-instance, line, attr-mod, [t2, attr-instance, telephone]]]"
1058,1058,1058,1058,1292,9978,de-cix,Alle Leitungen zusammen heißen Netz.,1_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-02-01T21:54:47Z,28d34f2e053dee2c0e9399a7924cd978,0:=Alle 1:=Leitungen 2:=zusammen 3:=heißen 4:=Netz.,1,,All the cables together are called the network.,['# ::snt All the cables together are called the network.\n(c / call-01\n      :ARG1 (c2 / cable\n            :mod (a / all)\n            :mod (t / together))\n      :ARG2 (n / network))'],"[c, attr-instance, call_01, attr-arg1, [c2, attr-instance, cable, attr-mod, [a, attr-instance, all], attr-mod, [t, attr-instance, together]], attr-arg2, [n, attr-instance, network]]"
1059,1059,1059,1059,1293,9979,de-cix,Die Firmen verbinden ihre Netze miteinander.,2_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-02-01T21:54:47Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Firmen 2:=verbinden 3:=ihre 4:=Netze 5:=miteinander.,1,,The companies connect their networks with each other.,['# ::snt The companies connect their networks with each other.\n(c / connect-01\n      :ARG0 (c2 / company)\n      :ARG1 (n / network\n            :poss c2)\n      :ARG2 (o / other\n            :mod (e / each)))'],"[c, attr-instance, connect_01, attr-arg0, [c2, attr-instance, company], attr-arg1, [n, attr-instance, network, attr-poss, c2], attr-arg2, [o, attr-instance, other, attr-mod, [e, attr-instance, each]]]"
1060,1060,1060,1060,1294,9980,de-cix,Der Verbindungs-ort heißt Netz-knoten.,3_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-02-01T21:54:47Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Verbindungs-ort 2:=heißt 3:=Netz-knoten.,1,,The connection point is called a network node.,['# ::snt The connection point is called a network node.\n(c / call-01\n      :ARG1 (p / point\n            :location-of (c2 / connect-01))\n      :ARG2 (n / node\n            :mod (n2 / network)))'],"[c, attr-instance, call_01, attr-arg1, [p, attr-instance, point, attr-location_of, [c2, attr-instance, connect_01]], attr-arg2, [n, attr-instance, node, attr-mod, [n2, attr-instance, network]]]"
1061,1061,1061,1061,1295,9981,de-cix,Auf der ganzen Welt gibt es ungefähr 340 Netz-knoten.,4_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-02-01T21:54:47Z,28d34f2e053dee2c0e9399a7924cd978,0:=Auf 1:=der 2:=ganzen 3:=Welt 4:=gibt 5:=es 6:=ungefähr 7:=340 8:=Netz-knoten.,2,"[[0, 2, 3], [4, 5, 6, 7, 8]]",There are approximately 340 network nodes around the world.,['# ::snt There are approximately 340 network nodes around the world.\n(b / be-located-at-91\n      :ARG1 (n / node\n            :mod (n2 / network)\n            :quant (a / approximately\n                  :op1 340))\n      :ARG2 (a2 / around\n            :op1 (w / world)))'],"[b, attr-instance, be_located_at_91, attr-arg1, [n, attr-instance, node, attr-mod, [n2, attr-instance, network], attr-quant, [a, attr-instance, approximately, attr-op1, 340]], attr-arg2, [a2, attr-instance, around, attr-op1, [w, attr-instance, world]]]"
1062,1062,1062,1062,1298,9984,de-cix,Der BND gibt die Daten auch an den Spionage-dienst NSA weiter.,7_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-02-01T21:54:47Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=BND 2:=gibt 3:=die 4:=Daten 5:=auch 6:=an 7:=den 8:=Spionage-dienst 9:=NSA 10:=weiter.,2,"[[1, 2, 4, 10], [5, 6, 8, 9]]",The BND also passes the data on to the spy service NSA.,"['# ::snt The BND also passes the data on to the spy service NSA.\n(p / pass-05\n      :ARG0 (p2 / publication\n            :name (n / name\n                  :op1 ""BND""))\n      :ARG1 (d / data)\n      :ARG2 (g / government-organization\n            :name (n2 / name\n                  :op1 ""NSA"")\n            :mod (s / spy-01))\n      :mod (a / also))']","[p, attr-instance, pass_05, attr-arg0, [p2, attr-instance, publication, attr-name, [n, attr-instance, name, attr-op1, ""bnd""]], attr-arg1, [d, attr-instance, data], attr-arg2, [g, attr-instance, government_organization, attr-name, [n2, attr-instance, name, attr-op1, ""nsa""], attr-mod, [s, attr-instance, spy_01]], attr-mod, [a, attr-instance, also]]"
1063,1063,1063,1063,1299,9985,de-cix,DE-CIX ist der Name von einem Internet-knoten.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-02-01T21:54:47Z,28d34f2e053dee2c0e9399a7924cd978,0:=DE-CIX 1:=ist 2:=der 3:=Name 4:=von 5:=einem 6:=Internet-knoten.,2,"[[0, 1], [4, 6]]",DE-CIX is the name of an Internet node.,"['# ::snt DE-CIX is the name of an Internet node.\n(n / name-01\n      :ARG1 (t / thing\n            :name (n2 / name\n                  :op1 ""DE-CIX""))\n      :ARG2 (n3 / node\n            :mod (ii / internet)))']","[n, attr-instance, name_01, attr-arg1, [t, attr-instance, thing, attr-name, [n2, attr-instance, name, attr-op1, ""de_cix""]], attr-arg2, [n3, attr-instance, node, attr-mod, [ii, attr-instance, internet]]]"
1064,1064,1064,1064,1300,9986,de-facto,De facto ist lateinisch.,0_long,Ohne_Kategorie,2012-04-11T08:37:32Z,c2a3161aaa81e977e80fd1ffa03a4bb0,0:=De 1:=facto 2:=ist 3:=lateinisch.,1,,De facto is Latin.,"['# ::snt De facto is Latin.\n(l / language\n      :name (n / name\n            :op1 ""Latin"")\n      :domain (d / de-facto))']","[l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""latin""], attr-domain, [d, attr-instance, de_facto]]"
1065,1065,1065,1065,1301,9987,de-facto,"Es heißt auf deutsch ""von der Tat her, den Tatsachen nach"".",1_long,Ohne_Kategorie,2012-04-11T08:37:32Z,c2a3161aaa81e977e80fd1ffa03a4bb0,"0:=Es 1:=heißt 2:=auf 3:=deutsch 4:=""von 5:=der 6:=Tat 7:=her, 8:=den 9:=Tatsachen 10:=nach"".",2,"[[4, 6, 7], [9, 10]]","In German it means ""from the deed, according to the facts"".","['# ::snt In German it means ""from the deed, according to the facts"".\n(m / mean-01\n      :ARG1 (ii / it)\n      :ARG2 (b / be-from-91\n            :ARG2 (d / deed)\n            :ARG1-of (s / say-01\n                  :ARG0 (f / fact)))\n      :medium (l / language\n            :name (n / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [b, attr-instance, be_from_91, attr-arg2, [d, attr-instance, deed], attr-arg1_of, [s, attr-instance, say_01, attr-arg0, [f, attr-instance, fact]]], attr-medium, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""german""]]]"
1066,1066,1066,1066,1302,9988,de-facto,de facto ist ein anderes Wort für tatsächlich.,0_short,Ohne_Kategorie,2012-04-11T08:37:32Z,c2a3161aaa81e977e80fd1ffa03a4bb0,0:=de 1:=facto 2:=ist 3:=ein 4:=anderes 5:=Wort 6:=für 7:=tatsächlich.,1,,de facto is another word for actually.,['# ::snt de facto is another word for actually.\n(w / word\n      :mod (a / another)\n      :domain (d / de-facto)\n      :ARG1-of (a2 / actual-02))'],"[w, attr-instance, word, attr-mod, [a, attr-instance, another], attr-domain, [d, attr-instance, de_facto], attr-arg1_of, [a2, attr-instance, actual_02]]"
1067,1067,1067,1067,1303,9989,de-facto,"Das beudeutet, \newline dass etwas ""wirklich"" so ist.",1_short,Ohne_Kategorie,2012-04-11T08:37:32Z,c2a3161aaa81e977e80fd1ffa03a4bb0,"0:=Das 1:=beudeutet, 2:=\newline 3:=dass 4:=etwas 5:=""wirklich"" 6:=so 7:=ist.",1,,"This means \newline that something is ""really"" so.","['# ::snt This means \\newline that something is ""really"" so.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (l / line-04\n            :ARG1 (s / so\n                  :ARG1-of (r / real-04)\n                  :domain (s2 / something))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [l, attr-instance, line_04, attr-arg1, [s, attr-instance, so, attr-arg1_of, [r, attr-instance, real_04], attr-domain, [s2, attr-instance, something]]]]"
1068,1068,1068,1068,1304,9990,deadline,Eine Deadline hat eine bestimmte Zeit.,0_long,Ohne_Kategorie,2012-09-05T07:48:56Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Eine 1:=Deadline 2:=hat 3:=eine 4:=bestimmte 5:=Zeit.,1,,A deadline has a specific time.,['# ::snt A deadline has a specific time.\n(h / have-03\n      :ARG0 (d / deadline)\n      :ARG1 (t / time\n            :ARG1-of (s / specific-02)))'],"[h, attr-instance, have_03, attr-arg0, [d, attr-instance, deadline], attr-arg1, [t, attr-instance, time, attr-arg1_of, [s, attr-instance, specific_02]]]"
1069,1069,1069,1069,1305,9991,deadline,Das heißt: \newline Bis dahin muss etwas erledigt sein,1_long,Ohne_Kategorie,2012-09-05T07:48:56Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Das 1:=heißt: 2:=\newline 3:=Bis 4:=dahin 5:=muss 6:=etwas 7:=erledigt 8:=sein,1,,That means: \newline Something has to be done by then,['# ::snt That means: \\newline Something has to be done by then\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (o / obligate-01\n            :ARG2 (d / do-02\n                  :ARG1 (s / something)\n                  :time (b / by\n                        :op1 (t2 / then))))\n      :mod (l / line\n            :mod (n / new)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [o, attr-instance, obligate_01, attr-arg2, [d, attr-instance, do_02, attr-arg1, [s, attr-instance, something], attr-time, [b, attr-instance, by, attr-op1, [t2, attr-instance, then]]]], attr-mod, [l, attr-instance, line, attr-mod, [n, attr-instance, new]]]"
1070,1070,1070,1070,1306,9992,deadline,Eine Deadline ist ein Termin.,0_short,Ohne_Kategorie,2012-09-05T07:48:56Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Eine 1:=Deadline 2:=ist 3:=ein 4:=Termin.,1,,A deadline is a date.,['# ::snt A deadline is a date.\n(d / deadline\n      :domain (d2 / date))'],"[d, attr-instance, deadline, attr-domain, [d2, attr-instance, date]]"
1071,1071,1071,1071,1307,9993,deakzession,Bei einer Deakzession wird für neue Sachen Platz gemacht.,0_short,Ohne_Kategorie,2014-05-06T08:17:23Z,af28a20dfb151690981ee13d72ce655c,0:=Bei 1:=einer 2:=Deakzession 3:=wird 4:=für 5:=neue 6:=Sachen 7:=Platz 8:=gemacht.,3,"[[3, 7, 8], [4, 6], [5, 6]]",Deaccessioning makes room for new things.,['# ::snt Deaccessioning makes room for new things.\n(m / make-02\n      :ARG0 (d / deaccession-01)\n      :ARG1 (r / room\n            :purpose (t / thing\n                  :ARG1-of (n / new-01))))'],"[m, attr-instance, make_02, attr-arg0, [d, attr-instance, deaccession_01], attr-arg1, [r, attr-instance, room, attr-purpose, [t, attr-instance, thing, attr-arg1_of, [n, attr-instance, new_01]]]]"
1072,1072,1072,1072,1308,9994,deakzession,Beispiel Bücherei: • alte Bücher werden sortiert und weg-gebracht,1_short,Ohne_Kategorie,2014-05-06T08:17:23Z,af28a20dfb151690981ee13d72ce655c,0:=Beispiel 1:=Bücherei: 2:=• 3:=alte 4:=Bücher 5:=werden 6:=sortiert 7:=und 8:=weg-gebracht,3,"[[3], [5, 6], [5, 8]]",Example library: • old books are sorted and taken away,['# ::snt Example library: • old books are sorted and taken away\n(e / exemplify-01\n      :ARG0 (l / library)\n      :ARG1 (a / and\n            :op1 (s / sort-01\n                  :ARG1 (b / book\n                        :mod (o / old)))\n            :op2 (t / take-away-05\n                  :ARG1 b)))'],"[e, attr-instance, exemplify_01, attr-arg0, [l, attr-instance, library], attr-arg1, [a, attr-instance, and, attr-op1, [s, attr-instance, sort_01, attr-arg1, [b, attr-instance, book, attr-mod, [o, attr-instance, old]]], attr-op2, [t, attr-instance, take_away_05, attr-arg1, b]]]"
1073,1073,1073,1073,1309,9995,debatte,Das Wort Debatte kommt aus der französischen Sprache.,0_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-01-30T06:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=Wort 2:=Debatte 3:=kommt 4:=aus 5:=der 6:=französischen 7:=Sprache.,1,,The word debate comes from the French language.,"['# ::snt The word debate comes from the French language.\n(c / come-03\n      :ARG1 (w / word\n            :mod (d / debate-01))\n      :ARG2 (l / language\n            :name (n / name\n                  :op1 ""French"")))']","[c, attr-instance, come_03, attr-arg1, [w, attr-instance, word, attr-mod, [d, attr-instance, debate_01]], attr-arg2, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""french""]]]"
1074,1074,1074,1074,1311,9997,debatte,Für das Gespräch gibt es Regeln.,2_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-01-30T06:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Für 1:=das 2:=Gespräch 3:=gibt 4:=es 5:=Regeln.,2,"[[0, 2], [3, 4, 5]]",There are rules for the conversation.,['# ::snt There are rules for the conversation.\n(r / rule-01\n      :ARG1 (c / converse-01))'],"[r, attr-instance, rule_01, attr-arg1, [c, attr-instance, converse_01]]"
1075,1075,1075,1075,1312,9998,debatte,Die Leute sagen Argumente für das Thema.,3_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-01-30T06:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Leute 2:=sagen 3:=Argumente 4:=für 5:=das 6:=Thema.,2,"[[1, 2], [4, 6]]",People say arguments for the topic.,['# ::snt People say arguments for the topic.\n(s / say-01\n      :ARG0 (p / person)\n      :ARG1 (a / argue-01\n            :ARG1 (t / topic)))'],"[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person], attr-arg1, [a, attr-instance, argue_01, attr-arg1, [t, attr-instance, topic]]]"
1076,1076,1076,1076,1313,9999,debatte,Und sie sagen Gegen-argumente.,4_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-01-30T06:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=sie 2:=sagen 3:=Gegen-argumente.,1,,And they say counter-arguments.,['# ::snt And they say counter-arguments.\n(a / and\n      :op2 (s / say-01\n            :ARG0 (t / they)\n            :ARG1 (a2 / argue-01\n                  :ARG0-of (c / counter-01))))'],"[a, attr-instance, and, attr-op2, [s, attr-instance, say_01, attr-arg0, [t, attr-instance, they], attr-arg1, [a2, attr-instance, argue_01, attr-arg0_of, [c, attr-instance, counter_01]]]]"
1077,1077,1077,1077,1314,10000,debatte,Die Leute versuchen die anderen von ihrer Meinung zu überzeugen.,5_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-01-30T06:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Leute 2:=versuchen 3:=die 4:=anderen 5:=von 6:=ihrer 7:=Meinung 8:=zu 9:=überzeugen.,2,"[[1, 2], [4, 5, 6, 7, 8, 9]]",People try to convince others of their opinion.,['# ::snt People try to convince others of their opinion.\n(t / try-01\n      :ARG0 (p / person)\n      :ARG1 (c / convince-01\n            :ARG0 p\n            :ARG1 (o / other)\n            :ARG2 (o2 / opine-01\n                  :ARG0 o)))'],"[t, attr-instance, try_01, attr-arg0, [p, attr-instance, person], attr-arg1, [c, attr-instance, convince_01, attr-arg0, p, attr-arg1, [o, attr-instance, other], attr-arg2, [o2, attr-instance, opine_01, attr-arg0, o]]]"
1078,1078,1078,1078,1315,10001,debatte,In der Politik gibt es Debatten.,6_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-01-30T06:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=In 1:=der 2:=Politik 3:=gibt 4:=es 5:=Debatten.,2,"[[0, 2], [3, 4, 5]]",There are debates in politics.,['# ::snt There are debates in politics.\n(d / debate-01\n      :location (p / politics))'],"[d, attr-instance, debate_01, attr-location, [p, attr-instance, politics]]"
1079,1079,1079,1079,1316,10003,debatte,Dann reden die Politiker im Parlament.,8_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-01-30T06:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Dann 1:=reden 2:=die 3:=Politiker 4:=im 5:=Parlament.,2,"[[0, 1, 3], [4, 5]]",Then the politicians speak in parliament.,"['# ::snt Then the politicians speak in parliament.\n(s / speak-01\n      :ARG0 (p / politician)\n      :location (g / government-organization\n            :name (n / name\n                  :op1 ""Parliament""))\n      :time (t / then))']","[s, attr-instance, speak_01, attr-arg0, [p, attr-instance, politician], attr-location, [g, attr-instance, government_organization, attr-name, [n, attr-instance, name, attr-op1, ""parliament""]], attr-time, [t, attr-instance, then]]"
1080,1080,1080,1080,1317,10004,debatte,Sie sagen ihre Argumente für das Gesetz.,9_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-01-30T06:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Sie 1:=sagen 2:=ihre 3:=Argumente 4:=für 5:=das 6:=Gesetz.,2,"[[0, 1], [4, 6]]",They say their arguments for the law.,['# ::snt They say their arguments for the law.\n(s / say-01\n      :ARG0 (t / they)\n      :ARG1 (a / argue-01\n            :ARG0 t\n            :ARG1 (l / law)))'],"[s, attr-instance, say_01, attr-arg0, [t, attr-instance, they], attr-arg1, [a, attr-instance, argue_01, attr-arg0, t, attr-arg1, [l, attr-instance, law]]]"
1081,1081,1081,1081,1321,10008,debatte,Eine Debatte ist ein Streit-gespräch.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2015-01-30T06:01:49Z,6275ee07d0785a2da491fbb224064f23,0:=Eine 1:=Debatte 2:=ist 3:=ein 4:=Streit-gespräch.,1,,A debate is an argument.,['# ::snt A debate is an argument.\n(d / debate-01\n      :mod (a / argument))'],"[d, attr-instance, debate_01, attr-mod, [a, attr-instance, argument]]"
1082,1082,1082,1082,1322,10009,debut,"Jemand der ein Debüt macht, \newline ist ein Debütant.",0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2020-11-24T09:29:50Z,cb58e1150e0b08f129454e5a88dec780,"0:=Jemand 1:=der 2:=ein 3:=Debüt 4:=macht, 5:=\newline 6:=ist 7:=ein 8:=Debütant.",2,"[[1, 3, 4], [6, 8]]","Someone who makes a debut, \newline is a debutant.","['# ::snt Someone who makes a debut, \\newline is a debutant.\n(d / debutant\n      :domain (s / someone\n            :ARG0-of (d2 / debut-01)))']","[d, attr-instance, debutant, attr-domain, [s, attr-instance, someone, attr-arg0_of, [d2, attr-instance, debut_01]]]"
1083,1083,1083,1083,1323,10010,debut,Ein Debut ist eine erste Arbeit.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2020-11-24T09:29:50Z,cb58e1150e0b08f129454e5a88dec780,0:=Ein 1:=Debut 2:=ist 3:=eine 4:=erste 5:=Arbeit.,2,"[[1, 2], [4]]",A debut is a first work.,['# ::snt A debut is a first work.\n(t / thing\n      :ARG1-of (w / work-01)\n      :ord (o / ordinal-entity\n            :value 1)\n      :domain (d / debut-01))'],"[t, attr-instance, thing, attr-arg1_of, [w, attr-instance, work_01], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1], attr-domain, [d, attr-instance, debut_01]]"
1084,1084,1084,1084,1324,10011,debut,Man zeigt sie zum ersten mal anderen Menschen.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2020-11-24T09:29:50Z,cb58e1150e0b08f129454e5a88dec780,0:=Man 1:=zeigt 2:=sie 3:=zum 4:=ersten 5:=mal 6:=anderen 7:=Menschen.,2,"[[3, 4, 5], [6, 7]]",You show them to other people for the first time.,['# ::snt You show them to other people for the first time.\n(s / show-01\n      :ARG0 (y / you)\n      :ARG1 (t / they)\n      :ARG2 (p / person\n            :mod (o / other))\n      :ord (o2 / ordinal-entity\n            :value 1))'],"[s, attr-instance, show_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, they], attr-arg2, [p, attr-instance, person, attr-mod, [o, attr-instance, other]], attr-ord, [o2, attr-instance, ordinal_entity, attr-value, 1]]"
1085,1085,1085,1085,1327,10014,deckname,Ein Deck-name ist ein Schutz.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-19T20:23:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Deck-name 2:=ist 3:=ein 4:=Schutz.,1,,A cover name is a protection.,['# ::snt A cover name is a protection.\n(p / protect-01\n      :ARG2 (n / name\n            :ARG1-of (c / cover-01)))'],"[p, attr-instance, protect_01, attr-arg2, [n, attr-instance, name, attr-arg1_of, [c, attr-instance, cover_01]]]"
1086,1086,1086,1086,1328,10015,deckname,Der Deck-name soll den echten Namen verschleiern.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-19T20:23:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Deck-name 2:=soll 3:=den 4:=echten 5:=Namen 6:=verschleiern.,1,,The cover name is intended to conceal the real name.,['# ::snt The cover name is intended to conceal the real name.\n(ii / intend-01\n      :ARG1 (c / conceal-01\n            :ARG0 (n / name\n                  :ARG2-of (c2 / cover-01))\n            :ARG1 (n2 / name\n                  :ARG1-of (r / real-04))))'],"[ii, attr-instance, intend_01, attr-arg1, [c, attr-instance, conceal_01, attr-arg0, [n, attr-instance, name, attr-arg2_of, [c2, attr-instance, cover_01]], attr-arg1, [n2, attr-instance, name, attr-arg1_of, [r, attr-instance, real_04]]]]"
1087,1087,1087,1087,1329,10016,deckname,Ein Deck-name können einzelne Personen benutzten.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-19T20:23:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Deck-name 2:=können 3:=einzelne 4:=Personen 5:=benutzten.,1,,A cover name can be used by individual people.,['# ::snt A cover name can be used by individual people.\n(p / possible-01\n      :ARG1 (u / use-01\n            :ARG0 (p2 / person\n                  :mod (ii / individual))\n            :ARG1 (n / name\n                  :ARG2-of (c / cover-01))))'],"[p, attr-instance, possible_01, attr-arg1, [u, attr-instance, use_01, attr-arg0, [p2, attr-instance, person, attr-mod, [ii, attr-instance, individual]], attr-arg1, [n, attr-instance, name, attr-arg2_of, [c, attr-instance, cover_01]]]]"
1088,1088,1088,1088,1331,10019,deckname,Oft werden Deck-namen von Geheim-diensten benutzt.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-19T20:23:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oft 1:=werden 2:=Deck-namen 3:=von 4:=Geheim-diensten 5:=benutzt.,1,,Cover names are often used by secret services.,['# ::snt Cover names are often used by secret services.\n(u / use-01\n      :ARG0 (s / service\n            :mod (s2 / secret))\n      :ARG1 (t / thing\n            :ARG2-of (n / name-01\n                  :ARG1 (c / cover-01)))\n      :frequency (o / often))'],"[u, attr-instance, use_01, attr-arg0, [s, attr-instance, service, attr-mod, [s2, attr-instance, secret]], attr-arg1, [t, attr-instance, thing, attr-arg2_of, [n, attr-instance, name_01, attr-arg1, [c, attr-instance, cover_01]]], attr-frequency, [o, attr-instance, often]]"
1089,1089,1089,1089,1332,10020,deckname,Oder Menschen benutzten im Internet einen Deck-namen.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-19T20:23:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=Menschen 2:=benutzten 3:=im 4:=Internet 5:=einen 6:=Deck-namen.,2,"[[1, 2, 6], [3, 4]]",Or people used an alias on the Internet.,['# ::snt Or people used an alias on the Internet.\n(o / or\n      :op2 (u / use-01\n            :ARG0 (p / person)\n            :ARG1 (a / alias)\n            :location (ii / internet)))'],"[o, attr-instance, or, attr-op2, [u, attr-instance, use_01, attr-arg0, [p, attr-instance, person], attr-arg1, [a, attr-instance, alias], attr-location, [ii, attr-instance, internet]]]"
1090,1090,1090,1090,1333,10021,deckname,Damit sie unerkannt bleiben.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-19T20:23:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=sie 2:=unerkannt 3:=bleiben.,1,,So that they remain undetected.,['# ::snt So that they remain undetected.\n(c / cause-01\n      :ARG1 (r / remain-01\n            :ARG1 (t / they)\n            :ARG3 (d / detect-01\n                  :polarity -\n                  :ARG1 t)))'],"[c, attr-instance, cause_01, attr-arg1, [r, attr-instance, remain_01, attr-arg1, [t, attr-instance, they], attr-arg3, [d, attr-instance, detect_01, attr-polarity, negative, attr-arg1, t]]]"
1091,1091,1091,1091,1334,10022,deckname,Ein Deck-name ist ein falscher Name.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-19T20:23:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Deck-name 2:=ist 3:=ein 4:=falscher 5:=Name.,2,"[[1, 2], [4]]",A deck name is a false name.,['# ::snt A deck name is a false name.\n(n / name\n      :mod (f / false)\n      :domain (n2 / name\n            :mod (d / deck)))'],"[n, attr-instance, name, attr-mod, [f, attr-instance, false], attr-domain, [n2, attr-instance, name, attr-mod, [d, attr-instance, deck]]]"
1092,1092,1092,1092,1335,10023,deckname,Ein Deck-name benutzt man um seinen echten Namen nicht zu sagen.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-19T20:23:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Deck-name 2:=benutzt 3:=man 4:=um 5:=seinen 6:=echten 7:=Namen 8:=nicht 9:=zu 10:=sagen.,2,"[[1, 2, 3], [4, 5, 6, 7, 8, 9, 10]]",An alias is used to avoid revealing your real name.,['# ::snt An alias is used to avoid revealing your real name.\n(u / use-01\n      :ARG1 (a / alias)\n      :ARG2 (a2 / avoid-01\n            :ARG1 (r / reveal-01\n                  :ARG1 (n / name\n                        :poss (y / you)\n                        :ARG1-of (r2 / real-04)))))'],"[u, attr-instance, use_01, attr-arg1, [a, attr-instance, alias], attr-arg2, [a2, attr-instance, avoid_01, attr-arg1, [r, attr-instance, reveal_01, attr-arg1, [n, attr-instance, name, attr-poss, [y, attr-instance, you], attr-arg1_of, [r2, attr-instance, real_04]]]]]"
1093,1093,1093,1093,1336,10024,deep-learning,Computer-netze und Maschinen werden durch Deep Learning besser und schlauer.,0_long,Computer|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2016-11-27T18:31:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Computer-netze 1:=und 2:=Maschinen 3:=werden 4:=durch 5:=Deep 6:=Learning 7:=besser 8:=und 9:=schlauer.,4,"[[0], [2], [7], [9]]",Computer networks and machines become better and smarter through deep learning.,['# ::snt Computer networks and machines become better and smarter through deep learning.\n(b / become-01\n      :ARG1 (a / and\n            :op1 (n / network\n                  :mod (c / computer))\n            :op2 (m / machine\n                  :mod (c2 / computer)))\n      :ARG2 (a2 / and\n            :op1 (h / have-degree-91\n                  :ARG1 a\n                  :ARG2 (g / good-02)\n                  :ARG3 (m2 / more))\n            :op2 (h2 / have-degree-91\n                  :ARG1 a\n                  :ARG2 (s / smart-06\n                        :ARG1 a)\n                  :ARG3 (m3 / more)))\n      :manner (l / learn-01\n            :ARG1-of (d / deep-02)))'],"[b, attr-instance, become_01, attr-arg1, [a, attr-instance, and, attr-op1, [n, attr-instance, network, attr-mod, [c, attr-instance, computer]], attr-op2, [m, attr-instance, machine, attr-mod, [c2, attr-instance, computer]]], attr-arg2, [a2, attr-instance, and, attr-op1, [h, attr-instance, have_degree_91, attr-arg1, a, attr-arg2, [g, attr-instance, good_02], attr-arg3, [m2, attr-instance, more]], attr-op2, [h2, attr-instance, have_degree_91, attr-arg1, a, attr-arg2, [s, attr-instance, smart_06, attr-arg1, a], attr-arg3, [m3, attr-instance, more]]], attr-manner, [l, attr-instance, learn_01, attr-arg1_of, [d, attr-instance, deep_02]]]"
1094,1094,1094,1094,1337,10025,deep-learning,Deep Learning sind Verbesserungen in Computer-netzen.,0_short,Computer|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2016-11-27T18:31:11Z,48f66906899cc4a9477b6c9e32ff4424,0:=Deep 1:=Learning 2:=sind 3:=Verbesserungen 4:=in 5:=Computer-netzen.,2,"[[0, 1, 2], [4, 5]]",Deep learning is improvements in computer networks.,['# ::snt Deep learning is improvements in computer networks.\n(ii / improve-01\n      :ARG0 (l / learn-01\n            :ARG1-of (d / deep-03))\n      :ARG1 (n / network\n            :mod (c / computer)))'],"[ii, attr-instance, improve_01, attr-arg0, [l, attr-instance, learn_01, attr-arg1_of, [d, attr-instance, deep_03]], attr-arg1, [n, attr-instance, network, attr-mod, [c, attr-instance, computer]]]"
1095,1095,1095,1095,1338,10026,deep-learning,"Das heißt, \newline Computer-netze lernen selbst neue Sachen.",1_short,Computer|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2016-11-27T18:31:11Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=Computer-netze 4:=lernen 5:=selbst 6:=neue 7:=Sachen.",1,,This means that \newline computer networks learn new things themselves.,['# ::snt This means that \\newline computer networks learn new things themselves.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (l / learn-01\n            :ARG0 (n / network\n                  :mod (c / computer)\n                  :mod (l2 / line\n                        :mod (n2 / newline)))\n            :ARG1 (t2 / thing\n                  :ARG1-of (n3 / new-02))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [l, attr-instance, learn_01, attr-arg0, [n, attr-instance, network, attr-mod, [c, attr-instance, computer], attr-mod, [l2, attr-instance, line, attr-mod, [n2, attr-instance, newline]]], attr-arg1, [t2, attr-instance, thing, attr-arg1_of, [n3, attr-instance, new_02]]]]"
1096,1096,1096,1096,1340,10028,deep-learning,"Aus den Daten die man in das Übersetzungs-programm eingibt, \newline lernt das Übersetzungs-programm neue Sachen.",3_short,Computer|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2016-11-27T18:31:11Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Aus 1:=den 2:=Daten 3:=die 4:=man 5:=in 6:=das 7:=Übersetzungs-programm 8:=eingibt, 9:=\newline 10:=lernt 11:=das 12:=Übersetzungs-programm 13:=neue 14:=Sachen.",4,"[[0, 2], [3, 4, 8], [5, 7], [10, 12, 13, 14]]","From the data you enter into the translation program, \newline the translation program learns new things.","['# ::snt From the data you enter into the translation program, \\newline the translation program learns new things.\n(l / learn-01\n      :ARG0 (p / program\n            :name (n / name\n                  :op1 ""Translation""\n                  :op2 ""Program""))\n      :ARG1 (t / thing\n            :ARG1-of (n2 / new-01))\n      :source (d / data\n            :ARG1-of (e / enter-01\n                  :ARG0 (y / you)\n                  :prep-into (p2 / program\n                        :mod (t2 / translate-01)))))']","[l, attr-instance, learn_01, attr-arg0, [p, attr-instance, program, attr-name, [n, attr-instance, name, attr-op1, ""translation"", attr-op2, ""program""]], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [n2, attr-instance, new_01]], attr-source, [d, attr-instance, data, attr-arg1_of, [e, attr-instance, enter_01, attr-arg0, [y, attr-instance, you], attr-prep_into, [p2, attr-instance, program, attr-mod, [t2, attr-instance, translate_01]]]]]"
1097,1097,1097,1097,1341,10029,deep-web,Das Deep Web sind Seiten im Internet.,0_short,Internet|Seiten_mit_defekten_Dateilinks,2016-07-31T15:22:03Z,76bf1508c054395f67a605468d76c22f,0:=Das 1:=Deep 2:=Web 3:=sind 4:=Seiten 5:=im 6:=Internet.,1,,The deep web is pages on the Internet.,['# ::snt The deep web is pages on the Internet.\n(p / page\n      :location (ii / internet)\n      :domain (w / web\n            :ARG1-of (d / deep-02)))'],"[p, attr-instance, page, attr-location, [ii, attr-instance, internet], attr-domain, [w, attr-instance, web, attr-arg1_of, [d, attr-instance, deep_02]]]"
1098,1098,1098,1098,1342,10030,deep-web,Sie heißen Deep Web weil normale Such-maschinen die Seiten nicht kennen.,1_short,Internet|Seiten_mit_defekten_Dateilinks,2016-07-31T15:22:03Z,76bf1508c054395f67a605468d76c22f,0:=Sie 1:=heißen 2:=Deep 3:=Web 4:=weil 5:=normale 6:=Such-maschinen 7:=die 8:=Seiten 9:=nicht 10:=kennen.,2,"[[0, 1, 2, 3], [4, 5, 6, 8, 9, 10]]",They are called Deep Web because normal search engines do not know the pages.,"['# ::snt They are called Deep Web because normal search engines do not know the pages.\n(c / call-01\n      :ARG1 (t / they)\n      :ARG2 (c2 / company\n            :name (n / name\n                  :op1 ""Deep""\n                  :op2 ""Web""))\n      :ARG1-of (c3 / cause-01\n            :ARG0 (k / know-01\n                  :polarity -\n                  :ARG0 (s / search-engine\n                        :ARG1-of (n2 / normal-02))\n                  :ARG1 (p / page))))']","[c, attr-instance, call_01, attr-arg1, [t, attr-instance, they], attr-arg2, [c2, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""deep"", attr-op2, ""web""]], attr-arg1_of, [c3, attr-instance, cause_01, attr-arg0, [k, attr-instance, know_01, attr-polarity, negative, attr-arg0, [s, attr-instance, search_engine, attr-arg1_of, [n2, attr-instance, normal_02]], attr-arg1, [p, attr-instance, page]]]]"
1099,1099,1099,1099,1343,10031,deep-web,Du kannst die Seiten nur aufrufen wenn du die Internet-adresse weißt.,2_short,Internet|Seiten_mit_defekten_Dateilinks,2016-07-31T15:22:03Z,76bf1508c054395f67a605468d76c22f,0:=Du 1:=kannst 2:=die 3:=Seiten 4:=nur 5:=aufrufen 6:=wenn 7:=du 8:=die 9:=Internet-adresse 10:=weißt.,2,"[[0, 1, 3, 4, 5], [6, 7, 9, 10]]",You can only access the pages if you know the Internet address.,['# ::snt You can only access the pages if you know the Internet address.\n(p / possible-01\n      :ARG1 (a / access-01\n            :ARG0 (y / you)\n            :ARG1 (p2 / page)\n            :mod (o / only))\n      :condition (k / know-01\n            :ARG0 y\n            :ARG1 (a2 / address\n                  :mod (ii / internet))))'],"[p, attr-instance, possible_01, attr-arg1, [a, attr-instance, access_01, attr-arg0, [y, attr-instance, you], attr-arg1, [p2, attr-instance, page], attr-mod, [o, attr-instance, only]], attr-condition, [k, attr-instance, know_01, attr-arg0, y, attr-arg1, [a2, attr-instance, address, attr-mod, [ii, attr-instance, internet]]]]"
1100,1100,1100,1100,1344,10032,deep-web,Einige dieser Seiten sind durch ein Pass-wort geschützt.,3_short,Internet|Seiten_mit_defekten_Dateilinks,2016-07-31T15:22:03Z,76bf1508c054395f67a605468d76c22f,0:=Einige 1:=dieser 2:=Seiten 3:=sind 4:=durch 5:=ein 6:=Pass-wort 7:=geschützt.,2,"[[0, 1, 2, 3, 7], [4, 6]]",Some of these pages are password protected.,['# ::snt Some of these pages are password protected.\n(p / protect-01\n      :ARG1 (p2 / page\n            :ARG1-of (ii / include-91\n                  :ARG2 (p3 / page\n                        :mod (t / this)))\n            :quant (s / some))\n      :ARG3 (p4 / password))'],"[p, attr-instance, protect_01, attr-arg1, [p2, attr-instance, page, attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [p3, attr-instance, page, attr-mod, [t, attr-instance, this]]], attr-quant, [s, attr-instance, some]], attr-arg3, [p4, attr-instance, password]]"
1101,1101,1101,1101,1345,10033,deep-web,Du kannst sie nur lesen wenn du das Pass-wort kennst.,4_short,Internet|Seiten_mit_defekten_Dateilinks,2016-07-31T15:22:03Z,76bf1508c054395f67a605468d76c22f,0:=Du 1:=kannst 2:=sie 3:=nur 4:=lesen 5:=wenn 6:=du 7:=das 8:=Pass-wort 9:=kennst.,2,"[[0, 1, 2, 3, 4], [5, 6, 8, 9]]",You can only read it if you know the password.,['# ::snt You can only read it if you know the password.\n(p / possible-01\n      :ARG1 (r / read-01\n            :ARG0 (y / you)\n            :ARG1 (ii / it))\n      :condition (k / know-01\n            :ARG0 y\n            :ARG1 (t / thing\n                  :ARG2-of (p2 / password-01)))\n      :mod (o / only))'],"[p, attr-instance, possible_01, attr-arg1, [r, attr-instance, read_01, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, it]], attr-condition, [k, attr-instance, know_01, attr-arg0, y, attr-arg1, [t, attr-instance, thing, attr-arg2_of, [p2, attr-instance, password_01]]], attr-mod, [o, attr-instance, only]]"
1102,1102,1102,1102,1346,10034,deep-web,Das Deep Web wird oft mit dem Darknet verwechselt.,5_short,Internet|Seiten_mit_defekten_Dateilinks,2016-07-31T15:22:03Z,76bf1508c054395f67a605468d76c22f,0:=Das 1:=Deep 2:=Web 3:=wird 4:=oft 5:=mit 6:=dem 7:=Darknet 8:=verwechselt.,1,,The deep web is often confused with the darknet.,['# ::snt The deep web is often confused with the darknet.\n(c / confuse-01\n      :ARG1 (w / web\n            :ARG1-of (d / deep-02))\n      :ARG2 (d2 / darknet)\n      :frequency (o / often))'],"[c, attr-instance, confuse_01, attr-arg1, [w, attr-instance, web, attr-arg1_of, [d, attr-instance, deep_02]], attr-arg2, [d2, attr-instance, darknet], attr-frequency, [o, attr-instance, often]]"
1103,1103,1103,1103,1347,10035,deep-web,Die Themen auf Seiten im Darknet sind oft nicht erlaubt.,6_short,Internet|Seiten_mit_defekten_Dateilinks,2016-07-31T15:22:03Z,76bf1508c054395f67a605468d76c22f,0:=Die 1:=Themen 2:=auf 3:=Seiten 4:=im 5:=Darknet 6:=sind 7:=oft 8:=nicht 9:=erlaubt.,2,"[[1, 6, 7, 8, 9], [2, 3, 4, 5]]",The topics on sites in the darknet are often not allowed.,['# ::snt The topics on sites in the darknet are often not allowed.\n(a / allow-01\n      :polarity -\n      :ARG1 (t / topic\n            :location (s / site\n                  :mod (d / darknet)))\n      :frequency (o / often))'],"[a, attr-instance, allow_01, attr-polarity, negative, attr-arg1, [t, attr-instance, topic, attr-location, [s, attr-instance, site, attr-mod, [d, attr-instance, darknet]]], attr-frequency, [o, attr-instance, often]]"
1104,1104,1104,1104,1348,10036,deeskalation,Deeskalation macht man zum Beispiel bei Demonstrationen.,0_long,Ohne_Kategorie,2013-04-07T19:37:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Deeskalation 1:=macht 2:=man 3:=zum 4:=Beispiel 5:=bei 6:=Demonstrationen.,1,,"De-escalation is done, for example, at demonstrations.","['# ::snt De-escalation is done, for example, at demonstrations.\n(d / do-02\n      :ARG1 (d2 / deescalate-01)\n      :time (d3 / demonstrate-01)\n      :ARG0-of (e / exemplify-01))']","[d, attr-instance, do_02, attr-arg1, [d2, attr-instance, deescalate_01], attr-time, [d3, attr-instance, demonstrate_01], attr-arg0_of, [e, attr-instance, exemplify_01]]"
1105,1105,1105,1105,1349,10037,deeskalation,Damit es zu keinem Streit kommt.,1_long,Ohne_Kategorie,2013-04-07T19:37:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Damit 1:=es 2:=zu 3:=keinem 4:=Streit 5:=kommt.,1,,So that there is no argument.,['# ::snt So that there is no argument.\n(a / argue-01\n      :polarity -\n      :ARG1-of (c / cause-01))'],"[a, attr-instance, argue_01, attr-polarity, negative, attr-arg1_of, [c, attr-instance, cause_01]]"
1106,1106,1106,1106,1352,10040,defenestration,"De-fenestration ist lateinisch und heißt ""herab-Fenster"".",0_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2016-11-09T16:25:59Z,ac95c75a4819ddeb76a125281a8c84d9,"0:=De-fenestration 1:=ist 2:=lateinisch 3:=und 4:=heißt 5:=""herab-Fenster"".",2,"[[1, 2], [4, 5]]","De-fenestration is Latin and means ""down window"".","['# ::snt De-fenestration is Latin and means ""down window"".\n(a / and\n      :op1 (l / language\n            :name (n / name\n                  :op1 ""Latin"")\n            :domain (s / string-entity\n                  :value ""de-fenestration""))\n      :op2 (m / mean-01\n            :ARG1 s\n            :ARG2 (w / window\n                  :direction (d / down))))']","[a, attr-instance, and, attr-op1, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""latin""], attr-domain, [s, attr-instance, string_entity, attr-value, ""de_fenestration""]], attr-op2, [m, attr-instance, mean_01, attr-arg1, s, attr-arg2, [w, attr-instance, window, attr-direction, [d, attr-instance, down]]]]"
1107,1107,1107,1107,1353,10041,defenestration,Defenestrationen hat es früher viel gegeben.,1_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2016-11-09T16:25:59Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Defenestrationen 1:=hat 2:=es 3:=früher 4:=viel 5:=gegeben.,1,,There used to be a lot of defenestrations.,['# ::snt There used to be a lot of defenestrations.\n(t / thing\n      :ARG0-of (f / frustrate-01)\n      :quant (l / lot)\n      :time (u / use-03))'],"[t, attr-instance, thing, attr-arg0_of, [f, attr-instance, frustrate_01], attr-quant, [l, attr-instance, lot], attr-time, [u, attr-instance, use_03]]"
1108,1108,1108,1108,1355,10043,defenestration,Sehr bekannt ist die 1. Prager Fenstersturz gewesen.,3_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2016-11-09T16:25:59Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Sehr 1:=bekannt 2:=ist 3:=die 4:=1. 5:=Prager 6:=Fenstersturz 7:=gewesen.,1,,The First Defenestration of Prague was very well known.,"['# ::snt The First Defenestration of Prague was very well known.\n(k / know-02\n      :ARG1 (t / treaty\n            :name (n / name\n                  :op1 ""First""\n                  :op2 ""Defenestration""\n                  :op3 ""of""\n                  :op4 ""Prague""))\n      :degree (w / well\n            :degree (v / very)))']","[k, attr-instance, know_02, attr-arg1, [t, attr-instance, treaty, attr-name, [n, attr-instance, name, attr-op1, ""first"", attr-op2, ""defenestration"", attr-op3, ""of"", attr-op4, ""prague""]], attr-degree, [w, attr-instance, well, attr-degree, [v, attr-instance, very]]]"
1109,1109,1109,1109,1356,10044,defenestration,Wenn Defenestration mit Absicht passiert ist es Gewalt.,4_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2016-11-09T16:25:59Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Wenn 1:=Defenestration 2:=mit 3:=Absicht 4:=passiert 5:=ist 6:=es 7:=Gewalt.,3,"[[0, 1, 4], [2, 3], [5, 6, 7]]",When defenestration happens intentionally it is violence.,['# ::snt When defenestration happens intentionally it is violence.\n(v / violence\n      :time (d / defenestrate-01\n            :ARG1-of (ii / intend-01)))'],"[v, attr-instance, violence, attr-time, [d, attr-instance, defenestrate_01, attr-arg1_of, [ii, attr-instance, intend_01]]]"
1110,1110,1110,1110,1358,10046,defenestration,Wenn Defenestration aus Versehen passieren ist es oft ein Unfall.,6_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2016-11-09T16:25:59Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Wenn 1:=Defenestration 2:=aus 3:=Versehen 4:=passieren 5:=ist 6:=es 7:=oft 8:=ein 9:=Unfall.,3,"[[0, 1, 4], [2, 3], [5, 6, 7, 9]]",When defenestration occurs accidentally it is often an accident.,['# ::snt When defenestration occurs accidentally it is often an accident.\n(a / accident\n      :frequency (o / often)\n      :time (d / defenestrate-01\n            :manner (a2 / accidental)))'],"[a, attr-instance, accident, attr-frequency, [o, attr-instance, often], attr-time, [d, attr-instance, defenestrate_01, attr-manner, [a2, attr-instance, accidental]]]"
1111,1111,1111,1111,1360,10048,defenestration,"Defenestration heißt, \newline jemand fällt aus dem Fenster.",0_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2016-11-09T16:25:59Z,ac95c75a4819ddeb76a125281a8c84d9,"0:=Defenestration 1:=heißt, 2:=\newline 3:=jemand 4:=fällt 5:=aus 6:=dem 7:=Fenster.",3,"[[0, 1], [3, 4], [5, 7]]",Defenestration means \newline someone falls out of the window.,['# ::snt Defenestration means \\newline someone falls out of the window.\n(m / mean-01\n      :ARG1 (d / detain-01)\n      :ARG2 (f / fall-01\n            :ARG1 (s / someone)\n            :ARG4 (o / out-06\n                  :ARG1 s\n                  :ARG2 (w / window))\n            :mod (l / line\n                  :ARG1-of (n / new-01))))'],"[m, attr-instance, mean_01, attr-arg1, [d, attr-instance, detain_01], attr-arg2, [f, attr-instance, fall_01, attr-arg1, [s, attr-instance, someone], attr-arg4, [o, attr-instance, out_06, attr-arg1, s, attr-arg2, [w, attr-instance, window]], attr-mod, [l, attr-instance, line, attr-arg1_of, [n, attr-instance, new_01]]]]"
1112,1112,1112,1112,1361,10049,defenestration,Eine Defenestration kann aus Versehen passieren.,1_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2016-11-09T16:25:59Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Eine 1:=Defenestration 2:=kann 3:=aus 4:=Versehen 5:=passieren.,1,,Defenestration can happen accidentally.,['# ::snt Defenestration can happen accidentally.\n(p / possible-01\n      :ARG1 (s / sabotage-01\n            :manner (a / accidental)))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, sabotage_01, attr-manner, [a, attr-instance, accidental]]]"
1113,1113,1113,1113,1363,10051,defenestration,"Zum Beispiel,  \newline wenn jemand eine andere Person aus dem Fenster wirft.",3_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2016-11-09T16:25:59Z,ac95c75a4819ddeb76a125281a8c84d9,"0:=Zum 1:=Beispiel, 2:= 3:=\newline 4:=wenn 5:=jemand 6:=eine 7:=andere 8:=Person 9:=aus 10:=dem 11:=Fenster 12:=wirft.",1,,"For example, \newline when someone throws another person out of the window.","['# ::snt For example, \\newline when someone throws another person out of the window.\n(e / exemplify-01\n      :ARG0 (l / line\n            :time (t / throw-01\n                  :ARG0 (s / someone)\n                  :ARG1 (p / person\n                        :mod (a / another))\n                  :ARG2 (o / out-06\n                        :ARG1 p\n                        :ARG2 (w / window)))))']","[e, attr-instance, exemplify_01, attr-arg0, [l, attr-instance, line, attr-time, [t, attr-instance, throw_01, attr-arg0, [s, attr-instance, someone], attr-arg1, [p, attr-instance, person, attr-mod, [a, attr-instance, another]], attr-arg2, [o, attr-instance, out_06, attr-arg1, p, attr-arg2, [w, attr-instance, window]]]]]"
1114,1114,1114,1114,1364,10052,definitiv,Das Wort definitiv ist ein Adjektiv.,0_long,Ohne_Kategorie,2012-11-06T20:28:14Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Das 1:=Wort 2:=definitiv 3:=ist 4:=ein 5:=Adjektiv.,1,,The word definitely is an adjective.,['# ::snt The word definitely is an adjective.\n(w / word\n      :mod (d / definite)\n      :domain w\n      :mod (a / adjective))'],"[w, attr-instance, word, attr-mod, [d, attr-instance, definite], attr-domain, w, attr-mod, [a, attr-instance, adjective]]"
1115,1115,1115,1115,1365,10053,definitiv,Etwas ist definitiv wenn es nicht mehr verändert werden kann.,0_short,Ohne_Kategorie,2012-11-06T20:28:14Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Etwas 1:=ist 2:=definitiv 3:=wenn 4:=es 5:=nicht 6:=mehr 7:=verändert 8:=werden 9:=kann.,2,"[[0, 1, 2], [3, 4, 5, 6, 7, 8, 9]]",Something is final when it can no longer be changed.,['# ::snt Something is final when it can no longer be changed.\n(f / final\n      :domain (s / something)\n      :time (p / possible-01\n            :ARG1 (c / change-01\n                  :ARG1 s\n                  :time (n / no-longer))))'],"[f, attr-instance, final, attr-domain, [s, attr-instance, something], attr-time, [p, attr-instance, possible_01, attr-arg1, [c, attr-instance, change_01, attr-arg1, s, attr-time, [n, attr-instance, no_longer]]]]"
1116,1116,1116,1116,1366,10054,deflation,Bei einer Deflation gibt es zu viele Waren.,0_long,Geld|Seiten_mit_defekten_Dateilinks,2014-03-06T06:33:24Z,6275ee07d0785a2da491fbb224064f23,0:=Bei 1:=einer 2:=Deflation 3:=gibt 4:=es 5:=zu 6:=viele 7:=Waren.,1,,In deflation there are too many goods.,['# ::snt In deflation there are too many goods.\n(g / good\n      :ARG1-of (h / have-quant-91\n            :ARG2 (m / many)\n            :ARG3 (t / too))\n      :condition (d / deflation))'],"[g, attr-instance, good, attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg2, [m, attr-instance, many], attr-arg3, [t, attr-instance, too]], attr-condition, [d, attr-instance, deflation]]"
1117,1117,1117,1117,1367,10055,deflation,Die Menschen kaufen die Waren nicht.,1_long,Geld|Seiten_mit_defekten_Dateilinks,2014-03-06T06:33:24Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Menschen 2:=kaufen 3:=die 4:=Waren 5:=nicht.,1,,People don't buy the goods.,"[""# ::snt People don't buy the goods.\n(b / buy-01\n      :polarity -\n      :ARG0 (p / person)\n      :ARG1 (g / good))""]","[b, attr-instance, buy_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person], attr-arg1, [g, attr-instance, good]]"
1118,1118,1118,1118,1368,10056,deflation,Das heißt: \newline Das Angebot ist größer als die Nachfrage.,2_long,Geld|Seiten_mit_defekten_Dateilinks,2014-03-06T06:33:24Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=heißt: 2:=\newline 3:=Das 4:=Angebot 5:=ist 6:=größer 7:=als 8:=die 9:=Nachfrage.,1,,This means: \newline Supply is greater than demand.,['# ::snt This means: \\newline Supply is greater than demand.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (h / have-degree-91\n            :ARG1 (s / supply-01\n                  :mod (l / line))\n            :ARG2 (g / great)\n            :ARG3 (m2 / more)\n            :ARG4 (d / demand-01)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [h, attr-instance, have_degree_91, attr-arg1, [s, attr-instance, supply_01, attr-mod, [l, attr-instance, line]], attr-arg2, [g, attr-instance, great], attr-arg3, [m2, attr-instance, more], attr-arg4, [d, attr-instance, demand_01]]]"
1119,1119,1119,1119,1369,10057,deflation,Die Firmen wollen ihre Waren verkaufen.,3_long,Geld|Seiten_mit_defekten_Dateilinks,2014-03-06T06:33:24Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Firmen 2:=wollen 3:=ihre 4:=Waren 5:=verkaufen.,1,,The companies want to sell their goods.,['# ::snt The companies want to sell their goods.\n(w / want-01\n      :ARG0 (c / company)\n      :ARG1 (s / sell-01\n            :ARG0 c\n            :ARG1 (g / good\n                  :poss c)))'],"[w, attr-instance, want_01, attr-arg0, [c, attr-instance, company], attr-arg1, [s, attr-instance, sell_01, attr-arg0, c, attr-arg1, [g, attr-instance, good, attr-poss, c]]]"
1120,1120,1120,1120,1370,10058,deflation,Deshalb verkaufen sie ihre Waren billiger.,4_long,Geld|Seiten_mit_defekten_Dateilinks,2014-03-06T06:33:24Z,6275ee07d0785a2da491fbb224064f23,0:=Deshalb 1:=verkaufen 2:=sie 3:=ihre 4:=Waren 5:=billiger.,2,"[[0, 1, 2, 3, 4], [5]]",That's why they sell their goods cheaper.,"[""# ::snt That's why they sell their goods cheaper.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (s / sell-01\n            :ARG0 (t2 / they)\n            :ARG1 (g / good\n                  :poss t2)\n            :manner (c2 / cheap-02\n                  :ARG2-of (h / have-degree-91\n                        :ARG1 s\n                        :ARG3 (m / more)))))""]","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [s, attr-instance, sell_01, attr-arg0, [t2, attr-instance, they], attr-arg1, [g, attr-instance, good, attr-poss, t2], attr-manner, [c2, attr-instance, cheap_02, attr-arg2_of, [h, attr-instance, have_degree_91, attr-arg1, s, attr-arg3, [m, attr-instance, more]]]]]"
1121,1121,1121,1121,1371,10059,deflation,Das Gegenteil von De­fla­ti­on ist  Inflation.,5_long,Geld|Seiten_mit_defekten_Dateilinks,2014-03-06T06:33:24Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=Gegenteil 2:=von 3:=De­fla­ti­on 4:=ist 5:= 6:=Inflation.,1,,The opposite of deflation is inflation.,['# ::snt The opposite of deflation is inflation.\n(o / opposite-01\n      :ARG1 (ii / inflate-01)\n      :ARG2 (d / deflation))'],"[o, attr-instance, opposite_01, attr-arg1, [ii, attr-instance, inflate_01], attr-arg2, [d, attr-instance, deflation]]"
1122,1122,1122,1122,1372,10060,deflation,Deflation heißt: \newline Alle Waren kosten auf einmal weniger Geld.,0_short,Geld|Seiten_mit_defekten_Dateilinks,2014-03-06T06:33:24Z,6275ee07d0785a2da491fbb224064f23,0:=Deflation 1:=heißt: 2:=\newline 3:=Alle 4:=Waren 5:=kosten 6:=auf 7:=einmal 8:=weniger 9:=Geld.,1,,Deflation means: \newline All goods suddenly cost less money.,['# ::snt Deflation means: \\newline All goods suddenly cost less money.\n(m / mean-01\n      :ARG1 (d / define-01)\n      :ARG2 (c / cost-01\n            :ARG1 (g / good\n                  :mod (a / all))\n            :ARG2 (m2 / money\n                  :mod (l / less))\n            :manner (s / sudden)))'],"[m, attr-instance, mean_01, attr-arg1, [d, attr-instance, define_01], attr-arg2, [c, attr-instance, cost_01, attr-arg1, [g, attr-instance, good, attr-mod, [a, attr-instance, all]], attr-arg2, [m2, attr-instance, money, attr-mod, [l, attr-instance, less]], attr-manner, [s, attr-instance, sudden]]]"
1123,1123,1123,1123,1373,10061,deflation,Zum Beispiel: \newline Wenn man für Milch weniger Geld zahlen muss als letztes Jahr.,1_short,Geld|Seiten_mit_defekten_Dateilinks,2014-03-06T06:33:24Z,6275ee07d0785a2da491fbb224064f23,0:=Zum 1:=Beispiel: 2:=\newline 3:=Wenn 4:=man 5:=für 6:=Milch 7:=weniger 8:=Geld 9:=zahlen 10:=muss 11:=als 12:=letztes 13:=Jahr.,3,"[[3, 4, 7, 8, 9, 10], [5, 6], [11, 12, 13]]",For example: \newline If you have to pay less money for milk than last year.,['# ::snt For example: \\newline If you have to pay less money for milk than last year.\n(e / exemplify-01\n      :ARG0 (h / have-condition-91\n            :ARG1 (p / pay-01\n                  :ARG0 (y / you)\n                  :ARG1 (m / money\n                        :ARG1-of (h2 / have-quant-91\n                              :ARG3 (l / less)\n                              :ARG4 (m2 / money\n                                    :ARG1-of (p2 / pay-01\n                                          :ARG0 y\n                                          :ARG3 (m3 / milk)\n                                          :time (y2 / year\n                                                :mod (l2 / last))))))\n                  :ARG3 m3)\n            :ARG2 (o / obligate-01\n                  :ARG1 y\n                  :ARG2 (p3 / pay-01\n                        :ARG0 y\n                        :ARG1 (m4 / money)\n                        :ARG3 m3))))'],"[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_condition_91, attr-arg1, [p, attr-instance, pay_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money, attr-arg1_of, [h2, attr-instance, have_quant_91, attr-arg3, [l, attr-instance, less], attr-arg4, [m2, attr-instance, money, attr-arg1_of, [p2, attr-instance, pay_01, attr-arg0, y, attr-arg3, [m3, attr-instance, milk], attr-time, [y2, attr-instance, year, attr-mod, [l2, attr-instance, last]]]]]], attr-arg3, m3], attr-arg2, [o, attr-instance, obligate_01, attr-arg1, y, attr-arg2, [p3, attr-instance, pay_01, attr-arg0, y, attr-arg1, [m4, attr-instance, money], attr-arg3, m3]]]]"
1124,1124,1124,1124,1374,10062,dekollete,Ein Dekolleté kann erotisch sein.,0_long,Kleider|Sexualität,2015-03-31T08:46:42Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Dekolleté 2:=kann 3:=erotisch 4:=sein.,1,,A cleavage can be erotic.,['# ::snt A cleavage can be erotic.\n(p / possible-01\n      :ARG1 (e / erotic\n            :domain (c / cleavage)))'],"[p, attr-instance, possible_01, attr-arg1, [e, attr-instance, erotic, attr-domain, [c, attr-instance, cleavage]]]"
1125,1125,1125,1125,1375,10063,dekollete,Weil man viel Haut sieht.,1_long,Kleider|Sexualität,2015-03-31T08:46:42Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Weil 1:=man 2:=viel 3:=Haut 4:=sieht.,1,,Because you see a lot of skin.,['# ::snt Because you see a lot of skin.\n(c / cause-01\n      :ARG0 (s / see-01\n            :ARG0 (y / you)\n            :ARG1 (s2 / skin\n                  :quant (l / lot))))'],"[c, attr-instance, cause_01, attr-arg0, [s, attr-instance, see_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s2, attr-instance, skin, attr-quant, [l, attr-instance, lot]]]]"
1126,1126,1126,1126,1377,10065,dekollete,Ein Dekolleté geht vom Hals bis zum Busen einer Frau.,0_short,Kleider|Sexualität,2015-03-31T08:46:42Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Dekolleté 2:=geht 3:=vom 4:=Hals 5:=bis 6:=zum 7:=Busen 8:=einer 9:=Frau.,3,"[[1, 2, 3, 4], [1, 2, 5, 6, 7], [7, 8, 9]]",A cleavage extends from a woman’s neck to her breasts.,['# ::snt A cleavage extends from a woman’s neck to her breasts.\n(e / extend-01\n      :ARG1 (c / cleavage)\n      :ARG3 (n / neck\n            :part-of (w / woman))\n      :ARG4 (b / breast\n            :part-of w))'],"[e, attr-instance, extend_01, attr-arg1, [c, attr-instance, cleavage], attr-arg3, [n, attr-instance, neck, attr-part_of, [w, attr-instance, woman]], attr-arg4, [b, attr-instance, breast, attr-part_of, w]]"
1127,1127,1127,1127,1378,10066,dekollete,"Man sieht viel Haut, \newline zwischen Hals und dem Ende der Ober-kleider.",1_short,Kleider|Sexualität,2015-03-31T08:46:42Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Man 1:=sieht 2:=viel 3:=Haut, 4:=\newline 5:=zwischen 6:=Hals 7:=und 8:=dem 9:=Ende 10:=der 11:=Ober-kleider.",3,"[[0, 1, 2, 3], [5, 6, 7, 9], [9, 10, 11]]","You can see a lot of skin, \newline between the neck and the end of the tops.","['# ::snt You can see a lot of skin, \\newline between the neck and the end of the tops.\n(p / possible-01\n      :ARG1 (s / see-01\n            :ARG0 (y / you)\n            :ARG1 (s2 / skin\n                  :quant (l / lot)\n                  :ARG1-of (m / mean-01\n                        :ARG2 (l2 / line\n                              :mod (n / newline)\n                              :location (b / between\n                                    :op1 (n2 / neck)\n                                    :op2 (e / end\n                                          :part-of (t / top))))))))']","[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, see_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s2, attr-instance, skin, attr-quant, [l, attr-instance, lot], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [l2, attr-instance, line, attr-mod, [n, attr-instance, newline], attr-location, [b, attr-instance, between, attr-op1, [n2, attr-instance, neck], attr-op2, [e, attr-instance, end, attr-part_of, [t, attr-instance, top]]]]]]]]"
1128,1128,1128,1128,1379,10067,dekret,In Deutschland ist ein Dekret meistens ein Erlass.,0_long,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2017-01-29T15:15:58Z,48f66906899cc4a9477b6c9e32ff4424,0:=In 1:=Deutschland 2:=ist 3:=ein 4:=Dekret 5:=meistens 6:=ein 7:=Erlass.,2,"[[0, 1], [2, 4, 5, 7]]","In Germany, a decree is usually an edict.","['# ::snt In Germany, a decree is usually an edict.\n(e / edict\n      :domain (d / decree)\n      :mod (u / usual)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[e, attr-instance, edict, attr-domain, [d, attr-instance, decree], attr-mod, [u, attr-instance, usual], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
1129,1129,1129,1129,1380,10068,dekret,"Das heißt, \newline Die Exekutive macht eine Regel für die Menschen im Land.",1_long,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2017-01-29T15:15:58Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=Die 4:=Exekutive 5:=macht 6:=eine 7:=Regel 8:=für 9:=die 10:=Menschen 11:=im 12:=Land.",2,"[[4, 5, 7], [8, 10, 11, 12]]","That is, \newline The executive makes a rule for the people of the country.","['# ::snt That is, \\newline The executive makes a rule for the people of the country.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (m2 / make-01\n            :ARG0 (e / executive)\n            :ARG1 (r / rule-01\n                  :ARG0 (p / person\n                        :mod (c / country)))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [m2, attr-instance, make_01, attr-arg0, [e, attr-instance, executive], attr-arg1, [r, attr-instance, rule_01, attr-arg0, [p, attr-instance, person, attr-mod, [c, attr-instance, country]]]]]"
1130,1130,1130,1130,1381,10069,dekret,Ein Dekret ist eine Entscheidung.,0_short,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2017-01-29T15:15:58Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Dekret 2:=ist 3:=eine 4:=Entscheidung.,1,,A decree is a decision.,['# ::snt A decree is a decision.\n(t / thing\n      :ARG1-of (d / decide-01)\n      :domain (d2 / decree))'],"[t, attr-instance, thing, attr-arg1_of, [d, attr-instance, decide_01], attr-domain, [d2, attr-instance, decree]]"
1131,1131,1131,1131,1385,10073,dekret,Ein Dekret kann eine Behörde machen.,4_short,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2017-01-29T15:15:58Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Dekret 2:=kann 3:=eine 4:=Behörde machen.,1,,An authority can make a decree.,['# ::snt An authority can make a decree.\n(p / possible-01\n      :ARG1 (d / decree-01\n            :ARG0 (a / authority)))'],"[p, attr-instance, possible_01, attr-arg1, [d, attr-instance, decree_01, attr-arg0, [a, attr-instance, authority]]]"
1132,1132,1132,1132,1386,10074,dekret,Oder eine Regierung kann ein Dekret machen.,5_short,Politik|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2017-01-29T15:15:58Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=eine 2:=Regierung 3:=kann 4:=ein 5:=Dekret 6:=machen.,1,,Or a government can make a decree.,['# ::snt Or a government can make a decree.\n(o / or\n      :op2 (p / possible-01\n            :ARG1 (d / decree-01\n                  :ARG0 (g / government-organization\n                        :ARG0-of (g2 / govern-01)))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, possible_01, attr-arg1, [d, attr-instance, decree_01, attr-arg0, [g, attr-instance, government_organization, attr-arg0_of, [g2, attr-instance, govern_01]]]]]"
1133,1133,1133,1133,1387,10075,delfinschwimmen,Beim Delfinschwimmen bewegt der Sportler beide Arme gleichzeitig.,0_long,Sport,2012-02-28T10:46:24Z,d4171b2c36772be4cad75ef4078874bd,0:=Beim 1:=Delfinschwimmen 2:=bewegt 3:=der 4:=Sportler 5:=beide 6:=Arme 7:=gleichzeitig.,2,"[[0, 1, 2, 4, 5, 6], [7]]","When swimming dolphins, the athlete moves both arms at the same time.","['# ::snt When swimming dolphins, the athlete moves both arms at the same time.\n(m / move-01\n      :ARG0 (a / athlete)\n      :ARG1 (a2 / arm\n            :mod (b / both))\n      :time (s / swim-01\n            :ARG0 a\n            :ARG1 (d / dolphin))\n      :ARG1-of (s2 / same-01))']","[m, attr-instance, move_01, attr-arg0, [a, attr-instance, athlete], attr-arg1, [a2, attr-instance, arm, attr-mod, [b, attr-instance, both]], attr-time, [s, attr-instance, swim_01, attr-arg0, a, attr-arg1, [d, attr-instance, dolphin]], attr-arg1_of, [s2, attr-instance, same_01]]"
1134,1134,1134,1134,1388,10076,delfinschwimmen,Beide Arme werden über den Kopf nach vorne ins Wasser bewegt.,1_long,Sport,2012-02-28T10:46:24Z,d4171b2c36772be4cad75ef4078874bd,0:=Beide 1:=Arme 2:=werden 3:=über 4:=den 5:=Kopf 6:=nach 7:=vorne 8:=ins 9:=Wasser 10:=bewegt.,3,"[[3, 5], [6, 7], [8, 9]]",Both arms are moved forward over the head into the water.,['# ::snt Both arms are moved forward over the head into the water.\n(m / move-01\n      :ARG1 (a / arm\n            :mod (b / both))\n      :ARG2 (f / forward)\n      :path (o / over\n            :op1 (h / head\n                  :part-of (w / water))))'],"[m, attr-instance, move_01, attr-arg1, [a, attr-instance, arm, attr-mod, [b, attr-instance, both]], attr-arg2, [f, attr-instance, forward], attr-path, [o, attr-instance, over, attr-op1, [h, attr-instance, head, attr-part_of, [w, attr-instance, water]]]]"
1135,1135,1135,1135,1389,10077,delfinschwimmen,Beine und Füße bewegt man gleichzeitig dazu.,2_long,Sport,2012-02-28T10:46:24Z,d4171b2c36772be4cad75ef4078874bd,0:=Beine 1:=und 2:=Füße 3:=bewegt 4:=man 5:=gleichzeitig 6:=dazu.,3,"[[0], [2], [5]]",You move your legs and feet at the same time.,['# ::snt You move your legs and feet at the same time.\n(m / move-01\n      :ARG0 (y / you\n            :part (l / leg)\n            :part (f / foot))\n      :ARG1 (a / and\n            :time (t / time\n                  :ARG1-of (s / same-01))))'],"[m, attr-instance, move_01, attr-arg0, [y, attr-instance, you, attr-part, [l, attr-instance, leg], attr-part, [f, attr-instance, foot]], attr-arg1, [a, attr-instance, and, attr-time, [t, attr-instance, time, attr-arg1_of, [s, attr-instance, same_01]]]]"
1136,1136,1136,1136,1392,10080,delfinschwimmen,Delfinschwimmen ist eine besondere Art zu schwimmen.,0_short,Sport,2012-02-28T10:46:24Z,d4171b2c36772be4cad75ef4078874bd,0:=Delfinschwimmen 1:=ist 2:=eine 3:=besondere 4:=Art 5:=zu 6:=schwimmen.,1,,Dolphin swimming is a special way of swimming.,['# ::snt Dolphin swimming is a special way of swimming.\n(s / swim-01\n      :ARG0 (d / dolphin)\n      :manner (w / way\n            :ARG1-of (s2 / special-02)\n            :manner-of (s3 / swim-01)))'],"[s, attr-instance, swim_01, attr-arg0, [d, attr-instance, dolphin], attr-manner, [w, attr-instance, way, attr-arg1_of, [s2, attr-instance, special_02], attr-manner_of, [s3, attr-instance, swim_01]]]"
1137,1137,1137,1137,1394,10082,dementi,Das Wort Dementi ist ein Substantiv.,1_long,Ohne_Kategorie,2013-12-03T10:18:21Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Dementi 3:=ist 4:=ein 5:=Substantiv.,1,,The word denial is a noun.,['# ::snt The word denial is a noun.\n(n / noun\n      :domain (w / word\n            :mod (d / deny-01)))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [d, attr-instance, deny_01]]]"
1138,1138,1138,1138,1396,10084,dementi,"Karin sagt, dass die Nachricht nicht stimmt.",3_long,Ohne_Kategorie,2013-12-03T10:18:21Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Karin 1:=sagt, 2:=dass 3:=die 4:=Nachricht 5:=nicht 6:=stimmt.",2,"[[0, 1], [2, 4, 5, 6]]",Karin says the news is not true.,"['# ::snt Karin says the news is not true.\n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Karin""))\n      :ARG1 (t / true-01\n            :polarity -\n            :ARG1 (n2 / news)))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""karin""]], attr-arg1, [t, attr-instance, true_01, attr-polarity, negative, attr-arg1, [n2, attr-instance, news]]]"
1139,1139,1139,1139,1397,10085,dementi,Sie hat keinen neuen Hund.,4_long,Ohne_Kategorie,2013-12-03T10:18:21Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Sie 1:=hat 2:=keinen 3:=neuen 4:=Hund.,1,,She doesn't have a new dog.,"[""# ::snt She doesn't have a new dog.\n(h / have-03\n      :ARG0 (s / she)\n      :ARG1 (d / dog\n            :ARG1-of (n / new-01)))""]","[h, attr-instance, have_03, attr-arg0, [s, attr-instance, she], attr-arg1, [d, attr-instance, dog, attr-arg1_of, [n, attr-instance, new_01]]]"
1140,1140,1140,1140,1398,10086,dementi,Bei einem Dementi wird gesagt: \newline dass eine Nachricht falsch ist,0_short,Ohne_Kategorie,2013-12-03T10:18:21Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Bei 1:=einem 2:=Dementi 3:=wird 4:=gesagt: 5:=\newline 6:=dass 7:=eine 8:=Nachricht 9:=falsch 10:=ist,2,"[[0, 2, 3, 4], [6, 8, 9, 10]]",A denial is used to say: \newline that a message is false,['# ::snt A denial is used to say: \\newline that a message is false\n(u / use-01\n      :ARG1 (d / deny-01)\n      :ARG2 (s / say-01\n            :ARG1 (f / false\n                  :domain (m / message-01))\n            :ARG2 (l / line\n                  :mod (n / new))))'],"[u, attr-instance, use_01, attr-arg1, [d, attr-instance, deny_01], attr-arg2, [s, attr-instance, say_01, attr-arg1, [f, attr-instance, false, attr-domain, [m, attr-instance, message_01]], attr-arg2, [l, attr-instance, line, attr-mod, [n, attr-instance, new]]]]"
1141,1141,1141,1141,1399,10087,demenz,Bei einer Demenz funktioniert ein Teil vom Gehirn schlecht.,0_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Bei 1:=einer 2:=Demenz 3:=funktioniert 4:=ein 5:=Teil 6:=vom 7:=Gehirn 8:=schlecht.,1,,"In dementia, part of the brain functions poorly.","['# ::snt In dementia, part of the brain functions poorly.\n(f / function-01\n      :ARG0 (p / part\n            :part-of (b / brain))\n      :manner (p2 / poor)\n      :condition (d / disease\n            :name (n / name\n                  :op1 ""Dementia"")))']","[f, attr-instance, function_01, attr-arg0, [p, attr-instance, part, attr-part_of, [b, attr-instance, brain]], attr-manner, [p2, attr-instance, poor], attr-condition, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]"
1142,1142,1142,1142,1400,10088,demenz,Das wird immer schlechter.,1_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Das 1:=wird 2:=immer 3:=schlechter.,1,,This is getting worse and worse.,['# ::snt This is getting worse and worse.\n(w / worsen-01\n      :ARG1 (t / this))'],"[w, attr-instance, worsen_01, attr-arg1, [t, attr-instance, this]]"
1143,1143,1143,1143,1401,10089,demenz,Meistens bekommen ältere Menschen Demenz.,2_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Meistens 1:=bekommen 2:=ältere 3:=Menschen 4:=Demenz.,1,,Most older people get dementia.,"['# ::snt Most older people get dementia.\n(g / get-01\n      :ARG0 (p / person\n            :mod (m / most)\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (o / old)\n                  :ARG3 (m2 / more)))\n      :ARG1 (d / disease\n            :name (n / name\n                  :op1 ""Dementia"")))']","[g, attr-instance, get_01, attr-arg0, [p, attr-instance, person, attr-mod, [m, attr-instance, most], attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [o, attr-instance, old], attr-arg3, [m2, attr-instance, more]]], attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]"
1144,1144,1144,1144,1402,10090,demenz,Manchmal bekommen auch jüngere Menschen Demenz.,3_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Manchmal 1:=bekommen 2:=auch 3:=jüngere 4:=Menschen 5:=Demenz.,1,,Sometimes younger people also get dementia.,"['# ::snt Sometimes younger people also get dementia.\n(g / get-01\n      :ARG0 (p / person\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (y / young)\n                  :ARG3 (m / more)))\n      :ARG1 (d / disease\n            :name (n / name\n                  :op1 ""Dementia""))\n      :mod (a / also)\n      :frequency (s / sometimes))']","[g, attr-instance, get_01, attr-arg0, [p, attr-instance, person, attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [y, attr-instance, young], attr-arg3, [m, attr-instance, more]]], attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]], attr-mod, [a, attr-instance, also], attr-frequency, [s, attr-instance, sometimes]]"
1145,1145,1145,1145,1403,10091,demenz,Das ist aber sehr selten.,4_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Das 1:=ist 2:=aber 3:=sehr 4:=selten.,1,,But this is very rare.,['# ::snt But this is very rare.\n(c / contrast-01\n      :ARG2 (r / rare-02\n            :ARG1 (t / this)\n            :degree (v / very)))'],"[c, attr-instance, contrast_01, attr-arg2, [r, attr-instance, rare_02, attr-arg1, [t, attr-instance, this], attr-degree, [v, attr-instance, very]]]"
1146,1146,1146,1146,1404,10092,demenz,Menschen mit Demenz vergessen Sachen.,5_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Menschen 1:=mit 2:=Demenz 3:=vergessen 4:=Sachen.,1,,People with dementia forget things.,"['# ::snt People with dementia forget things.\n(f / forget-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-03\n                  :ARG1 (d / disease\n                        :name (n / name\n                              :op1 ""Dementia""))))\n      :ARG1 (t / thing))']","[f, attr-instance, forget_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]], attr-arg1, [t, attr-instance, thing]]"
1147,1147,1147,1147,1405,10093,demenz,Die Menschen vergessen zum Beispiel: • wo sie gerade sind,6_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Die 1:=Menschen 2:=vergessen 3:=zum 4:=Beispiel: 5:=• 6:=wo 7:=sie 8:=gerade 9:=sind,2,"[[1, 2], [6, 7, 8, 9]]","For example, people forget: • where they are","['# ::snt For example, people forget: • where they are\n(e / exemplify-01\n      :ARG0 (f / forget-01\n            :ARG0 (p / person)\n            :ARG1 (t / thing\n                  :location-of (t2 / they))))']","[e, attr-instance, exemplify_01, attr-arg0, [f, attr-instance, forget_01, attr-arg0, [p, attr-instance, person], attr-arg1, [t, attr-instance, thing, attr-location_of, [t2, attr-instance, they]]]]"
1148,1148,1148,1148,1406,10094,demenz,Die Menschen vergessen zum Beispiel: • was sie gerade gemacht haben,7_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Die 1:=Menschen 2:=vergessen 3:=zum 4:=Beispiel: 5:=• 6:=was 7:=sie 8:=gerade 9:=gemacht 10:=haben,2,"[[1, 2], [6, 7, 8, 9, 10]]","For example, people forget: • what they have just done","['# ::snt For example, people forget: • what they have just done\n(e / exemplify-01\n      :ARG0 (f / forget-01\n            :ARG0 (p / person)\n            :ARG1 (t / thing\n                  :ARG1-of (d / do-02\n                        :ARG0 p\n                        :time (j / just)))))']","[e, attr-instance, exemplify_01, attr-arg0, [f, attr-instance, forget_01, attr-arg0, [p, attr-instance, person], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, do_02, attr-arg0, p, attr-time, [j, attr-instance, just]]]]]"
1149,1149,1149,1149,1407,10095,demenz,Die Menschen vergessen zum Beispiel: • was sie machen wollten,8_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Die 1:=Menschen 2:=vergessen 3:=zum 4:=Beispiel: 5:=• 6:=was 7:=sie 8:=machen 9:=wollten,2,"[[1, 2], [6, 7, 8, 9]]","For example, people forget: • what they wanted to do","['# ::snt For example, people forget: • what they wanted to do\n(e / exemplify-01\n      :ARG0 (f / forget-01\n            :ARG0 (p / person)\n            :ARG1 (t / thing\n                  :ARG1-of (d / do-02\n                        :ARG0 p\n                        :ARG1-of (w / want-01\n                              :ARG0 p)))))']","[e, attr-instance, exemplify_01, attr-arg0, [f, attr-instance, forget_01, attr-arg0, [p, attr-instance, person], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, do_02, attr-arg0, p, attr-arg1_of, [w, attr-instance, want_01, attr-arg0, p]]]]]"
1150,1150,1150,1150,1408,10096,demenz,Manchmal vergessen die Menschen auch ihren eigenen Namen.,9_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Manchmal 1:=vergessen 2:=die 3:=Menschen 4:=auch 5:=ihren 6:=eigenen 7:=Namen.,1,,Sometimes people forget their own names.,['# ::snt Sometimes people forget their own names.\n(f / forget-01\n      :ARG0 (p / person)\n      :ARG1 (t / thing\n            :ARG2-of (n / name-01\n                  :ARG1 p))\n      :frequency (s / sometimes))'],"[f, attr-instance, forget_01, attr-arg0, [p, attr-instance, person], attr-arg1, [t, attr-instance, thing, attr-arg2_of, [n, attr-instance, name_01, attr-arg1, p]], attr-frequency, [s, attr-instance, sometimes]]"
1151,1151,1151,1151,1409,10097,demenz,Und haben Schwierigkeiten andere Leute zu erkennen.,10_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Und 1:=haben 2:=Schwierigkeiten 3:=andere 4:=Leute 5:=zu 6:=erkennen.,2,"[[1, 2], [3, 4, 5, 6]]",And have difficulty recognizing other people.,['# ::snt And have difficulty recognizing other people.\n(a / and\n      :op2 (h / have-trouble-04\n            :ARG1 (r / recognize-02\n                  :ARG1 (p / person\n                        :mod (o / other)))))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, have_trouble_04, attr-arg1, [r, attr-instance, recognize_02, attr-arg1, [p, attr-instance, person, attr-mod, [o, attr-instance, other]]]]]"
1152,1152,1152,1152,1411,10099,demenz,"Wer Demenz hat, kann schlecht lernen.",12_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,"0:=Wer 1:=Demenz 2:=hat, 3:=kann 4:=schlecht 5:=lernen.",2,"[[0, 1, 2], [3, 4, 5]]",People with dementia have difficulty learning.,"['# ::snt People with dementia have difficulty learning.\n(h / have-trouble-04\n      :ARG0 (p / person\n            :ARG0-of (h2 / have-03\n                  :ARG1 (d / disease\n                        :name (n / name\n                              :op1 ""Dementia""))))\n      :ARG1 (l / learn-01\n            :ARG0 p))']","[h, attr-instance, have_trouble_04, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_03, attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]], attr-arg1, [l, attr-instance, learn_01, attr-arg0, p]]"
1153,1153,1153,1153,1413,10101,demenz,Manchmal erzählen Menschen mit Demenz immer das Gleiche.,14_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Manchmal 1:=erzählen 2:=Menschen 3:=mit 4:=Demenz 5:=immer 6:=das 7:=Gleiche.,1,,Sometimes people with dementia say the same thing over and over again.,"['# ::snt Sometimes people with dementia say the same thing over and over again.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-03\n                  :ARG1 (d / disease\n                        :name (n / name\n                              :op1 ""Dementia""))))\n      :ARG1 (t / thing\n            :ARG1-of (s2 / same-01))\n      :frequency (o / over-and-over)\n      :time (s3 / sometimes))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [s2, attr-instance, same_01]], attr-frequency, [o, attr-instance, over_and_over], attr-time, [s3, attr-instance, sometimes]]"
1154,1154,1154,1154,1414,10102,demenz,Oder sie erzählen Sachen aus ihrer Kindheit.,15_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Oder 1:=sie 2:=erzählen 3:=Sachen 4:=aus 5:=ihrer 6:=Kindheit.,1,,Or they tell things from their childhood.,['# ::snt Or they tell things from their childhood.\n(o / or\n      :op2 (t / tell-01\n            :ARG0 (t2 / they)\n            :ARG1 (t3 / thing\n                  :time (c / childhood\n                        :poss t2))))'],"[o, attr-instance, or, attr-op2, [t, attr-instance, tell_01, attr-arg0, [t2, attr-instance, they], attr-arg1, [t3, attr-instance, thing, attr-time, [c, attr-instance, childhood, attr-poss, t2]]]]"
1155,1155,1155,1155,1415,10103,demenz,Es gibt noch keine Heilung für Demenz.,16_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Es 1:=gibt 2:=noch 3:=keine 4:=Heilung 5:=für 6:=Demenz.,2,"[[0, 1, 2, 3, 4], [5, 6]]",There is currently no cure for dementia.,"['# ::snt There is currently no cure for dementia.\n(c / cure-01\n      :polarity -\n      :ARG2 (d / disease\n            :name (n / name\n                  :op1 ""Dementia""))\n      :time (c2 / current))']","[c, attr-instance, cure_01, attr-polarity, negative, attr-arg2, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]], attr-time, [c2, attr-instance, current]]"
1156,1156,1156,1156,1416,10105,demenz,Die Demenz wird meistens schlimmer.,18_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Die 1:=Demenz 2:=wird 3:=meistens 4:=schlimmer.,1,,Dementia usually gets worse.,['# ::snt Dementia usually gets worse.\n(w / worsen-01\n      :ARG1 (d / dementia)\n      :mod (u / usual))'],"[w, attr-instance, worsen_01, attr-arg1, [d, attr-instance, dementia], attr-mod, [u, attr-instance, usual]]"
1157,1157,1157,1157,1417,10106,demenz,Manche Medikamente helfen bei Demenz.,19_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Manche 1:=Medikamente 2:=helfen 3:=bei 4:=Demenz.,1,,Some medications help with dementia.,"['# ::snt Some medications help with dementia.\n(h / help-01\n      :ARG0 (m / medication\n            :mod (s / some))\n      :ARG1 (t / treat-03\n            :ARG2 (d / disease\n                  :name (n / name\n                        :op1 ""Dementia""))))']","[h, attr-instance, help_01, attr-arg0, [m, attr-instance, medication, attr-mod, [s, attr-instance, some]], attr-arg1, [t, attr-instance, treat_03, attr-arg2, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]]"
1158,1158,1158,1158,1418,10107,demenz,Damit die Demenz nur langsam schlimmer wird.,20_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Damit 1:=die 2:=Demenz 3:=nur 4:=langsam 5:=schlimmer 6:=wird.,1,,So that the dementia only gets worse slowly.,"['# ::snt So that the dementia only gets worse slowly.\n(c / cause-01\n      :ARG1 (w / worsen-01\n            :ARG1 (d / disease\n                  :name (n / name\n                        :op1 ""Dementia""))\n            :ARG1-of (s / slow-05)\n            :mod (o / only)))']","[c, attr-instance, cause_01, attr-arg1, [w, attr-instance, worsen_01, attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]], attr-arg1_of, [s, attr-instance, slow_05], attr-mod, [o, attr-instance, only]]]"
1159,1159,1159,1159,1419,10108,demenz,Es gibt verschiedene Arten von Demenz.,21_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Es 1:=gibt 2:=verschiedene 3:=Arten 4:=von 5:=Demenz.,1,,There are different types of dementia.,"['# ::snt There are different types of dementia.\n(d / differ-02\n      :ARG1 (d2 / disease\n            :name (n / name\n                  :op1 ""Dementia"")\n            :mod (t / type)))']","[d, attr-instance, differ_02, attr-arg1, [d2, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""], attr-mod, [t, attr-instance, type]]]"
1160,1160,1160,1160,1420,10109,demenz,Eine Demenz-art heißt Alzheimer.,22_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Eine 1:=Demenz-art 2:=heißt 3:=Alzheimer.,1,,One type of dementia is called Alzheimer’s.,"['# ::snt One type of dementia is called Alzheimer’s.\n(c / call-01\n      :ARG1 (d / disease\n            :name (n / name\n                  :op1 ""Alzheimer\'s"")\n            :mod (t / type\n                  :mod (o / one)))\n      :ARG2 (d2 / disease\n            :name (n2 / name\n                  :op1 ""Alzheimer\'s"")))']","[c, attr-instance, call_01, attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""alzheimer's""], attr-mod, [t, attr-instance, type, attr-mod, [o, attr-instance, one]]], attr-arg2, [d2, attr-instance, disease, attr-name, [n2, attr-instance, name, attr-op1, ""alzheimer's""]]]"
1161,1161,1161,1161,1421,10110,demenz,Alzheimer ist der Name von einem Arzt.,23_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Alzheimer 1:=ist 2:=der 3:=Name 4:=von 5:=einem 6:=Arzt.,2,"[[0, 1], [4, 6]]",Alzheimer is the name of a doctor.,"['# ::snt Alzheimer is the name of a doctor.\n(n / name-01\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 ""Alzheimer""))\n      :ARG2 (d / doctor))']","[n, attr-instance, name_01, attr-arg1, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""alzheimer""]], attr-arg2, [d, attr-instance, doctor]]"
1162,1162,1162,1162,1422,10111,demenz,Der Arzt hat zum Thema Demenz geforscht.,24_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Der 1:=Arzt 2:=hat 3:=zum 4:=Thema 5:=Demenz 6:=geforscht.,2,"[[1, 2, 6], [3, 4, 5]]",The doctor has researched the topic of dementia.,"['# ::snt The doctor has researched the topic of dementia.\n(r / research-01\n      :ARG0 (d / doctor)\n      :ARG1 (t / topic\n            :topic (d2 / disease\n                  :name (n / name\n                        :op1 ""Dementia""))))']","[r, attr-instance, research_01, attr-arg0, [d, attr-instance, doctor], attr-arg1, [t, attr-instance, topic, attr-topic, [d2, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]]"
1163,1163,1163,1163,1423,10112,demenz,Viele Menschen haben Demenz.,25_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Viele 1:=Menschen 2:=haben 3:=Demen1z.,1,,Many people have dementia.,"['# ::snt Many people have dementia.\n(h / have-03\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (d / disease\n            :name (n / name\n                  :op1 ""Dementia"")))']","[h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]"
1164,1164,1164,1164,1424,10113,demenz,"Zum Beispiel: • In Deutschland haben 1,7 Millionen Menschen Demenz.",26_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,"0:=Zum 1:=Beispiel: 2:=• 3:=In 4:=Deutschland 5:=haben 6:=1,7 7:=Millionen 8:=Menschen 9:=Demenz.",1,,"For example: • In Germany, 1.7 million people have dementia.","['# ::snt For example: • In Germany, 1.7 million people have dementia.\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (p / person\n                  :quant 1700000)\n            :ARG1 (d / disease\n                  :name (n / name\n                        :op1 ""Dementia""))\n            :location (c / country\n                  :name (n2 / name\n                        :op1 ""Germany""))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-quant, 1700000], attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]], attr-location, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""germany""]]]]"
1165,1165,1165,1165,1425,10114,demenz, • In Österreich haben 130 Tausend Menschen Demenz.,27_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:= 1:=• 2:=In 3:=Österreich 4:=haben 5:=130 6:=Tausend 7:=Menschen 8:=Demenz.,1,,"• In Austria, 130 thousand people have dementia.","['# ::snt • In Austria, 130 thousand people have dementia.\n(h / have-03\n      :ARG0 (p / person\n            :quant 130000)\n      :ARG1 (d / disease\n            :name (n / name\n                  :op1 ""Dementia""))\n      :location (c / country\n            :name (n2 / name\n                  :op1 ""Austria"")))']","[h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-quant, 130000], attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]], attr-location, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""austria""]]]"
1166,1166,1166,1166,1426,10115,demenz, • In der Schweiz haben 128 Tausend Menschen Demenz.,28_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:= 1:=• 2:=In 3:=der 4:=Schweiz 5:=haben 6:=128 7:=Tausend 8:=Menschen 9:=Demenz.,1,,"• In Switzerland, 128 thousand people have dementia.","['# ::snt • In Switzerland, 128 thousand people have dementia.\n(h / have-03\n      :ARG0 (p / person\n            :quant 128000)\n      :ARG1 (d / disease\n            :name (n / name\n                  :op1 ""Dementia""))\n      :location (c / country\n            :name (n2 / name\n                  :op1 ""Switzerland"")))']","[h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-quant, 128000], attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]], attr-location, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""switzerland""]]]"
1167,1167,1167,1167,1427,10116,demenz,Demenz ist eine Krankheit.,0_short,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Demenz 1:=ist 2:=eine 3:=Krankheit.,1,,Dementia is a disease.,['# ::snt Dementia is a disease.\n(d / disease\n      :domain (d2 / dementia))'],"[d, attr-instance, disease, attr-domain, [d2, attr-instance, dementia]]"
1168,1168,1168,1168,1428,10117,demenz,Bei einer Demenz ist das Gehirn krank.,1_short,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Bei 1:=einer 2:=Demenz 3:=ist 4:=das 5:=Gehirn 6:=krank.,1,,"In dementia, the brain is sick.","['# ::snt In dementia, the brain is sick.\n(s / sick-05\n      :ARG1 (b / brain)\n      :condition (d / disease\n            :name (n / name\n                  :op1 ""Dementia"")))']","[s, attr-instance, sick_05, attr-arg1, [b, attr-instance, brain], attr-condition, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]"
1169,1169,1169,1169,1429,10118,demenz,Menschen mit einer Demenz vergessen immer mehr Sachen.,2_short,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Menschen 1:=mit 2:=einer 3:=Demenz 4:=vergessen 5:=immer 6:=mehr 7:=Sachen.,1,,People with dementia forget more and more things.,"['# ::snt People with dementia forget more and more things.\n(f / forget-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-03\n                  :ARG1 (d / disease\n                        :name (n / name\n                              :op1 ""Dementia""))))\n      :ARG1 (t / thing\n            :ARG1-of (ii / increase-01)))']","[f, attr-instance, forget_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [ii, attr-instance, increase_01]]]"
1170,1170,1170,1170,1430,10119,demenz,Menschen mit Demenz können sich immer weniger merken.,3_short,Gesundheit|Seiten_mit_defekten_Dateilinks,2012-10-27T17:19:13Z,a6e7bfd89d5771b450c4ab0f5c2996e5,0:=Menschen 1:=mit 2:=Demenz 3:=können 4:=sich 5:=immer 6:=weniger 7:=merken.,1,,People with dementia are increasingly unable to remember things.,"['# ::snt People with dementia are increasingly unable to remember things.\n(p / possible-01\n      :polarity -\n      :ARG1 (r / remember-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-03\n                        :ARG1 (d / disease\n                              :name (n / name\n                                    :op1 ""Dementia""))))\n            :ARG1 (t / thing))\n      :ARG1-of (ii / increase-01))']","[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [r, attr-instance, remember_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""dementia""]]]], attr-arg1, [t, attr-instance, thing]], attr-arg1_of, [ii, attr-instance, increase_01]]"
1171,1171,1171,1171,1431,10120,demeter,Die Zeit vom 8. Jahrhundert vor Christus bis 146 vor Christus war eine besondere Zeit in Griechenland.,0_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Die 1:=Zeit 2:=vom 3:=8. 4:=Jahrhundert 5:=vor 6:=Christus 7:=bis 8:=146 9:=vor 10:=Christus 11:=war 12:=eine 13:=besondere 14:=Zeit 15:=in 16:=Griechenland.,4,"[[1, 2, 3, 4, 5, 6], [1, 7, 8, 9, 10], [1, 11, 13, 14], [15, 16]]",The period from the 8th century BC to 146 BC was a special time in Greece.,"['# ::snt The period from the 8th century BC to 146 BC was a special time in Greece.\n(t / time\n      :ARG1-of (s / special-02)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Greece""))\n      :time (d / date-interval\n            :op1 (d2 / date-entity\n                  :century 8\n                  :era ""BC"")\n            :op2 (d3 / date-entity\n                  :year 146\n                  :era ""BC"")))']","[t, attr-instance, time, attr-arg1_of, [s, attr-instance, special_02], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""greece""]], attr-time, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-century, 8, attr-era, ""bc""], attr-op2, [d3, attr-instance, date_entity, attr-year, 146, attr-era, ""bc""]]]"
1172,1172,1172,1172,1432,10121,demeter,Manche sagen zu dieser Zeit: Antikes Griechenland.,1_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Manche 1:=sagen 2:=zu 3:=dieser 4:=Zeit: 5:=Antikes 6:=Griechenland.,1,,Some people call this time Ancient Greece.,"['# ::snt Some people call this time Ancient Greece.\n(c / call-01\n      :ARG0 (p / person\n            :mod (s / some))\n      :ARG1 (t / time\n            :mod (t2 / this))\n      :ARG2 (n / name\n            :op1 ""Ancient""\n            :op2 ""Greece""))']","[c, attr-instance, call_01, attr-arg0, [p, attr-instance, person, attr-mod, [s, attr-instance, some]], attr-arg1, [t, attr-instance, time, attr-mod, [t2, attr-instance, this]], attr-arg2, [n, attr-instance, name, attr-op1, ""ancient"", attr-op2, ""greece""]]"
1173,1173,1173,1173,1433,10122,demeter,In dieser Zeit haben sich die Menschen bestimmte Geschichten erzählt.,2_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=In 1:=dieser 2:=Zeit 3:=haben 4:=sich 5:=die 6:=Menschen 7:=bestimmte 8:=Geschichten 9:=erzählt.,2,"[[0, 1, 2], [3, 4, 6, 7, 8, 9]]","During this time, people told each other certain stories.","['# ::snt During this time, people told each other certain stories.\n(t / tell-01\n      :ARG0 (p / person)\n      :ARG1 (s / story\n            :mod (c / certain))\n      :ARG2 p\n      :time (t2 / time\n            :mod (t3 / this)))']","[t, attr-instance, tell_01, attr-arg0, [p, attr-instance, person], attr-arg1, [s, attr-instance, story, attr-mod, [c, attr-instance, certain]], attr-arg2, p, attr-time, [t2, attr-instance, time, attr-mod, [t3, attr-instance, this]]]"
1174,1174,1174,1174,1435,10124,demeter,Einer dieser Göttinnen ist Demeter.,4_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Einer 1:=dieser 2:=Göttinnen 3:=ist 4:=Demeter.,1,,One of these goddesses is Demeter.,"['# ::snt One of these goddesses is Demeter.\n(ii / include-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG2 (d / deity\n            :mod (t / this)))']","[ii, attr-instance, include_91, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg2, [d, attr-instance, deity, attr-mod, [t, attr-instance, this]]]"
1175,1175,1175,1175,1436,10125,demeter,Demeter ist eine von 12 griechischen Göttern.,5_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=eine 3:=von 4:=12 5:=griechischen 6:=Göttern.,1,,Demeter is one of 12 Greek gods.,"['# ::snt Demeter is one of 12 Greek gods.\n(ii / include-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG2 (g / god\n            :quant 12\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 ""Greece""))))']","[ii, attr-instance, include_91, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg2, [g, attr-instance, god, attr-quant, 12, attr-mod, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""greece""]]]]"
1176,1176,1176,1176,1437,10126,demeter,Demeter ist der Schwester von: • Zeus,6_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=der 3:=Schwester 4:=von: 5:=• 6:=Zeus,1,,Demeter is the sister of: • Zeus,"['# ::snt Demeter is the sister of: • Zeus\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Zeus""))\n      :ARG2 (s / sister))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""zeus""]], attr-arg2, [s, attr-instance, sister]]"
1177,1177,1177,1177,1438,10127,demeter,Demeter ist der Schwester von: • Hades,7_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=der 3:=Schwester 4:=von: 5:=• 6:=Hades,1,,Demeter is the sister of: • Hades,"['# ::snt Demeter is the sister of: • Hades\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Hades""))\n      :ARG2 (s / sister))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""hades""]], attr-arg2, [s, attr-instance, sister]]"
1178,1178,1178,1178,1439,10128,demeter,Demeter ist der Schwester von: • Hestia,8_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=der 3:=Schwester 4:=von: 5:=• 6:=Hestia,1,,Demeter is the sister of: • Hestia,"['# ::snt Demeter is the sister of: • Hestia\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Hestia""))\n      :ARG2 (s / sister))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""hestia""]], attr-arg2, [s, attr-instance, sister]]"
1179,1179,1179,1179,1440,10129,demeter,Demeter ist der Schwester von: • Poseidon und,9_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=der 3:=Schwester 4:=von: 5:=• 6:=Poseidon 7:=und,1,,Demeter is the sister of: • Poseidon and,"['# ::snt Demeter is the sister of: • Poseidon and\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (a / and\n            :op1 (p2 / person\n                  :name (n2 / name\n                        :op1 ""Poseidon""))\n            :op2 (p3 / person\n                  :name (n3 / name\n                        :op1 ""Demeter"")))\n      :ARG2 (s / sister))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [a, attr-instance, and, attr-op1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""poseidon""]], attr-op2, [p3, attr-instance, person, attr-name, [n3, attr-instance, name, attr-op1, ""demeter""]]], attr-arg2, [s, attr-instance, sister]]"
1180,1180,1180,1180,1441,10130,demeter,Demeter ist der Schwester von: • Hera,10_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=der 3:=Schwester 4:=von: 5:=• 6:=Hera,1,,Demeter is the sister of: • Hera,"['# ::snt Demeter is the sister of: • Hera\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Hera""))\n      :ARG2 (s / sister))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""hera""]], attr-arg2, [s, attr-instance, sister]]"
1181,1181,1181,1181,1442,10131,demeter,Zusammen mit Iasion hat Demeter einen Sohn.,11_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Zusammen 1:=mit 2:=Iasion 3:=hat 4:=Demeter 5:=einen 6:=Sohn.,2,"[[0, 1, 2], [3, 4, 6]]",Demeter has a son with Iasion.,"['# ::snt Demeter has a son with Iasion.\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (p2 / person\n            :ARG0-of (h2 / have-03\n                  :ARG1 (d / disease\n                        :name n\n                        :op1 ""Iasion"")))\n      :ARG2 (s / son))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [p2, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_03, attr-arg1, [d, attr-instance, disease, attr-name, n, attr-op1, ""iasion""]]], attr-arg2, [s, attr-instance, son]]"
1182,1182,1182,1182,1443,10132,demeter,Der Sohn heißt Plutos.,12_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Der 1:=Sohn 2:=heißt 3:=Plutos.,1,,The son is called Plutos.,"['# ::snt The son is called Plutos.\n(c / call-01\n      :ARG1 (s / son)\n      :ARG2 (n / name\n            :op1 ""Plutos""))']","[c, attr-instance, call_01, attr-arg1, [s, attr-instance, son], attr-arg2, [n, attr-instance, name, attr-op1, ""plutos""]]"
1183,1183,1183,1183,1444,10133,demeter,Zusammen mit Poseidon hat Demeter den Sohn Areion.,13_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Zusammen 1:=mit 2:=Poseidon 3:=hat 4:=Demeter 5:=den 6:=Sohn 7:=Areion.,3,"[[0, 1, 2], [3, 4, 6], [6, 7]]","Together with Poseidon, Demeter has a son, Areion.","['# ::snt Together with Poseidon, Demeter has a son, Areion.\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Areion""))\n      :ARG2 (s / son)\n      :accompanier (p3 / person\n            :name (n3 / name\n                  :op1 ""Poseidon"")))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""areion""]], attr-arg2, [s, attr-instance, son], attr-accompanier, [p3, attr-instance, person, attr-name, [n3, attr-instance, name, attr-op1, ""poseidon""]]]"
1184,1184,1184,1184,1445,10134,demeter,Zusammen mit Zeus hat Demeter eine Tochter.,14_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Zusammen 1:=mit 2:=Zeus 3:=hat 4:=Demeter 5:=eine 6:=Tochter.,2,"[[0, 1, 2], [3, 4, 6]]",Demeter has a daughter with Zeus.,"['# ::snt Demeter has a daughter with Zeus.\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Zeus""))\n      :ARG2 (d / daughter))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""zeus""]], attr-arg2, [d, attr-instance, daughter]]"
1185,1185,1185,1185,1446,10135,demeter,Die Tochter heißt Persephone.,15_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Die 1:=Tochter 2:=heißt 3:=Persephone.,1,,The daughter is called Persephone.,"['# ::snt The daughter is called Persephone.\n(c / call-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (d / daughter)))\n      :ARG2 (n / name\n            :op1 ""Persephone""))']","[c, attr-instance, call_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg2, [d, attr-instance, daughter]]], attr-arg2, [n, attr-instance, name, attr-op1, ""persephone""]]"
1186,1186,1186,1186,1447,10136,demeter,Demeter ist der Name von einer griechischen Göttin.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=der 3:=Name 4:=von 5:=einer 6:=griechischen 7:=Göttin.,3,"[[0, 1], [4, 7], [6, 7]]",Demeter is the name of a Greek goddess.,"['# ::snt Demeter is the name of a Greek goddess.\n(n / name\n      :op1 ""Demeter""\n      :ARG2 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n2 / name\n                              :op1 ""Greece""))\n                  :ARG2 (g / goddess))))']","[n, attr-instance, name, attr-op1, ""demeter"", attr-arg2, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg1, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""greece""]], attr-arg2, [g, attr-instance, goddess]]]]"
1187,1187,1187,1187,1448,10137,demeter,Demeter ist die Muttergöttin im Olymp.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=die 3:=Muttergöttin 4:=im 5:=Olymp.,2,"[[3], [4, 5]]",Demeter is the mother goddess in Olympus.,"['# ::snt Demeter is the mother goddess in Olympus.\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (p2 / planet\n            :name (n2 / name\n                  :op1 ""Olympia""))\n      :ARG2 (m / mother))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [p2, attr-instance, planet, attr-name, [n2, attr-instance, name, attr-op1, ""olympia""]], attr-arg2, [m, attr-instance, mother]]"
1188,1188,1188,1188,1449,10138,demeter,Demeter ist zuständig für: • die Fruchtbarkeit der Erde,2_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=zuständig 3:=für: 4:=• 5:=die 6:=Fruchtbarkeit 7:=der 8:=Erde,2,"[[0, 1, 2, 3], [7, 8]]",Demeter is responsible for: • the fertility of the earth,"['# ::snt Demeter is responsible for: • the fertility of the earth\n(r / responsible-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (f / fertility\n            :poss (p2 / planet\n                  :name (n2 / name\n                        :op1 ""Earth""))))']","[r, attr-instance, responsible_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [f, attr-instance, fertility, attr-poss, [p2, attr-instance, planet, attr-name, [n2, attr-instance, name, attr-op1, ""earth""]]]]"
1189,1189,1189,1189,1450,10139,demeter,Demeter ist zuständig für: • Getreide und,3_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=Demeter 1:=ist 2:=zuständig 3:=für: 4:=• 5:=Getreide 6:=und,1,,Demeter is responsible for: • Grain and,"['# ::snt Demeter is responsible for: • Grain and\n(r / responsible-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Demeter""))\n      :ARG1 (a / and\n            :op1 (g / grain)\n            :op2 (o / oil)))']","[r, attr-instance, responsible_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""demeter""]], attr-arg1, [a, attr-instance, and, attr-op1, [g, attr-instance, grain], attr-op2, [o, attr-instance, oil]]]"
1190,1190,1190,1190,1451,10140,demeter,In der römischen Sage ist ihr Name Ceres.,4_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-01-29T14:24:42Z,e800bebc9060331edfac65e663a55570,0:=In 1:=der 2:=römischen 3:=Sage 4:=ist 5:=ihr 6:=Name 7:=Ceres.,3,"[[0, 3], [2, 3], [4, 5, 6, 7]]",In Roman legend her name is Ceres.,"['# ::snt In Roman legend her name is Ceres.\n(n / name-01\n      :ARG1 (s / she)\n      :ARG2 (p / planet\n            :name (n2 / name\n                  :op1 ""Cesare""))\n      :ARG1-of (l / legend\n            :mod (c / country\n                  :name (n3 / name\n                        :op1 ""Roman""))))']","[n, attr-instance, name_01, attr-arg1, [s, attr-instance, she], attr-arg2, [p, attr-instance, planet, attr-name, [n2, attr-instance, name, attr-op1, ""cesare""]], attr-arg1_of, [l, attr-instance, legend, attr-mod, [c, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""roman""]]]]"
1191,1191,1191,1191,1452,10141,demilitarisierung,Deutschland verlor 1918 den Ersten Weltkrieg.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=Deutschland 1:=verlor 2:=1918 3:=den 4:=Ersten 5:=Weltkrieg.,2,"[[0, 1, 4, 5], [2]]",Germany lost the First World War in 1918.,"['# ::snt Germany lost the First World War in 1918.\n(l / lose-03\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""Germany""))\n      :ARG1 (w / war\n            :name (n2 / name\n                  :op1 ""First""\n                  :op2 ""World""\n                  :op3 ""War""))\n      :time (d / date-entity\n            :year 1918))']","[l, attr-instance, lose_03, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]], attr-arg1, [w, attr-instance, war, attr-name, [n2, attr-instance, name, attr-op1, ""first"", attr-op2, ""world"", attr-op3, ""war""]], attr-time, [d, attr-instance, date_entity, attr-year, 1918]]"
1192,1192,1192,1192,1453,10142,demilitarisierung,Später wurde ein Vertrag abgehandelt.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=Später 1:=wurde 2:=ein 3:=Vertrag 4:=abgehandelt.,1,,Later a contract was negotiated.,['# ::snt Later a contract was negotiated.\n(n / negotiate-01\n      :ARG2 (c / contract-02)\n      :time (a / after))'],"[n, attr-instance, negotiate_01, attr-arg2, [c, attr-instance, contract_02], attr-time, [a, attr-instance, after]]"
1193,1193,1193,1193,1454,10143,demilitarisierung,Der Vertrag hieß Versailler Vertrag.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=Der 1:=Vertrag 2:=hieß 3:=Versailler 4:=Vertrag.,1,,The treaty was called the Treaty of Versailles.,"['# ::snt The treaty was called the Treaty of Versailles.\n(c / call-01\n      :ARG1 (t / treaty)\n      :ARG2 t\n      :name (n / name\n            :op1 ""Treaty""\n            :op2 ""of""\n            :op3 ""Versailles""))']","[c, attr-instance, call_01, attr-arg1, [t, attr-instance, treaty], attr-arg2, t, attr-name, [n, attr-instance, name, attr-op1, ""treaty"", attr-op2, ""of"", attr-op3, ""versailles""]]"
1194,1194,1194,1194,1455,10144,demilitarisierung,Im Vertrag stand unter anderem der Punkt Demilitarisierung.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=Im 1:=Vertrag 2:=stand 3:=unter 4:=anderem 5:=der 6:=Punkt 7:=Demilitarisierung.,1,,One of the points in the treaty was demilitarization.,['# ::snt One of the points in the treaty was demilitarization.\n(ii / include-91\n      :ARG1 (d / demilitarize-01)\n      :ARG2 (p / point-04\n            :ARG1 (t / treaty)))'],"[ii, attr-instance, include_91, attr-arg1, [d, attr-instance, demilitarize_01], attr-arg2, [p, attr-instance, point_04, attr-arg1, [t, attr-instance, treaty]]]"
1195,1195,1195,1195,1456,10145,demilitarisierung,Man schaffte das Militär und die Wehrpflicht ab.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=Man 1:=schaffte 2:=das 3:=Militär 4:=und 5:=die 6:=Wehrpflicht 7:=ab.,2,"[[3], [6]]",The military and conscription were abolished.,['# ::snt The military and conscription were abolished.\n(a / abolish-01\n      :ARG1 (a2 / and\n            :op1 (m / military)\n            :op2 (c / cription)))'],"[a, attr-instance, abolish_01, attr-arg1, [a2, attr-instance, and, attr-op1, [m, attr-instance, military], attr-op2, [c, attr-instance, cription]]]"
1196,1196,1196,1196,1457,10146,demilitarisierung,1933 kam Adolf Hitler an die Macht.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=1933 1:=kam 2:=Adolf 3:=Hitler 4:=an 5:=die 6:=Macht.,1,,In 1933 Adolf Hitler came to power.,"['# ::snt In 1933 Adolf Hitler came to power.\n(c / come-04\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Adolf""\n                  :op2 ""Hitler""))\n      :ARG2 (p2 / power)\n      :time (d / date-entity\n            :year 1933))']","[c, attr-instance, come_04, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""adolf"", attr-op2, ""hitler""]], attr-arg2, [p2, attr-instance, power], attr-time, [d, attr-instance, date_entity, attr-year, 1933]]"
1197,1197,1197,1197,1458,10147,demilitarisierung,Er hob den Versailler Vertrag auf.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=Er 1:=hob 2:=den 3:=Versailler 4:=Vertrag 5:=auf.,1,,He annulled the Treaty of Versailles.,"['# ::snt He annulled the Treaty of Versailles.\n(a / annul-01\n      :ARG0 (h / he)\n      :ARG1 (t / treaty\n            :name (n / name\n                  :op1 ""Treaty""\n                  :op2 ""of""\n                  :op3 ""Versailles"")))']","[a, attr-instance, annul_01, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, treaty, attr-name, [n, attr-instance, name, attr-op1, ""treaty"", attr-op2, ""of"", attr-op3, ""versailles""]]]"
1198,1198,1198,1198,1459,10148,demilitarisierung,Er führte die Wehrmacht wieder ein.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=Er 1:=führte 2:=die 3:=Wehrmacht 4:=wieder 5:=ein.,1,,He reintroduced the Wehrmacht.,"['# ::snt He reintroduced the Wehrmacht.\n(r / reintroduce-02\n      :ARG0 (h / he)\n      :ARG1 (m / military\n            :name (n / name\n                  :op1 ""Wehrmacht"")))']","[r, attr-instance, reintroduce_02, attr-arg0, [h, attr-instance, he], attr-arg1, [m, attr-instance, military, attr-name, [n, attr-instance, name, attr-op1, ""wehrmacht""]]]"
1199,1199,1199,1199,1460,10149,demilitarisierung,1945 verlor Deutschland den Zweiten Weltkrieg.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=1945 1:=verlor 2:=Deutschland 3:=den 4:=Zweiten 5:=Weltkrieg.,2,"[[0], [1, 2, 4, 5]]",In 1945 Germany lost the Second World War.,"['# ::snt In 1945 Germany lost the Second World War.\n(l / lose-03\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""Germany""))\n      :ARG1 (w / war\n            :name (n2 / name\n                  :op1 ""Second""\n                  :op2 ""World""\n                  :op3 ""War""))\n      :time (d / date-entity\n            :year 1945))']","[l, attr-instance, lose_03, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]], attr-arg1, [w, attr-instance, war, attr-name, [n2, attr-instance, name, attr-op1, ""second"", attr-op2, ""world"", attr-op3, ""war""]], attr-time, [d, attr-instance, date_entity, attr-year, 1945]]"
1200,1200,1200,1200,1461,10150,demilitarisierung,"In der Potsdamer Konferenz wurde besprochen, was mit Deutschland passieren sollte.",9_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,"0:=In 1:=der 2:=Potsdamer 3:=Konferenz 4:=wurde 5:=besprochen, 6:=was 7:=mit 8:=Deutschland 9:=passieren 10:=sollte.",4,"[[0, 2, 3], [4, 5], [6, 9, 10], [7, 8]]",The Potsdam Conference discussed what should happen to Germany.,"['# ::snt The Potsdam Conference discussed what should happen to Germany.\n(d / discuss-01\n      :ARG0 (c / conference\n            :location (c2 / city\n                  :name (n / name\n                        :op1 ""Potsdam"")))\n      :ARG1 (t / thing\n            :ARG1-of (r / recommend-01\n                  :beneficiary (c3 / country\n                        :name (n2 / name\n                              :op1 ""Germany"")))))']","[d, attr-instance, discuss_01, attr-arg0, [c, attr-instance, conference, attr-location, [c2, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""potsdam""]]], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [r, attr-instance, recommend_01, attr-beneficiary, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""germany""]]]]]"
1201,1201,1201,1201,1462,10151,demilitarisierung,Unter anderem beseitigte man die Armee in Deutschland.,10_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=Unter 1:=anderem 2:=beseitigte 3:=man 4:=die 5:=Armee 6:=in 7:=Deutschland.,2,"[[0, 1, 2, 3, 5], [6, 7]]","Among other things, the army in Germany was eliminated.","['# ::snt Among other things, the army in Germany was eliminated.\n(e / eliminate-01\n      :ARG1 (a / army\n            :location (c / country\n                  :name (n / name\n                        :op1 ""Germany"")))\n      :prep-among (t / thing\n            :mod (o / other)))']","[e, attr-instance, eliminate_01, attr-arg1, [a, attr-instance, army, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]], attr-prep_among, [t, attr-instance, thing, attr-mod, [o, attr-instance, other]]]"
1202,1202,1202,1202,1463,10152,demilitarisierung,"Man hatte Angst, dass es wieder zu einem Weltkrieg kommen könnte.",11_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,"0:=Man 1:=hatte 2:=Angst, 3:=dass 4:=es 5:=wieder 6:=zu 7:=einem 8:=Weltkrieg 9:=kommen 10:=könnte.",2,"[[0, 1, 2], [3, 4, 5, 6, 8, 9, 10]]",People were afraid that another world war could break out.,"['# ::snt People were afraid that another world war could break out.\n(f / fear-01\n      :ARG0 (p / person)\n      :ARG1 (p2 / possible-01\n            :ARG1 (b / break-out-30\n                  :ARG1 (w / war\n                        :name (n / name\n                              :op1 ""World""\n                              :op2 ""War"")\n                        :mod (a / another)))))']","[f, attr-instance, fear_01, attr-arg0, [p, attr-instance, person], attr-arg1, [p2, attr-instance, possible_01, attr-arg1, [b, attr-instance, break_out_30, attr-arg1, [w, attr-instance, war, attr-name, [n, attr-instance, name, attr-op1, ""world"", attr-op2, ""war""], attr-mod, [a, attr-instance, another]]]]]"
1203,1203,1203,1203,1464,10153,demilitarisierung,Als Demilitarisierung bezeichnet man die Beseitung einer Armee.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-01-20T18:01:41Z,950c751fae083d40469b6d3261a74515,0:=Als 1:=Demilitarisierung 2:=bezeichnet 3:=man 4:=die 5:=Beseitung 6:=einer 7:=Armee.,1,,Demilitarization is the elimination of an army.,['# ::snt Demilitarization is the elimination of an army.\n(e / eliminate-01\n      :ARG1 (a / army)\n      :domain (d / destabilize-01))'],"[e, attr-instance, eliminate_01, attr-arg1, [a, attr-instance, army], attr-domain, [d, attr-instance, destabilize_01]]"
1204,1204,1204,1204,1466,10155,demografie,Es werden verschiedene Sachen in einem Land gezählt.,1_long,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:=Es 1:=werden 2:=verschiedene 3:=Sachen 4:=in 5:=einem 6:=Land 7:=gezählt.,2,"[[0, 1, 2, 3, 7], [4, 6]]",Different things are counted in a country.,['# ::snt Different things are counted in a country.\n(c / count-01\n      :ARG1 (t / thing\n            :ARG1-of (d / differ-02))\n      :location (c2 / country))'],"[c, attr-instance, count_01, attr-arg1, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, differ_02]], attr-location, [c2, attr-instance, country]]"
1205,1205,1205,1205,1467,10156,demografie,Alles was in einem Jahr passiert ist.,2_long,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:=Alles 1:=was 2:=in 3:=einem 4:=Jahr 5:=passiert 6:=ist.,2,"[[0, 1, 5, 6], [2, 4]]",Everything that happened in one year.,['# ::snt Everything that happened in one year.\n(e / everything\n      :time (a / after\n            :op1 (n / now)\n            :quant (t / temporal-quantity\n                  :quant 1\n                  :unit (y / year))))'],"[e, attr-instance, everything, attr-time, [a, attr-instance, after, attr-op1, [n, attr-instance, now], attr-quant, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [y, attr-instance, year]]]]"
1206,1206,1206,1206,1468,10157,demografie, • Wie viele Menschen sind geboren worden,3_long,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:= 1:=• 2:=Wie 3:=viele 4:=Menschen 5:=sind 6:=geboren 7:=worden,1,,• How many people were born,['# ::snt • How many people were born\n(b / bear-02\n      :ARG1 (p / person\n            :quant (a / amr-unknown)))'],"[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-quant, [a, attr-instance, amr_unknown]]]"
1207,1207,1207,1207,1469,10158,demografie, • Wie viele Menschen sind gestorben,4_long,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:= 1:=• 2:=Wie 3:=viele 4:=Menschen 5:=sind 6:=gestorben,1,,• How many people died,['# ::snt • How many people died\n(d / die-01\n      :ARG1 (p / person\n            :quant (a / amr-unknown)))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-quant, [a, attr-instance, amr_unknown]]]"
1208,1208,1208,1208,1470,10159,demografie, • wie viele Menschen sind in das Land gekommen,5_long,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:= 1:=• 2:=wie 3:=viele 4:=Menschen 5:=sind 6:=in 7:=das 8:=Land 9:=gekommen,1,,• how many people have come to the country,['# ::snt • how many people have come to the country\n(c / come-01\n      :ARG1 (p / person\n            :quant (a / amr-unknown))\n      :ARG4 (c2 / country))'],"[c, attr-instance, come_01, attr-arg1, [p, attr-instance, person, attr-quant, [a, attr-instance, amr_unknown]], attr-arg4, [c2, attr-instance, country]]"
1209,1209,1209,1209,1471,10160,demografie, • wie viele Menschen sind ausgewandert,6_long,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:= 1:=• 2:=wie 3:=viele 4:=Menschen 5:=sind 6:=ausgewandert,1,,• how many people have emigrated,['# ::snt • how many people have emigrated\n(e / emigrate-01\n      :ARG0 (p / person\n            :quant (a / amr-unknown)))'],"[e, attr-instance, emigrate_01, attr-arg0, [p, attr-instance, person, attr-quant, [a, attr-instance, amr_unknown]]]"
1210,1210,1210,1210,1472,10161,demografie,Demografie kann man auch so schreiben: Demographie,7_long,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:=Demografie 1:=kann 2:=man 3:=auch 4:=so 5:=schreiben: 6:=Demographie,1,,Demography can also be written as: Demography,['# ::snt Demography can also be written as: Demography\n(p / possible-01\n      :ARG1 (w / write-01\n            :ARG1 (d / demography)\n            :ARG2 (d2 / demography)\n            :mod (a / also)))'],"[p, attr-instance, possible_01, attr-arg1, [w, attr-instance, write_01, attr-arg1, [d, attr-instance, demography], attr-arg2, [d2, attr-instance, demography], attr-mod, [a, attr-instance, also]]]"
1211,1211,1211,1211,1473,10162,demografie,Die Demografie ist eine Wissenschaft.,0_short,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:=Die 1:=Demografie 2:=ist 3:=eine 4:=Wissenschaft.,1,,Demography is a science.,['# ::snt Demography is a science.\n(s / science\n      :domain (d / demography))'],"[s, attr-instance, science, attr-domain, [d, attr-instance, demography]]"
1212,1212,1212,1212,1474,10163,demografie,Die Demografie forscht über Bevölkerungs-gruppen.,1_short,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:=Die 1:=Demografie 2:=forscht 3:=über 4:=Bevölkerungs-gruppen.,1,,Demography researches population groups.,['# ::snt Demography researches population groups.\n(r / research-01\n      :ARG0 (d / demography)\n      :ARG1 (g / group\n            :consist-of (p / population)))'],"[r, attr-instance, research_01, attr-arg0, [d, attr-instance, demography], attr-arg1, [g, attr-instance, group, attr-consist_of, [p, attr-instance, population]]]"
1213,1213,1213,1213,1475,10164,demografie,Und wie sich die Bevölkerungs-gruppen entwickeln.,2_short,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:=Und 1:=wie 2:=sich 3:=die 4:=Bevölkerungs-gruppen 5:=entwickeln.,1,,And how the population groups develop.,['# ::snt And how the population groups develop.\n(a / and\n      :op2 (d / develop-01\n            :ARG1 (g / group\n                  :mod (p / population))\n            :manner (a2 / amr-unknown)))'],"[a, attr-instance, and, attr-op2, [d, attr-instance, develop_01, attr-arg1, [g, attr-instance, group, attr-mod, [p, attr-instance, population]], attr-manner, [a2, attr-instance, amr_unknown]]]"
1214,1214,1214,1214,1476,10165,demografie,Das Wort Demografie ist griechisch.,3_short,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:=Das 1:=Wort 2:=Demografie 3:=ist 4:=griechisch.,1,,The word demography is Greek.,"['# ::snt The word demography is Greek.\n(w / word-01\n      :ARG1 (d / demography)\n      :ARG3 (l / language\n            :name (n / name\n                  :op1 ""Greek"")))']","[w, attr-instance, word_01, attr-arg1, [d, attr-instance, demography], attr-arg3, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""greek""]]]"
1215,1215,1215,1215,1477,10166,demografie,Auf auf deutsch bedeutet Demografie: Volks-beschreibung.,4_short,Wissenschaft|Gesellschaft|Seiten_mit_defekten_Dateilinks,2021-02-01T07:51:47Z,10d328ecc07ab3b6c356d5ccb8a5c8d3,0:=Auf 1:=auf 2:=deutsch 3:=bedeutet 4:=Demografie: 5:=Volks-beschreibung.,1,,"In German, demography means: description of the people.","['# ::snt In German, demography means: description of the people.\n(m / mean-01\n      :ARG1 (d / demography)\n      :ARG2 (d2 / describe-01\n            :ARG1 (p / person))\n      :medium (l / language\n            :name (n / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [d, attr-instance, demography], attr-arg2, [d2, attr-instance, describe_01, attr-arg1, [p, attr-instance, person]], attr-medium, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""german""]]]"
1216,1216,1216,1216,1478,12070,ebook-reader,Ein EBook Reader ist gut zum Bücher lesen.,4_short,Computer|Technik,2014-04-08T08:46:31Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=EBook 2:=Reader 3:=ist 4:=gut 5:=zum 6:=Bücher 7:=lesen.,1,,An eBook reader is good for reading books.,['# ::snt An eBook reader is good for reading books.\n(g / good-03\n      :ARG1 (p / person\n            :ARG0-of (r / read-01\n                  :ARG1 (e / eBook)))\n      :ARG2 (r2 / read-01\n            :ARG1 (b / book)))'],"[g, attr-instance, good_03, attr-arg1, [p, attr-instance, person, attr-arg0_of, [r, attr-instance, read_01, attr-arg1, [e, attr-instance, ebook]]], attr-arg2, [r2, attr-instance, read_01, attr-arg1, [b, attr-instance, book]]]"
1217,1217,1217,1217,1479,12071,ebook-reader,Man kann viele Bücher darauf speichern.,5_short,Computer|Technik,2014-04-08T08:46:31Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Man 1:=kann 2:=viele 3:=Bücher 4:=darauf 5:=speichern.,1,,You can store many books on it.,['# ::snt You can store many books on it.\n(p / possible-01\n      :ARG1 (s / store-01\n            :ARG0 (y / you)\n            :ARG1 (b / book\n                  :quant (m / many)\n                  :topic (ii / it))))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, store_01, attr-arg0, [y, attr-instance, you], attr-arg1, [b, attr-instance, book, attr-quant, [m, attr-instance, many], attr-topic, [ii, attr-instance, it]]]]"
1218,1218,1218,1218,1480,12072,ebook-reader,EBook Reader spricht man so: i Buck Rieder,6_short,Computer|Technik,2014-04-08T08:46:31Z,eaab3232dd7a824a6a774fd2f2814e47,0:=EBook 1:=Reader 2:=spricht 3:=man 4:=so: 5:=i 6:=Buck 7:=Rieder,1,,EBook Reader is pronounced like this: i Buck Rieder,"['# ::snt EBook Reader is pronounced like this: i Buck Rieder\n(p / pronounce-01\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 ""EBook""\n                  :op2 ""Reader""))\n      :ARG2 (p3 / person\n            :name (n2 / name\n                  :op1 ""Buck""\n                  :op2 ""Rieder"")\n            :domain (ii / i)))']","[p, attr-instance, pronounce_01, attr-arg1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""ebook"", attr-op2, ""reader""]], attr-arg2, [p3, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""buck"", attr-op2, ""rieder""], attr-domain, [ii, attr-instance, i]]]"
1219,1219,1219,1219,1481,12073,ecall,eCall ist eine Abkürzung für emergency call.,0_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=eCall 1:=ist 2:=eine 3:=Abkürzung 4:=für 5:=emergency 6:=call.,2,"[[3], [4, 5, 6]]",eCall is an abbreviation for emergency call.,['# ::snt eCall is an abbreviation for emergency call.\n(c / call-02\n      :ARG1-of (a / abbreviation-00\n            :ARG2 (c2 / call-02\n                  :mod (e / emergency))))'],"[c, attr-instance, call_02, attr-arg1_of, [a, attr-instance, abbreviation_00, attr-arg2, [c2, attr-instance, call_02, attr-mod, [e, attr-instance, emergency]]]]"
1220,1220,1220,1220,1482,12074,ecall,emergency call ist ein englisches Wort.,1_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=emergency 1:=call 2:=ist 3:=ein 4:=englisches 5:=Wort.,1,,emergency call is an English word.,"['# ::snt emergency call is an English word.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English""))\n      :domain (c / call-02\n            :ARG1 (e / emergency)))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-domain, [c, attr-instance, call_02, attr-arg1, [e, attr-instance, emergency]]]"
1221,1221,1221,1221,1483,12075,ecall,Auf deutsch heißt emergency call: Notruf.,2_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Auf 1:=deutsch 2:=heißt 3:=emergency 4:=call: 5:=Notruf.,1,,"In German, emergency call means emergency call.","['# ::snt In German, emergency call means emergency call.\n(m / mean-01\n      :ARG1 (c / call-02\n            :mod (e / emergency))\n      :ARG2 (c2 / call-02\n            :mod (e2 / emergency))\n      :medium (l / language\n            :name (n / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [c, attr-instance, call_02, attr-mod, [e, attr-instance, emergency]], attr-arg2, [c2, attr-instance, call_02, attr-mod, [e2, attr-instance, emergency]], attr-medium, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""german""]]]"
1222,1222,1222,1222,1486,12078,ecall,Genauso wie das GPS im Modul im Navi.,5_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Genauso 1:=wie 2:=das 3:=GPS 4:=im 5:=Modul 6:=im 7:=Navi.,1,,Just like the GPS in the module in the navigation system.,"['# ::snt Just like the GPS in the module in the navigation system.\n(r / resemble-01\n      :ARG2 (b / be-located-at-91\n            :ARG1 (p / product\n                  :name (n / name\n                        :op1 ""GPS""))\n            :ARG2 (m / module\n                  :part-of (s / system\n                        :purpose (n2 / navigate-01))))\n      :mod (j / just))']","[r, attr-instance, resemble_01, attr-arg2, [b, attr-instance, be_located_at_91, attr-arg1, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""gps""]], attr-arg2, [m, attr-instance, module, attr-part_of, [s, attr-instance, system, attr-purpose, [n2, attr-instance, navigate_01]]]], attr-mod, [j, attr-instance, just]]"
1223,1223,1223,1223,1487,12079,ecall, • GSM: GSM ist Handy-technik.,6_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:= 1:=• 2:=GSM: 3:=GSM 4:=ist 5:=Handy-technik.,1,,• GSM: GSM is mobile phone technology.,"['# ::snt • GSM: GSM is mobile phone technology.\n(t / technology\n      :mod (p / phone\n            :mod (m / mobile))\n      :domain (p2 / product\n            :name (n / name\n                  :op1 ""GSM"")))']","[t, attr-instance, technology, attr-mod, [p, attr-instance, phone, attr-mod, [m, attr-instance, mobile]], attr-domain, [p2, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""gsm""]]]"
1224,1224,1224,1224,1488,12080,ecall,Das GSM Modul schickt Daten an den Kranken-wagen.,7_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Das 1:=GSM 2:=Modul 3:=schickt 4:=Daten 5:=an 6:=den 7:=Kranken-wagen.,1,,The GSM module sends data to the ambulance.,"['# ::snt The GSM module sends data to the ambulance.\n(s / send-01\n      :ARG0 (m / module\n            :name (n / name\n                  :op1 ""GSM""))\n      :ARG1 (d / data)\n      :ARG2 (a / ambulance))']","[s, attr-instance, send_01, attr-arg0, [m, attr-instance, module, attr-name, [n, attr-instance, name, attr-op1, ""gsm""]], attr-arg1, [d, attr-instance, data], attr-arg2, [a, attr-instance, ambulance]]"
1225,1225,1225,1225,1490,12082,ecall, • Mikrofon und Lautsprecher: Damit man mit der Rettungs-leit-stelle sprechen kann.,9_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:= 1:=• 2:=Mikrofon 3:=und 4:=Lautsprecher: 5:=Damit 6:=man 7:=mit 8:=der 9:=Rettungs-leit-stelle 10:=sprechen 11:=kann.,2,"[[2], [4]]",• Microphone and loudspeaker: So that you can speak to the emergency control center.,['# ::snt • Microphone and loudspeaker: So that you can speak to the emergency control center.\n(a / and\n      :op1 (p / phone\n            :mod (m / micro))\n      :op2 (l / loudspeaker)\n      :purpose (p2 / possible-01\n            :ARG1 (s / speak-01\n                  :ARG0 (y / you)\n                  :ARG2 (c / center\n                        :ARG0-of (c2 / control-01\n                              :ARG1 (e / emergency))))))'],"[a, attr-instance, and, attr-op1, [p, attr-instance, phone, attr-mod, [m, attr-instance, micro]], attr-op2, [l, attr-instance, loudspeaker], attr-purpose, [p2, attr-instance, possible_01, attr-arg1, [s, attr-instance, speak_01, attr-arg0, [y, attr-instance, you], attr-arg2, [c, attr-instance, center, attr-arg0_of, [c2, attr-instance, control_01, attr-arg1, [e, attr-instance, emergency]]]]]]"
1226,1226,1226,1226,1491,12083,ecall, • Bewegungs-sensor: Der Sensor soll festellen ob ein Unfall passiert ist.,10_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:= 1:=• 2:=Bewegungs-sensor: 3:=Der 4:=Sensor 5:=soll 6:=festellen 7:=ob 8:=ein 9:=Unfall 10:=passiert 11:=ist.,3,"[[2], [4, 5, 6], [7, 9, 10, 11]]",• Motion sensor: The sensor should determine whether an accident has occurred.,['# ::snt • Motion sensor: The sensor should determine whether an accident has occurred.\n(a / and\n      :op1 (s / sensor\n            :purpose (m / move-01))\n      :op2 (r / recommend-01\n            :ARG1 (d / determine-01\n                  :ARG0 (s2 / sensor)\n                  :ARG1 (t / truth-value\n                        :polarity-of (a2 / accident)))))'],"[a, attr-instance, and, attr-op1, [s, attr-instance, sensor, attr-purpose, [m, attr-instance, move_01]], attr-op2, [r, attr-instance, recommend_01, attr-arg1, [d, attr-instance, determine_01, attr-arg0, [s2, attr-instance, sensor], attr-arg1, [t, attr-instance, truth_value, attr-polarity_of, [a2, attr-instance, accident]]]]]"
1227,1227,1227,1227,1492,12084,ecall,Über die Technik wird noch viel geredet.,11_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Über 1:=die 2:=Technik 3:=wird 4:=noch 5:=viel 6:=geredet.,1,,There is still a lot of talk about the technology.,['# ::snt There is still a lot of talk about the technology.\n(t / talk-01\n      :ARG1 (t2 / technology)\n      :quant (l / lot)\n      :mod (s / still))'],"[t, attr-instance, talk_01, attr-arg1, [t2, attr-instance, technology], attr-quant, [l, attr-instance, lot], attr-mod, [s, attr-instance, still]]"
1228,1228,1228,1228,1493,12085,ecall,Zum Beispiel: \newline Welche Daten sollen an den Kranken-wagen geschickt werden.,12_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=\newline 3:=Welche 4:=Daten 5:=sollen 6:=an 7:=den 8:=Kranken-wagen 9:=geschickt 10:=werden.,1,,For example: \newline Which data should be sent to the ambulance.,['# ::snt For example: \\newline Which data should be sent to the ambulance.\n(e / exemplify-01\n      :ARG0 (r / recommend-01\n            :ARG1 (s / send-01\n                  :ARG1 (d / data\n                        :mod (a / amr-unknown))\n                  :ARG2 (a2 / ambulance))))'],"[e, attr-instance, exemplify_01, attr-arg0, [r, attr-instance, recommend_01, attr-arg1, [s, attr-instance, send_01, attr-arg1, [d, attr-instance, data, attr-mod, [a, attr-instance, amr_unknown]], attr-arg2, [a2, attr-instance, ambulance]]]]"
1229,1229,1229,1229,1494,12086,ecall,"Damit der Kranken-wagen zum Unfall-ort findet, \newline reichen die GPS Daten.",13_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Damit 1:=der 2:=Kranken-wagen 3:=zum 4:=Unfall-ort 5:=findet, 6:=\newline 7:=reichen 8:=die 9:=GPS 10:=Daten.",2,"[[0, 2, 3, 4, 5], [7, 9, 10]]",The GPS data is sufficient for the ambulance to find the scene of the accident.,"['# ::snt The GPS data is sufficient for the ambulance to find the scene of the accident.\n(s / suffice-01\n      :ARG0 (d / data\n            :mod (p / product\n                  :name (n / name\n                        :op1 ""GPS"")))\n      :ARG1 (f / find-01\n            :ARG0 (a / ambulance)\n            :ARG1 (s2 / scene\n                  :location-of (a2 / accident))))']","[s, attr-instance, suffice_01, attr-arg0, [d, attr-instance, data, attr-mod, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""gps""]]], attr-arg1, [f, attr-instance, find_01, attr-arg0, [a, attr-instance, ambulance], attr-arg1, [s2, attr-instance, scene, attr-location_of, [a2, attr-instance, accident]]]]"
1230,1230,1230,1230,1495,12087,ecall,eCall kann aber auch mehr Daten schicken.,14_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=eCall 1:=kann 2:=aber 3:=auch 4:=mehr 5:=Daten 6:=schicken.,1,,But eCall can also send more data.,"['# ::snt But eCall can also send more data.\n(c / contrast-01\n      :ARG2 (p / possible-01\n            :ARG1 (s / send-01\n                  :ARG0 (c2 / company\n                        :name (n / name\n                              :op1 ""ECall""))\n                  :ARG1 (d / data\n                        :mod (m / more))\n                  :mod (a / also))))']","[c, attr-instance, contrast_01, attr-arg2, [p, attr-instance, possible_01, attr-arg1, [s, attr-instance, send_01, attr-arg0, [c2, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]], attr-arg1, [d, attr-instance, data, attr-mod, [m, attr-instance, more]], attr-mod, [a, attr-instance, also]]]]"
1231,1231,1231,1231,1496,12088,ecall,Zum Beispiel: • wie schnell ist das Auto vor dem Unfall gefahren,15_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=wie 4:=schnell 5:=ist 6:=das 7:=Auto 8:=vor 9:=dem 10:=Unfall 11:=gefahren,2,"[[7, 11], [8, 10]]",For example: • how fast was the car driving before the accident,['# ::snt For example: • how fast was the car driving before the accident\n(e / exemplify-01\n      :ARG0 (s / speed\n            :degree (a / amr-unknown)\n            :ARG1-of (d / drive-01\n                  :ARG0 (c / car)\n                  :time (b / before\n                        :op1 (a2 / accident)))))'],"[e, attr-instance, exemplify_01, attr-arg0, [s, attr-instance, speed, attr-degree, [a, attr-instance, amr_unknown], attr-arg1_of, [d, attr-instance, drive_01, attr-arg0, [c, attr-instance, car], attr-time, [b, attr-instance, before, attr-op1, [a2, attr-instance, accident]]]]]"
1232,1232,1232,1232,1497,12089,ecall,Zum Beispiel: • wie viele Leute sitzen im Auto,16_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=wie 4:=viele 5:=Leute 6:=sitzen 7:=im 8:=Auto,1,,For example: • how many people are in the car,['# ::snt For example: • how many people are in the car\n(e / exemplify-01\n      :ARG0 (t / thing\n            :quant-of (p / person\n                  :location (c / car))))'],"[e, attr-instance, exemplify_01, attr-arg0, [t, attr-instance, thing, attr-quant_of, [p, attr-instance, person, attr-location, [c, attr-instance, car]]]]"
1233,1233,1233,1233,1498,12090,ecall,Zum Beispiel: • sind die Leute angeschnallt,17_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=sind 4:=die 5:=Leute 6:=angeschnallt,1,,For example: • are people wearing seat belts,['# ::snt For example: • are people wearing seat belts\n(e / exemplify-01\n      :ARG0 (w / wear-01\n            :ARG0 (p / person)\n            :ARG1 (b / belt\n                  :purpose (s / seat))))'],"[e, attr-instance, exemplify_01, attr-arg0, [w, attr-instance, wear_01, attr-arg0, [p, attr-instance, person], attr-arg1, [b, attr-instance, belt, attr-purpose, [s, attr-instance, seat]]]]"
1234,1234,1234,1234,1499,12091,ecall,Für eCall gibt es ein Gesetz.,18_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Für 1:=eCall 2:=gibt 3:=es 4:=ein 5:=Gesetz.,1,,There is a law for eCall.,"['# ::snt There is a law for eCall.\n(l / law\n      :purpose (c / call-02\n            :mod (c2 / company\n                  :name (n / name\n                        :op1 ""ECall""))))']","[l, attr-instance, law, attr-purpose, [c, attr-instance, call_02, attr-mod, [c2, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]]]]"
1235,1235,1235,1235,1500,12092,ecall,In dem Gesetz steht: \newline In neue Autos muss eCall eingebaut werden.,19_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=In 1:=dem 2:=Gesetz 3:=steht: 4:=\newline 5:=In 6:=neue 7:=Autos 8:=muss 9:=eCall 10:=eingebaut 11:=werden.,3,"[[0, 2, 3], [5, 7, 8, 9, 10, 11], [6, 7]]",The law states: \newline eCall must be installed in new cars.,"['# ::snt The law states: \\newline eCall must be installed in new cars.\n(s / state-01\n      :ARG0 (l / law)\n      :ARG1 (o / obligate-01\n            :ARG2 (ii / install-01\n                  :ARG1 (p / phone-number-entity\n                        :value ""newline""\n                        :mod (c / company\n                              :name (n / name\n                                    :op1 ""ECall"")))\n                  :ARG2 (c2 / car\n                        :ARG1-of (n2 / new-01)))))']","[s, attr-instance, state_01, attr-arg0, [l, attr-instance, law], attr-arg1, [o, attr-instance, obligate_01, attr-arg2, [ii, attr-instance, install_01, attr-arg1, [p, attr-instance, phone_number_entity, attr-value, ""newline"", attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]]], attr-arg2, [c2, attr-instance, car, attr-arg1_of, [n2, attr-instance, new_01]]]]]"
1236,1236,1236,1236,1501,12093,ecall,Manche sagen eCall ist eine gute Technik.,20_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Manche 1:=sagen 2:=eCall 3:=ist 4:=eine 5:=gute 6:=Technik.,1,,Some say eCall is a good technology.,"['# ::snt Some say eCall is a good technology.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (t / technology\n            :ARG1-of (g / good-02)\n            :domain (p / product\n                  :name (n / name\n                        :op1 ""eCall""))))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [t, attr-instance, technology, attr-arg1_of, [g, attr-instance, good_02], attr-domain, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]]]]"
1237,1237,1237,1237,1502,12094,ecall,Zum Beispiel: • ein Fahrer hat einen Unfall.,21_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=ein 4:=Fahrer 5:=hat 6:=einen 7:=Unfall.,1,,For example: • a driver has an accident.,['# ::snt For example: • a driver has an accident.\n(e / exemplify-01\n      :ARG0 (a / accident\n            :domain (p / person\n                  :ARG0-of (d / drive-01))))'],"[e, attr-instance, exemplify_01, attr-arg0, [a, attr-instance, accident, attr-domain, [p, attr-instance, person, attr-arg0_of, [d, attr-instance, drive_01]]]]"
1238,1238,1238,1238,1503,12095,ecall,Er hat kein Handy dabei.,22_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=hat 2:=kein 3:=Handy 4:=dabei.,1,,He doesn't have a cell phone with him.,"[""# ::snt He doesn't have a cell phone with him.\n(h / have-03\n      :polarity -\n      :ARG0 (h2 / he)\n      :ARG1 (p / phone\n            :mod (c / cell))\n      :accompanier h2)""]","[h, attr-instance, have_03, attr-polarity, negative, attr-arg0, [h2, attr-instance, he], attr-arg1, [p, attr-instance, phone, attr-mod, [c, attr-instance, cell]], attr-accompanier, h2]"
1239,1239,1239,1239,1504,12096,ecall,Dann hilft ihm eCall.,23_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Dann 1:=hilft 2:=ihm 3:=eCall.,1,,Then eCall helps him.,"['# ::snt Then eCall helps him.\n(h / help-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 ""eCall""))\n      :ARG2 (h2 / he)\n      :time (t / then))']","[h, attr-instance, help_01, attr-arg0, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]], attr-arg2, [h2, attr-instance, he], attr-time, [t, attr-instance, then]]"
1240,1240,1240,1240,1505,12097,ecall, • oder jemand ist schwer verletzt und kann nicht mehr selbst telefonieren,24_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:= 1:=• 2:=oder 3:=jemand 4:=ist 5:=schwer 6:=verletzt 7:=und 8:=kann 9:=nicht 10:=mehr 11:=selbst 12:=telefonieren,2,"[[4, 5, 6], [8, 9, 10, 11, 12]]",• or someone is seriously injured and can no longer use the telephone,['# ::snt • or someone is seriously injured and can no longer use the telephone\n(o / or\n      :op2 (a / and\n            :op1 (ii / injure-01\n                  :ARG1 (s / someone)\n                  :ARG1-of (s2 / serious-02))\n            :op2 (p / possible-01\n                  :ARG1 (u / use-01\n                        :ARG0 s\n                        :ARG1 (t / telephone)\n                        :time (n / no-longer)))))'],"[o, attr-instance, or, attr-op2, [a, attr-instance, and, attr-op1, [ii, attr-instance, injure_01, attr-arg1, [s, attr-instance, someone], attr-arg1_of, [s2, attr-instance, serious_02]], attr-op2, [p, attr-instance, possible_01, attr-arg1, [u, attr-instance, use_01, attr-arg0, s, attr-arg1, [t, attr-instance, telephone], attr-time, [n, attr-instance, no_longer]]]]]"
1241,1241,1241,1241,1506,12098,ecall, • oder man weiß nicht genau wo man ist.,25_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:= 1:=• 2:=oder 3:=man 4:=weiß 5:=nicht 6:=genau 7:=wo 8:=man 9:=ist.,2,"[[3, 4, 5], [8, 9]]",• or you don’t know exactly where you are.,['# ::snt • or you don’t know exactly where you are.\n(o / or\n      :op2 (k / know-01\n            :polarity -\n            :ARG0 (y / you)\n            :ARG1 (t / thing\n                  :location-of y)\n            :manner (e / exact)))'],"[o, attr-instance, or, attr-op2, [k, attr-instance, know_01, attr-polarity, negative, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-location_of, y], attr-manner, [e, attr-instance, exact]]]"
1242,1242,1242,1242,1508,12100,ecall,Mit eCall sterben 2500 Menschen weniger im Jahr.,27_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Mit 1:=eCall 2:=sterben 3:=2500 4:=Menschen 5:=weniger 6:=im 7:=Jahr.,1,,"With eCall, 2,500 fewer people die each year.","['# ::snt With eCall, 2,500 fewer people die each year.\n(d / die-01\n      :ARG1 (p / person\n            :quant (n / number\n                  :ARG1-of (h / have-quant-91\n                        :ARG3 (l / less\n                              :quant 2500))))\n      :frequency (r / rate-entity-91\n            :ARG2 (t / temporal-quantity\n                  :quant 1\n                  :unit (y / year)))\n      :instrument (p2 / product\n            :name (n2 / name\n                  :op1 ""ECall"")))']","[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-quant, [n, attr-instance, number, attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg3, [l, attr-instance, less, attr-quant, 2500]]]], attr-frequency, [r, attr-instance, rate_entity_91, attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [y, attr-instance, year]]], attr-instrument, [p2, attr-instance, product, attr-name, [n2, attr-instance, name, attr-op1, ""ecall""]]]"
1243,1243,1243,1243,1509,12101,ecall,Manche sagen eCall ist eine schlechte Technik.,28_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Manche 1:=sagen 2:=eCall 3:=ist 4:=eine 5:=schlechte 6:=Technik.,1,,Some say eCall is a bad technology.,"['# ::snt Some say eCall is a bad technology.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (t / technology\n            :ARG1-of (b / bad-07)\n            :domain (c / call-02\n                  :mod (c2 / company\n                        :name (n / name\n                              :op1 ""eCall"")))))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [t, attr-instance, technology, attr-arg1_of, [b, attr-instance, bad_07], attr-domain, [c, attr-instance, call_02, attr-mod, [c2, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]]]]]"
1244,1244,1244,1244,1510,12102,ecall,Zum Beispiel: • Autofahrer sollen selbst entscheiden ob sie eCall im Auto haben wollen,29_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=Autofahrer 4:=sollen 5:=selbst 6:=entscheiden 7:=ob 8:=sie 9:=eCall 10:=im 11:=Auto 12:=haben 13:=wollen,3,"[[3, 4, 5, 6], [7, 8, 9, 12, 13], [10, 11]]",For example: • Drivers should decide for themselves whether they want eCall in their car,['# ::snt For example: • Drivers should decide for themselves whether they want eCall in their car\n(e / exemplify-01\n      :ARG0 (r / recommend-01\n            :ARG1 (d / decide-01\n                  :ARG0 (p / person\n                        :ARG0-of (d2 / drive-01))\n                  :ARG1 (t / truth-value\n                        :polarity-of (w / want-01\n                              :ARG0 p\n                              :ARG1 (c / call-02\n                                    :ARG0 p\n                                    :medium (c2 / car\n                                          :poss p))))\n                  :mod (b / by-oneself))))'],"[e, attr-instance, exemplify_01, attr-arg0, [r, attr-instance, recommend_01, attr-arg1, [d, attr-instance, decide_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [d2, attr-instance, drive_01]], attr-arg1, [t, attr-instance, truth_value, attr-polarity_of, [w, attr-instance, want_01, attr-arg0, p, attr-arg1, [c, attr-instance, call_02, attr-arg0, p, attr-medium, [c2, attr-instance, car, attr-poss, p]]]], attr-mod, [b, attr-instance, by_oneself]]]]"
1245,1245,1245,1245,1511,12103,ecall,Zum Beispiel: • eCall kann man nicht abschalten,30_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=eCall 4:=kann 5:=man 6:=nicht 7:=abschalten,1,,For example: • eCall cannot be switched off,['# ::snt For example: • eCall cannot be switched off\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :polarity -\n            :ARG1 (s / switch-off-04\n                  :ARG1 (c / call-02\n                        :mod (e2 / electronics)))))'],"[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [s, attr-instance, switch_off_04, attr-arg1, [c, attr-instance, call_02, attr-mod, [e2, attr-instance, electronics]]]]]"
1246,1246,1246,1246,1512,12104,ecall,Zum Beispiel: • die eCall Daten sind unsicher,31_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=die 4:=eCall 5:=Daten 6:=sind 7:=unsicher,1,,For example: • the eCall data is insecure,"['# ::snt For example: • the eCall data is insecure\n(e / exemplify-01\n      :ARG0 (s / secure-02\n            :polarity -\n            :ARG1 (d / data\n                  :mod (c / call-02\n                        :mod (c2 / company\n                              :name (n / name\n                                    :op1 ""ECall""))))))']","[e, attr-instance, exemplify_01, attr-arg0, [s, attr-instance, secure_02, attr-polarity, negative, attr-arg1, [d, attr-instance, data, attr-mod, [c, attr-instance, call_02, attr-mod, [c2, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]]]]]]"
1247,1247,1247,1247,1513,12105,ecall,Zum Beispiel: • der Autofahrer soll der Chef von seinen eCall Daten sein,32_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=der 4:=Autofahrer 5:=soll 6:=der 7:=Chef 8:=von 9:=seinen 10:=eCall 11:=Daten 12:=sein,1,,For example: • the driver should be the boss of his eCall data,"['# ::snt For example: • the driver should be the boss of his eCall data\n(e / exemplify-01\n      :ARG0 (r / recommend-01\n            :ARG1 (b / boss-01\n                  :ARG0 (p / person\n                        :ARG0-of (d / drive-01))\n                  :ARG1 (d2 / data\n                        :mod (c / company\n                              :name (n / name\n                                    :op1 ""ECall""))\n                        :poss p))))']","[e, attr-instance, exemplify_01, attr-arg0, [r, attr-instance, recommend_01, attr-arg1, [b, attr-instance, boss_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [d, attr-instance, drive_01]], attr-arg1, [d2, attr-instance, data, attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]], attr-poss, p]]]]"
1248,1248,1248,1248,1514,12106,ecall,Zum Beispiel: • eCall hilft Firmen.,33_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zum 1:=Beispiel: 2:=• 3:=eCall 4:=hilft 5:=Firmen.,1,,For example: • eCall helps companies.,"['# ::snt For example: • eCall helps companies.\n(e / exemplify-01\n      :ARG0 (h / help-01\n            :ARG0 (c / company\n                  :name (n / name\n                        :op1 ""eCall""))\n            :ARG1 (c2 / company)))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, help_01, attr-arg0, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]], attr-arg1, [c2, attr-instance, company]]]"
1249,1249,1249,1249,1515,12107,ecall,Die Firmen wollen mehr Geld verdienen.,34_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Firmen 2:=wollen 3:=mehr 4:=Geld 5:=verdienen.,1,,Companies want to make more money.,['# ::snt Companies want to make more money.\n(w / want-01\n      :ARG0 (c / company)\n      :ARG1 (m / make-05\n            :ARG0 c\n            :ARG1 (m2 / money\n                  :quant (m3 / more))))'],"[w, attr-instance, want_01, attr-arg0, [c, attr-instance, company], attr-arg1, [m, attr-instance, make_05, attr-arg0, c, attr-arg1, [m2, attr-instance, money, attr-quant, [m3, attr-instance, more]]]]"
1250,1250,1250,1250,1518,12110,ecall,man kann die eCall Daten nehmen und Maut-gebühren verlangen,37_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=man 1:=kann 2:=die 3:=eCall 4:=Daten 5:=nehmen 6:=und 7:=Maut-gebühren 8:=verlangen,2,"[[3, 4, 5], [7, 8]]",you can take the eCall data and charge toll fees,"['# ::snt you can take the eCall data and charge toll fees\n(p / possible-01\n      :ARG1 (a / and\n            :op1 (t / take-01\n                  :ARG0 (y / you)\n                  :ARG1 (d / data\n                        :mod (c / company\n                              :name (n / name\n                                    :op1 ""ECall""))))\n            :op2 (c2 / charge-01\n                  :ARG0 y\n                  :ARG1 (f / fee\n                        :mod (t2 / toll)))))']","[p, attr-instance, possible_01, attr-arg1, [a, attr-instance, and, attr-op1, [t, attr-instance, take_01, attr-arg0, [y, attr-instance, you], attr-arg1, [d, attr-instance, data, attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""ecall""]]]], attr-op2, [c2, attr-instance, charge_01, attr-arg0, y, attr-arg1, [f, attr-instance, fee, attr-mod, [t2, attr-instance, toll]]]]]"
1251,1251,1251,1251,1519,12111,ecall,die Polizei kann die eCall Daten nehmen und schauen wer zu schnell fährt,38_long,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=die 1:=Polizei 2:=kann 3:=die 4:=eCall 5:=Daten 6:=nehmen 7:=und 8:=schauen 9:=wer 10:=zu 11:=schnell 12:=fährt,3,"[[1, 2, 4, 5, 6], [1, 2, 4, 5, 8], [9, 10, 11, 12]]",the police can take the eCall data and see who is driving too fast,"['# ::snt the police can take the eCall data and see who is driving too fast\n(p / possible-01\n      :ARG1 (a / and\n            :op1 (t / take-01\n                  :ARG0 (p2 / police)\n                  :ARG1 (d / data\n                        :mod (p3 / phone-number-entity\n                              :value ""ECall"")))\n            :op2 (s / see-01\n                  :ARG0 p2\n                  :ARG1 (p4 / person\n                        :ARG0-of (d2 / drive-01\n                              :ARG1-of (f / fast-02\n                                    :ARG2-of (h / have-degree-91\n                                          :ARG1 d2\n                                          :ARG3 (t2 / too))))))))']","[p, attr-instance, possible_01, attr-arg1, [a, attr-instance, and, attr-op1, [t, attr-instance, take_01, attr-arg0, [p2, attr-instance, police], attr-arg1, [d, attr-instance, data, attr-mod, [p3, attr-instance, phone_number_entity, attr-value, ""ecall""]]], attr-op2, [s, attr-instance, see_01, attr-arg0, p2, attr-arg1, [p4, attr-instance, person, attr-arg0_of, [d2, attr-instance, drive_01, attr-arg1_of, [f, attr-instance, fast_02, attr-arg2_of, [h, attr-instance, have_degree_91, attr-arg1, d2, attr-arg3, [t2, attr-instance, too]]]]]]]]"
1252,1252,1252,1252,1520,12112,ecall,eCall ist der Name von einer bestimmten Technik.,0_short,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=eCall 1:=ist 2:=der 3:=Name 4:=von 5:=einer 6:=bestimmten 7:=Technik.,1,,eCall is the name of a specific technology.,"['# ::snt eCall is the name of a specific technology.\n(n / name-01\n      :ARG1 (p / product\n            :name (n2 / name\n                  :op1 ""eCall""))\n      :ARG2 (t / technology\n            :ARG1-of (s / specific-02)))']","[n, attr-instance, name_01, attr-arg1, [p, attr-instance, product, attr-name, [n2, attr-instance, name, attr-op1, ""ecall""]], attr-arg2, [t, attr-instance, technology, attr-arg1_of, [s, attr-instance, specific_02]]]"
1253,1253,1253,1253,1521,12113,ecall,Die Technik kann in ein Auto eingebaut werden.,1_short,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Technik 2:=kann 3:=in 4:=ein 5:=Auto 6:=eingebaut 7:=werden.,1,,The technology can be installed in a car.,['# ::snt The technology can be installed in a car.\n(p / possible-01\n      :ARG1 (ii / install-01\n            :ARG1 (t / technology)\n            :ARG2 (c / car)))'],"[p, attr-instance, possible_01, attr-arg1, [ii, attr-instance, install_01, attr-arg1, [t, attr-instance, technology], attr-arg2, [c, attr-instance, car]]]"
1254,1254,1254,1254,1522,12114,ecall,Die Technik soll bei einem Unfall helfen.,2_short,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Technik 2:=soll 3:=bei 4:=einem 5:=Unfall 6:=helfen.,1,,The technology is intended to help in the event of an accident.,['# ::snt The technology is intended to help in the event of an accident.\n(ii / intend-01\n      :ARG1 (h / help-01\n            :ARG0 (t / technology)\n            :condition (a / accident)))'],"[ii, attr-instance, intend_01, attr-arg1, [h, attr-instance, help_01, attr-arg0, [t, attr-instance, technology], attr-condition, [a, attr-instance, accident]]]"
1255,1255,1255,1255,1523,12115,ecall,Die Technik ruft dann von selbst den Kranken-wagen.,3_short,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Technik 2:=ruft 3:=dann 4:=von 5:=selbst 6:=den 7:=Kranken-wagen.,2,"[[1, 2, 3, 7], [4, 5]]",The technology then calls the ambulance automatically.,['# ::snt The technology then calls the ambulance automatically.\n(c / call-02\n      :ARG0 (t / technology)\n      :ARG1 (a / ambulance)\n      :manner (a2 / automatic)\n      :time (t2 / then))'],"[c, attr-instance, call_02, attr-arg0, [t, attr-instance, technology], attr-arg1, [a, attr-instance, ambulance], attr-manner, [a2, attr-instance, automatic], attr-time, [t2, attr-instance, then]]"
1256,1256,1256,1256,1524,12116,ecall,Und die Technik sagt wo der Unfall passiert ist.,4_short,Ohne_Kategorie,2014-12-31T12:07:06Z,28d34f2e053dee2c0e9399a7924cd978,0:=Und 1:=die 2:=Technik 3:=sagt 4:=wo 5:=der 6:=Unfall 7:=passiert 8:=ist.,2,"[[2, 3], [4, 6, 7, 8]]",And the technology tells where the accident happened.,['# ::snt And the technology tells where the accident happened.\n(a / and\n      :op2 (t / tell-01\n            :ARG0 (t2 / technology)\n            :ARG1 (t3 / thing\n                  :location-of (a2 / accident))))'],"[a, attr-instance, and, attr-op2, [t, attr-instance, tell_01, attr-arg0, [t2, attr-instance, technology], attr-arg1, [t3, attr-instance, thing, attr-location_of, [a2, attr-instance, accident]]]]"
1257,1257,1257,1257,1525,12117,echauffieren,Das Wort echauffieren ist ein Verb.,0_long,Ohne_Kategorie,2012-08-25T17:58:45Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=echauffieren 3:=ist 4:=ein 5:=Verb.,1,,The word echauffieren is a verb.,"['# ::snt The word echauffieren is a verb.\n(v / verb\n      :domain (w / word\n            :mod (s / string-entity\n                  :value ""echauffieren"")))']","[v, attr-instance, verb, attr-domain, [w, attr-instance, word, attr-mod, [s, attr-instance, string_entity, attr-value, ""echauffieren""]]]"
1258,1258,1258,1258,1526,12118,echauffieren,"sich echauf­fie­ren bedeutet: \newline sich ""aufregen"".",0_short,Ohne_Kategorie,2012-08-25T17:58:45Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=sich 1:=echauf­fie­ren 2:=bedeutet: 3:=\newline 4:=sich 5:=""aufregen"".",1,,"To get upset means: \newline to get ""irritated"".","['# ::snt To get upset means: \\newline to get ""irritated"".\n(m / mean-01\n      :ARG1 (u / upset-01)\n      :ARG2 (g / get-03\n            :ARG1 u)\n      :ARG2 (ii / irritate-01\n            :ARG1 (l / line)))']","[m, attr-instance, mean_01, attr-arg1, [u, attr-instance, upset_01], attr-arg2, [g, attr-instance, get_03, attr-arg1, u], attr-arg2, [ii, attr-instance, irritate_01, attr-arg1, [l, attr-instance, line]]]"
1259,1259,1259,1259,1532,12124,echelon,Das Echelon Spionage Netz geht um die ganze Welt.,5_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=Echelon 2:=Spionage 3:=Netz 4:=geht 5:=um 6:=die 7:=ganze 8:=Welt.,1,,The Echelon spy network goes around the whole world.,"['# ::snt The Echelon spy network goes around the whole world.\n(g / go-01\n      :ARG1 (n / network\n            :name (n2 / name\n                  :op1 ""Echelon"")\n            :mod (s / spy-01))\n      :ARG4 (a / around\n            :op1 (w / world\n                  :mod (w2 / whole))))']","[g, attr-instance, go_01, attr-arg1, [n, attr-instance, network, attr-name, [n2, attr-instance, name, attr-op1, ""echelon""], attr-mod, [s, attr-instance, spy_01]], attr-arg4, [a, attr-instance, around, attr-op1, [w, attr-instance, world, attr-mod, [w2, attr-instance, whole]]]]"
1260,1260,1260,1260,1533,12125,echelon,"Alles was über Satellit gleitet wird, wird abgehört.",6_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,"0:=Alles 1:=was 2:=über 3:=Satellit 4:=gleitet 5:=wird, 6:=wird 7:=abgehört.",2,"[[1, 2, 3, 4, 5], [6, 7]]",Everything that is transmitted via satellite is monitored.,['# ::snt Everything that is transmitted via satellite is monitored.\n(m / monitor-01\n      :ARG1 (e / everything\n            :ARG1-of (t / transmit-01\n                  :instrument (s / satellite))))'],"[m, attr-instance, monitor_01, attr-arg1, [e, attr-instance, everything, attr-arg1_of, [t, attr-instance, transmit_01, attr-instrument, [s, attr-instance, satellite]]]]"
1261,1261,1261,1261,1535,12127,echelon,Die Technik von Echelon steht auch in Deutschland.,8_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Technik 2:=von 3:=Echelon 4:=steht 5:=auch 6:=in 7:=Deutschland.,1,,Echelon’s technology is also available in Germany.,"['# ::snt Echelon’s technology is also available in Germany.\n(a / available-02\n      :ARG2 (t / technology\n            :poss (c / company\n                  :name (n / name\n                        :op1 ""Echelon"")))\n      :location (c2 / country\n            :name (n2 / name\n                  :op1 ""Germany""))\n      :mod (a2 / also))']","[a, attr-instance, available_02, attr-arg2, [t, attr-instance, technology, attr-poss, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""echelon""]]], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""germany""]], attr-mod, [a2, attr-instance, also]]"
1262,1262,1262,1262,1536,12128,echelon,"Zum Beispiel gab es in in Bad Aibling, Bayern diese Abhörtechnik.",9_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,"0:=Zum 1:=Beispiel 2:=gab 3:=es 4:=in 5:=in 6:=Bad 7:=Aibling, 8:=Bayern 9:=diese 10:=Abhörtechnik.",2,"[[6, 7], [8]]","For example, this surveillance technology existed in Bad Aibling, Bavaria.","['# ::snt For example, this surveillance technology existed in Bad Aibling, Bavaria.\n(e / exemplify-01\n      :ARG0 (e2 / exist-01\n            :ARG1 (t / technology\n                  :instrument-of (s / surveil-01)\n                  :mod (t2 / this))\n            :location (c / city\n                  :name (n / name\n                        :op1 ""Bad""\n                        :op2 ""Aibling"")\n                  :location (s2 / state\n                        :name (n2 / name\n                              :op1 ""Bavaria"")))))']","[e, attr-instance, exemplify_01, attr-arg0, [e2, attr-instance, exist_01, attr-arg1, [t, attr-instance, technology, attr-instrument_of, [s, attr-instance, surveil_01], attr-mod, [t2, attr-instance, this]], attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""bad"", attr-op2, ""aibling""], attr-location, [s2, attr-instance, state, attr-name, [n2, attr-instance, name, attr-op1, ""bavaria""]]]]]"
1263,1263,1263,1263,1537,12129,echelon,Die Geheimdienste und die Regierungen der 5 Länder haben lange nichts gesagt.,10_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Geheimdienste 2:=und 3:=die 4:=Regierungen 5:=der 6:=5 7:=Länder 8:=haben 9:=lange 10:=nichts 11:=gesagt.,2,"[[1], [4]]",The secret services and the governments of the five countries have said nothing for a long time.,['# ::snt The secret services and the governments of the five countries have said nothing for a long time.\n(s / say-01\n      :ARG0 (a / and\n            :op1 (s2 / service\n                  :mod (s3 / secret))\n            :op2 (g / government-organization\n                  :ARG0-of (g2 / govern-01\n                        :ARG1 (c / country\n                              :quant 5))))\n      :ARG1 (n / nothing)\n      :ARG1-of (l / long-03))'],"[s, attr-instance, say_01, attr-arg0, [a, attr-instance, and, attr-op1, [s2, attr-instance, service, attr-mod, [s3, attr-instance, secret]], attr-op2, [g, attr-instance, government_organization, attr-arg0_of, [g2, attr-instance, govern_01, attr-arg1, [c, attr-instance, country, attr-quant, 5]]]], attr-arg1, [n, attr-instance, nothing], attr-arg1_of, [l, attr-instance, long_03]]"
1264,1264,1264,1264,1538,12130,echelon,Oder sie haben gelogen.,11_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Oder 1:=sie 2:=haben 3:=gelogen.,1,,Or they lied.,['# ::snt Or they lied.\n(o / or\n      :op2 (l / lie-08\n            :ARG0 (t / they)))'],"[o, attr-instance, or, attr-op2, [l, attr-instance, lie_08, attr-arg0, [t, attr-instance, they]]]"
1265,1265,1265,1265,1539,12131,echelon,"Sie haben gesagt, Echelon gibt es nicht.",12_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,"0:=Sie 1:=haben 2:=gesagt, 3:=Echelon 4:=gibt 5:=es 6:=nicht.",2,"[[0, 1, 2], [3, 4, 5, 6]]",You said Echelon doesn't exist.,"['# ::snt You said Echelon doesn\'t exist.\n(s / say-01\n      :ARG0 (y / you)\n      :ARG1 (e / exist-01\n            :polarity -\n            :ARG1 (o / organization\n                  :name (n / name\n                        :op1 ""Echelon""))))']","[s, attr-instance, say_01, attr-arg0, [y, attr-instance, you], attr-arg1, [e, attr-instance, exist_01, attr-polarity, negative, attr-arg1, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""echelon""]]]]"
1266,1266,1266,1266,1540,12132,echelon,"Seit dem Jahr 2002 wissen alle, dass es Echelon gibt.",13_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,"0:=Seit 1:=dem 2:=Jahr 3:=2002 4:=wissen 5:=alle, 6:=dass 7:=es 8:=Echelon 9:=gibt.",3,"[[0, 2, 3], [4, 5], [6, 7, 8, 9]]","Since 2002, everyone has known that Echelon exists.","['# ::snt Since 2002, everyone has known that Echelon exists.\n(k / know-01\n      :ARG0 (e / everyone)\n      :ARG1 (e2 / exist-01\n            :ARG1 (c / company\n                  :name (n / name\n                        :op1 ""Echelon"")))\n      :time (s / since\n            :op1 (d / date-entity\n                  :year 2002)))']","[k, attr-instance, know_01, attr-arg0, [e, attr-instance, everyone], attr-arg1, [e2, attr-instance, exist_01, attr-arg1, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""echelon""]]], attr-time, [s, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-year, 2002]]]"
1267,1267,1267,1267,1542,12134,echelon,Mit Echelon wird auch Wirtschaftsspionage gemacht.,15_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Mit 1:=Echelon 2:=wird 3:=auch 4:=Wirtschaftsspionage 5:=gemacht.,1,,Echelon is also used for industrial espionage.,['# ::snt Echelon is also used for industrial espionage.\n(u / use-01\n      :ARG1 (e / echelon)\n      :ARG2 (s / spy-01\n            :ARG0 (ii / industry))\n      :mod (a / also))'],"[u, attr-instance, use_01, attr-arg1, [e, attr-instance, echelon], attr-arg2, [s, attr-instance, spy_01, attr-arg0, [ii, attr-instance, industry]], attr-mod, [a, attr-instance, also]]"
1268,1268,1268,1268,1543,12135,echelon,Das heißt es werden Informationen von Firmen geklaut.,16_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=heißt 2:=es 3:=werden 4:=Informationen 5:=von 6:=Firmen 7:=geklaut.,1,,This means that information is stolen from companies.,['# ::snt This means that information is stolen from companies.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (s / steal-01\n            :ARG1 (ii / information)\n            :ARG2 (c / company)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [s, attr-instance, steal_01, attr-arg1, [ii, attr-instance, information], attr-arg2, [c, attr-instance, company]]]"
1269,1269,1269,1269,1544,12136,echelon,Diese Informationen bekommen dann andere Firmen.,17_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Diese 1:=Informationen 2:=bekommen 3:=dann 4:=andere 5:=Firmen.,1,,Other companies then receive this information.,['# ::snt Other companies then receive this information.\n(r / receive-01\n      :ARG0 (c / company\n            :mod (o / other))\n      :ARG1 (ii / information\n            :mod (t / this))\n      :time (t2 / then))'],"[r, attr-instance, receive_01, attr-arg0, [c, attr-instance, company, attr-mod, [o, attr-instance, other]], attr-arg1, [ii, attr-instance, information, attr-mod, [t, attr-instance, this]], attr-time, [t2, attr-instance, then]]"
1270,1270,1270,1270,1545,12137,echelon,Die Regierungen und Geheimdienste benutzen Echelon auch um Gesetze auszutricksen.,18_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Regierungen 2:=und 3:=Geheimdienste 4:=benutzen 5:=Echelon 6:=auch 7:=um 8:=Gesetze 9:=auszutricksen.,3,"[[1, 4, 5, 6], [3, 4, 5, 6], [7, 8, 9]]",Governments and intelligence agencies also use Echelon to circumvent laws.,"['# ::snt Governments and intelligence agencies also use Echelon to circumvent laws.\n(u / use-01\n      :ARG0 (a / and\n            :op1 (g / government-organization\n                  :ARG0-of (g2 / govern-01))\n            :op2 (a2 / agency\n                  :mod (ii / intelligence)))\n      :ARG1 (p / product\n            :name (n / name\n                  :op1 ""Echelon""))\n      :ARG2 (c / circumvent-01\n            :ARG0 a\n            :ARG1 (l / law))\n      :mod (a3 / also))']","[u, attr-instance, use_01, attr-arg0, [a, attr-instance, and, attr-op1, [g, attr-instance, government_organization, attr-arg0_of, [g2, attr-instance, govern_01]], attr-op2, [a2, attr-instance, agency, attr-mod, [ii, attr-instance, intelligence]]], attr-arg1, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""echelon""]], attr-arg2, [c, attr-instance, circumvent_01, attr-arg0, a, attr-arg1, [l, attr-instance, law]], attr-mod, [a3, attr-instance, also]]"
1271,1271,1271,1271,1546,12138,echelon,Zum Beispiel darf der Geheimdienst in den USA die Bürger nicht ausspionieren.,19_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Zum 1:=Beispiel 2:=darf 3:=der 4:=Geheimdienst 5:=in 6:=den 7:=USA 8:=die 9:=Bürger 10:=nicht 11:=ausspionieren.,1,,"For example, the secret service in the USA is not allowed to spy on citizens.","['# ::snt For example, the secret service in the USA is not allowed to spy on citizens.\n(e / exemplify-01\n      :ARG0 (a / allow-01\n            :polarity -\n            :ARG1 (s / spy-01\n                  :ARG0 (s2 / service\n                        :mod (s3 / secret)\n                        :location (c / country\n                              :name (n / name\n                                    :op1 ""USA"")))\n                  :ARG1 (c2 / citizen))))']","[e, attr-instance, exemplify_01, attr-arg0, [a, attr-instance, allow_01, attr-polarity, negative, attr-arg1, [s, attr-instance, spy_01, attr-arg0, [s2, attr-instance, service, attr-mod, [s3, attr-instance, secret], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""usa""]]], attr-arg1, [c2, attr-instance, citizen]]]]"
1272,1272,1272,1272,1547,12139,echelon,Das macht dann der Geheimdienst von Großbritannien.,20_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=macht 2:=dann 3:=der 4:=Geheimdienst 5:=von 6:=Großbritannien.,1,,This is what the British secret service does.,"['# ::snt This is what the British secret service does.\n(d / do-02\n      :ARG0 (s / service\n            :mod (s2 / secret)\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""Great""\n                        :op2 ""Britain"")))\n      :ARG1 (t / this))']","[d, attr-instance, do_02, attr-arg0, [s, attr-instance, service, attr-mod, [s2, attr-instance, secret], attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""great"", attr-op2, ""britain""]]], attr-arg1, [t, attr-instance, this]]"
1273,1273,1273,1273,1549,12141,echelon,Diesen Trick benutzten die Geheimdienste auch bei anderen Abhörtechniken.,22_long,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Diesen 1:=Trick 2:=benutzten 3:=die 4:=Geheimdienste 5:=auch 6:=bei 7:=anderen 8:=Abhörtechniken.,1,,The secret services also used this trick in other wiretapping techniques.,['# ::snt The secret services also used this trick in other wiretapping techniques.\n(u / use-01\n      :ARG0 (s / service\n            :mod (s2 / secret))\n      :ARG1 (t / trick\n            :mod (t2 / this))\n      :ARG2 (t3 / technique\n            :instrument-of (w / wiretap-00)\n            :mod (o / other))\n      :mod (a / also))'],"[u, attr-instance, use_01, attr-arg0, [s, attr-instance, service, attr-mod, [s2, attr-instance, secret]], attr-arg1, [t, attr-instance, trick, attr-mod, [t2, attr-instance, this]], attr-arg2, [t3, attr-instance, technique, attr-instrument_of, [w, attr-instance, wiretap_00], attr-mod, [o, attr-instance, other]], attr-mod, [a, attr-instance, also]]"
1274,1274,1274,1274,1551,12143,echelon,Echelon ist der Name von einem Spionagenetz.,0_short,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Echelon 1:=ist 2:=der 3:=Name 4:=von 5:=einem 6:=Spionagenetz.,1,,Echelon is the name of a spy network.,"['# ::snt Echelon is the name of a spy network.\n(n / name-01\n      :ARG1 (n2 / network\n            :mod (s / spy-01))\n      :ARG2 (o / organization\n            :name (n3 / name\n                  :op1 ""Echelon"")))']","[n, attr-instance, name_01, attr-arg1, [n2, attr-instance, network, attr-mod, [s, attr-instance, spy_01]], attr-arg2, [o, attr-instance, organization, attr-name, [n3, attr-instance, name, attr-op1, ""echelon""]]]"
1275,1275,1275,1275,1552,12144,echelon,Mit dem Spionagenetz werden Satelliten überwacht.,1_short,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,0:=Mit 1:=dem 2:=Spionagenetz 3:=werden 4:=Satelliten 5:=überwacht.,1,,The spy network is used to monitor satellites.,['# ::snt The spy network is used to monitor satellites.\n(u / use-01\n      :ARG1 (n / network\n            :mod (s / spy-01))\n      :ARG2 (m / monitor-01\n            :ARG1 (s2 / satellite)))'],"[u, attr-instance, use_01, attr-arg1, [n, attr-instance, network, attr-mod, [s, attr-instance, spy_01]], attr-arg2, [m, attr-instance, monitor_01, attr-arg1, [s2, attr-instance, satellite]]]"
1276,1276,1276,1276,1553,12145,echelon,"Das heißt: Alles was über Satellit gemacht wird, \newline wird von den Nachrichtendiensten abgehört.",2_short,Ohne_Kategorie,2013-06-28T07:05:37Z,6275ee07d0785a2da491fbb224064f23,"0:=Das 1:=heißt: 2:=Alles 3:=was 4:=über 5:=Satellit 6:=gemacht 7:=wird, 8:=\newline 9:=wird 10:=von 11:=den 12:=Nachrichtendiensten 13:=abgehört.",3,"[[2, 3, 4, 5, 6, 7], [2, 9, 13], [10, 12]]",This means: Everything that is done via satellite \newline is intercepted by the intelligence services.,"['# ::snt This means: Everything that is done via satellite \\newline is intercepted by the intelligence services.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (ii / intercept-01\n            :ARG0 (s / service\n                  :mod (ii2 / intelligence))\n            :ARG1 (e / everything\n                  :ARG1-of (d / do-02\n                        :medium (s2 / satellite\n                              :name (n / name\n                                    :op1 ""Newline""))))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [ii, attr-instance, intercept_01, attr-arg0, [s, attr-instance, service, attr-mod, [ii2, attr-instance, intelligence]], attr-arg1, [e, attr-instance, everything, attr-arg1_of, [d, attr-instance, do_02, attr-medium, [s2, attr-instance, satellite, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]]]]]"
1277,1277,1277,1277,1554,12146,echter-clownfisch,Der Echte Clown-fisch wird ungefähr 11 Zentimenter lang.,0_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Echte 2:=Clown-fisch 3:=wird 4:=ungefähr 5:=11 6:=Zentimenter 7:=lang.,1,,The true clownfish grows to about 11 centimeters long.,['# ::snt The true clownfish grows to about 11 centimeters long.\n(g / grow-03\n      :ARG1 (c / clownfish\n            :ARG1-of (t / true-01))\n      :ARG4 (l / long-03\n            :ARG1 c\n            :ARG2 (a / about\n                  :op1 (d / distance-quantity\n                        :quant 11\n                        :unit (c2 / centimeter)))))'],"[g, attr-instance, grow_03, attr-arg1, [c, attr-instance, clownfish, attr-arg1_of, [t, attr-instance, true_01]], attr-arg4, [l, attr-instance, long_03, attr-arg1, c, attr-arg2, [a, attr-instance, about, attr-op1, [d, attr-instance, distance_quantity, attr-quant, 11, attr-unit, [c2, attr-instance, centimeter]]]]]"
1278,1278,1278,1278,1555,12147,echter-clownfisch,Ein Clown-fisch lebt ungefähr 8 bis 10 Jahre lang.,1_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Ein 1:=Clown-fisch 2:=lebt 3:=ungefähr 4:=8 5:=bis 6:=10 7:=Jahre 8:=lang.,2,"[[4], [6]]",A clown fish lives for about 8 to 10 years.,['# ::snt A clown fish lives for about 8 to 10 years.\n(l / live-01\n      :ARG0 (f / fish\n            :mod (c / clown))\n      :duration (a / about\n            :op1 (b / between\n                  :op1 (t / temporal-quantity\n                        :quant 8\n                        :unit (y / year))\n                  :op2 (t2 / temporal-quantity\n                        :quant 10\n                        :unit (y2 / year)))))'],"[l, attr-instance, live_01, attr-arg0, [f, attr-instance, fish, attr-mod, [c, attr-instance, clown]], attr-duration, [a, attr-instance, about, attr-op1, [b, attr-instance, between, attr-op1, [t, attr-instance, temporal_quantity, attr-quant, 8, attr-unit, [y, attr-instance, year]], attr-op2, [t2, attr-instance, temporal_quantity, attr-quant, 10, attr-unit, [y2, attr-instance, year]]]]]"
1279,1279,1279,1279,1556,12148,echter-clownfisch,Manche sagen zum Echten Clown-fisch auch Anemonen-fisch.,2_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Manche 1:=sagen 2:=zum 3:=Echten 4:=Clown-fisch 5:=auch 6:=Anemonen-fisch.,1,,Some people also call the clownfish anemone fish.,['# ::snt Some people also call the clownfish anemone fish.\n(c / call-01\n      :ARG0 (p / person\n            :mod (s / some))\n      :ARG1 (f / fish\n            :mod (c2 / clownfish))\n      :ARG2 (f2 / fish\n            :mod (a / anemone))\n      :mod (a2 / also))'],"[c, attr-instance, call_01, attr-arg0, [p, attr-instance, person, attr-mod, [s, attr-instance, some]], attr-arg1, [f, attr-instance, fish, attr-mod, [c2, attr-instance, clownfish]], attr-arg2, [f2, attr-instance, fish, attr-mod, [a, attr-instance, anemone]], attr-mod, [a2, attr-instance, also]]"
1280,1280,1280,1280,1557,12149,echter-clownfisch,Es gibt 27 verschiedene Clown-fisch-arten.,3_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Es 1:=gibt 2:=27 3:=verschiedene 4:=Clown-fisch-arten.,1,,There are 27 different species of clownfish.,['# ::snt There are 27 different species of clownfish.\n(s / species\n      :quant 27\n      :mod (c / clownfish)\n      :ARG1-of (d / differ-02))'],"[s, attr-instance, species, attr-quant, 27, attr-mod, [c, attr-instance, clownfish], attr-arg1_of, [d, attr-instance, differ_02]]"
1281,1281,1281,1281,1559,12151,echter-clownfisch,Anemonen-fische leben in einer Anemone.,5_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Anemonen-fische 1:=leben 2:=in 3:=einer 4:=Anemone.,1,,Anemone fish live in an anemone.,['# ::snt Anemone fish live in an anemone.\n(l / live-01\n      :ARG0 (f / fish\n            :mod (a / anemone))\n      :location a)'],"[l, attr-instance, live_01, attr-arg0, [f, attr-instance, fish, attr-mod, [a, attr-instance, anemone]], attr-location, a]"
1282,1282,1282,1282,1560,12152,echter-clownfisch,Anemonenfische und Anemonen leben in einer Symbiose.,6_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Anemonenfische 1:=und 2:=Anemonen 3:=leben 4:=in 5:=einer 6:=Symbiose.,1,,Anemone fish and anemones live in symbiosis.,['# ::snt Anemone fish and anemones live in symbiosis.\n(s / symbiosis\n      :domain (a / and\n            :op1 (f / fish\n                  :mod (a2 / anemone))\n            :op2 a2))'],"[s, attr-instance, symbiosis, attr-domain, [a, attr-instance, and, attr-op1, [f, attr-instance, fish, attr-mod, [a2, attr-instance, anemone]], attr-op2, a2]]"
1283,1283,1283,1283,1561,12153,echter-clownfisch,"Das heißt, sie leben zusammen.",7_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,"0:=Das 1:=heißt, 2:=sie 3:=leben 4:=zusammen.",1,,That means they live together.,['# ::snt That means they live together.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (l / live-01\n            :ARG0 (t2 / they)\n            :mod (t3 / together)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [l, attr-instance, live_01, attr-arg0, [t2, attr-instance, they], attr-mod, [t3, attr-instance, together]]]"
1284,1284,1284,1284,1562,12154,echter-clownfisch,Und helfen sich gegenseitig.,8_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Und 1:=helfen 2:=sich 3:=gegenseitig.,1,,And help each other.,['# ::snt And help each other.\n(a / and\n      :op2 (h / help-01\n            :ARG0 (o / other\n                  :mod (e / each))))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, help_01, attr-arg0, [o, attr-instance, other, attr-mod, [e, attr-instance, each]]]]"
1285,1285,1285,1285,1563,12155,echter-clownfisch,Bei Gefahr verstecken sie sich die Clown-fische in der Anemone.,9_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Bei 1:=Gefahr 2:=verstecken 3:=sie 4:=sich 5:=die 6:=Clown-fische 7:=in 8:=der 9:=Anemone.,2,"[[0, 1, 2, 3, 4, 6], [7, 9]]","When in danger, the clownfish hide in the anemone.","['# ::snt When in danger, the clownfish hide in the anemone.\n(h / hide-01\n      :ARG0 (c / clownfish)\n      :location (a / anemone)\n      :time (e / endanger-01\n            :ARG1 c))']","[h, attr-instance, hide_01, attr-arg0, [c, attr-instance, clownfish], attr-location, [a, attr-instance, anemone], attr-time, [e, attr-instance, endanger_01, attr-arg1, c]]"
1286,1286,1286,1286,1564,12156,echter-clownfisch,Die Anemone hat nesselnde Tentakel.,10_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Anemone 2:=hat 3:=nesselnde 4:=Tentakel.,2,"[[1, 2], [3]]",The anemone has stinging tentacles.,['# ::snt The anemone has stinging tentacles.\n(h / have-03\n      :ARG0 (a / anemone)\n      :ARG1 (t / tent\n            :ARG0-of (s / sting-01)))'],"[h, attr-instance, have_03, attr-arg0, [a, attr-instance, anemone], attr-arg1, [t, attr-instance, tent, attr-arg0_of, [s, attr-instance, sting_01]]]"
1287,1287,1287,1287,1565,12157,echter-clownfisch,Das heißt man kann sich an den Tentakeln verbrennen.,11_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Das 1:=heißt 2:=man 3:=kann 4:=sich 5:=an 6:=den 7:=Tentakeln 8:=verbrennen.,1,,This means you can burn yourself on the tentacles.,['# ::snt This means you can burn yourself on the tentacles.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (p / possible-01\n            :ARG1 (b / burn-01\n                  :ARG0 (y / you)\n                  :ARG1 y\n                  :location (t2 / tent))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [p, attr-instance, possible_01, attr-arg1, [b, attr-instance, burn_01, attr-arg0, [y, attr-instance, you], attr-arg1, y, attr-location, [t2, attr-instance, tent]]]]"
1288,1288,1288,1288,1567,12159,echter-clownfisch,Der Clown-fisch hat eine besondere Haut.,13_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Clown-fisch 2:=hat 3:=eine 4:=besondere 5:=Haut.,1,,The clown fish has special skin.,['# ::snt The clown fish has special skin.\n(h / have-03\n      :ARG0 (f / fish\n            :mod (c / clown))\n      :ARG1 (s / skin\n            :ARG1-of (s2 / special-02)))'],"[h, attr-instance, have_03, attr-arg0, [f, attr-instance, fish, attr-mod, [c, attr-instance, clown]], attr-arg1, [s, attr-instance, skin, attr-arg1_of, [s2, attr-instance, special_02]]]"
1289,1289,1289,1289,1568,12160,echter-clownfisch,Auf der Haut ist eine Schleim-schicht.,14_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Auf 1:=der 2:=Haut 3:=ist 4:=eine 5:=Schleim-schicht.,1,,There is a layer of mucus on the skin.,['# ::snt There is a layer of mucus on the skin.\n(l / layer\n      :consist-of (m / mucus)\n      :location (s / skin))'],"[l, attr-instance, layer, attr-consist_of, [m, attr-instance, mucus], attr-location, [s, attr-instance, skin]]"
1290,1290,1290,1290,1569,12161,echter-clownfisch,Die Schleimschicht schützt den Clown-fisch vor den Tentaklen.,15_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Schleimschicht 2:=schützt 3:=den 4:=Clown-fisch 5:=vor 6:=den 7:=Tentaklen.,2,"[[1, 2, 4], [5, 7]]",The mucus layer protects the clown fish from the tentacles.,['# ::snt The mucus layer protects the clown fish from the tentacles.\n(p / protect-01\n      :ARG0 (l / layer\n            :mod (m / mucus))\n      :ARG1 (f / fish\n            :mod (c / clown))\n      :ARG2 (t / tangle))'],"[p, attr-instance, protect_01, attr-arg0, [l, attr-instance, layer, attr-mod, [m, attr-instance, mucus]], attr-arg1, [f, attr-instance, fish, attr-mod, [c, attr-instance, clown]], attr-arg2, [t, attr-instance, tangle]]"
1291,1291,1291,1291,1570,12162,echter-clownfisch,Manche Fische fressen Anemonen.,16_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Manche 1:=Fische 2:=fressen 3:=Anemonen.,1,,Some fish eat anemones.,['# ::snt Some fish eat anemones.\n(e / eat-01\n      :ARG0 (f / fish\n            :quant (s / some))\n      :ARG1 (a / anemone))'],"[e, attr-instance, eat_01, attr-arg0, [f, attr-instance, fish, attr-quant, [s, attr-instance, some]], attr-arg1, [a, attr-instance, anemone]]"
1292,1292,1292,1292,1572,12165,echter-clownfisch,Der Clown-fisch beschützt dann die Anemone.,19_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Clown-fisch 2:=beschützt 3:=dann 4:=die 5:=Anemone.,1,,The clownfish then protects the anemone.,['# ::snt The clownfish then protects the anemone.\n(p / protect-01\n      :ARG0 (c / clownfish)\n      :ARG1 (a / anemone)\n      :time (t / then))'],"[p, attr-instance, protect_01, attr-arg0, [c, attr-instance, clownfish], attr-arg1, [a, attr-instance, anemone], attr-time, [t, attr-instance, then]]"
1293,1293,1293,1293,1573,12166,echter-clownfisch,Der Clown-fisch verjagt die anderen Fische.,20_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Clown-fisch 2:=verjagt 3:=die 4:=anderen 5:=Fische.,1,,The clown fish chases away the other fish.,['# ::snt The clown fish chases away the other fish.\n(c / chase-01\n      :ARG0 (f / fish\n            :mod (c2 / clown))\n      :ARG1 (f2 / fish\n            :mod (o / other))\n      :direction (a / away))'],"[c, attr-instance, chase_01, attr-arg0, [f, attr-instance, fish, attr-mod, [c2, attr-instance, clown]], attr-arg1, [f2, attr-instance, fish, attr-mod, [o, attr-instance, other]], attr-direction, [a, attr-instance, away]]"
1294,1294,1294,1294,1574,12167,echter-clownfisch,Clown-fische legen Eier.,21_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Clown-fische 1:=legen 2:=Eier.,1,,Clown fish lay eggs.,['# ::snt Clown fish lay eggs.\n(l / lay-01\n      :ARG0 (f / fish\n            :ARG1-of (c / clone-01))\n      :ARG1 (e / egg))'],"[l, attr-instance, lay_01, attr-arg0, [f, attr-instance, fish, attr-arg1_of, [c, attr-instance, clone_01]], attr-arg1, [e, attr-instance, egg]]"
1295,1295,1295,1295,1575,12168,echter-clownfisch,Das Weibchen legt ungefähr 500 Eier ab.,22_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Das 1:=Weibchen 2:=legt 3:=ungefähr 4:=500 5:=Eier 6:=ab.,1,,The female lays about 500 eggs.,['# ::snt The female lays about 500 eggs.\n(l / lay-01\n      :ARG0 (f / female)\n      :ARG1 (e / egg\n            :quant (a / about\n                  :op1 500)))'],"[l, attr-instance, lay_01, attr-arg0, [f, attr-instance, female], attr-arg1, [e, attr-instance, egg, attr-quant, [a, attr-instance, about, attr-op1, 500]]]"
1296,1296,1296,1296,1577,12170,echter-clownfisch,Dann kümmert sich das Männchen um die Eier.,24_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Dann 1:=kümmert 2:=sich 3:=das 4:=Männchen 5:=um 6:=die 7:=Eier.,1,,Then the male takes care of the eggs.,['# ::snt Then the male takes care of the eggs.\n(c / care-03\n      :ARG0 (m / male)\n      :ARG1 (e / egg)\n      :time (t / then))'],"[c, attr-instance, care_03, attr-arg0, [m, attr-instance, male], attr-arg1, [e, attr-instance, egg], attr-time, [t, attr-instance, then]]"
1297,1297,1297,1297,1578,12171,echter-clownfisch,Aus den Eiern schlüpfen dann Jung-fische.,25_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Aus 1:=den 2:=Eiern 3:=schlüpfen 4:=dann 5:=Jung-fische.,1,,Young fish then hatch from the eggs.,['# ::snt Young fish then hatch from the eggs.\n(h / hatch-01\n      :ARG1 (f / fish\n            :mod (y / young))\n      :source (e / egg)\n      :time (t / then))'],"[h, attr-instance, hatch_01, attr-arg1, [f, attr-instance, fish, attr-mod, [y, attr-instance, young]], attr-source, [e, attr-instance, egg], attr-time, [t, attr-instance, then]]"
1298,1298,1298,1298,1579,12172,echter-clownfisch,Die Jung-fische sind alle Männchen.,26_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Jung-fische 2:=sind 3:=alle 4:=Männchen.,1,,The young fish are all males.,['# ::snt The young fish are all males.\n(m / male\n      :domain (f / fish\n            :mod (y / young)))'],"[m, attr-instance, male, attr-domain, [f, attr-instance, fish, attr-mod, [y, attr-instance, young]]]"
1299,1299,1299,1299,1580,12173,echter-clownfisch,Manche werden später Weibchen.,27_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Manche 1:=werden 2:=später 3:=Weibchen.,1,,Some later become females.,['# ::snt Some later become females.\n(b / become-01\n      :ARG1 (s / some)\n      :ARG2 (f / female)\n      :time (a / after))'],"[b, attr-instance, become_01, attr-arg1, [s, attr-instance, some], attr-arg2, [f, attr-instance, female], attr-time, [a, attr-instance, after]]"
1300,1300,1300,1300,1581,12174,echter-clownfisch,Anemonen-fische leben meistens als Paar in einer Anemone.,28_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Anemonen-fische 1:=leben 2:=meistens 3:=als 4:=Paar 5:=in 6:=einer 7:=Anemone.,2,"[[3, 4], [5, 7]]",Anemone fish usually live as a pair in an anemone.,['# ::snt Anemone fish usually live as a pair in an anemone.\n(l / live-01\n      :ARG0 (f / fish\n            :mod (a / anemone))\n      :ARG1 (p / pair\n            :quant 1\n            :location (a2 / anemone))\n      :mod (u / usual))'],"[l, attr-instance, live_01, attr-arg0, [f, attr-instance, fish, attr-mod, [a, attr-instance, anemone]], attr-arg1, [p, attr-instance, pair, attr-quant, 1, attr-location, [a2, attr-instance, anemone]], attr-mod, [u, attr-instance, usual]]"
1301,1301,1301,1301,1583,12176,echter-clownfisch,Das heißt: \newline Mehrere männliche Fische leben mit einem Weibchen zusammen.,30_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Das 1:=heißt: 2:=\newline 3:=Mehrere 4:=männliche 5:=Fische 6:=leben 7:=mit 8:=einem 9:=Weibchen 10:=zusammen.,2,"[[7, 8, 9], [10]]",This means: \newline Several male fish live together with one female.,['# ::snt This means: \\newline Several male fish live together with one female.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (l / live-01\n            :ARG0 (f / fish\n                  :quant (s / several)\n                  :mod (m2 / male)\n                  :accompanier (f2 / female\n                        :quant 1))\n            :manner (t2 / together)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [l, attr-instance, live_01, attr-arg0, [f, attr-instance, fish, attr-quant, [s, attr-instance, several], attr-mod, [m2, attr-instance, male], attr-accompanier, [f2, attr-instance, female, attr-quant, 1]], attr-manner, [t2, attr-instance, together]]]"
1302,1302,1302,1302,1584,12177,echter-clownfisch,"Stirbt das Weibchen, \newline wird ein Männchen aus der Gruppe zum Weibchen.",31_long,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,"0:=Stirbt 1:=das 2:=Weibchen, 3:=\newline 4:=wird 5:=ein 6:=Männchen 7:=aus 8:=der 9:=Gruppe 10:=zum 11:=Weibchen.",3,"[[0, 2], [4, 6, 10, 11], [6, 7, 9]]","If the female dies, \newline a male from the group becomes the female.","['# ::snt If the female dies, \\newline a male from the group becomes the female.\n(h / have-condition-91\n      :ARG1 (b / become-01\n            :ARG1 (m / male\n                  :ARG1-of (ii / include-91\n                        :ARG2 (g / group)))\n            :ARG2 (f / female))\n      :ARG2 (d / die-01\n            :ARG1 f))']","[h, attr-instance, have_condition_91, attr-arg1, [b, attr-instance, become_01, attr-arg1, [m, attr-instance, male, attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [g, attr-instance, group]]], attr-arg2, [f, attr-instance, female]], attr-arg2, [d, attr-instance, die_01, attr-arg1, f]]"
1303,1303,1303,1303,1585,12178,echter-clownfisch,Der Echte Clown-fisch lebt im Meer.,0_short,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Echte 2:=Clown-fisch 3:=lebt 4:=im 5:=Meer.,1,,The real clownfish lives in the sea.,['# ::snt The real clownfish lives in the sea.\n(l / live-01\n      :ARG0 (c / clownfish\n            :ARG1-of (r / real-04))\n      :location (s / sea))'],"[l, attr-instance, live_01, attr-arg0, [c, attr-instance, clownfish, attr-arg1_of, [r, attr-instance, real_04]], attr-location, [s, attr-instance, sea]]"
1304,1304,1304,1304,1587,12180,echter-clownfisch,Der Echte Clown-fisch hat eine leuchtende orange Farbe.,2_short,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Echte 2:=Clown-fisch 3:=hat 4:=eine 5:=leuchtende 6:=orange 7:=Farbe.,2,"[[5], [6]]",The real clownfish has a bright orange color.,['# ::snt The real clownfish has a bright orange color.\n(c / color-01\n      :ARG1 (c2 / clownfish\n            :ARG1-of (r / real-04))\n      :ARG2 (o / orange\n            :ARG1-of (b / bright-02)))'],"[c, attr-instance, color_01, attr-arg1, [c2, attr-instance, clownfish, attr-arg1_of, [r, attr-instance, real_04]], attr-arg2, [o, attr-instance, orange, attr-arg1_of, [b, attr-instance, bright_02]]]"
1305,1305,1305,1305,1588,12181,echter-clownfisch,Auf dem Orange sind 3 weiße Streifen.,3_short,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Auf 1:=dem 2:=Orange 3:=sind 4:=3 5:=weiße 6:=Streifen.,1,,There are 3 white stripes on the orange.,['# ::snt There are 3 white stripes on the orange.\n(b / be-located-at-91\n      :ARG1 (s / stripe\n            :quant 3\n            :ARG1-of (w / white-03))\n      :ARG2 (o / orange))'],"[b, attr-instance, be_located_at_91, attr-arg1, [s, attr-instance, stripe, attr-quant, 3, attr-arg1_of, [w, attr-instance, white_03]], attr-arg2, [o, attr-instance, orange]]"
1306,1306,1306,1306,1589,12182,echter-clownfisch,Die Streifen haben einen schwarzen Rand.,4_short,Tiere|Seiten_mit_defekten_Dateilinks,2021-05-15T15:50:47Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Streifen 2:=haben 3:=einen 4:=schwarzen 5:=Rand.,1,,The stripes have a black border.,['# ::snt The stripes have a black border.\n(b / border-01\n      :ARG1 (s / stripe)\n      :ARG1-of (b2 / black-04))'],"[b, attr-instance, border_01, attr-arg1, [s, attr-instance, stripe], attr-arg1_of, [b2, attr-instance, black_04]]"
1307,1307,1307,1307,1590,12183,eco-marathon,Der Eco-Marathon ist ein Auto-Rennen.,0_short,Technik,2014-05-08T08:23:37Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Eco-Marathon 2:=ist 3:=ein 4:=Auto-Rennen.,1,,The Eco Marathon is a car race.,"['# ::snt The Eco Marathon is a car race.\n(r / race-02\n      :ARG3 (r2 / run-02\n            :name (n / name\n                  :op1 ""Eco""\n                  :op2 ""Marathon""))\n      :mod (c / car))']","[r, attr-instance, race_02, attr-arg3, [r2, attr-instance, run_02, attr-name, [n, attr-instance, name, attr-op1, ""eco"", attr-op2, ""marathon""]], attr-mod, [c, attr-instance, car]]"
1308,1308,1308,1308,1591,12184,eco-marathon,Das Auto das am wenigsten Energie (zum Beispiel Benzin) verbraucht gewinnt.,1_short,Technik,2014-05-08T08:23:37Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=Auto 2:=das 3:=am 4:=wenigsten 5:=Energie 6:=(zum 7:=Beispiel 8:=Benzin) 9:=verbraucht 10:=gewinnt.,3,"[[2, 3, 4, 5, 9], [6, 7, 8], [10]]",The car that consumes the least energy (for example gasoline) wins.,['# ::snt The car that consumes the least energy (for example gasoline) wins.\n(w / win-01\n      :ARG0 (c / car\n            :ARG0-of (c2 / consume-01\n                  :ARG1 (e / energy\n                        :ARG1-of (h / have-quant-91\n                              :ARG3 (l / least))))\n            :example (g / gasoline)))'],"[w, attr-instance, win_01, attr-arg0, [c, attr-instance, car, attr-arg0_of, [c2, attr-instance, consume_01, attr-arg1, [e, attr-instance, energy, attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg3, [l, attr-instance, least]]]], attr-example, [g, attr-instance, gasoline]]]"
1309,1309,1309,1309,1592,12185,edgar-allan-poe,Edgar Allan Poe kommt am 19. Januar 1809 auf die Welt.,0_long,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Edgar 1:=Allan 2:=Poe 3:=kommt 4:=am 5:=19. 6:=Januar 7:=1809 8:=auf 9:=die 10:=Welt.,1,,"Edgar Allan Poe was born on January 19, 1809.","['# ::snt Edgar Allan Poe was born on January 19, 1809.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Edgar""\n                  :op2 ""Allan""\n                  :op3 ""Poe""))\n      :time (d / date-entity\n            :day 19\n            :month 1\n            :year 1809))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""edgar"", attr-op2, ""allan"", attr-op3, ""poe""]], attr-time, [d, attr-instance, date_entity, attr-day, 19, attr-month, 1, attr-year, 1809]]"
1310,1310,1310,1310,1594,12187,edgar-allan-poe,Edgar Allan Poe schreibt vor allem: • Kurz-geschichten,2_long,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Edgar 1:=Allan 2:=Poe 3:=schreibt 4:=vor 5:=allem: 6:=• 7:=Kurz-geschichten,1,,Edgar Allan Poe mainly writes: • Short stories,"['# ::snt Edgar Allan Poe mainly writes: • Short stories\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Edgar""\n                  :op2 ""Allan""\n                  :op3 ""Poe""))\n      :ARG1 (a / and\n            :op1 (s / story\n                  :ARG1-of (s2 / short-07)\n                  :op2-of a))\n      :mod (m / main))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""edgar"", attr-op2, ""allan"", attr-op3, ""poe""]], attr-arg1, [a, attr-instance, and, attr-op1, [s, attr-instance, story, attr-arg1_of, [s2, attr-instance, short_07], attr-op2_of, a]], attr-mod, [m, attr-instance, main]]"
1311,1311,1311,1311,1595,12188,edgar-allan-poe,Edgar Allan Poe schreibt vor allem: • Kriminal-geschichten,3_long,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Edgar 1:=Allan 2:=Poe 3:=schreibt 4:=vor 5:=allem: 6:=• 7:=Kriminal-geschichten,1,,Edgar Allan Poe mainly writes: • Crime stories,"['# ::snt Edgar Allan Poe mainly writes: • Crime stories\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Edgar""\n                  :op2 ""Allan""\n                  :op3 ""Poe""))\n      :ARG1 (a / and\n            :op1 (s / story\n                  :topic (c / crime-02))\n            :op2 (s2 / story\n                  :topic c))\n      :mod (m / main))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""edgar"", attr-op2, ""allan"", attr-op3, ""poe""]], attr-arg1, [a, attr-instance, and, attr-op1, [s, attr-instance, story, attr-topic, [c, attr-instance, crime_02]], attr-op2, [s2, attr-instance, story, attr-topic, c]], attr-mod, [m, attr-instance, main]]"
1312,1312,1312,1312,1596,12189,edgar-allan-poe,Edgar Allan Poe schreibt vor allem: • Horror und Schauer-geschichten,4_long,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Edgar 1:=Allan 2:=Poe 3:=schreibt 4:=vor 5:=allem: 6:=• 7:=Horror 8:=und 9:=Schauer-geschichten,2,"[[7], [9]]",Edgar Allan Poe mainly writes: • Horror and horror stories,"['# ::snt Edgar Allan Poe mainly writes: • Horror and horror stories\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Edgar""\n                  :op2 ""Allan""\n                  :op3 ""Poe""))\n      :ARG1 (a / and\n            :op1 (h / horror)\n            :op2 (s / story\n                  :mod (h2 / horror)))\n      :mod (m / main))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""edgar"", attr-op2, ""allan"", attr-op3, ""poe""]], attr-arg1, [a, attr-instance, and, attr-op1, [h, attr-instance, horror], attr-op2, [s, attr-instance, story, attr-mod, [h2, attr-instance, horror]]], attr-mod, [m, attr-instance, main]]"
1313,1313,1313,1313,1597,12190,edgar-allan-poe,Die Geschichten von Poe beeinflussen Jules Verne.,5_long,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Die 1:=Geschichten 2:=von 3:=Poe 4:=beeinflussen 5:=Jules 6:=Verne.,1,,Poe's stories influence Jules Verne.,"['# ::snt Poe\'s stories influence Jules Verne.\n(ii / influence-01\n      :ARG0 (s / story\n            :poss (p / person\n                  :name (n / name\n                        :op1 ""Poe"")))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Jules""\n                  :op2 ""Verne"")))']","[ii, attr-instance, influence_01, attr-arg0, [s, attr-instance, story, attr-poss, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""poe""]]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""jules"", attr-op2, ""verne""]]]"
1314,1314,1314,1314,1598,12191,edgar-allan-poe,Verne ist einer der ersten Science-Fiction Schrift-steller.,6_long,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Verne 1:=ist 2:=einer 3:=der 4:=ersten 5:=Science-Fiction 6:=Schrift-steller.,2,"[[2, 3, 4, 5], [0, 1]]",Verne is one of the first science fiction writers.,"['# ::snt Verne is one of the first science fiction writers.\n(ii / include-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Verne""))\n      :ARG2 (p2 / person\n            :ARG1-of (w / write-01\n                  :mod (f / fiction\n                        :mod (s / science))\n                  :ord (o / ordinal-entity\n                        :value 1))))']","[ii, attr-instance, include_91, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""verne""]], attr-arg2, [p2, attr-instance, person, attr-arg1_of, [w, attr-instance, write_01, attr-mod, [f, attr-instance, fiction, attr-mod, [s, attr-instance, science]], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]]]]"
1315,1315,1315,1315,1599,12192,edgar-allan-poe,Poe hat auch großen Einfluss auf Charles Baudelaire.,7_long,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Poe 1:=hat 2:=auch 3:=großen 4:=Einfluss 5:=auf 6:=Charles 7:=Baudelaire.,1,,Poe also had a great influence on Charles Baudelaire.,"['# ::snt Poe also had a great influence on Charles Baudelaire.\n(ii / influence-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Poe""))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 ""Charles""\n                  :op2 ""Baudelaire""))\n      :mod (g / great)\n      :mod (a / also))']","[ii, attr-instance, influence_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""poe""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""charles"", attr-op2, ""baudelaire""]], attr-mod, [g, attr-instance, great], attr-mod, [a, attr-instance, also]]"
1316,1316,1316,1316,1600,12193,edgar-allan-poe,Baudelaire gebraucht Poesie von Poe in Vorträgen.,8_long,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Baudelaire 1:=gebraucht 2:=Poesie 3:=von 4:=Poe 5:=in 6:=Vorträgen.,2,"[[0, 1, 5, 6], [3, 4]]",Baudelaire uses Poe's poetry in lectures.,"['# ::snt Baudelaire uses Poe\'s poetry in lectures.\n(u / use-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Baudelaire""))\n      :ARG1 (p2 / poetry\n            :poss (p3 / person\n                  :name (n2 / name\n                        :op1 ""Poe"")))\n      :ARG2 (l / lecture-01))']","[u, attr-instance, use_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""baudelaire""]], attr-arg1, [p2, attr-instance, poetry, attr-poss, [p3, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""poe""]]], attr-arg2, [l, attr-instance, lecture_01]]"
1317,1317,1317,1317,1602,12195,edgar-allan-poe,Edgar Allan Poe war ein Schrift-steller.,0_short,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Edgar 1:=Allan 2:=Poe 3:=war 4:=ein 5:=Schrift-steller.,1,,Edgar Allan Poe was a writer.,"['# ::snt Edgar Allan Poe was a writer.\n(p / person\n      :ARG0-of (w / write-01)\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Edgar""\n                  :op2 ""Allan""\n                  :op3 ""Poe"")))']","[p, attr-instance, person, attr-arg0_of, [w, attr-instance, write_01], attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""edgar"", attr-op2, ""allan"", attr-op3, ""poe""]]]"
1318,1318,1318,1318,1603,12196,edgar-allan-poe,Er hat Horror-geschichten geschrieben.,1_short,Personen,2022-01-19T07:15:51Z,e800bebc9060331edfac65e663a55570,0:=Er 1:=hat 2:=Horror-geschichten 3:=geschrieben.,1,,He wrote horror stories.,['# ::snt He wrote horror stories.\n(w / write-01\n      :ARG0 (h / he)\n      :ARG1 (s / story\n            :mod (h2 / horror)))'],"[w, attr-instance, write_01, attr-arg0, [h, attr-instance, he], attr-arg1, [s, attr-instance, story, attr-mod, [h2, attr-instance, horror]]]"
1319,1319,1319,1319,1604,12198,edward-snowden,"Edward Snowden  wurde am 21. Juni 1983 in Elizabeth City, USA geboren.",0_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,"0:=Edward 1:=Snowden 2:= 3:=wurde 4:=am 5:=21. 6:=Juni 7:=1983 8:=in 9:=Elizabeth 10:=City, 11:=USA 12:=geboren.",3,"[[4, 5, 6, 7], [8, 9, 10], [8, 11]]","Edward Snowden was born on June 21, 1983 in Elizabeth City, USA.","['# ::snt Edward Snowden was born on June 21, 1983 in Elizabeth City, USA.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Edward""\n                  :op2 ""Snowden""))\n      :time (d / date-entity\n            :day 21\n            :month 6\n            :year 1983)\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""Elizabeth""\n                  :op2 ""City"")\n            :location (c2 / country\n                  :name (n3 / name\n                        :op1 ""USA""))))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""edward"", attr-op2, ""snowden""]], attr-time, [d, attr-instance, date_entity, attr-day, 21, attr-month, 6, attr-year, 1983], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""elizabeth"", attr-op2, ""city""], attr-location, [c2, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""usa""]]]]"
1320,1320,1320,1320,1605,12199,edward-snowden,Edward Snowden hat eine ältere Schwester.,1_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Edward 1:=Snowden 2:=hat 3:=eine 4:=ältere 5:=Schwester.,2,"[[0, 1, 2], [4]]",Edward Snowden has an older sister.,"['# ::snt Edward Snowden has an older sister.\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Edward""\n                  :op2 ""Snowden""))\n      :ARG1 (p2 / person\n            :ARG1 p\n            :ARG2 (s / sister))\n      :ARG0 p2\n      :ARG2 (o / older))']","[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""edward"", attr-op2, ""snowden""]], attr-arg1, [p2, attr-instance, person, attr-arg1, p, attr-arg2, [s, attr-instance, sister]], attr-arg0, p2, attr-arg2, [o, attr-instance, older]]"
1321,1321,1321,1321,1606,12200,edward-snowden,Er hat am Anne Arundel Community College in Maryland Informatik studiert.,2_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=hat 2:=am 3:=Anne 4:=Arundel 5:=Community 6:=College 7:=in 8:=Maryland 9:=Informatik 10:=studiert.,3,"[[2, 3, 4, 5, 6], [7, 8], [9]]",He studied computer science at Anne Arundel Community College in Maryland.,"['# ::snt He studied computer science at Anne Arundel Community College in Maryland.\n(s / study-01\n      :ARG0 (h / he)\n      :ARG1 (s2 / science\n            :mod (c / computer))\n      :location (u / university\n            :name (n / name\n                  :op1 ""Anne""\n                  :op2 ""Arundel""\n                  :op3 ""Community""\n                  :op4 ""College"")\n            :location (s3 / state\n                  :name (n2 / name\n                        :op1 ""Maryland""))))']","[s, attr-instance, study_01, attr-arg0, [h, attr-instance, he], attr-arg1, [s2, attr-instance, science, attr-mod, [c, attr-instance, computer]], attr-location, [u, attr-instance, university, attr-name, [n, attr-instance, name, attr-op1, ""anne"", attr-op2, ""arundel"", attr-op3, ""community"", attr-op4, ""college""], attr-location, [s3, attr-instance, state, attr-name, [n2, attr-instance, name, attr-op1, ""maryland""]]]]"
1322,1322,1322,1322,1607,12201,edward-snowden,Er hat nicht fertig studiert.,3_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=hat 2:=nicht 3:=fertig 4:=studiert.,1,,He didn't finish his studies.,"[""# ::snt He didn't finish his studies.\n(f / finish-01\n      :polarity -\n      :ARG0 (h / he)\n      :ARG1 (s / study-01\n            :ARG0 h))""]","[f, attr-instance, finish_01, attr-polarity, negative, attr-arg0, [h, attr-instance, he], attr-arg1, [s, attr-instance, study_01, attr-arg0, h]]"
1323,1323,1323,1323,1608,12202,edward-snowden,Danach hat er als Computer Techniker für Geheimdienste gearbeitet.,4_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Danach 1:=hat 2:=er 3:=als 4:=Computer 5:=Techniker 6:=für 7:=Geheimdienste 8:=gearbeitet.,2,"[[4, 5], [6, 7]]",He then worked as a computer technician for secret services.,['# ::snt He then worked as a computer technician for secret services.\n(w / work-01\n      :ARG0 (h / he)\n      :ARG1 (t / technician\n            :mod (c / computer))\n      :ARG2 (s / service\n            :mod (s2 / secret))\n      :time (t2 / then))'],"[w, attr-instance, work_01, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, technician, attr-mod, [c, attr-instance, computer]], attr-arg2, [s, attr-instance, service, attr-mod, [s2, attr-instance, secret]], attr-time, [t2, attr-instance, then]]"
1324,1324,1324,1324,1610,12204,edward-snowden,Bei seiner Arbeit bei den Geheimdiensten hat er die Geheimdienstprogramme PRISM und Tempora gesehen.,6_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Bei 1:=seiner 2:=Arbeit 3:=bei 4:=den 5:=Geheimdiensten 6:=hat 7:=er 8:=die 9:=Geheimdienstprogramme 10:=PRISM 11:=und 12:=Tempora 13:=gesehen.,4,"[[0, 1, 2, 6, 7, 9, 13], [2, 3, 5], [9, 10], [9, 12]]","During his work with the intelligence services, he saw the intelligence programs PRISM and Tempora.","['# ::snt During his work with the intelligence services, he saw the intelligence programs PRISM and Tempora.\n(s / see-01\n      :ARG0 (h / he)\n      :ARG1 (a / and\n            :op1 (p / program\n                  :name (n / name\n                        :op1 ""PRISM""))\n            :op2 (p2 / program\n                  :name (n2 / name\n                        :op1 ""Temporation""))\n            :mod (ii / intelligence))\n      :time (w / work-01\n            :ARG0 h\n            :ARG3 (s2 / service\n                  :mod (ii2 / intelligence))))']","[s, attr-instance, see_01, attr-arg0, [h, attr-instance, he], attr-arg1, [a, attr-instance, and, attr-op1, [p, attr-instance, program, attr-name, [n, attr-instance, name, attr-op1, ""prism""]], attr-op2, [p2, attr-instance, program, attr-name, [n2, attr-instance, name, attr-op1, ""temporation""]], attr-mod, [ii, attr-instance, intelligence]], attr-time, [w, attr-instance, work_01, attr-arg0, h, attr-arg3, [s2, attr-instance, service, attr-mod, [ii2, attr-instance, intelligence]]]]"
1325,1325,1325,1325,1611,12205,edward-snowden,Edward Snowden ist der Meinung dass PRISM und Tempora nicht rechtmäßig sind.,7_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Edward 1:=Snowden 2:=ist 3:=der 4:=Meinung 5:=dass 6:=PRISM 7:=und 8:=Tempora 9:=nicht 10:=rechtmäßig 11:=sind.,3,"[[0, 1, 2, 4], [5, 6, 9, 10, 11], [5, 8, 9, 10, 11]]",Edward Snowden believes that PRISM and Tempora are illegal.,"['# ::snt Edward Snowden believes that PRISM and Tempora are illegal.\n(b / believe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Edward""\n                  :op2 ""Snowden""))\n      :ARG1 (l / legal-02\n            :polarity -\n            :ARG1 (a / and\n                  :op1 (p2 / publication\n                        :name (n2 / name\n                              :op1 ""PRISM""))\n                  :op2 (p3 / publication\n                        :name (n3 / name\n                              :op1 ""Temporporation"")))))']","[b, attr-instance, believe_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""edward"", attr-op2, ""snowden""]], attr-arg1, [l, attr-instance, legal_02, attr-polarity, negative, attr-arg1, [a, attr-instance, and, attr-op1, [p2, attr-instance, publication, attr-name, [n2, attr-instance, name, attr-op1, ""prism""]], attr-op2, [p3, attr-instance, publication, attr-name, [n3, attr-instance, name, attr-op1, ""temporporation""]]]]]"
1326,1326,1326,1326,1612,12206,edward-snowden,"Das heißt, er glaubt die Geheimdienste halten sich nicht an Gesetze.",8_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,"0:=Das 1:=heißt, 2:=er 3:=glaubt 4:=die 5:=Geheimdienste 6:=halten 7:=sich 8:=nicht 9:=an 10:=Gesetze.",2,"[[2, 3], [5, 6, 7, 8, 9, 10]]",That means he believes the secret services do not obey the law.,['# ::snt That means he believes the secret services do not obey the law.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (b / believe-01\n            :ARG0 (h / he)\n            :ARG1 (o / obey-01\n                  :polarity -\n                  :ARG0 (s / service\n                        :mod (s2 / secret))\n                  :ARG1 (l / law))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [b, attr-instance, believe_01, attr-arg0, [h, attr-instance, he], attr-arg1, [o, attr-instance, obey_01, attr-polarity, negative, attr-arg0, [s, attr-instance, service, attr-mod, [s2, attr-instance, secret]], attr-arg1, [l, attr-instance, law]]]]"
1327,1327,1327,1327,1613,12207,edward-snowden,Deshalb hat er der Zeitung über PRISM und Tempora erzählt.,9_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Deshalb 1:=hat 2:=er 3:=der 4:=Zeitung 5:=über 6:=PRISM 7:=und 8:=Tempora 9:=erzählt.,2,"[[6], [8]]",That's why he told the newspaper about PRISM and Tempora.,"['# ::snt That\'s why he told the newspaper about PRISM and Tempora.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (t2 / tell-01\n            :ARG0 (h / he)\n            :ARG1 (a / and\n                  :op1 (p / publication\n                        :name (n / name\n                              :op1 ""PRISM""))\n                  :op2 (p2 / publication\n                        :name (n2 / name\n                              :op1 ""Temporation"")))\n            :ARG2 (n3 / newspaper)))']","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [t2, attr-instance, tell_01, attr-arg0, [h, attr-instance, he], attr-arg1, [a, attr-instance, and, attr-op1, [p, attr-instance, publication, attr-name, [n, attr-instance, name, attr-op1, ""prism""]], attr-op2, [p2, attr-instance, publication, attr-name, [n2, attr-instance, name, attr-op1, ""temporation""]]], attr-arg2, [n3, attr-instance, newspaper]]]"
1328,1328,1328,1328,1614,12208,edward-snowden,Er hat das einem Journalisten erzählt.,10_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=hat 2:=das 3:=einem 4:=Journalisten 5:=erzählt.,1,,He told this to a journalist.,['# ::snt He told this to a journalist.\n(t / tell-01\n      :ARG0 (h / he)\n      :ARG1 (t2 / this)\n      :ARG2 (j / journalist))'],"[t, attr-instance, tell_01, attr-arg0, [h, attr-instance, he], attr-arg1, [t2, attr-instance, this], attr-arg2, [j, attr-instance, journalist]]"
1329,1329,1329,1329,1616,12210,edward-snowden,"Das ist nichts, was ich unterstützen oder wo ich leben möchte.""",12_long,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,"0:=Das 1:=ist 2:=nichts, 3:=was 4:=ich 5:=unterstützen 6:=oder 7:=wo 8:=ich 9:=leben 10:=möchte.""",3,"[[0, 1, 2], [3, 4, 5, 6], [7, 8, 9, 10]]","This is not something I want to support or live in.""","['# ::snt This is not something I want to support or live in.""\n(w / want-01\n      :polarity -\n      :ARG0 (ii / i)\n      :ARG1 (o / or\n            :op1 (s / support-01\n                  :ARG0 ii\n                  :ARG1 (s2 / something\n                        :domain (t / this)))\n            :op2 (l / live-01\n                  :ARG0 ii\n                  :location s2)))']","[w, attr-instance, want_01, attr-polarity, negative, attr-arg0, [ii, attr-instance, i], attr-arg1, [o, attr-instance, or, attr-op1, [s, attr-instance, support_01, attr-arg0, ii, attr-arg1, [s2, attr-instance, something, attr-domain, [t, attr-instance, this]]], attr-op2, [l, attr-instance, live_01, attr-arg0, ii, attr-location, s2]]]"
1330,1330,1330,1330,1617,12211,edward-snowden,Edward Snowden ist ein Computer System Administrator.,0_short,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Edward 1:=Snowden 2:=ist 3:=ein 4:=Computer 5:=System 6:=Administrator.,1,,Edward Snowden is a computer systems administrator.,"['# ::snt Edward Snowden is a computer systems administrator.\n(p / person\n      :ARG0-of (a / administrate-01\n            :ARG1 (s / system\n                  :mod (c / computer)))\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Edward""\n                  :op2 ""Snowden"")))']","[p, attr-instance, person, attr-arg0_of, [a, attr-instance, administrate_01, attr-arg1, [s, attr-instance, system, attr-mod, [c, attr-instance, computer]]], attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""edward"", attr-op2, ""snowden""]]]"
1331,1331,1331,1331,1618,12212,edward-snowden,Er hat für die Geheimdienste CIA und NSA gearbeitet.,1_short,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=hat 2:=für 3:=die 4:=Geheimdienste 5:=CIA 6:=und 7:=NSA 8:=gearbeitet.,2,"[[5], [7]]",He worked for the secret services CIA and NSA.,"['# ::snt He worked for the secret services CIA and NSA.\n(w / work-01\n      :ARG0 (h / he)\n      :ARG2 (a / and\n            :op1 (g / government-organization\n                  :name (n / name\n                        :op1 ""CIA"")\n                  :mod (s / service\n                        :mod (s2 / secret)))\n            :op2 (g2 / government-organization\n                  :name (n2 / name\n                        :op1 ""NSA"")\n                  :mod s)))']","[w, attr-instance, work_01, attr-arg0, [h, attr-instance, he], attr-arg2, [a, attr-instance, and, attr-op1, [g, attr-instance, government_organization, attr-name, [n, attr-instance, name, attr-op1, ""cia""], attr-mod, [s, attr-instance, service, attr-mod, [s2, attr-instance, secret]]], attr-op2, [g2, attr-instance, government_organization, attr-name, [n2, attr-instance, name, attr-op1, ""nsa""], attr-mod, s]]]"
1332,1332,1332,1332,1619,12213,edward-snowden,Er ist auch ein Whistleblower.,2_short,Personen,2013-07-05T06:23:04Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=ist 2:=auch 3:=ein 4:=Whistleblower.,1,,He is also a whistleblower.,['# ::snt He is also a whistleblower.\n(p / person\n      :ARG0-of (l / leak-01)\n      :mod (a / also)\n      :domain (h / he))'],"[p, attr-instance, person, attr-arg0_of, [l, attr-instance, leak_01], attr-mod, [a, attr-instance, also], attr-domain, [h, attr-instance, he]]"
1333,1333,1333,1333,1620,12214,egalitarismus,Jemand der Egalitarismus gut findet ist Egalitär.,0_long,Haltung|Politische_Idee|Seiten_mit_defekten_Dateilinks,2022-09-22T12:10:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Jemand 1:=der 2:=Egalitarismus 3:=gut 4:=findet 5:=ist 6:=Egalitär.,2,"[[0, 5, 6], [1, 2, 3, 4]]",Someone who likes egalitarianism is egalitarian.,['# ::snt Someone who likes egalitarianism is egalitarian.\n(h / have-mod-91\n      :ARG1 (s / someone\n            :ARG0-of (l / like-01\n                  :ARG1 (e / egalitarianism)))\n      :ARG2 e)'],"[h, attr-instance, have_mod_91, attr-arg1, [s, attr-instance, someone, attr-arg0_of, [l, attr-instance, like_01, attr-arg1, [e, attr-instance, egalitarianism]]], attr-arg2, e]"
1334,1334,1334,1334,1622,12216,egalitarismus,Es ist auch eine politische Idee.,2_long,Haltung|Politische_Idee|Seiten_mit_defekten_Dateilinks,2022-09-22T12:10:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=ist 2:=auch 3:=eine 4:=politische 5:=Idee.,1,,It is also a political idea.,['# ::snt It is also a political idea.\n(ii / idea\n      :mod (p / politics)\n      :mod (a / also)\n      :domain (ii2 / it))'],"[ii, attr-instance, idea, attr-mod, [p, attr-instance, politics], attr-mod, [a, attr-instance, also], attr-domain, [ii2, attr-instance, it]]"
1335,1335,1335,1335,1623,12217,egalitarismus,Eine Idee wie Menschen zusammen-leben können.,3_long,Haltung|Politische_Idee|Seiten_mit_defekten_Dateilinks,2022-09-22T12:10:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Idee 2:=wie 3:=Menschen 4:=zusammen-leben 5:=können.,1,,An idea of ​​how people can live together.,['# ::snt An idea of \u200b\u200bhow people can live together.\n(ii / idea\n      :topic (t / thing\n            :manner-of (p / possible-01\n                  :ARG1 (l / live-01\n                        :ARG0 (p2 / person)\n                        :mod (t2 / together)))))'],"[ii, attr-instance, idea, attr-topic, [t, attr-instance, thing, attr-manner_of, [p, attr-instance, possible_01, attr-arg1, [l, attr-instance, live_01, attr-arg0, [p2, attr-instance, person], attr-mod, [t2, attr-instance, together]]]]]"
1336,1336,1336,1336,1624,12218,egalitarismus,Menschen können in einer Egalitären Gesellschaft zusammen-leben.,4_long,Haltung|Politische_Idee|Seiten_mit_defekten_Dateilinks,2022-09-22T12:10:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Menschen 1:=können 2:=in 3:=einer 4:=Egalitären 5:=Gesellschaft 6:=zusammen-leben.,1,,People can live together in an egalitarian society.,['# ::snt People can live together in an egalitarian society.\n(p / possible-01\n      :ARG1 (l / live-01\n            :ARG0 (p2 / person)\n            :manner (t / together)\n            :location (s / society\n                  :mod (e / egalitarian))))'],"[p, attr-instance, possible_01, attr-arg1, [l, attr-instance, live_01, attr-arg0, [p2, attr-instance, person], attr-manner, [t, attr-instance, together], attr-location, [s, attr-instance, society, attr-mod, [e, attr-instance, egalitarian]]]]"
1337,1337,1337,1337,1625,12219,egalitarismus,Da sollen alle gleich behandelt werden.,5_long,Haltung|Politische_Idee|Seiten_mit_defekten_Dateilinks,2022-09-22T12:10:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Da 1:=sollen 2:=alle 3:=gleich 4:=behandelt 5:=werden.,1,,Everyone should be treated equally.,['# ::snt Everyone should be treated equally.\n(r / recommend-01\n      :ARG1 (t / treat-01\n            :ARG1 (e / everyone)\n            :ARG1-of (e2 / equal-01)))'],"[r, attr-instance, recommend_01, attr-arg1, [t, attr-instance, treat_01, attr-arg1, [e, attr-instance, everyone], attr-arg1_of, [e2, attr-instance, equal_01]]]"
1338,1338,1338,1338,1626,12220,egalitarismus,Und jeder soll die gleichen Chancen haben.,6_long,Haltung|Politische_Idee|Seiten_mit_defekten_Dateilinks,2022-09-22T12:10:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=jeder 2:=soll 3:=die 4:=gleichen 5:=Chancen 6:=haben.,1,,And everyone should have the same opportunities.,['# ::snt And everyone should have the same opportunities.\n(a / and\n      :op2 (r / recommend-01\n            :ARG1 (h / have-03\n                  :ARG0 (e / everyone)\n                  :ARG1 (o / opportunity\n                        :ARG1-of (s / same-01)))))'],"[a, attr-instance, and, attr-op2, [r, attr-instance, recommend_01, attr-arg1, [h, attr-instance, have_03, attr-arg0, [e, attr-instance, everyone], attr-arg1, [o, attr-instance, opportunity, attr-arg1_of, [s, attr-instance, same_01]]]]]"
1339,1339,1339,1339,1627,12221,egalitarismus,"Egalitarismus ist, wenn man an Gleichheit glaubt.",0_short,Haltung|Politische_Idee|Seiten_mit_defekten_Dateilinks,2022-09-22T12:10:23Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Egalitarismus 1:=ist, 2:=wenn 3:=man 4:=an 5:=Gleichheit 6:=glaubt.",2,"[[0, 1], [2, 3, 4, 5, 6]]",Egalitarianism is when you believe in equality.,['# ::snt Egalitarianism is when you believe in equality.\n(e / equal-01\n      :condition (b / believe-01\n            :ARG0 (y / you)\n            :ARG1 (e2 / equal-01))\n      :domain (e3 / equal-01))'],"[e, attr-instance, equal_01, attr-condition, [b, attr-instance, believe_01, attr-arg0, [y, attr-instance, you], attr-arg1, [e2, attr-instance, equal_01]], attr-domain, [e3, attr-instance, equal_01]]"
1340,1340,1340,1340,1628,12222,egalitarismus,"Zum Beispiel, dass jeder Mensch die gleichen Chancen hat.",1_short,Haltung|Politische_Idee|Seiten_mit_defekten_Dateilinks,2022-09-22T12:10:23Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Zum 1:=Beispiel, 2:=dass 3:=jeder 4:=Mensch 5:=die 6:=gleichen 7:=Chancen 8:=hat.",1,,"For example, that everyone has the same opportunities.","['# ::snt For example, that everyone has the same opportunities.\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (e2 / everyone)\n            :ARG1 (o / opportunity\n                  :ARG1-of (s / same-01))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [e2, attr-instance, everyone], attr-arg1, [o, attr-instance, opportunity, attr-arg1_of, [s, attr-instance, same_01]]]]"
1341,1341,1341,1341,1629,12223,egalitarismus,Und alle Menschen gleich behandelt werden.,2_short,Haltung|Politische_Idee|Seiten_mit_defekten_Dateilinks,2022-09-22T12:10:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=alle 2:=Menschen 3:=gleich 4:=behandelt 5:=werden.,1,,And all people are treated equally.,['# ::snt And all people are treated equally.\n(a / and\n      :op2 (t / treat-01\n            :ARG1 (p / person\n                  :mod (a2 / all))\n            :ARG1-of (e / equal-01)))'],"[a, attr-instance, and, attr-op2, [t, attr-instance, treat_01, attr-arg1, [p, attr-instance, person, attr-mod, [a2, attr-instance, all]], attr-arg1_of, [e, attr-instance, equal_01]]]"
1342,1342,1342,1342,1630,12224,egypt-air-flug-181,Der Mann der das Flugzeug entführt hat heißt: Saif a-Din Mustafa.,0_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Mann 2:=der 3:=das 4:=Flugzeug 5:=entführt 6:=hat 7:=heißt: 8:=Saif 9:=a-Din 10:=Mustafa.,2,"[[1, 7, 8, 9, 10], [2, 4, 5, 6]]",The man who hijacked the plane is called Saif a-Din Mustafa.,"['# ::snt The man who hijacked the plane is called Saif a-Din Mustafa.\n(c / call-01\n      :ARG1 (m / man\n            :ARG0-of (h / hijack-01\n                  :ARG1 (p / plane)))\n      :ARG2 (n / name\n            :op1 ""Saif""\n            :op2 ""a-Din""\n            :op3 ""Mustafa""))']","[c, attr-instance, call_01, attr-arg1, [m, attr-instance, man, attr-arg0_of, [h, attr-instance, hijack_01, attr-arg1, [p, attr-instance, plane]]], attr-arg2, [n, attr-instance, name, attr-op1, ""saif"", attr-op2, ""a_din"", attr-op3, ""mustafa""]]"
1343,1343,1343,1343,1631,12225,egypt-air-flug-181,Er kommt aus dem Land Ägypten.,1_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=kommt 2:=aus 3:=dem 4:=Land 5:=Ägypten.,1,,He comes from the land of Egypt.,"['# ::snt He comes from the land of Egypt.\n(c / come-01\n      :ARG1 (h / he)\n      :ARG3 (l / land\n            :poss (c2 / country\n                  :name (n / name\n                        :op1 ""Egypt""))))']","[c, attr-instance, come_01, attr-arg1, [h, attr-instance, he], attr-arg3, [l, attr-instance, land, attr-poss, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""egypt""]]]]"
1344,1344,1344,1344,1632,12226,egypt-air-flug-181,Er hat den Piloten gezwungen das Flugzeug in Zypern zu landen.,2_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=den 3:=Piloten 4:=gezwungen 5:=das 6:=Flugzeug 7:=in 8:=Zypern 9:=zu 10:=landen.,3,"[[0, 1, 3, 4], [6, 9, 10], [7, 8, 9, 10]]",He forced the pilot to land the plane in Cyprus.,"['# ::snt He forced the pilot to land the plane in Cyprus.\n(f / force-01\n      :ARG0 (h / he)\n      :ARG1 (p / person\n            :ARG0-of (p2 / pilot-01))\n      :ARG2 (l / land-01\n            :ARG0 p\n            :ARG1 (p3 / plane)\n            :ARG2 (c / country\n                  :name (n / name\n                        :op1 ""Cyprus""))))']","[f, attr-instance, force_01, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, pilot_01]], attr-arg2, [l, attr-instance, land_01, attr-arg0, p, attr-arg1, [p3, attr-instance, plane], attr-arg2, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""cyprus""]]]]"
1345,1345,1345,1345,1633,12227,egypt-air-flug-181,Und er hat alle Menschen im Flugzeug als Geiseln genommen.,3_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=er 2:=hat 3:=alle 4:=Menschen 5:=im 6:=Flugzeug 7:=als 8:=Geiseln 9:=genommen.,2,"[[1, 2, 3, 7, 8, 9], [5, 6]]",And he took everyone on the plane hostage.,['# ::snt And he took everyone on the plane hostage.\n(a / and\n      :op2 (t / take-01\n            :ARG0 (h / he)\n            :ARG1 (e / everyone)\n            :ARG3 (h2 / hostage)\n            :location (p / plane)))'],"[a, attr-instance, and, attr-op2, [t, attr-instance, take_01, attr-arg0, [h, attr-instance, he], attr-arg1, [e, attr-instance, everyone], attr-arg3, [h2, attr-instance, hostage], attr-location, [p, attr-instance, plane]]]"
1346,1346,1346,1346,1634,12228,egypt-air-flug-181,"Das heißt, \newline er hat sie fest-gehalten und im Flugzeug gefangen gehalten.",4_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=er 4:=hat 5:=sie 6:=fest-gehalten 7:=und 8:=im 9:=Flugzeug 10:=gefangen 11:=gehalten.",2,"[[6], [8, 9, 10, 11]]","That is, \newline he held her captive and kept her in the plane.","['# ::snt That is, \\newline he held her captive and kept her in the plane.\n(m / mean-01\n      :ARG2 (a / and\n            :op1 (h / hold-01\n                  :ARG0 (h2 / he)\n                  :ARG1 (c / captive\n                        :domain (s / she)))\n            :op2 (k / keep-01\n                  :ARG0 h2\n                  :ARG1 s\n                  :location (p / plane))))']","[m, attr-instance, mean_01, attr-arg2, [a, attr-instance, and, attr-op1, [h, attr-instance, hold_01, attr-arg0, [h2, attr-instance, he], attr-arg1, [c, attr-instance, captive, attr-domain, [s, attr-instance, she]]], attr-op2, [k, attr-instance, keep_01, attr-arg0, h2, attr-arg1, s, attr-location, [p, attr-instance, plane]]]]"
1347,1347,1347,1347,1635,12229,egypt-air-flug-181,Er hat 64 Menschen als Geiseln im Flugzeug gefangen gehalten.,5_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=64 3:=Menschen 4:=als 5:=Geiseln 6:=im 7:=Flugzeug 8:=gefangen 9:=gehalten.,3,"[[0, 1, 2, 3, 8, 9], [4, 5], [6, 7]]",He held 64 people hostage on the plane.,['# ::snt He held 64 people hostage on the plane.\n(h / hold-01\n      :ARG0 (h2 / he)\n      :ARG1 (h3 / hostage\n            :domain (p / person\n                  :quant 64))\n      :location (p2 / plane))'],"[h, attr-instance, hold_01, attr-arg0, [h2, attr-instance, he], attr-arg1, [h3, attr-instance, hostage, attr-domain, [p, attr-instance, person, attr-quant, 64]], attr-location, [p2, attr-instance, plane]]"
1348,1348,1348,1348,1636,12230,egypt-air-flug-181,"Der Mann hat den Menschen im Flugzeug gedroht, \newline er sprengt sich selbst mit einem Spreng-stoff-gürtel in die Luft.",6_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Der 1:=Mann 2:=hat 3:=den 4:=Menschen 5:=im 6:=Flugzeug 7:=gedroht, 8:=\newline 9:=er 10:=sprengt 11:=sich 12:=selbst 13:=mit 14:=einem 15:=Spreng-stoff-gürtel 16:=in 17:=die 18:=Luft.",4,"[[1, 2, 4, 7], [4, 5, 6], [9, 10, 11, 12, 16, 18], [13, 15]]",The man threatened the people on the plane that he would blow himself up with an explosive belt.,['# ::snt The man threatened the people on the plane that he would blow himself up with an explosive belt.\n(t / threaten-01\n      :ARG0 (m / man)\n      :ARG1 (b / blow-up-06\n            :ARG0 m\n            :ARG1 m\n            :instrument (b2 / belt\n                  :ARG1-of (e / explode-01\n                        :ARG1-of (p / possible-01))))\n      :ARG2 (p2 / person\n            :location (p3 / plane)))'],"[t, attr-instance, threaten_01, attr-arg0, [m, attr-instance, man], attr-arg1, [b, attr-instance, blow_up_06, attr-arg0, m, attr-arg1, m, attr-instrument, [b2, attr-instance, belt, attr-arg1_of, [e, attr-instance, explode_01, attr-arg1_of, [p, attr-instance, possible_01]]]], attr-arg2, [p2, attr-instance, person, attr-location, [p3, attr-instance, plane]]]"
1349,1349,1349,1349,1637,12231,egypt-air-flug-181,Nach einer Zeit hat er die Menschen im Flugzeug frei gelassen.,7_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Nach 1:=einer 2:=Zeit 3:=hat 4:=er 5:=die 6:=Menschen 7:=im 8:=Flugzeug 9:=frei 10:=gelassen.,3,"[[0, 2], [3, 4, 6, 9, 10], [6, 7, 8]]",After a while he released the people on the plane.,['# ::snt After a while he released the people on the plane.\n(r / release-01\n      :ARG0 (h / he)\n      :ARG1 (p / person)\n      :location (p2 / plane)\n      :time (a / after\n            :op1 (w / while)))'],"[r, attr-instance, release_01, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, person], attr-location, [p2, attr-instance, plane], attr-time, [a, attr-instance, after, attr-op1, [w, attr-instance, while]]]"
1350,1350,1350,1350,1638,12232,egypt-air-flug-181,Die Menschen im Flugzeug sind ausgestiegen.,8_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Menschen 2:=im 3:=Flugzeug 4:=sind 5:=ausgestiegen.,1,,The people on the plane got off.,['# ::snt The people on the plane got off.\n(g / get-05\n      :ARG1 (p / person\n            :location (p2 / plane))\n      :ARG2 (o / off))'],"[g, attr-instance, get_05, attr-arg1, [p, attr-instance, person, attr-location, [p2, attr-instance, plane]], attr-arg2, [o, attr-instance, off]]"
1351,1351,1351,1351,1639,12233,egypt-air-flug-181,Saif a-Din Mustafa hat aufgegeben und sich ergeben.,9_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Saif 1:=a-Din 2:=Mustafa 3:=hat 4:=aufgegeben 5:=und 6:=sich 7:=ergeben.,2,"[[4], [6, 7]]",Saif a-Din Mustafa gave up and surrendered.,"['# ::snt Saif a-Din Mustafa gave up and surrendered.\n(a / and\n      :op1 (g / give-up-07\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Saif""\n                        :op2 ""a-Din""\n                        :op3 ""Mustafa"")))\n      :op2 (s / surrender-01\n            :ARG0 p))']","[a, attr-instance, and, attr-op1, [g, attr-instance, give_up_07, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""saif"", attr-op2, ""a_din"", attr-op3, ""mustafa""]]], attr-op2, [s, attr-instance, surrender_01, attr-arg0, p]]"
1352,1352,1352,1352,1640,12234,egypt-air-flug-181,Die Polizei hat ihn festgenommen.,10_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Polizei 2:=hat 3:=ihn 4:=festgenommen.,1,,The police arrested him.,['# ::snt The police arrested him.\n(a / arrest-01\n      :ARG0 (p / police)\n      :ARG1 (h / he))'],"[a, attr-instance, arrest_01, attr-arg0, [p, attr-instance, police], attr-arg1, [h, attr-instance, he]]"
1353,1353,1353,1353,1641,12235,egypt-air-flug-181,"Was Saif a-Din Mustafa erreichen will, \newline weiß man nicht genau.",11_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Was 1:=Saif 2:=a-Din 3:=Mustafa 4:=erreichen 5:=will, 6:=\newline 7:=weiß 8:=man 9:=nicht 10:=genau.",2,"[[0, 1, 2, 3, 4, 5], [7, 8, 9, 10]]","What Saif a-Din Mustafa wants to achieve, \newline is not known exactly.","['# ::snt What Saif a-Din Mustafa wants to achieve, \\newline is not known exactly.\n(k / know-01\n      :polarity -\n      :ARG1 (t / thing\n            :ARG1-of (a / achieve-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 ""Saif""\n                              :op2 ""A-Din""\n                              :op3 ""Mustafa""))\n                  :ARG1-of (w / want-01\n                        :ARG0 p)))\n      :mod (e / exact))']","[k, attr-instance, know_01, attr-polarity, negative, attr-arg1, [t, attr-instance, thing, attr-arg1_of, [a, attr-instance, achieve_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""saif"", attr-op2, ""a_din"", attr-op3, ""mustafa""]], attr-arg1_of, [w, attr-instance, want_01, attr-arg0, p]]], attr-mod, [e, attr-instance, exact]]"
1354,1354,1354,1354,1642,12236,egypt-air-flug-181,"Manche Nachrichten sagen, \newline er wollte mit seiner Ex­frau sprechen und ist krank.",12_long,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Manche 1:=Nachrichten 2:=sagen, 3:=\newline 4:=er 5:=wollte 6:=mit 7:=seiner 8:=Ex­frau 9:=sprechen 10:=und 11:=ist 12:=krank.",3,"[[0, 1, 2], [4, 5, 6, 7, 8, 9], [4, 11, 12]]","Some messages say, \newline he wanted to talk to his ex-wife and is sick.","['# ::snt Some messages say, \\newline he wanted to talk to his ex-wife and is sick.\n(s / say-01\n      :ARG0 (m / message-01\n            :quant (s2 / some))\n      :ARG1 (a / and\n            :op1 (w / want-01\n                  :ARG0 (h / he)\n                  :ARG1 (t / talk-01\n                        :ARG0 h\n                        :ARG2 (p / person\n                              :ARG0-of (h2 / have-rel-role-91\n                                    :ARG1 h\n                                    :ARG2 (w2 / wife)\n                                    :time (e / ex)))))\n            :op2 (s3 / sick-05\n                  :ARG1 h)))']","[s, attr-instance, say_01, attr-arg0, [m, attr-instance, message_01, attr-quant, [s2, attr-instance, some]], attr-arg1, [a, attr-instance, and, attr-op1, [w, attr-instance, want_01, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, talk_01, attr-arg0, h, attr-arg2, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, h, attr-arg2, [w2, attr-instance, wife], attr-time, [e, attr-instance, ex]]]]], attr-op2, [s3, attr-instance, sick_05, attr-arg1, h]]]"
1355,1355,1355,1355,1643,12237,egypt-air-flug-181,Egypt-Air-Flug 181 ist ein besonderer Flug mit einem Flugzeug gewesen.,0_short,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Egypt-Air-Flug 1:=181 2:=ist 3:=ein 4:=besonderer 5:=Flug 6:=mit 7:=einem 8:=Flugzeug 9:=gewesen.,2,"[[0, 1, 2, 4, 5, 9], [6, 8]]",Egypt Air Flight 181 was a special aircraft flight.,"['# ::snt Egypt Air Flight 181 was a special aircraft flight.\n(f / fly-01\n      :mod (a / aircraft\n            :ARG1-of (s / special-02))\n      :domain (f2 / fly-01\n            :ARG2 (a2 / aircraft\n                  :name (n / name\n                        :op1 ""Egypt""\n                        :op2 ""Air""\n                        :op3 ""Flight""\n                        :op4 181))))']","[f, attr-instance, fly_01, attr-mod, [a, attr-instance, aircraft, attr-arg1_of, [s, attr-instance, special_02]], attr-domain, [f2, attr-instance, fly_01, attr-arg2, [a2, attr-instance, aircraft, attr-name, [n, attr-instance, name, attr-op1, ""egypt"", attr-op2, ""air"", attr-op3, ""flight"", attr-op4, 181]]]]"
1356,1356,1356,1356,1644,12238,egypt-air-flug-181,Der Flug ist am 29. März 2016 in Ägypten gewesen.,1_short,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Flug 2:=ist 3:=am 4:=29. 5:=März 6:=2016 7:=in 8:=Ägypten 9:=gewesen.,2,"[[3, 4, 5, 6], [8]]","The flight was in Egypt on March 29, 2016.","['# ::snt The flight was in Egypt on March 29, 2016.\n(f / fly-01\n      :time (d / date-entity\n            :day 29\n            :month 3\n            :year 2016)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Egypt"")))']","[f, attr-instance, fly_01, attr-time, [d, attr-instance, date_entity, attr-day, 29, attr-month, 3, attr-year, 2016], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""egypt""]]]"
1357,1357,1357,1357,1645,12239,egypt-air-flug-181,Das Flugzeug soll von der Stadt Alexandria in die Stadt Kairo fliegen.,2_short,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Flugzeug 2:=soll 3:=von 4:=der 5:=Stadt 6:=Alexandria 7:=in 8:=die 9:=Stadt 10:=Kairo 11:=fliegen.,2,"[[3, 5, 6], [7, 9, 10]]",The plane is scheduled to fly from the city of Alexandria to the city of Cairo.,"['# ::snt The plane is scheduled to fly from the city of Alexandria to the city of Cairo.\n(s / schedule-01\n      :ARG1 (f / fly-01\n            :ARG2 (p / plane)\n            :source (c / city\n                  :name (n / name\n                        :op1 ""Alexandia""))\n            :destination (c2 / city\n                  :name (n2 / name\n                        :op1 ""Cairo""))))']","[s, attr-instance, schedule_01, attr-arg1, [f, attr-instance, fly_01, attr-arg2, [p, attr-instance, plane], attr-source, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""alexandia""]], attr-destination, [c2, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""cairo""]]]]"
1358,1358,1358,1358,1646,12240,egypt-air-flug-181,Während des Fluges ist das Flugzeug entführt worden.,3_short,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Während 1:=des 2:=Fluges 3:=ist 4:=das 5:=Flugzeug 6:=entführt 7:=worden.,2,"[[0, 2], [3, 5, 6, 7]]",The plane was hijacked during the flight.,['# ::snt The plane was hijacked during the flight.\n(h / hijack-01\n      :ARG1 (p / plane)\n      :time (f / fly-01))'],"[h, attr-instance, hijack_01, attr-arg1, [p, attr-instance, plane], attr-time, [f, attr-instance, fly_01]]"
1359,1359,1359,1359,1647,12241,egypt-air-flug-181,Ein Mann hat das Flugzeug entführt.,4_short,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Mann 2:=hat 3:=das 4:=Flugzeug 5:=entführt.,1,,A man hijacked the plane.,['# ::snt A man hijacked the plane.\n(h / hijack-01\n      :ARG0 (m / man)\n      :ARG1 (p / plane))'],"[h, attr-instance, hijack_01, attr-arg0, [m, attr-instance, man], attr-arg1, [p, attr-instance, plane]]"
1360,1360,1360,1360,1648,12242,egypt-air-flug-181,Er hat die Menschen im Flugzeug fest-gehalten.,5_short,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=die 3:=Menschen 4:=im 5:=Flugzeug 6:=fest-gehalten.,2,"[[0, 1, 3, 6], [4, 5]]",He held the people captive on the plane.,['# ::snt He held the people captive on the plane.\n(h / hold-01\n      :ARG0 (h2 / he)\n      :ARG1 (c / captive\n            :domain (p / person))\n      :location (p2 / plane))'],"[h, attr-instance, hold_01, attr-arg0, [h2, attr-instance, he], attr-arg1, [c, attr-instance, captive, attr-domain, [p, attr-instance, person]], attr-location, [p2, attr-instance, plane]]"
1361,1361,1361,1361,1649,12243,egypt-air-flug-181,Und er hat den Piloten gezwungen das Flugzeug zu landen.,6_short,Verkehr|Aus_den_Nachrichten|Seiten_mit_defekten_Dateilinks,2016-03-30T16:42:16Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=er 2:=hat 3:=den 4:=Piloten 5:=gezwungen 6:=das 7:=Flugzeug 8:=zu 9:=landen.,2,"[[1, 2, 4, 5], [7, 8, 9]]",And he forced the pilot to land the plane.,['# ::snt And he forced the pilot to land the plane.\n(a / and\n      :op2 (f / force-01\n            :ARG0 (h / he)\n            :ARG1 (p / person\n                  :ARG0-of (p2 / pilot-01))\n            :ARG2 (l / land-01\n                  :ARG0 p\n                  :ARG1 (p3 / plane))))'],"[a, attr-instance, and, attr-op2, [f, attr-instance, force_01, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, pilot_01]], attr-arg2, [l, attr-instance, land_01, attr-arg0, p, attr-arg1, [p3, attr-instance, plane]]]]"
1362,1362,1362,1362,1650,12244,ehegattensplitting,Eine Steuer ist Geld.,0_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Eine 1:=Steuer 2:=ist 3:=Geld.,1,,A tax is money.,['# ::snt A tax is money.\n(m / money\n      :domain (t / tax-01))'],"[m, attr-instance, money, attr-domain, [t, attr-instance, tax_01]]"
1363,1363,1363,1363,1651,12245,ehegattensplitting,Bürger in einem Land zahlen Geld an ihr Land.,1_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Bürger 1:=in 2:=einem 3:=Land 4:=zahlen 5:=Geld 6:=an 7:=ihr 8:=Land.,3,"[[0, 1, 3, 4, 5], [0, 1, 3], [5, 6, 7, 8]]",Citizens in a country pay money to their country.,['# ::snt Citizens in a country pay money to their country.\n(p / pay-01\n      :ARG0 (c / citizen\n            :location (c2 / country))\n      :ARG1 (m / money)\n      :ARG3 c2)'],"[p, attr-instance, pay_01, attr-arg0, [c, attr-instance, citizen, attr-location, [c2, attr-instance, country]], attr-arg1, [m, attr-instance, money], attr-arg3, c2]"
1364,1364,1364,1364,1652,12246,ehegattensplitting,Mit dem Geld werden verschiedene Sachen bezahlt.,2_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Mit 1:=dem 2:=Geld 3:=werden 4:=verschiedene 5:=Sachen 6:=bezahlt.,1,,The money is used to pay for various things.,['# ::snt The money is used to pay for various things.\n(u / use-01\n      :ARG1 (m / money)\n      :ARG2 (p / pay-01\n            :ARG3 (t / thing\n                  :mod (v / various))))'],"[u, attr-instance, use_01, attr-arg1, [m, attr-instance, money], attr-arg2, [p, attr-instance, pay_01, attr-arg3, [t, attr-instance, thing, attr-mod, [v, attr-instance, various]]]]"
1365,1365,1365,1365,1659,12253,ehegattensplitting,In Deutschland gibt es verschiedene Regeln für die Steuer.,9_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=In 1:=Deutschland 2:=gibt 3:=es 4:=verschiedene 5:=Regeln 6:=für 7:=die 8:=Steuer.,1,,In Germany there are different rules for taxes.,"['# ::snt In Germany there are different rules for taxes.\n(d / differ-02\n      :ARG1 (r / rule-01\n            :ARG1 (t / tax-01))\n      :location (c / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[d, attr-instance, differ_02, attr-arg1, [r, attr-instance, rule_01, attr-arg1, [t, attr-instance, tax_01]], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
1366,1366,1366,1366,1660,12254,ehegattensplitting,Das heißt die Bürger zahlen unterschiedlich viele Steuern.,10_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Das 1:=heißt 2:=die 3:=Bürger 4:=zahlen 5:=unterschiedlich 6:=viele 7:=Steuern.,1,,This means that citizens pay different amounts of taxes.,['# ::snt This means that citizens pay different amounts of taxes.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (p / pay-01\n            :ARG0 (c / citizen)\n            :ARG1 (a / amount\n                  :quant-of (t2 / tax-01)\n                  :ARG1-of (d / differ-02))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [p, attr-instance, pay_01, attr-arg0, [c, attr-instance, citizen], attr-arg1, [a, attr-instance, amount, attr-quant_of, [t2, attr-instance, tax_01], attr-arg1_of, [d, attr-instance, differ_02]]]]"
1367,1367,1367,1367,1661,12255,ehegattensplitting,"Wer mehr Geld verdient, soll mehr Steuern zahlen.",11_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,"0:=Wer 1:=mehr 2:=Geld 3:=verdient, 4:=soll 5:=mehr 6:=Steuern 7:=zahlen.",2,"[[0, 1, 2, 3], [4, 5, 6, 7]]",Those who earn more money should pay more taxes.,['# ::snt Those who earn more money should pay more taxes.\n(r / recommend-01\n      :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                  :ARG0-of (e / earn-01\n                        :ARG1 (m / money\n                              :mod (m2 / more))))\n            :ARG1 (t / tax-01\n                  :mod (m3 / more))))'],"[r, attr-instance, recommend_01, attr-arg1, [p, attr-instance, pay_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [e, attr-instance, earn_01, attr-arg1, [m, attr-instance, money, attr-mod, [m2, attr-instance, more]]]], attr-arg1, [t, attr-instance, tax_01, attr-mod, [m3, attr-instance, more]]]]"
1368,1368,1368,1368,1662,12256,ehegattensplitting,"Wer wenig Geld verdient, soll weniger Steuern zahlen.",12_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,"0:=Wer 1:=wenig 2:=Geld 3:=verdient, 4:=soll 5:=weniger 6:=Steuern 7:=zahlen.",2,"[[0, 1, 2, 3], [4, 5, 6, 7]]",Those who earn little money should pay less taxes.,['# ::snt Those who earn little money should pay less taxes.\n(r / recommend-01\n      :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                  :ARG0-of (e / earn-01\n                        :ARG1 (m / money\n                              :quant (l / little))))\n            :ARG1 (t / tax-01\n                  :ARG1-of (h / have-quant-91\n                        :ARG3 (l2 / less)))))'],"[r, attr-instance, recommend_01, attr-arg1, [p, attr-instance, pay_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [e, attr-instance, earn_01, attr-arg1, [m, attr-instance, money, attr-quant, [l, attr-instance, little]]]], attr-arg1, [t, attr-instance, tax_01, attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg3, [l2, attr-instance, less]]]]]"
1369,1369,1369,1369,1663,12257,ehegattensplitting,Das Ehe-gatten-splitting ist für Menschen die zusammen leben.,13_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Das 1:=Ehe-gatten-splitting 2:=ist 3:=für 4:=Menschen 5:=die 6:=zusammen 7:=leben.,2,"[[1, 2, 3], [5, 6, 7]]",The spouse splitting is for people who live together.,['# ::snt The spouse splitting is for people who live together.\n(s / split-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (s2 / spouse)))\n      :beneficiary (p2 / person\n            :ARG0-of (l / live-01\n                  :manner (t / together))))'],"[s, attr-instance, split_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg2, [s2, attr-instance, spouse]]], attr-beneficiary, [p2, attr-instance, person, attr-arg0_of, [l, attr-instance, live_01, attr-manner, [t, attr-instance, together]]]]"
1370,1370,1370,1370,1664,12258,ehegattensplitting,Zum Beispiel eine Frau und ein Mann die geheiratet haben.,14_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Zum 1:=Beispiel 2:=eine 3:=Frau 4:=und 5:=ein 6:=Mann 7:=die 8:=geheiratet 9:=haben.,2,"[[4, 6], [7, 8, 9]]","For example, a woman and a man who got married.","['# ::snt For example, a woman and a man who got married.\n(e / exemplify-01\n      :ARG0 (m / marry-01\n            :ARG1 (w / woman)\n            :ARG2 (m2 / man)))']","[e, attr-instance, exemplify_01, attr-arg0, [m, attr-instance, marry_01, attr-arg1, [w, attr-instance, woman], attr-arg2, [m2, attr-instance, man]]]"
1371,1371,1371,1371,1665,12259,ehegattensplitting,Oder wer eine eingetragene Lebens-partnerschaft hat.,15_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Oder 1:=wer 2:=eine 3:=eingetragene 4:=Lebens-partnerschaft 5:=hat.,1,,Or who has a registered civil partnership.,['# ::snt Or who has a registered civil partnership.\n(o / or\n      :op1 (a / amr-unknown\n            :ARG0-of (p / partner-01\n                  :mod (c / civil)\n                  :ARG1-of (r / register-02))))'],"[o, attr-instance, or, attr-op1, [a, attr-instance, amr_unknown, attr-arg0_of, [p, attr-instance, partner_01, attr-mod, [c, attr-instance, civil], attr-arg1_of, [r, attr-instance, register_02]]]]"
1372,1372,1372,1372,1666,12260,ehegattensplitting,"Das heißt, die Regel gilt auch für schwule und lesbische Paare.",16_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,"0:=Das 1:=heißt, 2:=die 3:=Regel 4:=gilt 5:=auch 6:=für 7:=schwule 8:=und 9:=lesbische 10:=Paare.",2,"[[7], [9]]",This means that the rule also applies to gay and lesbian couples.,['# ::snt This means that the rule also applies to gay and lesbian couples.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (a / apply-02\n            :ARG1 (r / rule)\n            :ARG2 (a2 / and\n                  :op1 (c / couple\n                        :ARG1-of (g / gay-01))\n                  :op2 (c2 / couple\n                        :mod (l / lesbian)))\n            :mod (a3 / also)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [a, attr-instance, apply_02, attr-arg1, [r, attr-instance, rule], attr-arg2, [a2, attr-instance, and, attr-op1, [c, attr-instance, couple, attr-arg1_of, [g, attr-instance, gay_01]], attr-op2, [c2, attr-instance, couple, attr-mod, [l, attr-instance, lesbian]]], attr-mod, [a3, attr-instance, also]]]"
1373,1373,1373,1373,1668,12262,ehegattensplitting,Ein Mann und eine Frau haben geheiratet.,18_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Ein 1:=Mann 2:=und 3:=eine 4:=Frau 5:=haben 6:=geheiratet.,1,,A man and a woman got married.,['# ::snt A man and a woman got married.\n(m / marry-01\n      :ARG1 (m2 / man)\n      :ARG2 (w / woman))'],"[m, attr-instance, marry_01, attr-arg1, [m2, attr-instance, man], attr-arg2, [w, attr-instance, woman]]"
1374,1374,1374,1374,1669,12263,ehegattensplitting,Der Mann verdient wenig Geld.,19_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Der 1:=Mann 2:=verdient 3:=wenig 4:=Geld.,1,,The man earns little money.,['# ::snt The man earns little money.\n(e / earn-01\n      :ARG0 (m / man)\n      :ARG1 (m2 / money\n            :quant (l / little)))'],"[e, attr-instance, earn_01, attr-arg0, [m, attr-instance, man], attr-arg1, [m2, attr-instance, money, attr-quant, [l, attr-instance, little]]]"
1375,1375,1375,1375,1670,12264,ehegattensplitting,Die Frau verdient viel Geld.,20_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Frau 2:=verdient 3:=viel 4:=Geld.,1,,The woman earns a lot of money.,['# ::snt The woman earns a lot of money.\n(e / earn-01\n      :ARG0 (w / woman)\n      :ARG1 (m / money\n            :quant (l / lot)))'],"[e, attr-instance, earn_01, attr-arg0, [w, attr-instance, woman], attr-arg1, [m, attr-instance, money, attr-quant, [l, attr-instance, lot]]]"
1376,1376,1376,1376,1671,12265,ehegattensplitting,Beide müssen Steuern zahlen.,21_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Beide 1:=müssen 2:=Steuern 3:=zahlen.,1,,Both have to pay taxes.,['# ::snt Both have to pay taxes.\n(o / obligate-01\n      :ARG2 (p / pay-01\n            :ARG0 (b / both)\n            :ARG1 (m / monetary-quantity\n                  :ARG1-of (t / tax-01))))'],"[o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, pay_01, attr-arg0, [b, attr-instance, both], attr-arg1, [m, attr-instance, monetary_quantity, attr-arg1_of, [t, attr-instance, tax_01]]]]"
1377,1377,1377,1377,1672,12266,ehegattensplitting,Beim Ehe-gatten-splitting wird das verdiente Geld vom Mann und der Frau zusammen gezählt.,22_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Beim 1:=Ehe-gatten-splitting 2:=wird 3:=das 4:=verdiente 5:=Geld 6:=vom 7:=Mann 8:=und 9:=der 10:=Frau 11:=zusammen 12:=gezählt.,3,"[[0, 1], [2, 5, 6, 7, 8, 10, 11, 12], [4]]","With spouse splitting, the money earned by the husband and wife is added together.","['# ::snt With spouse splitting, the money earned by the husband and wife is added together.\n(a / add-02\n      :ARG1 (m / money\n            :ARG1-of (e / earn-01\n                  :ARG0 (a2 / and\n                        :op1 (p / person\n                              :ARG0-of (h / have-rel-role-91\n                                    :ARG2 (h2 / husband)))\n                        :op2 (p2 / person\n                              :ARG0-of (h3 / have-rel-role-91\n                                    :ARG2 (w / wife))))))\n      :manner (t / together)\n      :condition (s / split-01\n            :ARG1 (p3 / person\n                  :ARG0-of (h4 / have-rel-role-91\n                        :ARG2 (s2 / spouse)))))']","[a, attr-instance, add_02, attr-arg1, [m, attr-instance, money, attr-arg1_of, [e, attr-instance, earn_01, attr-arg0, [a2, attr-instance, and, attr-op1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg2, [h2, attr-instance, husband]]], attr-op2, [p2, attr-instance, person, attr-arg0_of, [h3, attr-instance, have_rel_role_91, attr-arg2, [w, attr-instance, wife]]]]]], attr-manner, [t, attr-instance, together], attr-condition, [s, attr-instance, split_01, attr-arg1, [p3, attr-instance, person, attr-arg0_of, [h4, attr-instance, have_rel_role_91, attr-arg2, [s2, attr-instance, spouse]]]]]"
1378,1378,1378,1378,1673,12267,ehegattensplitting,Das Ergebnis wird halbiert.,23_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Das 1:=Ergebnis 2:=wird 3:=halbiert.,1,,The result is halved.,['# ::snt The result is halved.\n(h / halve-01\n      :ARG1 (t / thing\n            :ARG2-of (r / result-01)))'],"[h, attr-instance, halve_01, attr-arg1, [t, attr-instance, thing, attr-arg2_of, [r, attr-instance, result_01]]]"
1379,1379,1379,1379,1674,12268,ehegattensplitting,Jetzt muß jeder für diese Hälfte Steuern zahlen.,24_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Jetzt 1:=muß 2:=jeder 3:=für 4:=diese 5:=Hälfte 6:=Steuern 7:=zahlen.,1,,Now everyone has to pay taxes on this half.,['# ::snt Now everyone has to pay taxes on this half.\n(o / obligate-01\n      :ARG1 (e / everyone)\n      :ARG2 (p / pay-01\n            :ARG0 e\n            :ARG1 (t / tax-01\n                  :ARG2 (h / half\n                        :mod (t2 / this))))\n      :time (n / now))'],"[o, attr-instance, obligate_01, attr-arg1, [e, attr-instance, everyone], attr-arg2, [p, attr-instance, pay_01, attr-arg0, e, attr-arg1, [t, attr-instance, tax_01, attr-arg2, [h, attr-instance, half, attr-mod, [t2, attr-instance, this]]]], attr-time, [n, attr-instance, now]]"
1380,1380,1380,1380,1675,12270,ehegattensplitting,Diese Regel ist ungerecht.,26_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Diese 1:=Regel 2:=ist 3:=ungerecht.,1,,This rule is unfair.,['# ::snt This rule is unfair.\n(f / fair-01\n      :polarity -\n      :ARG1 (r / rule\n            :mod (t / this)))'],"[f, attr-instance, fair_01, attr-polarity, negative, attr-arg1, [r, attr-instance, rule, attr-mod, [t, attr-instance, this]]]"
1381,1381,1381,1381,1676,12271,ehegattensplitting,Verheiratete Leute können mit der Regel Steuern sparen.,27_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Verheiratete 1:=Leute 2:=können 3:=mit 4:=der 5:=Regel 6:=Steuern 7:=sparen.,3,"[[0, 1], [1, 2, 6, 7], [3, 5, 7]]",Married people can save taxes with this rule.,['# ::snt Married people can save taxes with this rule.\n(p / possible-01\n      :ARG1 (s / save-01\n            :ARG0 (p2 / person\n                  :ARG1-of (m / marry-01))\n            :ARG1 (t / tax-01)\n            :ARG3 (r / rule\n                  :mod (t2 / this))))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, save_01, attr-arg0, [p2, attr-instance, person, attr-arg1_of, [m, attr-instance, marry_01]], attr-arg1, [t, attr-instance, tax_01], attr-arg3, [r, attr-instance, rule, attr-mod, [t2, attr-instance, this]]]]"
1382,1382,1382,1382,1677,12272,ehegattensplitting,Andere Paare müssen ganz normal Steuern zahlen.,28_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Andere 1:=Paare 2:=müssen 3:=ganz 4:=normal 5:=Steuern 6:=zahlen.,1,,Other couples have to pay taxes as normal.,['# ::snt Other couples have to pay taxes as normal.\n(o / obligate-01\n      :ARG1 (c / couple\n            :mod (o2 / other))\n      :ARG2 (p / pay-01\n            :ARG0 c\n            :ARG1 (t / tax-01)\n            :ARG1-of (n / normal-02)))'],"[o, attr-instance, obligate_01, attr-arg1, [c, attr-instance, couple, attr-mod, [o2, attr-instance, other]], attr-arg2, [p, attr-instance, pay_01, attr-arg0, c, attr-arg1, [t, attr-instance, tax_01], attr-arg1_of, [n, attr-instance, normal_02]]]"
1383,1383,1383,1383,1678,12273,ehegattensplitting,Das Wort splitting ist ein englisches Wort.,29_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Das 1:=Wort 2:=splitting 3:=ist 4:=ein 5:=englisches 6:=Wort.,1,,The word splitting is an English word.,"['# ::snt The word splitting is an English word.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English""))\n      :domain (s / split-01\n            :ARG1 (w2 / word)))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-domain, [s, attr-instance, split_01, attr-arg1, [w2, attr-instance, word]]]"
1384,1384,1384,1384,1679,12274,ehegattensplitting,"Das Wort to split, heißt auf deutsch: teilen.",30_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,"0:=Das 1:=Wort 2:=to 3:=split, 4:=heißt 5:=auf 6:=deutsch: 7:=teilen.",1,,The word to split means in German: to divide.,"['# ::snt The word to split means in German: to divide.\n(m / mean-01\n      :ARG1 (w / word-01\n            :ARG1 (s / split-01))\n      :ARG2 (d / divide-02)\n      :medium (l / language\n            :name (n / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [w, attr-instance, word_01, attr-arg1, [s, attr-instance, split_01]], attr-arg2, [d, attr-instance, divide_02], attr-medium, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""german""]]]"
1385,1385,1385,1385,1680,12275,ehegattensplitting,In Deutschland gibt es verschiedene Regeln für die Steuer.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=In 1:=Deutschland 2:=gibt 3:=es 4:=verschiedene 5:=Regeln 6:=für 7:=die 8:=Steuer.,1,,In Germany there are different rules for taxes.,"['# ::snt In Germany there are different rules for taxes.\n(d / differ-02\n      :ARG1 (r / rule-01\n            :ARG1 (t / tax-01))\n      :location (c / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[d, attr-instance, differ_02, attr-arg1, [r, attr-instance, rule_01, attr-arg1, [t, attr-instance, tax_01]], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
1386,1386,1386,1386,1681,12276,ehegattensplitting,Eine Regel heißt: Ehe-gatten-splitting,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2014-07-17T09:07:41Z,cfbe77d115cd524def4ccbe596a54842,0:=Eine 1:=Regel 2:=heißt: 3:=Ehe-gatten-splitting,1,,One rule is called: spouse-splitting,['# ::snt One rule is called: spouse-splitting\n(c / call-01\n      :ARG1 (r / rule-01\n            :quant 1\n            :ARG1 (s / split-01\n                  :ARG0 (s2 / spouse))))'],"[c, attr-instance, call_01, attr-arg1, [r, attr-instance, rule_01, attr-quant, 1, attr-arg1, [s, attr-instance, split_01, attr-arg0, [s2, attr-instance, spouse]]]]"
1387,1387,1387,1387,1682,12277,ehe,Bei der Ehe gibt es Regeln.,0_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Bei 1:=der 2:=Ehe 3:=gibt 4:=es 5:=Regeln.,1,,There are rules in marriage.,['# ::snt There are rules in marriage.\n(r / rule-01\n      :ARG1 (m / marry-01))'],"[r, attr-instance, rule_01, attr-arg1, [m, attr-instance, marry_01]]"
1388,1388,1388,1388,1683,12278,ehe,Es gibt Regeln vom Staat.,1_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=Regeln 3:=vom 4:=Staat.,1,,There are rules from the state.,['# ::snt There are rules from the state.\n(r / rule\n      :source (s / state))'],"[r, attr-instance, rule, attr-source, [s, attr-instance, state]]"
1389,1389,1389,1389,1684,12279,ehe,Man darf nur in einer (1) Ehe leben.,2_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=darf 2:=nur 3:=in 4:=einer 5:=(1) 6:=Ehe 7:=leben.,1,,One may only live in one (1) marriage.,['# ::snt One may only live in one (1) marriage.\n(p / permit-01\n      :ARG1 (l / live-01\n            :ARG0 (o / one)\n            :ARG1 (m / marry-01\n                  :quant 1\n                  :mod (o2 / only))))'],"[p, attr-instance, permit_01, attr-arg1, [l, attr-instance, live_01, attr-arg0, [o, attr-instance, one], attr-arg1, [m, attr-instance, marry_01, attr-quant, 1, attr-mod, [o2, attr-instance, only]]]]"
1390,1390,1390,1390,1685,12280,ehe,Mehrere Ehen auf einmal sind in Deutschland verboten.,3_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Mehrere 1:=Ehen 2:=auf 3:=einmal 4:=sind 5:=in 6:=Deutschland 7:=verboten.,1,,Multiple marriages at once are forbidden in Germany.,"['# ::snt Multiple marriages at once are forbidden in Germany.\n(f / forbid-01\n      :ARG1 (m / marry-01\n            :quant (m2 / multiple)\n            :mod (a / at-once-02))\n      :location (c / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[f, attr-instance, forbid_01, attr-arg1, [m, attr-instance, marry_01, attr-quant, [m2, attr-instance, multiple], attr-mod, [a, attr-instance, at_once_02]], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
1391,1391,1391,1391,1686,12281,ehe,Manche machen auch eigene Regeln.,4_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Manche 1:=machen 2:=auch 3:=eigene 4:=Regeln.,1,,Some also make their own rules.,['# ::snt Some also make their own rules.\n(m / make-01\n      :ARG0 (s / some)\n      :ARG1 (r / rule\n            :poss s)\n      :mod (a / also))'],"[m, attr-instance, make_01, attr-arg0, [s, attr-instance, some], attr-arg1, [r, attr-instance, rule, attr-poss, s], attr-mod, [a, attr-instance, also]]"
1392,1392,1392,1392,1687,12282,ehe,Sie machen einen Ehe-vertrag.,5_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=machen 2:=einen 3:=Ehe-vertrag.,1,,They make a marriage contract.,['# ::snt They make a marriage contract.\n(m / make-01\n      :ARG0 (t / they)\n      :ARG1 (c / contract-02\n            :ARG0 t\n            :ARG1 (m2 / marry-01)))'],"[m, attr-instance, make_01, attr-arg0, [t, attr-instance, they], attr-arg1, [c, attr-instance, contract_02, attr-arg0, t, attr-arg1, [m2, attr-instance, marry_01]]]"
1393,1393,1393,1393,1688,12283,ehe,Bei Polygamie darf der Mann mehrere Frauen haben.,6_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Bei 1:=Polygamie 2:=darf 3:=der 4:=Mann 5:=mehrere 6:=Frauen 7:=haben.,2,"[[0, 1], [2, 4, 5, 6, 7]]","In polygamy, a man may have several wives.","['# ::snt In polygamy, a man may have several wives.\n(p / possible-01\n      :ARG1 (h / have-03\n            :ARG0 (m / man)\n            :ARG1 (p2 / person\n                  :ARG0-of (h2 / have-rel-role-91\n                        :ARG1 m\n                        :ARG2 (w / wife))\n                  :quant (s / several))\n            :condition (p3 / polygamy)))']","[p, attr-instance, possible_01, attr-arg1, [h, attr-instance, have_03, attr-arg0, [m, attr-instance, man], attr-arg1, [p2, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, m, attr-arg2, [w, attr-instance, wife]], attr-quant, [s, attr-instance, several]], attr-condition, [p3, attr-instance, polygamy]]]"
1394,1394,1394,1394,1689,12284,ehe,Und bei der Polyandrie darf die Frau mehrere Männer haben.,7_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=bei 2:=der 3:=Polyandrie 4:=darf 5:=die 6:=Frau 7:=mehrere 8:=Männer 9:=haben.,2,"[[1, 3], [4, 6, 7, 8, 9]]","And in polyandry, a woman is allowed to have several husbands.","['# ::snt And in polyandry, a woman is allowed to have several husbands.\n(a / and\n      :op2 (a2 / allow-01\n            :ARG1 (h / have-03\n                  :ARG0 (w / woman)\n                  :ARG1 (p / person\n                        :ARG0-of (h2 / have-rel-role-91\n                              :ARG1 w\n                              :ARG2 (h3 / husband))\n                        :quant (s / several)))\n            :mod (p2 / polyandry)))']","[a, attr-instance, and, attr-op2, [a2, attr-instance, allow_01, attr-arg1, [h, attr-instance, have_03, attr-arg0, [w, attr-instance, woman], attr-arg1, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, w, attr-arg2, [h3, attr-instance, husband]], attr-quant, [s, attr-instance, several]]], attr-mod, [p2, attr-instance, polyandry]]]"
1395,1395,1395,1395,1690,12285,ehe,Alle Regeln stehen im Ehe-recht.,8_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Alle 1:=Regeln 2:=stehen 3:=im 4:=Ehe-recht.,1,,All rules are in marriage law.,['# ::snt All rules are in marriage law.\n(r / rule\n      :mod (a / all)\n      :location (l / law\n            :mod (m / marry-01)))'],"[r, attr-instance, rule, attr-mod, [a, attr-instance, all], attr-location, [l, attr-instance, law, attr-mod, [m, attr-instance, marry_01]]]"
1396,1396,1396,1396,1691,12286,ehe,Und es gibt Regeln von Religionen.,9_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=es 2:=gibt 3:=Regeln 4:=von 5:=Religionen.,1,,And there are rules of religions.,['# ::snt And there are rules of religions.\n(a / and\n      :op2 (r / rule-01\n            :ARG1 (r2 / religion)))'],"[a, attr-instance, and, attr-op2, [r, attr-instance, rule_01, attr-arg1, [r2, attr-instance, religion]]]"
1397,1397,1397,1397,1692,12287,ehe,Zum Beispiel das die Ehe das ganze Leben lang gültig ist.,10_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=das 3:=die 4:=Ehe 5:=das 6:=ganze 7:=Leben 8:=lang 9:=gültig 10:=ist.,1,,"For example, that marriage is valid for life.","['# ::snt For example, that marriage is valid for life.\n(e / exemplify-01\n      :ARG0 (v / valid-02\n            :ARG1 (m / marry-01)\n            :duration (l / life)))']","[e, attr-instance, exemplify_01, attr-arg0, [v, attr-instance, valid_02, attr-arg1, [m, attr-instance, marry_01], attr-duration, [l, attr-instance, life]]]"
1398,1398,1398,1398,1693,12288,ehe,Diese Regel stehen zum Beispiel in der Bibel.,11_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Diese 1:=Regel 2:=stehen 3:=zum 4:=Beispiel 5:=in 6:=der 7:=Bibel.,1,,"This rule, for example, is found in the Bible.","['# ::snt This rule, for example, is found in the Bible.\n(f / find-01\n      :ARG1 (r / rule\n            :mod (t / this)\n            :ARG0-of (e / exemplify-01))\n      :location (b / book\n            :name (n / name\n                  :op1 ""Bible"")))']","[f, attr-instance, find_01, attr-arg1, [r, attr-instance, rule, attr-mod, [t, attr-instance, this], attr-arg0_of, [e, attr-instance, exemplify_01]], attr-location, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""bible""]]]"
1399,1399,1399,1399,1695,12290,ehe,Es gibt auch Regeln die von der Gesellschaft kommen.,13_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=auch 3:=Regeln 4:=die 5:=von 6:=der 7:=Gesellschaft 8:=kommen.,2,"[[0, 1, 2, 3], [4, 5, 7, 8]]",There are also rules that come from society.,['# ::snt There are also rules that come from society.\n(r / rule\n      :mod (a / also)\n      :ARG1-of (c / come-03\n            :ARG2 (s / society)))'],"[r, attr-instance, rule, attr-mod, [a, attr-instance, also], attr-arg1_of, [c, attr-instance, come_03, attr-arg2, [s, attr-instance, society]]]"
1400,1400,1400,1400,1696,12291,ehe,Zum Beispiel das man einen besseren Status hat.,14_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=das 3:=man 4:=einen 5:=besseren 6:=Status 7:=hat.,1,,"For example, that you have a better status.","['# ::snt For example, that you have a better status.\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (s / status\n                  :ARG1-of (h2 / have-degree-91\n                        :ARG2 (g / good-02\n                              :ARG1 s)\n                        :ARG3 (m / more)))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, status, attr-arg1_of, [h2, attr-instance, have_degree_91, attr-arg2, [g, attr-instance, good_02, attr-arg1, s], attr-arg3, [m, attr-instance, more]]]]]"
1401,1401,1401,1401,1697,12292,ehe,Ehe zwischen Mann und Frau ist Monogamie.,15_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ehe 1:=zwischen 2:=Mann 3:=und 4:=Frau 5:=ist 6:=Monogamie.,1,,Marriage between a man and a woman is monogamy.,['# ::snt Marriage between a man and a woman is monogamy.\n(m / monogamy\n      :domain (m2 / marry-01\n            :ARG1 (m3 / man)\n            :ARG2 (w / woman)))'],"[m, attr-instance, monogamy, attr-domain, [m2, attr-instance, marry_01, attr-arg1, [m3, attr-instance, man], attr-arg2, [w, attr-instance, woman]]]"
1402,1402,1402,1402,1698,12293,ehe,Der Mann heißt Ehe-mann.,16_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Mann 2:=heißt 3:=Ehe-mann.,1,,The man is called husband.,['# ::snt The man is called husband.\n(c / call-01\n      :ARG1 (m / man)\n      :ARG2 (h / husband))'],"[c, attr-instance, call_01, attr-arg1, [m, attr-instance, man], attr-arg2, [h, attr-instance, husband]]"
1403,1403,1403,1403,1699,12297,ehe,Und die Frau heißt Ehe-frau.,20_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=die 2:=Frau 3:=heißt 4:=Ehe-frau.,1,,And the woman is called wife.,['# ::snt And the woman is called wife.\n(a / and\n      :op2 (c / call-01\n            :ARG1 (w / woman)\n            :ARG2 (w2 / wife)))'],"[a, attr-instance, and, attr-op2, [c, attr-instance, call_01, attr-arg1, [w, attr-instance, woman], attr-arg2, [w2, attr-instance, wife]]]"
1404,1404,1404,1404,1700,12300,ehe,Beide zusammen heißen Ehe-leute.,23_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beide 1:=zusammen 2:=heißen 3:=Ehe-leute.,1,,Both together are called spouses.,['# ::snt Both together are called spouses.\n(c / call-01\n      :ARG1 (b / both\n            :mod (t / together))\n      :ARG2 (s / spouse))'],"[c, attr-instance, call_01, attr-arg1, [b, attr-instance, both, attr-mod, [t, attr-instance, together]], attr-arg2, [s, attr-instance, spouse]]"
1405,1405,1405,1405,1701,12301,ehe,Zwei (2) Männer können auch eine Ehe machen.,24_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zwei 1:=(2) 2:=Männer 3:=können 4:=auch 5:=eine 6:=Ehe 7:=machen.,1,,Two (2) men can also make a marriage.,['# ::snt Two (2) men can also make a marriage.\n(p / possible-01\n      :ARG1 (m / make-01\n            :ARG0 (m2 / man\n                  :quant 2)\n            :ARG1 (m3 / marry-01)\n            :mod (a / also)))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, make_01, attr-arg0, [m2, attr-instance, man, attr-quant, 2], attr-arg1, [m3, attr-instance, marry_01], attr-mod, [a, attr-instance, also]]]"
1406,1406,1406,1406,1702,12302,ehe,Und (2) zwei Frauen können das auch.,25_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=(2) 2:=zwei 3:=Frauen 4:=können 5:=das 6:=auch.,1,,And (2) two women can do it too.,['# ::snt And (2) two women can do it too.\n(a / and\n      :op2 (p / possible-01\n            :li 2\n            :ARG1 (d / do-02\n                  :ARG0 (w / woman\n                        :quant 2)\n                  :ARG1 (ii / it)\n                  :mod (t / too))))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, possible_01, attr-li, 2, attr-arg1, [d, attr-instance, do_02, attr-arg0, [w, attr-instance, woman, attr-quant, 2], attr-arg1, [ii, attr-instance, it], attr-mod, [t, attr-instance, too]]]]"
1407,1407,1407,1407,1703,12303,ehe,In manchen Länder ist das erlaubt.,26_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=In 1:=manchen 2:=Länder 3:=ist 4:=das 5:=erlaubt.,1,,In some countries this is allowed.,['# ::snt In some countries this is allowed.\n(a / allow-01\n      :ARG1 (t / this)\n      :location (c / country\n            :quant (s / some)))'],"[a, attr-instance, allow_01, attr-arg1, [t, attr-instance, this], attr-location, [c, attr-instance, country, attr-quant, [s, attr-instance, some]]]"
1408,1408,1408,1408,1704,12304,ehe,Es ist eine gleich-geschlecht-liche Ehe.,27_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=ist 2:=eine 3:=gleich-geschlecht-liche 4:=Ehe.,1,,It is a same-sex marriage.,['# ::snt It is a same-sex marriage.\n(m / marry-01\n      :mod (s / same-sex))'],"[m, attr-instance, marry_01, attr-mod, [s, attr-instance, same_sex]]"
1409,1409,1409,1409,1705,12305,ehe,Oft macht man nach der Ehe eine Feier.,28_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oft 1:=macht 2:=man 3:=nach 4:=der 5:=Ehe 6:=eine 7:=Feier.,1,,Often there is a celebration after the marriage.,['# ::snt Often there is a celebration after the marriage.\n(c / celebrate-02\n      :time (a / after\n            :op1 (m / marry-01))\n      :frequency (o / often))'],"[c, attr-instance, celebrate_02, attr-time, [a, attr-instance, after, attr-op1, [m, attr-instance, marry_01]], attr-frequency, [o, attr-instance, often]]"
1410,1410,1410,1410,1706,12306,ehe,Sie machen nach der Ehe-schließung eine Hochzeits-feier.,29_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=machen 2:=nach 3:=der 4:=Ehe-schließung 5:=eine 6:=Hochzeits-feier.,2,"[[0, 1, 5, 6], [2, 4]]",They have a wedding celebration after the marriage.,['# ::snt They have a wedding celebration after the marriage.\n(c / celebrate-02\n      :ARG0 (t / they)\n      :ARG1 (w / wed-01\n            :ARG1 t)\n      :time (a / after\n            :op1 (m / marry-01)))'],"[c, attr-instance, celebrate_02, attr-arg0, [t, attr-instance, they], attr-arg1, [w, attr-instance, wed_01, attr-arg1, t], attr-time, [a, attr-instance, after, attr-op1, [m, attr-instance, marry_01]]]"
1411,1411,1411,1411,1707,12307,ehe,Man hat in der Ehe viele Rechte.,30_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=hat 2:=in 3:=der 4:=Ehe 5:=viele 6:=Rechte.,1,,You have many rights in marriage.,['# ::snt You have many rights in marriage.\n(r / right-05\n      :ARG1 (y / you)\n      :quant (m / many)\n      :mod (m2 / marry-01))'],"[r, attr-instance, right_05, attr-arg1, [y, attr-instance, you], attr-quant, [m, attr-instance, many], attr-mod, [m2, attr-instance, marry_01]]"
1412,1412,1412,1412,1708,12308,ehe,Und man hat Pflichten.,31_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=man 2:=hat 3:=Pflichten.,1,,And you have responsibilities.,['# ::snt And you have responsibilities.\n(a / and\n      :op2 (r / responsible-03\n            :ARG0 (y / you)))'],"[a, attr-instance, and, attr-op2, [r, attr-instance, responsible_03, attr-arg0, [y, attr-instance, you]]]"
1413,1413,1413,1413,1709,12310,ehe,Man darf den Ehe-partner im Kranken-haus besuchen.,33_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=darf 2:=den 3:=Ehe-partner 4:=im 5:=Kranken-haus 6:=besuchen.,1,,You are allowed to visit your spouse in the hospital.,['# ::snt You are allowed to visit your spouse in the hospital.\n(a / allow-01\n      :ARG1 (v / visit-01\n            :ARG0 (y / you)\n            :ARG1 (p / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 y\n                        :ARG2 (s / spouse)))\n            :location (h2 / hospital)))'],"[a, attr-instance, allow_01, attr-arg1, [v, attr-instance, visit_01, attr-arg0, [y, attr-instance, you], attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, y, attr-arg2, [s, attr-instance, spouse]]], attr-location, [h2, attr-instance, hospital]]]"
1414,1414,1414,1414,1711,12312,ehe,Man darf für den Ehe-partner Sachen entscheiden.,35_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=darf 2:=für 3:=den 4:=Ehe-partner 5:=Sachen 6:=entscheiden.,1,,You are allowed to decide things for your spouse.,['# ::snt You are allowed to decide things for your spouse.\n(a / allow-01\n      :ARG1 (d / decide-01\n            :ARG0 (y / you)\n            :ARG1 (t / thing)\n            :ARG3 (p / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 y\n                        :ARG2 (s / spouse)))))'],"[a, attr-instance, allow_01, attr-arg1, [d, attr-instance, decide_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing], attr-arg3, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, y, attr-arg2, [s, attr-instance, spouse]]]]]"
1415,1415,1415,1415,1712,12313,ehe,Aber nur wenn der Ehe-partner es selber nicht kann.,36_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Aber 1:=nur 2:=wenn 3:=der 4:=Ehe-partner 5:=es 6:=selber 7:=nicht 8:=kann.,1,,But only if the spouse cannot do it himself.,['# ::snt But only if the spouse cannot do it himself.\n(c / contrast-01\n      :ARG2 (h / have-condition-91\n            :ARG2 (p / possible-01\n                  :polarity -\n                  :ARG1 (d / do-02\n                        :ARG0 (p2 / person\n                              :ARG0-of (h2 / have-rel-role-91\n                                    :ARG2 (s / spouse)))\n                        :ARG1 (ii / it)))\n            :mod (o / only)))'],"[c, attr-instance, contrast_01, attr-arg2, [h, attr-instance, have_condition_91, attr-arg2, [p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [d, attr-instance, do_02, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg2, [s, attr-instance, spouse]]], attr-arg1, [ii, attr-instance, it]]], attr-mod, [o, attr-instance, only]]]"
1416,1416,1416,1416,1713,12314,ehe,Man muss die Schulden vom Ehe-partner mit-bezahlen.,37_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=muss 2:=die 3:=Schulden 4:=vom 5:=Ehe-partner 6:=mit-bezahlen.,1,,You have to help pay your spouse's debts.,"[""# ::snt You have to help pay your spouse's debts.\n(o / obligate-01\n      :ARG1 (y / you)\n      :ARG2 (h / help-01\n            :ARG0 y\n            :ARG1 (p / pay-01\n                  :ARG0 y\n                  :ARG1 (d / debt\n                        :poss (p2 / person\n                              :ARG0-of (h2 / have-rel-role-91\n                                    :ARG1 y\n                                    :ARG2 (s / spouse)))))))""]","[o, attr-instance, obligate_01, attr-arg1, [y, attr-instance, you], attr-arg2, [h, attr-instance, help_01, attr-arg0, y, attr-arg1, [p, attr-instance, pay_01, attr-arg0, y, attr-arg1, [d, attr-instance, debt, attr-poss, [p2, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, y, attr-arg2, [s, attr-instance, spouse]]]]]]]"
1417,1417,1417,1417,1714,12315,ehe,Es gibt viele Gründe warum Menschen eine Ehe machen.,38_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=viele 3:=Gründe 4:=warum 5:=Menschen 6:=eine 7:=Ehe 8:=machen.,2,"[[0, 1, 2, 3], [4, 5, 7, 8]]",There are many reasons why people get married.,['# ::snt There are many reasons why people get married.\n(c / cause-01\n      :ARG0 (r / reason\n            :quant (m / many))\n      :ARG1 (m2 / marry-01\n            :ARG1 (p / person)))'],"[c, attr-instance, cause_01, attr-arg0, [r, attr-instance, reason, attr-quant, [m, attr-instance, many]], attr-arg1, [m2, attr-instance, marry_01, attr-arg1, [p, attr-instance, person]]]"
1418,1418,1418,1418,1715,12317,ehe,Sie wollen eine Familie haben.,40_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=wollen 2:=eine 3:=Familie 4:=haben.,1,,They want to have a family.,['# ::snt They want to have a family.\n(w / want-01\n      :ARG0 (t / they)\n      :ARG1 (h / have-03\n            :ARG0 t\n            :ARG1 (f / family)))'],"[w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [h, attr-instance, have_03, attr-arg0, t, attr-arg1, [f, attr-instance, family]]]"
1419,1419,1419,1419,1716,12318,ehe,Oder sie möchten Geld an den Ehe-partner weiter-geben.,41_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=sie 2:=möchten 3:=Geld 4:=an 5:=den 6:=Ehe-partner 7:=weiter-geben.,2,"[[1, 2, 3], [4, 6]]",Or they want to pass money on to their spouse.,['# ::snt Or they want to pass money on to their spouse.\n(o / or\n      :op2 (w / want-01\n            :ARG0 (t / they)\n            :ARG1 (p / pass-on-09\n                  :ARG0 t\n                  :ARG1 (m / money)\n                  :ARG2 (p2 / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 t\n                              :ARG2 (s / spouse))))))'],"[o, attr-instance, or, attr-op2, [w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [p, attr-instance, pass_on_09, attr-arg0, t, attr-arg1, [m, attr-instance, money], attr-arg2, [p2, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, t, attr-arg2, [s, attr-instance, spouse]]]]]]"
1420,1420,1420,1420,1717,12319,ehe,Oder sie wollen das alle von der Ehe wissen.,42_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=sie 2:=wollen 3:=das 4:=alle 5:=von 6:=der 7:=Ehe 8:=wissen.,2,"[[1, 2], [3, 4, 5, 7, 8]]",Or they all want to know that about marriage.,['# ::snt Or they all want to know that about marriage.\n(o / or\n      :op2 (w / want-01\n            :ARG0 (t / they\n                  :mod (a / all))\n            :ARG1 (k / know-01\n                  :ARG0 t\n                  :ARG1 (t2 / that)\n                  :topic (m / marry-01))))'],"[o, attr-instance, or, attr-op2, [w, attr-instance, want_01, attr-arg0, [t, attr-instance, they, attr-mod, [a, attr-instance, all]], attr-arg1, [k, attr-instance, know_01, attr-arg0, t, attr-arg1, [t2, attr-instance, that], attr-topic, [m, attr-instance, marry_01]]]]"
1421,1421,1421,1421,1718,12320,ehe,Oder sie wollen eine andere Staats-bürger-schaft haben.,43_long,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=sie 2:=wollen 3:=eine 4:=andere 5:=Staats-bürger-schaft 6:=haben.,1,,Or they want to have a different citizenship.,['# ::snt Or they want to have a different citizenship.\n(o / or\n      :op2 (w / want-01\n            :ARG0 (t / they)\n            :ARG1 (h / have-03\n                  :ARG0 t\n                  :ARG1 (c / citizenship\n                        :ARG1-of (d / differ-02)))))'],"[o, attr-instance, or, attr-op2, [w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [h, attr-instance, have_03, attr-arg0, t, attr-arg1, [c, attr-instance, citizenship, attr-arg1_of, [d, attr-instance, differ_02]]]]]"
1422,1422,1422,1422,1719,12321,ehe,Die Ehe ist eine Lebens-gemeinschaft.,0_short,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Ehe 2:=ist 3:=eine 4:=Lebens-gemeinschaft.,1,,Marriage is a life partnership.,['# ::snt Marriage is a life partnership.\n(p / partner-01\n      :ARG0 (m / marry-01)\n      :mod (l / life))'],"[p, attr-instance, partner_01, attr-arg0, [m, attr-instance, marry_01], attr-mod, [l, attr-instance, life]]"
1423,1423,1423,1423,1721,12323,ehe,"2 Menschen versprechen sich, \newline dass sie für immer zusammen bleiben.",2_short,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,"0:=2 1:=Menschen 2:=versprechen 3:=sich, 4:=\newline 5:=dass 6:=sie 7:=für 8:=immer 9:=zusammen 10:=bleiben.",3,"[[0, 1, 2, 3], [5, 6, 9, 10], [7, 8]]",2 people promise each other \newline that they will stay together forever.,['# ::snt 2 people promise each other \\newline that they will stay together forever.\n(p / promise-01\n      :ARG0 (p2 / person\n            :quant 2\n            :ARG1-of p)\n      :ARG2 (s / stay-01\n            :ARG1 (t / together\n                  :domain p2)\n            :duration (f / forever))\n      :mod (n / newline))'],"[p, attr-instance, promise_01, attr-arg0, [p2, attr-instance, person, attr-quant, 2, attr-arg1_of, p], attr-arg2, [s, attr-instance, stay_01, attr-arg1, [t, attr-instance, together, attr-domain, p2], attr-duration, [f, attr-instance, forever]], attr-mod, [n, attr-instance, newline]]"
1424,1424,1424,1424,1722,12324,ehe,Und das sie immer für-einander da sein werden.,3_short,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=das 2:=sie 3:=immer 4:=für-einander 5:=da 6:=sein 7:=werden.,2,"[[3], [4]]",And that they will always be there for each other.,['# ::snt And that they will always be there for each other.\n(a / and\n      :op2 (b / be-located-at-91\n            :ARG1 (t / they)\n            :ARG2 (t2 / there)\n            :time (a2 / always)\n            :beneficiary (o / other\n                  :mod (e / each))))'],"[a, attr-instance, and, attr-op2, [b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, they], attr-arg2, [t2, attr-instance, there], attr-time, [a2, attr-instance, always], attr-beneficiary, [o, attr-instance, other, attr-mod, [e, attr-instance, each]]]]"
1425,1425,1425,1425,1723,12325,ehe,Ein anderes Wort dafür ist Heiraten.,4_short,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=anderes 2:=Wort 3:=dafür 4:=ist 5:=Heiraten.,1,,Another word for it is marriage.,['# ::snt Another word for it is marriage.\n(w / word-01\n      :ARG1 (m / marry-01)\n      :ARG3 (ii / it)\n      :mod (a / another))'],"[w, attr-instance, word_01, attr-arg1, [m, attr-instance, marry_01], attr-arg3, [ii, attr-instance, it], attr-mod, [a, attr-instance, another]]"
1426,1426,1426,1426,1724,12326,ehe,Manche schenken sich einen Ehe-ring.,5_short,Recht_und_Gesetz,2019-01-14T08:43:52Z,48f66906899cc4a9477b6c9e32ff4424,0:=Manche 1:=schenken 2:=sich 3:=einen 4:=Ehe-ring.,1,,Some give each other a wedding ring.,['# ::snt Some give each other a wedding ring.\n(g / give-01\n      :ARG0 (s / some)\n      :ARG1 (r / ring\n            :mod (w / wed-01))\n      :ARG2 (o / other\n            :mod (e / each)))'],"[g, attr-instance, give_01, attr-arg0, [s, attr-instance, some], attr-arg1, [r, attr-instance, ring, attr-mod, [w, attr-instance, wed_01]], attr-arg2, [o, attr-instance, other, attr-mod, [e, attr-instance, each]]]"
1427,1427,1427,1427,1726,12328,ehrenburger,Ein Ehren-bürger bekommt als Auszeichnung die Ehren-bürger-urkunde.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Ehren-bürger 2:=bekommt 3:=als 4:=Auszeichnung 5:=die 6:=Ehren-bürger-urkunde.,2,"[[4], [6]]",An honorary citizen receives the honorary citizen certificate as an award.,['# ::snt An honorary citizen receives the honorary citizen certificate as an award.\n(r / receive-01\n      :ARG0 (c / citizen\n            :mod (h / honorary))\n      :ARG1 (c2 / certificate\n            :mod (h2 / honorary)\n            :mod (c3 / citizen)\n            :ARG1-of (a / award-01)))'],"[r, attr-instance, receive_01, attr-arg0, [c, attr-instance, citizen, attr-mod, [h, attr-instance, honorary]], attr-arg1, [c2, attr-instance, certificate, attr-mod, [h2, attr-instance, honorary], attr-mod, [c3, attr-instance, citizen], attr-arg1_of, [a, attr-instance, award_01]]]"
1428,1428,1428,1428,1727,12329,ehrenburger,Ein Ehren-bürger hat durch die Auszeichnung oft Vorteile.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Ehren-bürger 2:=hat 3:=durch 4:=die 5:=Auszeichnung 6:=oft 7:=Vorteile.,2,"[[1, 2, 6, 7], [3, 5]]",An honorary citizen often benefits from the award.,['# ::snt An honorary citizen often benefits from the award.\n(b / benefit-01\n      :ARG0 (a / award-01)\n      :ARG1 (c / citizen\n            :mod (h / honorary))\n      :frequency (o / often))'],"[b, attr-instance, benefit_01, attr-arg0, [a, attr-instance, award_01], attr-arg1, [c, attr-instance, citizen, attr-mod, [h, attr-instance, honorary]], attr-frequency, [o, attr-instance, often]]"
1429,1429,1429,1429,1728,12330,ehrenburger,Zum Beispiel bekommt er immer Karten für Kino oder Theater geschenkt.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=bekommt 3:=er 4:=immer 5:=Karten 6:=für 7:=Kino 8:=oder 9:=Theater 10:=geschenkt.,3,"[[2, 3, 4, 5, 10], [6, 7], [6, 9]]","For example, he always gets tickets to the cinema or theater as a gift.","['# ::snt For example, he always gets tickets to the cinema or theater as a gift.\n(e / exemplify-01\n      :ARG0 (g / get-01\n            :ARG0 (h / he)\n            :ARG1 (t / ticket\n                  :destination (o / or\n                        :op1 (c / cinema)\n                        :op2 (t2 / theater)))\n            :ARG3 h\n            :time (a / always)\n            :ARG1-of (g2 / gift-01\n                  :ARG2 h)))']","[e, attr-instance, exemplify_01, attr-arg0, [g, attr-instance, get_01, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, ticket, attr-destination, [o, attr-instance, or, attr-op1, [c, attr-instance, cinema], attr-op2, [t2, attr-instance, theater]]], attr-arg3, h, attr-time, [a, attr-instance, always], attr-arg1_of, [g2, attr-instance, gift_01, attr-arg2, h]]]"
1430,1430,1430,1430,1729,12331,ehrenburger,Oder ein Ehren-bürger kann kostenlos Tram fahren.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=ein 2:=Ehren-bürger 3:=kann 4:=kostenlos 5:=Tram 6:=fahren.,1,,Or an honorary citizen can ride the tram for free.,['# ::snt Or an honorary citizen can ride the tram for free.\n(o / or\n      :op2 (p / possible-01\n            :ARG1 (r / ride-01\n                  :ARG0 (c / citizen\n                        :mod (h / honorary))\n                  :ARG1 (t / tram)\n                  :ARG3-of (f / free-03))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, possible_01, attr-arg1, [r, attr-instance, ride_01, attr-arg0, [c, attr-instance, citizen, attr-mod, [h, attr-instance, honorary]], attr-arg1, [t, attr-instance, tram], attr-arg3_of, [f, attr-instance, free_03]]]]"
1431,1431,1431,1431,1730,12332,ehrenburger,Ehren-bürger kann man auch nach dem Tod werden.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ehren-bürger 1:=kann 2:=man 3:=auch 4:=nach 5:=dem 6:=Tod 7:=werden.,1,,You can also become an honorary citizen after death.,['# ::snt You can also become an honorary citizen after death.\n(p / possible-01\n      :ARG1 (b / become-01\n            :ARG1 (y / you)\n            :ARG2 (c / citizen\n                  :mod (h / honorary))\n            :time (a / after\n                  :op1 (d / die-01\n                        :ARG1 y))\n            :mod (a2 / also)))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, become_01, attr-arg1, [y, attr-instance, you], attr-arg2, [c, attr-instance, citizen, attr-mod, [h, attr-instance, honorary]], attr-time, [a, attr-instance, after, attr-op1, [d, attr-instance, die_01, attr-arg1, y]], attr-mod, [a2, attr-instance, also]]]"
1432,1432,1432,1432,1731,12333,ehrenburger,Und man kann die Auszeichnung wieder weg-genommen bekommen.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=man 2:=kann 3:=die 4:=Auszeichnung 5:=wieder 6:=weg-genommen 7:=bekommen.,1,,And the award can be taken away again.,['# ::snt And the award can be taken away again.\n(a / and\n      :op2 (p / possible-01\n            :ARG1 (t / take-away-05\n                  :ARG1 (a2 / award-01)\n                  :mod (a3 / again))))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, possible_01, attr-arg1, [t, attr-instance, take_away_05, attr-arg1, [a2, attr-instance, award_01], attr-mod, [a3, attr-instance, again]]]]"
1433,1433,1433,1433,1732,12334,ehrenburger,Ein Ehrenbürger ist eine Person die ein besonderes Lob bekommen hat.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Ehrenbürger 2:=ist 3:=eine 4:=Person 5:=die 6:=ein 7:=besonderes 8:=Lob 9:=bekommen 10:=hat.,2,"[[1, 2, 4], [5, 7, 8, 9, 10]]",An honorary citizen is a person who has received special praise.,['# ::snt An honorary citizen is a person who has received special praise.\n(p / person\n      :domain (c / citizen\n            :mod (h / honorary))\n      :ARG1-of (p2 / praise-01\n            :ARG1-of (s / special-02)))'],"[p, attr-instance, person, attr-domain, [c, attr-instance, citizen, attr-mod, [h, attr-instance, honorary]], attr-arg1_of, [p2, attr-instance, praise_01, attr-arg1_of, [s, attr-instance, special_02]]]"
1434,1434,1434,1434,1733,12335,ehrenburger,"Zum Beispiel, \newline weil die Person gute Dinge gemacht hat.",1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Zum 1:=Beispiel, 2:=\newline 3:=weil 4:=die 5:=Person 6:=gute 7:=Dinge 8:=gemacht 9:=hat.",1,,"For example, \newline because the person did good things.","['# ::snt For example, \\newline because the person did good things.\n(e / exemplify-01\n      :ARG0 (c / cause-01\n            :ARG0 (d / do-02\n                  :ARG0 (p / person)\n                  :ARG1 (t / thing\n                        :ARG1-of (g / good-02)))\n            :ARG1 (l / line)))']","[e, attr-instance, exemplify_01, attr-arg0, [c, attr-instance, cause_01, attr-arg0, [d, attr-instance, do_02, attr-arg0, [p, attr-instance, person], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [g, attr-instance, good_02]]], attr-arg1, [l, attr-instance, line]]]"
1435,1435,1435,1435,1734,12336,ehrenburger,Das Lob macht eine Stadt oder eine Gemeinde.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Lob 2:=macht 3:=eine 4:=Stadt 5:=oder 6:=eine 7:=Gemeinde.,2,"[[4], [7]]",Praise makes a city or a community.,['# ::snt Praise makes a city or a community.\n(m / make-02\n      :ARG0 (p / praise-01)\n      :ARG1 (o / or\n            :op1 (c / city)\n            :op2 (c2 / community)))'],"[m, attr-instance, make_02, attr-arg0, [p, attr-instance, praise_01], attr-arg1, [o, attr-instance, or, attr-op1, [c, attr-instance, city], attr-op2, [c2, attr-instance, community]]]"
1436,1436,1436,1436,1735,12337,ehrenburger,Die Stadt oder die Gemeinde gibt der Person eine Auszeichnung.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Stadt 2:=oder 3:=die 4:=Gemeinde 5:=gibt 6:=der 7:=Person 8:=eine 9:=Auszeichnung.,2,"[[1], [4]]",The city or municipality gives the person an award.,['# ::snt The city or municipality gives the person an award.\n(g / give-01\n      :ARG0 (o / or\n            :op1 (c / city)\n            :op2 (m / municipality))\n      :ARG1 (a / award-01)\n      :ARG2 (p / person))'],"[g, attr-instance, give_01, attr-arg0, [o, attr-instance, or, attr-op1, [c, attr-instance, city], attr-op2, [m, attr-instance, municipality]], attr-arg1, [a, attr-instance, award_01], attr-arg2, [p, attr-instance, person]]"
1437,1437,1437,1437,1736,12338,ehrenburger,Zu der Auszeichnung sagt man auch Eh­ren­-bür­ger­-schaft.,4_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zu 1:=der 2:=Auszeichnung 3:=sagt 4:=man 5:=auch 6:=Eh­ren­-bür­ger­-schaft.,1,,The award is also called honorary citizenship.,['# ::snt The award is also called honorary citizenship.\n(c / call-01\n      :ARG1 (a / award-01)\n      :ARG2 (c2 / citizenship\n            :mod (h / honorary))\n      :mod (a2 / also))'],"[c, attr-instance, call_01, attr-arg1, [a, attr-instance, award_01], attr-arg2, [c2, attr-instance, citizenship, attr-mod, [h, attr-instance, honorary]], attr-mod, [a2, attr-instance, also]]"
1438,1438,1438,1438,1737,12339,ehrenburger,"Wenn die Auszeichnung von einer Schule kommt, \newline sagt man: Ehren-bürger-würde.",5_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-10-24T06:14:31Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Wenn 1:=die 2:=Auszeichnung 3:=von 4:=einer 5:=Schule 6:=kommt, 7:=\newline 8:=sagt 9:=man: 10:=Ehren-bürger-würde.",2,"[[0, 2, 3, 5, 6], [8, 9, 10]]","If the award comes from a school, \newline it is called: honorary citizenship.","['# ::snt If the award comes from a school, \\newline it is called: honorary citizenship.\n(c / call-01\n      :ARG1 (a / award-01)\n      :ARG2 (c2 / citizenship\n            :mod (h / honorary))\n      :condition (c3 / come-03\n            :ARG1 a\n            :ARG2 (s / school))\n      :ARG1-of (n / new-line-07))']","[c, attr-instance, call_01, attr-arg1, [a, attr-instance, award_01], attr-arg2, [c2, attr-instance, citizenship, attr-mod, [h, attr-instance, honorary]], attr-condition, [c3, attr-instance, come_03, attr-arg1, a, attr-arg2, [s, attr-instance, school]], attr-arg1_of, [n, attr-instance, new_line_07]]"
1439,1439,1439,1439,1738,12340,ehrgeiz,Das Wort Ehrgeiz kommt aus den Worten Ehre und Gier.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-02T12:29:11Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=Wort 2:=Ehrgeiz 3:=kommt 4:=aus 5:=den 6:=Worten 7:=Ehre 8:=und 9:=Gier.,2,"[[7], [9]]",The word ambition comes from the words honor and greed.,['# ::snt The word ambition comes from the words honor and greed.\n(c / come-03\n      :ARG1 (w / word\n            :mod (a / ambition))\n      :ARG2 (w2 / word\n            :mod (h / honor)\n            :mod (g / greed)))'],"[c, attr-instance, come_03, attr-arg1, [w, attr-instance, word, attr-mod, [a, attr-instance, ambition]], attr-arg2, [w2, attr-instance, word, attr-mod, [h, attr-instance, honor], attr-mod, [g, attr-instance, greed]]]"
1440,1440,1440,1440,1739,12341,ehrgeiz,Ehrgeiz ist eine Sucht nach Anerkennung.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-02T12:29:11Z,e800bebc9060331edfac65e663a55570,0:=Ehrgeiz 1:=ist 2:=eine 3:=Sucht 4:=nach 5:=Anerkennung.,1,,Ambition is an addiction to recognition.,['# ::snt Ambition is an addiction to recognition.\n(a / addict-01\n      :ARG2 (r / recognize-02)\n      :domain (a2 / Ambition))'],"[a, attr-instance, addict_01, attr-arg2, [r, attr-instance, recognize_02], attr-domain, [a2, attr-instance, ambition]]"
1441,1441,1441,1441,1740,12342,ehrgeiz,Diese Anerkennung soll den Ehrgeizigen über seine Mit-menschen hervorheben.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-02T12:29:11Z,e800bebc9060331edfac65e663a55570,0:=Diese 1:=Anerkennung 2:=soll 3:=den 4:=Ehrgeizigen 5:=über 6:=seine 7:=Mit-menschen 8:=hervorheben.,2,"[[1, 2, 4, 8], [5, 6, 7]]",This recognition is intended to make the ambitious person stand out from his fellow human beings.,['# ::snt This recognition is intended to make the ambitious person stand out from his fellow human beings.\n(ii / intend-01\n      :ARG1 (m / make-02\n            :ARG0 (r / recognize-02\n                  :mod (t / this))\n            :ARG1 (s / stand-out-06\n                  :ARG1 (p / person\n                        :mod (a / ambitious))\n                  :source (b / being\n                        :mod (h / human)\n                        :mod (f / fellow)\n                        :poss p))))'],"[ii, attr-instance, intend_01, attr-arg1, [m, attr-instance, make_02, attr-arg0, [r, attr-instance, recognize_02, attr-mod, [t, attr-instance, this]], attr-arg1, [s, attr-instance, stand_out_06, attr-arg1, [p, attr-instance, person, attr-mod, [a, attr-instance, ambitious]], attr-source, [b, attr-instance, being, attr-mod, [h, attr-instance, human], attr-mod, [f, attr-instance, fellow], attr-poss, p]]]]"
1442,1442,1442,1442,1741,12343,ehrgeiz,Ein Ehrgeiziger sucht den Beifall.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-02T12:29:11Z,e800bebc9060331edfac65e663a55570,0:=Ein 1:=Ehrgeiziger 2:=sucht 3:=den 4:=Beifall.,1,,An ambitious person seeks applause.,['# ::snt An ambitious person seeks applause.\n(s / seek-01\n      :ARG0 (p / person\n            :mod (a / ambitious))\n      :ARG1 (a2 / applaud-01\n            :ARG1 p))'],"[s, attr-instance, seek_01, attr-arg0, [p, attr-instance, person, attr-mod, [a, attr-instance, ambitious]], attr-arg1, [a2, attr-instance, applaud_01, attr-arg1, p]]"
1443,1443,1443,1443,1742,12344,ehrgeiz,Der Beifall ist seine Belohnung.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-02T12:29:11Z,e800bebc9060331edfac65e663a55570,0:=Der 1:=Beifall 2:=ist 3:=seine 4:=Belohnung.,1,,The applause is his reward.,['# ::snt The applause is his reward.\n(r / reward-01\n      :ARG1 (h / he)\n      :ARG2 (a / applaud-01\n            :ARG0 h))'],"[r, attr-instance, reward_01, attr-arg1, [h, attr-instance, he], attr-arg2, [a, attr-instance, applaud_01, attr-arg0, h]]"
1444,1444,1444,1444,1743,12345,ehrgeiz,Seine Mitmenschen sollen ihn bewundern.,4_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-02T12:29:11Z,e800bebc9060331edfac65e663a55570,0:=Seine 1:=Mitmenschen 2:=sollen 3:=ihn 4:=bewundern.,1,,His fellow human beings should admire him.,['# ::snt His fellow human beings should admire him.\n(r / recommend-01\n      :ARG1 (a / admire-01\n            :ARG0 (b / being\n                  :mod (h / human)\n                  :mod (f / fellow)\n                  :poss (h2 / he))\n            :ARG1 h2))'],"[r, attr-instance, recommend_01, attr-arg1, [a, attr-instance, admire_01, attr-arg0, [b, attr-instance, being, attr-mod, [h, attr-instance, human], attr-mod, [f, attr-instance, fellow], attr-poss, [h2, attr-instance, he]], attr-arg1, h2]]"
1445,1445,1445,1445,1744,12346,eichsfeld,Im Eichsfeld wohnen 100 Tausend Menschen.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-03-20T10:40:00Z,ffaa744a207eb843b7f383adcf5da422,0:=Im 1:=Eichsfeld 2:=wohnen 3:=100 4:=Tausend 5:=Menschen.,1,,100 thousand people live in Eichsfeld.,"['# ::snt 100 thousand people live in Eichsfeld.\n(l / live-01\n      :ARG0 (p / person\n            :quant 100000)\n      :location (c / city\n            :name (n / name\n                  :op1 ""Eichsfeld"")))']","[l, attr-instance, live_01, attr-arg0, [p, attr-instance, person, attr-quant, 100000], attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""eichsfeld""]]]"
1446,1446,1446,1446,1745,12347,eichsfeld,Hier leben viele katholische Christen.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-03-20T10:40:00Z,ffaa744a207eb843b7f383adcf5da422,0:=Hier 1:=leben 2:=viele 3:=katholische 4:=Christen.,2,"[[3], [4]]",Many Catholic Christians live here.,"['# ::snt Many Catholic Christians live here.\n(l / live-01\n      :ARG0 (p / person\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Catholic""))\n            :quant (m / many)\n            :mod r)\n      :location (h / here))']","[l, attr-instance, live_01, attr-arg0, [p, attr-instance, person, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""catholic""]], attr-quant, [m, attr-instance, many], attr-mod, r], attr-location, [h, attr-instance, here]]"
1447,1447,1447,1447,1746,12348,eichsfeld,Papst Benedikt war im Jahr 2011 im Eichsfeld.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-03-20T10:40:00Z,ffaa744a207eb843b7f383adcf5da422,0:=Papst 1:=Benedikt 2:=war 3:=im 4:=Jahr 5:=2011 6:=im 7:=Eichsfeld.,2,"[[0, 1, 2, 6, 7], [3, 4, 5]]",Pope Benedict was in Eichsfeld in 2011.,"['# ::snt Pope Benedict was in Eichsfeld in 2011.\n(b / be-located-at-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Pope""\n                  :op2 ""Benedict""))\n      :ARG2 (c / city\n            :name (n2 / name\n                  :op1 ""Eichsfeld""))\n      :time (d / date-entity\n            :year 2011))']","[b, attr-instance, be_located_at_91, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""pope"", attr-op2, ""benedict""]], attr-arg2, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""eichsfeld""]], attr-time, [d, attr-instance, date_entity, attr-year, 2011]]"
1448,1448,1448,1448,1747,12349,eichsfeld,"Es gibt viele Kirchen, Burgen und Schlösser.",3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-03-20T10:40:00Z,ffaa744a207eb843b7f383adcf5da422,"0:=Es 1:=gibt 2:=viele 3:=Kirchen, 4:=Burgen 5:=und 6:=Schlösser.",3,"[[3], [4], [6]]","There are many churches, castles and palaces.","['# ::snt There are many churches, castles and palaces.\n(a / and\n      :op1 (c / church)\n      :op2 (c2 / castle)\n      :op3 (p / palace)\n      :quant (m / many))']","[a, attr-instance, and, attr-op1, [c, attr-instance, church], attr-op2, [c2, attr-instance, castle], attr-op3, [p, attr-instance, palace], attr-quant, [m, attr-instance, many]]"
1449,1449,1449,1449,1748,12350,eichsfeld,Und es gibt viele Wälder und Berge.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-03-20T10:40:00Z,ffaa744a207eb843b7f383adcf5da422,0:=Und 1:=es 2:=gibt 3:=viele 4:=Wälder 5:=und 6:=Berge.,2,"[[4], [6]]",And there are many forests and mountains.,['# ::snt And there are many forests and mountains.\n(a / and\n      :op2 (a2 / and\n            :op1 (f / forest)\n            :op2 (m / mountain)\n            :quant (m2 / many)))'],"[a, attr-instance, and, attr-op2, [a2, attr-instance, and, attr-op1, [f, attr-instance, forest], attr-op2, [m, attr-instance, mountain], attr-quant, [m2, attr-instance, many]]]"
1450,1450,1450,1450,1749,12351,eichsfeld,Bekannt ist auch die Feldgieker-Wurst.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-03-20T10:40:00Z,ffaa744a207eb843b7f383adcf5da422,0:=Bekannt 1:=ist 2:=auch 3:=die 4:=Feldgieker-Wurst.,1,,The Feldgieker sausage is also well known.,"['# ::snt The Feldgieker sausage is also well known.\n(k / know-02\n      :ARG1 (s / sausage\n            :name (n / name\n                  :op1 ""Feldgieker""\n                  :op2 ""S sausage""))\n      :degree (w / well)\n      :mod (a / also))']","[k, attr-instance, know_02, attr-arg1, [s, attr-instance, sausage, attr-name, [n, attr-instance, name, attr-op1, ""feldgieker"", attr-op2, ""s, sausage""]], attr-degree, [w, attr-instance, well], attr-mod, [a, attr-instance, also]]"
1451,1451,1451,1451,1750,12352,eichsfeld,Diese Wurst gibt es nur im Eichsfeld.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-03-20T10:40:00Z,ffaa744a207eb843b7f383adcf5da422,0:=Diese 1:=Wurst 2:=gibt 3:=es 4:=nur 5:=im 6:=Eichsfeld.,1,,This sausage is only available in Eichsfeld.,"['# ::snt This sausage is only available in Eichsfeld.\n(a / available-02\n      :ARG2 (s / sausage\n            :mod (t / this))\n      :location (c / city\n            :name (n / name\n                  :op1 ""Eichsfeld""))\n      :mod (o / only))']","[a, attr-instance, available_02, attr-arg2, [s, attr-instance, sausage, attr-mod, [t, attr-instance, this]], attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""eichsfeld""]], attr-mod, [o, attr-instance, only]]"
1452,1452,1452,1452,1751,12353,eichsfeld,Eichsfeld ist eine Region in der Mitte von Deutschland.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-03-20T10:40:00Z,ffaa744a207eb843b7f383adcf5da422,0:=Eichsfeld 1:=ist 2:=eine 3:=Region 4:=in 5:=der 6:=Mitte 7:=von 8:=Deutschland.,2,"[[0, 1], [4, 6, 7, 8]]",Eichsfeld is a region in the middle of Germany.,"['# ::snt Eichsfeld is a region in the middle of Germany.\n(r / region\n      :domain (c / city\n            :name (n / name\n                  :op1 ""Eichsfeld""))\n      :location (m / middle\n            :part-of (c2 / country\n                  :name (n2 / name\n                        :op1 ""Germany""))))']","[r, attr-instance, region, attr-domain, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""eichsfeld""]], attr-location, [m, attr-instance, middle, attr-part_of, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""germany""]]]]"
1453,1453,1453,1453,1752,12354,eichsfeld,Die größten Orte im Eichsfeld sind: \newline  Heilbad Heiligenstadt \newline  Duderstadt \newline  Leinefelde-Worbis,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-03-20T10:40:00Z,ffaa744a207eb843b7f383adcf5da422,0:=Die 1:=größten 2:=Orte 3:=im 4:=Eichsfeld 5:=sind: 6:=\newline 7:= 8:=Heilbad 9:=Heiligenstadt 10:=\newline 11:= 12:=Duderstadt 13:=\newline 14:= 15:=Leinefelde-Worbis,3,"[[8, 9], [12], [15]]",The largest towns in the Eichsfeld are: \newline Heilbad Heiligenstadt \newline Duderstadt \newline Leinefelde-Worbis,"['# ::snt The largest towns in the Eichsfeld are: \\newline Heilbad Heiligenstadt \\newline Duderstadt \\newline Leinefelde-Worbis\n(h / have-degree-91\n      :ARG1 (t / town\n            :domain (a / and\n                  :op1 (l / line\n                        :name (n / name\n                              :op1 ""Heilbad""\n                              :op2 ""Heiligenstadt""))\n                  :op2 (l2 / line\n                        :name (n2 / name\n                              :op1 ""Duderstadt""))\n                  :op3 (l3 / line\n                        :name (n3 / name\n                              :op1 ""Leinefelde-Worbis""))))\n      :ARG2 (l4 / large)\n      :ARG3 (m / most)\n      :ARG5 (c / city\n            :name (n4 / name\n                  :op1 ""Eichsfeld"")))']","[h, attr-instance, have_degree_91, attr-arg1, [t, attr-instance, town, attr-domain, [a, attr-instance, and, attr-op1, [l, attr-instance, line, attr-name, [n, attr-instance, name, attr-op1, ""heilbad"", attr-op2, ""heiligenstadt""]], attr-op2, [l2, attr-instance, line, attr-name, [n2, attr-instance, name, attr-op1, ""duderstadt""]], attr-op3, [l3, attr-instance, line, attr-name, [n3, attr-instance, name, attr-op1, ""leinefelde_worbis""]]]], attr-arg2, [l4, attr-instance, large], attr-arg3, [m, attr-instance, most], attr-arg5, [c, attr-instance, city, attr-name, [n4, attr-instance, name, attr-op1, ""eichsfeld""]]]"
1454,1454,1454,1454,1753,12355,eid,Mit einem Eid verspricht man etwas.,0_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Mit 1:=einem 2:=Eid 3:=verspricht 4:=man 5:=etwas.,1,,With an oath you promise something.,['# ::snt With an oath you promise something.\n(p / promise-01\n      :ARG0 (y / you)\n      :ARG2 (s / something)\n      :instrument (o / oath))'],"[p, attr-instance, promise_01, attr-arg0, [y, attr-instance, you], attr-arg2, [s, attr-instance, something], attr-instrument, [o, attr-instance, oath]]"
1455,1455,1455,1455,1754,12356,eid,Arzt haben früher einen Eid abgeben.,1_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Arzt 1:=haben 2:=früher 3:=einen 4:=Eid 5:=abgeben.,1,,Doctors used to have to take an oath.,['# ::snt Doctors used to have to take an oath.\n(o / obligate-01\n      :ARG2 (t / take-01\n            :ARG0 (d / doctor)\n            :ARG1 (o2 / oath))\n      :time (u / use-03))'],"[o, attr-instance, obligate_01, attr-arg2, [t, attr-instance, take_01, attr-arg0, [d, attr-instance, doctor], attr-arg1, [o2, attr-instance, oath]], attr-time, [u, attr-instance, use_03]]"
1456,1456,1456,1456,1755,12357,eid,"Zum Beispiel, dass sie kranken Menschen helfen.",2_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,"0:=Zum 1:=Beispiel, 2:=dass 3:=sie 4:=kranken 5:=Menschen 6:=helfen.",1,,"For example, that they help sick people.","['# ::snt For example, that they help sick people.\n(e / exemplify-01\n      :ARG0 (h / help-01\n            :ARG0 (t / they)\n            :ARG2 (p / person\n                  :ARG1-of (s / sick-05))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, help_01, attr-arg0, [t, attr-instance, they], attr-arg2, [p, attr-instance, person, attr-arg1_of, [s, attr-instance, sick_05]]]]"
1457,1457,1457,1457,1756,12358,eid,Das müssen sie versprechen.,3_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Das 1:=müssen 2:=sie 3:=versprechen.,1,,They have to promise that.,['# ::snt They have to promise that.\n(o / obligate-01\n      :ARG1 (t / they)\n      :ARG2 (p / promise-01\n            :ARG0 t\n            :ARG2 (t2 / that)))'],"[o, attr-instance, obligate_01, attr-arg1, [t, attr-instance, they], attr-arg2, [p, attr-instance, promise_01, attr-arg0, t, attr-arg2, [t2, attr-instance, that]]]"
1458,1458,1458,1458,1757,12359,eid,"Diesen Eid nennt man ""Eid des Hippokrates"".",4_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,"0:=Diesen 1:=Eid 2:=nennt 3:=man 4:=""Eid 5:=des 6:=Hippokrates"".",1,,"This oath is called the ""Hippocratic Oath"".","['# ::snt This oath is called the ""Hippocratic Oath"".\n(c / call-01\n      :ARG1 (o / oath\n            :mod (t / this))\n      :ARG2 (t2 / thing\n            :name (n / name\n                  :op1 ""Hippocratic""\n                  :op2 ""Oath"")))']","[c, attr-instance, call_01, attr-arg1, [o, attr-instance, oath, attr-mod, [t, attr-instance, this]], attr-arg2, [t2, attr-instance, thing, attr-name, [n, attr-instance, name, attr-op1, ""hippocratic"", attr-op2, ""oath""]]]"
1459,1459,1459,1459,1758,12360,eid,"Das Gegenteil von Eid ist ""Meineid"".",5_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,"0:=Das 1:=Gegenteil 2:=von 3:=Eid 4:=ist 5:=""Meineid"".",1,,The opposite of oath is perjury.,['# ::snt The opposite of oath is perjury.\n(o / opposite-01\n      :ARG1 (p / perjure-01)\n      :ARG2 (o2 / oath))'],"[o, attr-instance, opposite_01, attr-arg1, [p, attr-instance, perjure_01], attr-arg2, [o2, attr-instance, oath]]"
1460,1460,1460,1460,1759,12361,eid,Das Wort Eid ist ein Substantiv.,6_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Das 1:=Wort 2:=Eid 3:=ist 4:=ein 5:=Substantiv.,1,,The word oath is a noun.,['# ::snt The word oath is a noun.\n(n / noun\n      :domain (w / word\n            :mod (o / oath)))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [o, attr-instance, oath]]]"
1461,1461,1461,1461,1760,12362,eid,Ein Eid ist ein großes Versprechen.,0_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Ein 1:=Eid 2:=ist 3:=ein 4:=großes 5:=Versprechen.,2,"[[4], [5]]",An oath is a big promise.,['# ::snt An oath is a big promise.\n(p / promise-01\n      :ARG2 (o / oath)\n      :mod (b / big))'],"[p, attr-instance, promise_01, attr-arg2, [o, attr-instance, oath], attr-mod, [b, attr-instance, big]]"
1462,1462,1462,1462,1761,12363,eid,Man verpflichtet sich die Wahrheit zu sagen.,1_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Man 1:=verpflichtet 2:=sich 3:=die 4:=Wahrheit 5:=zu 6:=sagen.,2,"[[0, 1, 2], [4, 5, 6]]",You are obliged to tell the truth.,['# ::snt You are obliged to tell the truth.\n(o / oblige-02\n      :ARG1 (y / you)\n      :ARG2 (t / tell-01\n            :ARG0 y\n            :ARG1 (t2 / truth)))'],"[o, attr-instance, oblige_02, attr-arg1, [y, attr-instance, you], attr-arg2, [t, attr-instance, tell_01, attr-arg0, y, attr-arg1, [t2, attr-instance, truth]]]"
1463,1463,1463,1463,1762,12364,eid,Oder etwas bestimmtes zu tun.,2_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2012-03-03T00:00:41Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Oder 1:=etwas 2:=bestimmtes 3:=zu 4:=tun.,1,,Or to do something specific.,['# ::snt Or to do something specific.\n(o / or\n      :op2 (d / do-02\n            :ARG1 (s / something\n                  :ARG1-of (s2 / specific-02))))'],"[o, attr-instance, or, attr-op2, [d, attr-instance, do_02, attr-arg1, [s, attr-instance, something, attr-arg1_of, [s2, attr-instance, specific_02]]]]"
1464,1464,1464,1464,1764,12366,eierkennzeichnung,Die Eier-kennzeichnung ist eine Nummer auf einem Ei.,0_short,Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2017-08-21T17:28:10Z,d57f62e2ae2713c7395b7d7e5bf821eb,0:=Die 1:=Eier-kennzeichnung 2:=ist 3:=eine 4:=Nummer 5:=auf 6:=einem 7:=Ei.,2,"[[4], [5, 7]]",The egg marking is a number on an egg.,['# ::snt The egg marking is a number on an egg.\n(m / mark-01\n      :ARG1 (e / egg)\n      :ARG2 (n / number\n            :location (e2 / egg)))'],"[m, attr-instance, mark_01, attr-arg1, [e, attr-instance, egg], attr-arg2, [n, attr-instance, number, attr-location, [e2, attr-instance, egg]]]"
1465,1465,1465,1465,1765,12367,eierlegende-wollmilchsau,Für Eier-legende Woll-milch-sau gibt es eine Bild Vorstellung.,0_long,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Für 1:=Eier-legende 2:=Woll-milch-sau 3:=gibt 4:=es 5:=eine 6:=Bild 7:=Vorstellung.,1,,There is a picture presentation for the jack of all trades.,['# ::snt There is a picture presentation for the jack of all trades.\n(p / present-01\n      :ARG1 (p2 / picture)\n      :ARG3 (j / jack\n            :mod (a / all)\n            :mod (t / trades)))'],"[p, attr-instance, present_01, attr-arg1, [p2, attr-instance, picture], attr-arg3, [j, attr-instance, jack, attr-mod, [a, attr-instance, all], attr-mod, [t, attr-instance, trades]]]"
1466,1466,1466,1466,1766,12368,eierlegende-wollmilchsau,Eine Vorstellung von einem Tier das es nicht gibt.,1_long,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Vorstellung 2:=von 3:=einem 4:=Tier 5:=das 6:=es 7:=nicht 8:=gibt.,2,"[[1], [5, 6, 7, 8]]",An idea of ​​an animal that doesn't exist.,"[""# ::snt An idea of \u200b\u200ban animal that doesn't exist.\n(ii / idea\n      :topic (a / animal\n            :ARG1-of (e / exist-01\n                  :polarity -)))""]","[ii, attr-instance, idea, attr-topic, [a, attr-instance, animal, attr-arg1_of, [e, attr-instance, exist_01, attr-polarity, negative]]]"
1467,1467,1467,1467,1767,12369,eierlegende-wollmilchsau,In diesem Bild kommt vor: • ein Huhn das Eier legt,2_long,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=diesem 2:=Bild 3:=kommt 4:=vor: 5:=• 6:=ein 7:=Huhn 8:=das 9:=Eier 10:=legt,3,"[[0, 2, 3, 4], [7], [8, 9, 10]]",This picture shows: • a chicken laying eggs,['# ::snt This picture shows: • a chicken laying eggs\n(s / show-01\n      :ARG0 (p / picture\n            :mod (t / this))\n      :ARG1 (l / lay-01\n            :ARG0 (c / chicken)\n            :ARG1 (e / egg)))'],"[s, attr-instance, show_01, attr-arg0, [p, attr-instance, picture, attr-mod, [t, attr-instance, this]], attr-arg1, [l, attr-instance, lay_01, attr-arg0, [c, attr-instance, chicken], attr-arg1, [e, attr-instance, egg]]]"
1468,1468,1468,1468,1768,12370,eierlegende-wollmilchsau,In diesem Bild kommt vor: • ein Schaf das Wolle gibt,3_long,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=diesem 2:=Bild 3:=kommt 4:=vor: 5:=• 6:=ein 7:=Schaf 8:=das 9:=Wolle 10:=gibt,3,"[[0, 2, 3, 4], [7], [8, 9, 10]]",In this picture appears: • a sheep that gives wool,['# ::snt In this picture appears: • a sheep that gives wool\n(a / appear-01\n      :ARG1 (p / picture\n            :mod (t / this)\n            :consist-of (s / sheep\n                  :ARG0-of (g / give-01\n                        :ARG1 (w / wool)))))'],"[a, attr-instance, appear_01, attr-arg1, [p, attr-instance, picture, attr-mod, [t, attr-instance, this], attr-consist_of, [s, attr-instance, sheep, attr-arg0_of, [g, attr-instance, give_01, attr-arg1, [w, attr-instance, wool]]]]]"
1469,1469,1469,1469,1769,12371,eierlegende-wollmilchsau,In diesem Bild kommt vor: • eine Kuh die Milch gibt,4_long,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=diesem 2:=Bild 3:=kommt 4:=vor: 5:=• 6:=eine 7:=Kuh 8:=die 9:=Milch 10:=gibt,3,"[[0, 2, 3, 4], [7], [8, 9, 10]]",This picture shows: • a cow giving milk,['# ::snt This picture shows: • a cow giving milk\n(s / show-01\n      :ARG0 (p / picture\n            :mod (t / this))\n      :ARG1 (g / give-01\n            :ARG0 (c / cow)\n            :ARG1 (m / milk)))'],"[s, attr-instance, show_01, attr-arg0, [p, attr-instance, picture, attr-mod, [t, attr-instance, this]], attr-arg1, [g, attr-instance, give_01, attr-arg0, [c, attr-instance, cow], attr-arg1, [m, attr-instance, milk]]]"
1470,1470,1470,1470,1770,12372,eierlegende-wollmilchsau,In diesem Bild kommt vor: • ein Schwein das Fleisch gibt,5_long,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=diesem 2:=Bild 3:=kommt 4:=vor: 5:=• 6:=ein 7:=Schwein 8:=das 9:=Fleisch 10:=gibt,3,"[[0, 2, 3, 4], [7], [8, 9, 10]]",In this picture appears: • a pig that gives meat,['# ::snt In this picture appears: • a pig that gives meat\n(a / appear-01\n      :ARG1 (p / picture\n            :mod (t / this)\n            :consist-of (p2 / pig\n                  :ARG0-of (g / give-01\n                        :ARG1 (m / meat)))))'],"[a, attr-instance, appear_01, attr-arg1, [p, attr-instance, picture, attr-mod, [t, attr-instance, this], attr-consist_of, [p2, attr-instance, pig, attr-arg0_of, [g, attr-instance, give_01, attr-arg1, [m, attr-instance, meat]]]]]"
1471,1471,1471,1471,1772,12374,eierlegende-wollmilchsau,Eine Eier-legende Woll-milch-sau ist kein Tier.,0_short,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Eier-legende 2:=Woll-milch-sau 3:=ist 4:=kein 5:=Tier.,1,,A jack of all trades is not an animal.,['# ::snt A jack of all trades is not an animal.\n(a / animal\n      :polarity -\n      :domain (j / jack\n            :mod (t / trade\n                  :mod (a2 / all))))'],"[a, attr-instance, animal, attr-polarity, negative, attr-domain, [j, attr-instance, jack, attr-mod, [t, attr-instance, trade, attr-mod, [a2, attr-instance, all]]]]"
1472,1472,1472,1472,1773,12375,eierlegende-wollmilchsau,"Eier-legende Woll-milch-sau wird gesagt, wenn jemand alles kann.",1_short,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Eier-legende 1:=Woll-milch-sau 2:=wird 3:=gesagt, 4:=wenn 5:=jemand 6:=alles 7:=kann.",2,"[[0, 1, 2, 3], [4, 5, 6, 7]]",A jack of all trades is said to be someone who can do everything.,['# ::snt A jack of all trades is said to be someone who can do everything.\n(s / say-01\n      :ARG1 (j / jack-of-all-\n            :domain (s2 / someone\n                  :ARG0-of (d / do-02\n                        :ARG1 (e / everything)\n                        :ARG1-of (p / possible-01)))))'],"[s, attr-instance, say_01, attr-arg1, [j, attr-instance, jack_of_all_, attr-domain, [s2, attr-instance, someone, attr-arg0_of, [d, attr-instance, do_02, attr-arg1, [e, attr-instance, everything], attr-arg1_of, [p, attr-instance, possible_01]]]]]"
1473,1473,1473,1473,1774,12376,eierlegende-wollmilchsau,Oder alles nur gut ist (und es nichts schlechtes gibt).,2_short,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Oder 1:=alles 2:=nur 3:=gut 4:=ist 5:=(und 6:=es 7:=nichts 8:=schlechtes 9:=gibt).,2,"[[1, 2, 3, 4], [6, 7, 8, 9]]",Or everything is just good (and there is nothing bad).,['# ::snt Or everything is just good (and there is nothing bad).\n(o / or\n      :op2 (a / and\n            :op1 (g / good-02\n                  :ARG1 (e / everything)\n                  :mod (j / just))\n            :op2 (b / bad-07\n                  :ARG1 (n / nothing))))'],"[o, attr-instance, or, attr-op2, [a, attr-instance, and, attr-op1, [g, attr-instance, good_02, attr-arg1, [e, attr-instance, everything], attr-mod, [j, attr-instance, just]], attr-op2, [b, attr-instance, bad_07, attr-arg1, [n, attr-instance, nothing]]]]"
1474,1474,1474,1474,1775,12377,eierlegende-wollmilchsau,Zum Beispiel wenn: • etwas nur gut ist,3_short,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel 2:=wenn: 3:=• 4:=etwas 5:=nur 6:=gut 7:=ist,1,,"For example, if: • something is only good","['# ::snt For example, if: • something is only good\n(e / exemplify-01\n      :ARG0 (h / have-condition-91\n            :ARG2 (g / good-02\n                  :ARG1 (s / something)\n                  :mod (o / only))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_condition_91, attr-arg2, [g, attr-instance, good_02, attr-arg1, [s, attr-instance, something], attr-mod, [o, attr-instance, only]]]]"
1475,1475,1475,1475,1776,12378,eierlegende-wollmilchsau,Zum Beispiel wenn: • es nur Vorteile hat,4_short,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel 2:=wenn: 3:=• 4:=es 5:=nur 6:=Vorteile 7:=hat,1,,"For example, if: • it only has advantages","['# ::snt For example, if: • it only has advantages\n(e / exemplify-01\n      :ARG0 (h / have-condition-91\n            :ARG2 (a / advantage-01\n                  :ARG2 (ii / it)\n                  :mod (o / only))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_condition_91, attr-arg2, [a, attr-instance, advantage_01, attr-arg2, [ii, attr-instance, it], attr-mod, [o, attr-instance, only]]]]"
1476,1476,1476,1476,1777,12379,eierlegende-wollmilchsau,Zum Beispiel wenn: • alles Positiv ist,5_short,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel 2:=wenn: 3:=• 4:=alles 5:=Positiv 6:=ist,1,,"For example, if: • everything is positive","['# ::snt For example, if: • everything is positive\n(e / exemplify-01\n      :ARG0 (h / have-condition-91\n            :ARG2 (p / positive\n                  :domain (e2 / everything))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_condition_91, attr-arg2, [p, attr-instance, positive, attr-domain, [e2, attr-instance, everything]]]]"
1477,1477,1477,1477,1778,12380,eierlegende-wollmilchsau,Zum Beispiel wenn: • es keine Nachteile hat,6_short,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel 2:=wenn: 3:=• 4:=es 5:=keine 6:=Nachteile 7:=hat,1,,"For example, if: • it has no disadvantages","['# ::snt For example, if: • it has no disadvantages\n(e / exemplify-01\n      :ARG0 (h / have-condition-91\n            :ARG2 (a / advantage-01\n                  :polarity -\n                  :ARG2 (ii / it))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_condition_91, attr-arg2, [a, attr-instance, advantage_01, attr-polarity, negative, attr-arg2, [ii, attr-instance, it]]]]"
1478,1478,1478,1478,1779,12381,eierlegende-wollmilchsau,Zum Beispiel wenn: • jemand alles kann,7_short,Redewendungen,2013-10-21T08:18:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel 2:=wenn: 3:=• 4:=jemand 5:=alles 6:=kann,1,,"For example, if: • someone can do everything","['# ::snt For example, if: • someone can do everything\n(e / exemplify-01\n      :condition (p / possible-01\n            :ARG1 (d / do-02\n                  :ARG0 (s / someone)\n                  :ARG1 (e2 / everything))))']","[e, attr-instance, exemplify_01, attr-condition, [p, attr-instance, possible_01, attr-arg1, [d, attr-instance, do_02, attr-arg0, [s, attr-instance, someone], attr-arg1, [e2, attr-instance, everything]]]]"
1479,1479,1479,1479,1780,12382,eierwarmer,Ein Ei wird ge-kocht.,0_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Ei 2:=wird 3:=ge-kocht.,1,,An egg is boiled.,['# ::snt An egg is boiled.\n(b / boil-01\n      :ARG1 (e / egg))'],"[b, attr-instance, boil_01, attr-arg1, [e, attr-instance, egg]]"
1480,1480,1480,1480,1781,12383,eierwarmer,Damit es hart wird.,1_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=es 2:=hart 3:=wird.,1,,To make it hard.,['# ::snt To make it hard.\n(m / make-02\n      :ARG1 (h / hard-02\n            :ARG1 (ii / it)))'],"[m, attr-instance, make_02, attr-arg1, [h, attr-instance, hard_02, attr-arg1, [ii, attr-instance, it]]]"
1481,1481,1481,1481,1782,12384,eierwarmer,Und damit es besser schmeckt.,2_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=damit 2:=es 3:=besser 4:=schmeckt.,1,,And so that it tastes better.,['# ::snt And so that it tastes better.\n(a / and\n      :op2 (h / have-purpose-91\n            :ARG2 (t / taste-02\n                  :ARG1 (ii / it)\n                  :ARG2 (g / good-02\n                        :ARG2-of (h2 / have-degree-91\n                              :ARG1 ii\n                              :ARG3 (m / more))))))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, have_purpose_91, attr-arg2, [t, attr-instance, taste_02, attr-arg1, [ii, attr-instance, it], attr-arg2, [g, attr-instance, good_02, attr-arg2_of, [h2, attr-instance, have_degree_91, attr-arg1, ii, attr-arg3, [m, attr-instance, more]]]]]]"
1482,1482,1482,1482,1783,12385,eierwarmer,Und damit es warm wird.,3_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=damit 2:=es 3:=warm 4:=wird.,1,,And to keep it warm.,['# ::snt And to keep it warm.\n(a / and\n      :op2 (k / keep-02\n            :ARG1 (w / warm-07\n                  :ARG1 (ii / it))))'],"[a, attr-instance, and, attr-op2, [k, attr-instance, keep_02, attr-arg1, [w, attr-instance, warm_07, attr-arg1, [ii, attr-instance, it]]]]"
1483,1483,1483,1483,1784,12386,eierwarmer,Das warme Ei macht man in einen Eier-wärmer.,4_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=warme 2:=Ei 3:=macht 4:=man 5:=in 6:=einen 7:=Eier-wärmer.,1,,The warm egg is placed in an egg warmer.,['# ::snt The warm egg is placed in an egg warmer.\n(p / place-01\n      :ARG1 (e / egg\n            :ARG1-of (w / warm-07))\n      :ARG2 (e2 / egg\n            :ARG1-of (w2 / warm-07)))'],"[p, attr-instance, place_01, attr-arg1, [e, attr-instance, egg, attr-arg1_of, [w, attr-instance, warm_07]], attr-arg2, [e2, attr-instance, egg, attr-arg1_of, [w2, attr-instance, warm_07]]]"
1484,1484,1484,1484,1785,12387,eierwarmer,Damit das Ei länger warm bleibt.,5_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=das 2:=Ei 3:=länger 4:=warm 5:=bleibt.,1,,So that the egg stays warm longer.,['# ::snt So that the egg stays warm longer.\n(c / cause-01\n      :ARG1 (s / stay-01\n            :ARG1 (e / egg)\n            :ARG3 (w / warm-07\n                  :ARG1 e\n                  :ARG2-of (h / have-degree-91\n                        :ARG1 s\n                        :ARG3 (m / more)))))'],"[c, attr-instance, cause_01, attr-arg1, [s, attr-instance, stay_01, attr-arg1, [e, attr-instance, egg], attr-arg3, [w, attr-instance, warm_07, attr-arg1, e, attr-arg2_of, [h, attr-instance, have_degree_91, attr-arg1, s, attr-arg3, [m, attr-instance, more]]]]]"
1485,1485,1485,1485,1786,12388,eierwarmer,Eier-wärmer sind aus Stoff.,6_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eier-wärmer 1:=sind 2:=aus 3:=Stoff.,1,,Egg cozies are made of fabric.,['# ::snt Egg cozies are made of fabric.\n(m / make-01\n      :ARG1 (c / cozie\n            :mod (e / egg))\n      :ARG2 (f / fabric))'],"[m, attr-instance, make_01, attr-arg1, [c, attr-instance, cozie, attr-mod, [e, attr-instance, egg]], attr-arg2, [f, attr-instance, fabric]]"
1486,1486,1486,1486,1788,12390,eierwarmer,Es gibt Eier-wärmer für mehrere Eier.,8_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=Eier-wärmer 3:=für 4:=mehrere 5:=Eier.,1,,There are egg warmers for several eggs.,['# ::snt There are egg warmers for several eggs.\n(t / thing\n      :ARG0-of (w / warm-01\n            :ARG1 (e / egg))\n      :purpose (e2 / egg\n            :quant (s / several)))'],"[t, attr-instance, thing, attr-arg0_of, [w, attr-instance, warm_01, attr-arg1, [e, attr-instance, egg]], attr-purpose, [e2, attr-instance, egg, attr-quant, [s, attr-instance, several]]]"
1487,1487,1487,1487,1789,12391,eierwarmer,Das sind Warm-halte-behälter.,9_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=sind 2:=Warm-halte-behälter.,1,,These are warming containers.,['# ::snt These are warming containers.\n(c / container\n      :ARG0-of (w / warm-01)\n      :domain (t / this))'],"[c, attr-instance, container, attr-arg0_of, [w, attr-instance, warm_01], attr-domain, [t, attr-instance, this]]"
1488,1488,1488,1488,1790,12392,eierwarmer,Eier-wärmer gibt es seit dem 16. Jahr-hundert.,10_long,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eier-wärmer 1:=gibt 2:=es 3:=seit 4:=dem 5:=16. 6:=Jahr-hundert.,1,,Egg cozies have been around since the 16th century.,['# ::snt Egg cozies have been around since the 16th century.\n(b / be-located-at-91\n      :ARG1 (c / cozie\n            :mod (e / egg))\n      :ARG2 (a / around)\n      :time (s / since\n            :op1 (d / date-entity\n                  :century 16)))'],"[b, attr-instance, be_located_at_91, attr-arg1, [c, attr-instance, cozie, attr-mod, [e, attr-instance, egg]], attr-arg2, [a, attr-instance, around], attr-time, [s, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-century, 16]]]"
1489,1489,1489,1489,1791,12393,eierwarmer,Ein Eierwärmer ist eine Hülle für ein Ei.  \newline  \newline Man stellt ein Ei rein.,0_short,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Eierwärmer 2:=ist 3:=eine 4:=Hülle 5:=für 6:=ein 7:=Ei. 8:= 9:=\newline 10:= 11:=\newline 12:=Man 13:=stellt 14:=ein 15:=Ei 16:=rein.,2,"[[1, 2, 4, 5, 7], [12, 13, 15, 16]]",An egg cosy is a cover for an egg. \newline \newline You put an egg in it.,"['# ::snt An egg cosy is a cover for an egg.\n(c / cover-up-04\n      :ARG1 (e / egg)\n      :ARG2 (e2 / egg))', '# ::snt \\newline \\newline You put an egg in it.\n(m / multi-sentence\n      :snt1 (l / line\n            :mod (n / newline))\n      :snt2 (p / put-01\n            :ARG0 (y / you)\n            :ARG1 (e / egg)\n            :ARG2 (ii / it)))']","[c, attr-instance, cover_up_04, attr-arg1, [e, attr-instance, egg], attr-arg2, [e2, attr-instance, egg]]"
1490,1490,1490,1490,1792,12394,eierwarmer,Und macht einen Deckel darauf.,1_short,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=macht 2:=einen 3:=Deckel 4:=darauf.,1,,And put a lid on it.,['# ::snt And put a lid on it.\n(a / and\n      :op2 (p / put-01\n            :ARG1 (l / lid)\n            :ARG2 (ii / it)))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, put_01, attr-arg1, [l, attr-instance, lid], attr-arg2, [ii, attr-instance, it]]]"
1491,1491,1491,1491,1793,12395,eierwarmer,Damit das Ei warm bleibt.,2_short,Essen_und_Trinken,2019-04-04T09:58:35Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=das 2:=Ei 3:=warm 4:=bleibt.,1,,So that the egg stays warm.,['# ::snt So that the egg stays warm.\n(c / cause-01\n      :ARG1 (s / stay-01\n            :ARG1 (e / egg)\n            :ARG3 (w / warm-07\n                  :ARG1 e)))'],"[c, attr-instance, cause_01, attr-arg1, [s, attr-instance, stay_01, attr-arg1, [e, attr-instance, egg], attr-arg3, [w, attr-instance, warm_07, attr-arg1, e]]]"
1492,1492,1492,1492,1794,12396,eifersucht,Eifersucht ist Angst.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Eifersucht 1:=ist 2:=Angst.,1,,Jealousy is fear.,['# ::snt Jealousy is fear.\n(f / fear-01\n      :domain (j / jealousy))'],"[f, attr-instance, fear_01, attr-domain, [j, attr-instance, jealousy]]"
1493,1493,1493,1493,1795,12397,eifersucht,Die Angst verlassen zu werden.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Die 1:=Angst 2:=verlassen 3:=zu 4:=werden.,1,,The fear of being abandoned.,['# ::snt The fear of being abandoned.\n(f / fear-01\n      :ARG1 (a / abandon-01))'],"[f, attr-instance, fear_01, attr-arg1, [a, attr-instance, abandon_01]]"
1494,1494,1494,1494,1796,12398,eifersucht,Darum ist Eifersucht auch eine Verlust-angst.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Darum 1:=ist 2:=Eifersucht 3:=auch 4:=eine 5:=Verlust-angst.,1,,That is why jealousy is also a fear of loss.,['# ::snt That is why jealousy is also a fear of loss.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (f / fear-01\n            :ARG1 (l / lose-02)\n            :mod (a / also)\n            :domain (j / jealousy)))'],"[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [f, attr-instance, fear_01, attr-arg1, [l, attr-instance, lose_02], attr-mod, [a, attr-instance, also], attr-domain, [j, attr-instance, jealousy]]]"
1495,1495,1495,1495,1797,12399,eifersucht,Diese Angst kann Traurigkeit und Wut auslösen.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Diese 1:=Angst 2:=kann 3:=Traurigkeit 4:=und 5:=Wut 6:=auslösen.,2,"[[3], [5]]",This fear can trigger sadness and anger.,['# ::snt This fear can trigger sadness and anger.\n(p / possible-01\n      :ARG1 (t / trigger-01\n            :ARG0 (f / fear-01\n                  :mod (t2 / this))\n            :ARG1 (a / and\n                  :op1 (s / sad-02)\n                  :op2 (a2 / anger-01))))'],"[p, attr-instance, possible_01, attr-arg1, [t, attr-instance, trigger_01, attr-arg0, [f, attr-instance, fear_01, attr-mod, [t2, attr-instance, this]], attr-arg1, [a, attr-instance, and, attr-op1, [s, attr-instance, sad_02], attr-op2, [a2, attr-instance, anger_01]]]]"
1496,1496,1496,1496,1798,12400,eifersucht,Wobei Gedanken an Rache entstehen.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Wobei 1:=Gedanken 2:=an 3:=Rache 4:=entstehen.,1,,Which gives rise to thoughts of revenge.,['# ::snt Which gives rise to thoughts of revenge.\n(r / rise-01\n      :ARG0 (ii / it)\n      :ARG1 (t / think-01\n            :ARG1 (r2 / revenge)))'],"[r, attr-instance, rise_01, attr-arg0, [ii, attr-instance, it], attr-arg1, [t, attr-instance, think_01, attr-arg1, [r2, attr-instance, revenge]]]"
1497,1497,1497,1497,1799,12401,eifersucht,Oft kommt es auch zu Gewalt-taten.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Oft 1:=kommt 2:=es 3:=auch 4:=zu 5:=Gewalt-taten.,1,,Acts of violence also often occur.,['# ::snt Acts of violence also often occur.\n(a / act-02\n      :ARG1 (v / violence)\n      :frequency (o / often\n            :mod (a2 / also)))'],"[a, attr-instance, act_02, attr-arg1, [v, attr-instance, violence], attr-frequency, [o, attr-instance, often, attr-mod, [a2, attr-instance, also]]]"
1498,1498,1498,1498,1800,12402,eifersucht,Bei Eifersucht kommt es zu einer Kränkung.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Bei 1:=Eifersucht 2:=kommt 3:=es 4:=zu 5:=einer 6:=Kränkung.,1,,Jealousy leads to hurt feelings.,['# ::snt Jealousy leads to hurt feelings.\n(l / lead-03\n      :ARG0 (j / jealous-01)\n      :ARG2 (f / feel-01\n            :ARG1 (h / hurt-01)))'],"[l, attr-instance, lead_03, attr-arg0, [j, attr-instance, jealous_01], attr-arg2, [f, attr-instance, feel_01, attr-arg1, [h, attr-instance, hurt_01]]]"
1499,1499,1499,1499,1801,12403,eifersucht,Diese Kränkung kann einen Minderwertig-keits-gefühl auslösen.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Diese 1:=Kränkung 2:=kann 3:=einen 4:=Minderwertig-keits-gefühl 5:=auslösen.,1,,This insult can trigger a feeling of inferiority.,['# ::snt This insult can trigger a feeling of inferiority.\n(p / possible-01\n      :ARG1 (t / trigger-01\n            :ARG0 (ii / insult-01\n                  :mod (t2 / this))\n            :ARG1 (f / feel-01\n                  :ARG1 (ii2 / inferiority))))'],"[p, attr-instance, possible_01, attr-arg1, [t, attr-instance, trigger_01, attr-arg0, [ii, attr-instance, insult_01, attr-mod, [t2, attr-instance, this]], attr-arg1, [f, attr-instance, feel_01, attr-arg1, [ii2, attr-instance, inferiority]]]]"
1500,1500,1500,1500,1802,12404,eifersucht,Zum Beispiel: \newline Tom ist eifersüchtig.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Zum 1:=Beispiel: 2:=\newline 3:=Tom 4:=ist 5:=eifersüchtig.,1,,For example: \newline Tom is jealous.,"['# ::snt For example: \\newline Tom is jealous.\n(e / exemplify-01\n      :ARG0 (j / jealous-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Newline""\n                        :op2 ""Tom""))))']","[e, attr-instance, exemplify_01, attr-arg0, [j, attr-instance, jealous_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""newline"", attr-op2, ""tom""]]]]"
1501,1501,1501,1501,1803,12405,eifersucht,Er sieht wie Susi dem Peter einen Kuss gibt.,9_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Er 1:=sieht 2:=wie 3:=Susi 4:=dem 5:=Peter 6:=einen 7:=Kuss 8:=gibt.,2,"[[0, 1], [2, 3, 5, 7, 8]]",He sees Susi giving Peter a kiss.,"['# ::snt He sees Susi giving Peter a kiss.\n(s / see-01\n      :ARG0 (h / he)\n      :ARG1 (k / kiss-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Susi""))\n            :ARG1 (p2 / person\n                  :name (n2 / name\n                        :op1 ""Peter""))))']","[s, attr-instance, see_01, attr-arg0, [h, attr-instance, he], attr-arg1, [k, attr-instance, kiss_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""susi""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""peter""]]]]"
1502,1502,1502,1502,1804,12406,eifersucht,"Tom hat Angst davor: \newline Wenn Susi mit Peter weggeht, \newline dann wird er alleine sein.",10_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,"0:=Tom 1:=hat 2:=Angst 3:=davor: 4:=\newline 5:=Wenn 6:=Susi 7:=mit 8:=Peter 9:=weggeht, 10:=\newline 11:=dann 12:=wird 13:=er 14:=alleine 15:=sein.",4,"[[0, 1, 2, 3], [5, 6, 9], [7, 8], [11, 12, 13, 14, 15]]","Tom is afraid: \newline If Susi goes away with Peter, \newline then he will be alone.","['# ::snt Tom is afraid: \\newline If Susi goes away with Peter, \\newline then he will be alone.\n(f / fear-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Tom""))\n      :ARG1 (a / alone\n            :domain (p2 / person\n                  :name (n2 / name\n                        :op1 ""Susi""))\n            :condition (g / go-02\n                  :ARG0 p2\n                  :ARG4 (a2 / and\n                        :op1 (a3 / away)\n                        :op2 (p3 / person\n                              :name (n3 / name\n                                    :op1 ""Peter"")))\n                  :ARG4 (c / company\n                        :name (n4 / name\n                              :op1 ""Newline"")))))']","[f, attr-instance, fear_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""tom""]], attr-arg1, [a, attr-instance, alone, attr-domain, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""susi""]], attr-condition, [g, attr-instance, go_02, attr-arg0, p2, attr-arg4, [a2, attr-instance, and, attr-op1, [a3, attr-instance, away], attr-op2, [p3, attr-instance, person, attr-name, [n3, attr-instance, name, attr-op1, ""peter""]]], attr-arg4, [c, attr-instance, company, attr-name, [n4, attr-instance, name, attr-op1, ""newline""]]]]]"
1503,1503,1503,1503,1805,12407,eifersucht,Er mag Susi.,11_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Er 1:=mag 2:=Susi.,1,,He likes Susi.,"['# ::snt He likes Susi.\n(l / like-01\n      :ARG0 (h / he)\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Susi"")))']","[l, attr-instance, like_01, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""susi""]]]"
1504,1504,1504,1504,1806,12408,eifersucht,Aber jetzt liebt Susi den Peter.,12_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Aber 1:=jetzt 2:=liebt 3:=Susi 4:=den 5:=Peter.,1,,But now Susi loves Peter.,"['# ::snt But now Susi loves Peter.\n(c / contrast-01\n      :ARG2 (l / love-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Susi""))\n            :ARG1 (p2 / person\n                  :name (n2 / name\n                        :op1 ""Peter""))\n            :time (n3 / now)))']","[c, attr-instance, contrast_01, attr-arg2, [l, attr-instance, love_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""susi""]], attr-arg1, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""peter""]], attr-time, [n3, attr-instance, now]]]"
1505,1505,1505,1505,1807,12409,eifersucht,Tom wird traurig und wütend.,13_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Tom 1:=wird 2:=traurig 3:=und 4:=wütend.,2,"[[2], [4]]",Tom becomes sad and angry.,"['# ::snt Tom becomes sad and angry.\n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Tom""))\n      :ARG2 (a / and\n            :op1 (s / sad-02\n                  :ARG1 p)\n            :op2 (a2 / anger-01\n                  :ARG1 p)))']","[b, attr-instance, become_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""tom""]], attr-arg2, [a, attr-instance, and, attr-op1, [s, attr-instance, sad_02, attr-arg1, p], attr-op2, [a2, attr-instance, anger_01, attr-arg1, p]]]"
1506,1506,1506,1506,1808,12410,eifersucht,Er will sich das nicht gefallen lassen.,14_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Er 1:=will 2:=sich 3:=das 4:=nicht 5:=gefallen 6:=lassen.,1,,He doesn't want to put up with that.,"[""# ::snt He doesn't want to put up with that.\n(w / want-01\n      :ARG0 (h / he)\n      :ARG1 (p / put-up-12\n            :polarity -\n            :ARG0 h\n            :ARG1 (t / that)))""]","[w, attr-instance, want_01, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, put_up_12, attr-polarity, negative, attr-arg0, h, attr-arg1, [t, attr-instance, that]]]"
1507,1507,1507,1507,1809,12411,eifersucht,Er überlegt: \newline Wie er Susi und Peter eins auswischen kann.,15_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Er 1:=überlegt: 2:=\newline 3:=Wie 4:=er 5:=Susi 6:=und 7:=Peter 8:=eins 9:=auswischen 10:=kann.,3,"[[0, 1], [3, 4, 5, 8, 9, 10], [3, 4, 7, 8, 9, 10]]",He thinks: \newline How he can get one over on Susi and Peter.,"['# ::snt He thinks: \\newline How he can get one over on Susi and Peter.\n(t / think-01\n      :ARG0 (h / he)\n      :ARG1 (h2 / have-manner-91\n            :ARG1 (g / get-by-17\n                  :ARG0 h\n                  :ARG1 (a / and\n                        :op1 (p / person\n                              :name (n / name\n                                    :op1 ""Susi""))\n                        :op2 (p2 / person\n                              :name (n2 / name\n                                    :op1 ""Peter""))))\n            :ARG2 (w / way\n                  :name (n3 / name\n                        :op1 ""How""))))']","[t, attr-instance, think_01, attr-arg0, [h, attr-instance, he], attr-arg1, [h2, attr-instance, have_manner_91, attr-arg1, [g, attr-instance, get_by_17, attr-arg0, h, attr-arg1, [a, attr-instance, and, attr-op1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""susi""]], attr-op2, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""peter""]]]], attr-arg2, [w, attr-instance, way, attr-name, [n3, attr-instance, name, attr-op1, ""how""]]]]"
1508,1508,1508,1508,1810,12412,eifersucht,Tom fühlt sich schlecht.,16_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Tom 1:=fühlt 2:=sich 3:=schlecht.,1,,Tom feels bad.,"['# ::snt Tom feels bad.\n(f / feel-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Tom""))\n      :ARG1 (b / bad-07))']","[f, attr-instance, feel_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""tom""]], attr-arg1, [b, attr-instance, bad_07]]"
1509,1509,1509,1509,1811,12413,eifersucht,Er fühlt sich in seinem Stolz verletzt.,17_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Er 1:=fühlt 2:=sich 3:=in 4:=seinem 5:=Stolz 6:=verletzt.,1,,He feels his pride hurt.,['# ::snt He feels his pride hurt.\n(f / feel-01\n      :ARG0 (h / he)\n      :ARG1 (h2 / hurt-01\n            :ARG1 (p / pride-01\n                  :ARG0 h)))'],"[f, attr-instance, feel_01, attr-arg0, [h, attr-instance, he], attr-arg1, [h2, attr-instance, hurt_01, attr-arg1, [p, attr-instance, pride_01, attr-arg0, h]]]"
1510,1510,1510,1510,1812,12414,eifersucht,Eifersucht kann in Gedanken und Gefühlen vorkommen.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Eifersucht 1:=kann 2:=in 3:=Gedanken 4:=und 5:=Gefühlen 6:=vorkommen.,2,"[[3], [5]]",Jealousy can occur in thoughts and feelings.,['# ::snt Jealousy can occur in thoughts and feelings.\n(p / possible-01\n      :ARG1 (j / jealous-01\n            :manner (a / and\n                  :op1 (t / think-01)\n                  :op2 (f / feel-01))))'],"[p, attr-instance, possible_01, attr-arg1, [j, attr-instance, jealous_01, attr-manner, [a, attr-instance, and, attr-op1, [t, attr-instance, think_01], attr-op2, [f, attr-instance, feel_01]]]]"
1511,1511,1511,1511,1813,12415,eifersucht,"Wenn man eifersüchtig ist, \newline dann ist man unsicher.",1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,"0:=Wenn 1:=man 2:=eifersüchtig 3:=ist, 4:=\newline 5:=dann 6:=ist 7:=man 8:=unsicher.",2,"[[0, 1, 2, 3], [5, 6, 7, 8]]","When you are jealous, \newline you are insecure.","['# ::snt When you are jealous, \\newline you are insecure.\n(s / secure-02\n      :polarity -\n      :ARG1 (y / you)\n      :condition (j / jealous-01\n            :ARG0 y)\n      :ARG1-of (n / new-line-04))']","[s, attr-instance, secure_02, attr-polarity, negative, attr-arg1, [y, attr-instance, you], attr-condition, [j, attr-instance, jealous_01, attr-arg0, y], attr-arg1_of, [n, attr-instance, new_line_04]]"
1512,1512,1512,1512,1814,12416,eifersucht,Man hat Angst und Sorge.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Man 1:=hat 2:=Angst 3:=und 4:=Sorge.,2,"[[2], [4]]",People are afraid and worried.,['# ::snt People are afraid and worried.\n(a / and\n      :op1 (f / fear-01\n            :ARG0 (p / person))\n      :op2 (w / worry-01\n            :ARG1 p))'],"[a, attr-instance, and, attr-op1, [f, attr-instance, fear_01, attr-arg0, [p, attr-instance, person]], attr-op2, [w, attr-instance, worry_01, attr-arg1, p]]"
1513,1513,1513,1513,1815,12417,eifersucht,Weil man Besitz verliert.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-01-03T17:00:58Z,e800bebc9060331edfac65e663a55570,0:=Weil 1:=man 2:=Besitz 3:=verliert.,1,,Because you lose possessions.,['# ::snt Because you lose possessions.\n(c / cause-01\n      :ARG0 (l / lose-02\n            :ARG0 (y / you)\n            :ARG1 (p / possession)))'],"[c, attr-instance, cause_01, attr-arg0, [l, attr-instance, lose_02, attr-arg0, [y, attr-instance, you], attr-arg1, [p, attr-instance, possession]]]"
1514,1514,1514,1514,1817,12419,eiffelturm,Im Jahr 1789 war die Französische Revolution.,0_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Im 1:=Jahr 2:=1789 3:=war 4:=die 5:=Französische 6:=Revolution.,1,,The year 1789 was the French Revolution.,"['# ::snt The year 1789 was the French Revolution.\n(e / event\n      :name (n / name\n            :op1 ""French""\n            :op2 ""Revolution"")\n      :time (d / date-entity\n            :year 1789))']","[e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""french"", attr-op2, ""revolution""], attr-time, [d, attr-instance, date_entity, attr-year, 1789]]"
1515,1515,1515,1515,1818,12420,eiffelturm,Im Jahr 1889 war die 100-Jahr-feier zur Französischen Revolution.,1_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Im 1:=Jahr 2:=1889 3:=war 4:=die 5:=100-Jahr-feier 6:=zur 7:=Französischen 8:=Revolution.,1,,The year 1889 was the 100th anniversary of the French Revolution.,"['# ::snt The year 1889 was the 100th anniversary of the French Revolution.\n(a / anniversary\n      :topic (r / revolution-03\n            :ARG0 (c / country\n                  :name (n / name\n                        :op1 ""France"")))\n      :ord (o / ordinal-entity\n            :value 100)\n      :domain (d / date-entity\n            :year 1889))']","[a, attr-instance, anniversary, attr-topic, [r, attr-instance, revolution_03, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""france""]]], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 100], attr-domain, [d, attr-instance, date_entity, attr-year, 1889]]"
1516,1516,1516,1516,1819,12421,eiffelturm,Frankreich wollte zur Feier einen Turm haben.,2_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Frankreich 1:=wollte 2:=zur 3:=Feier 4:=einen 5:=Turm 6:=haben.,2,"[[0, 1, 5, 6], [2, 3]]",France wanted to have a tower to celebrate.,"['# ::snt France wanted to have a tower to celebrate.\n(w / want-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""France""))\n      :ARG1 (h / have-03\n            :ARG0 c\n            :ARG1 (t / tower\n                  :ARG1-of (c2 / celebrate-02\n                        :ARG0 c))))']","[w, attr-instance, want_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""france""]], attr-arg1, [h, attr-instance, have_03, attr-arg0, c, attr-arg1, [t, attr-instance, tower, attr-arg1_of, [c2, attr-instance, celebrate_02, attr-arg0, c]]]]"
1517,1517,1517,1517,1820,12422,eiffelturm,Frankreich hat gesagt: \newline Gustave Eiffel soll den Turm bauen.,3_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Frankreich 1:=hat 2:=gesagt: 3:=\newline 4:=Gustave 5:=Eiffel 6:=soll 7:=den 8:=Turm 9:=bauen.,2,"[[0, 1, 2], [4, 5, 6, 8, 9]]",France said: \newline Gustave Eiffel should build the tower.,"['# ::snt France said: \\newline Gustave Eiffel should build the tower.\n(s / say-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""France""))\n      :ARG1 (r / recommend-01\n            :ARG1 (b / build-01\n                  :ARG0 (p / person\n                        :name (n2 / name\n                              :op1 ""Gustave""\n                              :op2 ""Eiffel""))\n                  :ARG1 (t / tower))))']","[s, attr-instance, say_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""france""]], attr-arg1, [r, attr-instance, recommend_01, attr-arg1, [b, attr-instance, build_01, attr-arg0, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""gustave"", attr-op2, ""eiffel""]], attr-arg1, [t, attr-instance, tower]]]]"
1518,1518,1518,1518,1821,12423,eiffelturm,Er hat auch beim Bau von der Freiheits-statue mit gemacht.,4_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Er 1:=hat 2:=auch 3:=beim 4:=Bau 5:=von 6:=der 7:=Freiheits-statue 8:=mit 9:=gemacht.,1,,He also helped build the Statue of Liberty.,"['# ::snt He also helped build the Statue of Liberty.\n(h / help-01\n      :ARG0 (h2 / he)\n      :ARG1 (b / build-01\n            :ARG1 (s / statue\n                  :name (n / name\n                        :op1 ""Statute""\n                        :op2 ""of""\n                        :op3 ""Liberty"")))\n      :mod (a / also))']","[h, attr-instance, help_01, attr-arg0, [h2, attr-instance, he], attr-arg1, [b, attr-instance, build_01, attr-arg1, [s, attr-instance, statue, attr-name, [n, attr-instance, name, attr-op1, ""statute"", attr-op2, ""of"", attr-op3, ""liberty""]]], attr-mod, [a, attr-instance, also]]"
1519,1519,1519,1519,1822,12424,eiffelturm,"Im Jahr 1887 haben Arbeiter angefangen, \newline den Eiffel-turm zu bauen.",5_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,"0:=Im 1:=Jahr 2:=1887 3:=haben 4:=Arbeiter 5:=angefangen, 6:=\newline 7:=den 8:=Eiffel-turm 9:=zu 10:=bauen.",3,"[[0, 1, 2], [3, 4, 5], [8, 9, 10]]","In 1887, workers began building the Eiffel Tower.","['# ::snt In 1887, workers began building the Eiffel Tower.\n(b / begin-01\n      :ARG0 (p / person\n            :ARG0-of (w / work-01))\n      :ARG1 (b2 / build-01\n            :ARG0 p\n            :ARG1 (t / tower\n                  :name (n / name\n                        :op1 ""Eiffel""\n                        :op2 ""Tower"")))\n      :time (d / date-entity\n            :year 1886))']","[b, attr-instance, begin_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [w, attr-instance, work_01]], attr-arg1, [b2, attr-instance, build_01, attr-arg0, p, attr-arg1, [t, attr-instance, tower, attr-name, [n, attr-instance, name, attr-op1, ""eiffel"", attr-op2, ""tower""]]], attr-time, [d, attr-instance, date_entity, attr-year, 1886]]"
1520,1520,1520,1520,1823,12425,eiffelturm,Im Jahr 1889 waren sie fertig.,6_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Im 1:=Jahr 2:=1889 3:=waren 4:=sie 5:=fertig.,1,,In 1889 they were finished.,['# ::snt In 1889 they were finished.\n(f / finish-01\n      :ARG1 (t / they)\n      :time (d / date-entity\n            :year 1889))'],"[f, attr-instance, finish_01, attr-arg1, [t, attr-instance, they], attr-time, [d, attr-instance, date_entity, attr-year, 1889]]"
1521,1521,1521,1521,1824,12426,eiffelturm,Zwischen 80 und 250 Arbeiter haben am Turm mit gearbeitet.,7_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Zwischen 1:=80 2:=und 3:=250 4:=Arbeiter 5:=haben 6:=am 7:=Turm 8:=mit 9:=gearbeitet.,2,"[[1], [3]]",Between 80 and 250 workers worked on the tower.,['# ::snt Between 80 and 250 workers worked on the tower.\n(w / work-01\n      :ARG0 (p / person)\n      :ARG0 p\n      :quant (b / between\n            :op1 80\n            :op2 250)\n      :ARG1 (t / tower))'],"[w, attr-instance, work_01, attr-arg0, [p, attr-instance, person], attr-arg0, p, attr-quant, [b, attr-instance, between, attr-op1, 80, attr-op2, 250], attr-arg1, [t, attr-instance, tower]]"
1522,1522,1522,1522,1825,12427,eiffelturm,Ein Arbeiter ist dabei gestorben.,8_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Ein 1:=Arbeiter 2:=ist 3:=dabei 4:=gestorben.,1,,One worker died.,['# ::snt One worker died.\n(d / die-01\n      :ARG1 (p / person\n            :quant 1\n            :ARG0-of (w / work-01)))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-quant, 1, attr-arg0_of, [w, attr-instance, work_01]]]"
1523,1523,1523,1523,1827,12429,eiffelturm,Der Turm soll nach 20 Jahren wieder abgebaut werden.,10_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Der 1:=Turm 2:=soll 3:=nach 4:=20 5:=Jahren 6:=wieder 7:=abgebaut 8:=werden.,2,"[[1, 2, 6, 7, 8], [3, 4, 5]]",The tower is to be dismantled after 20 years.,['# ::snt The tower is to be dismantled after 20 years.\n(d / dismantle-01\n      :ARG1 (t / tower)\n      :time (a / after\n            :quant (t2 / temporal-quantity\n                  :quant 20\n                  :unit (y / year))))'],"[d, attr-instance, dismantle_01, attr-arg1, [t, attr-instance, tower], attr-time, [a, attr-instance, after, attr-quant, [t2, attr-instance, temporal_quantity, attr-quant, 20, attr-unit, [y, attr-instance, year]]]]"
1524,1524,1524,1524,1828,12430,eiffelturm,Aber der Turm war auch praktisch.,11_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Aber 1:=der 2:=Turm 3:=war 4:=auch 5:=praktisch.,1,,But the tower was also practical.,['# ::snt But the tower was also practical.\n(c / contrast-01\n      :ARG2 (p / practical-03\n            :ARG1 (t / tower)\n            :mod (a / also)))'],"[c, attr-instance, contrast_01, attr-arg2, [p, attr-instance, practical_03, attr-arg1, [t, attr-instance, tower], attr-mod, [a, attr-instance, also]]]"
1525,1525,1525,1525,1829,12431,eiffelturm,Der Turm ist auch ein Radio-sende-turm.,12_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Der 1:=Turm 2:=ist 3:=auch 4:=ein 5:=Radio-sende-turm.,1,,The tower is also a radio transmission tower.,['# ::snt The tower is also a radio transmission tower.\n(t / tower\n      :mod (a / also)\n      :purpose (t2 / transmit-01\n            :ARG1 (r / radio))\n      :domain (t3 / tower))'],"[t, attr-instance, tower, attr-mod, [a, attr-instance, also], attr-purpose, [t2, attr-instance, transmit_01, attr-arg1, [r, attr-instance, radio]], attr-domain, [t3, attr-instance, tower]]"
1526,1526,1526,1526,1830,12432,eiffelturm,Und die Leute haben sich an den Turm gewöhnt.,13_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Und 1:=die 2:=Leute 3:=haben 4:=sich 5:=an 6:=den 7:=Turm 8:=gewöhnt.,1,,And people have gotten used to the tower.,['# ::snt And people have gotten used to the tower.\n(a / and\n      :op2 (g / get-03\n            :ARG1 (p / person)\n            :ARG2 (u / use-02\n                  :ARG0 p\n                  :ARG1 (t / tower))))'],"[a, attr-instance, and, attr-op2, [g, attr-instance, get_03, attr-arg1, [p, attr-instance, person], attr-arg2, [u, attr-instance, use_02, attr-arg0, p, attr-arg1, [t, attr-instance, tower]]]]"
1527,1527,1527,1527,1831,12433,eiffelturm,Die Leute wollten den Turm behalten.,14_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Die 1:=Leute 2:=wollten 3:=den 4:=Turm 5:=behalten.,1,,People wanted to keep the tower.,['# ::snt People wanted to keep the tower.\n(w / want-01\n      :ARG0 (p / person)\n      :ARG1 (k / keep-01\n            :ARG0 p\n            :ARG1 (t / tower)))'],"[w, attr-instance, want_01, attr-arg0, [p, attr-instance, person], attr-arg1, [k, attr-instance, keep_01, attr-arg0, p, attr-arg1, [t, attr-instance, tower]]]"
1528,1528,1528,1528,1832,12434,eiffelturm,Viele Menschen kommen jedes Jahr zum Eiffel-turm.,15_long,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Viele 1:=Menschen 2:=kommen 3:=jedes 4:=Jahr 5:=zum 6:=Eiffel-turm.,2,"[[0, 1, 2, 5, 6], [3, 4]]",Many people come to the Eiffel Tower every year.,"['# ::snt Many people come to the Eiffel Tower every year.\n(c / come-01\n      :ARG1 (p / person\n            :quant (m / many))\n      :ARG4 (t / tower\n            :name (n / name\n                  :op1 ""Eiffel""\n                  :op2 ""Tower""))\n      :frequency (r / rate-entity-91\n            :ARG3 (t2 / temporal-quantity\n                  :quant 1\n                  :unit (y / year))))']","[c, attr-instance, come_01, attr-arg1, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg4, [t, attr-instance, tower, attr-name, [n, attr-instance, name, attr-op1, ""eiffel"", attr-op2, ""tower""]], attr-frequency, [r, attr-instance, rate_entity_91, attr-arg3, [t2, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [y, attr-instance, year]]]]"
1529,1529,1529,1529,1834,12436,eiffelturm,Der Eiffel-turm ist ein Fach-werk-turm aus Eisen.,0_short,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Der 1:=Eiffel-turm 2:=ist 3:=ein 4:=Fach-werk-turm 5:=aus 6:=Eisen.,2,"[[4], [5, 6]]",The Eiffel Tower is a half-timbered tower made of iron.,"['# ::snt The Eiffel Tower is a half-timbered tower made of iron.\n(t / tower\n      :ARG1-of (t2 / time-01\n            :degree (h / half))\n      :ARG1-of (m / make-01\n            :ARG2 (ii / iron))\n      :domain (t3 / tower\n            :name (n / name\n                  :op1 ""Eiffel""\n                  :op2 ""Tower"")))']","[t, attr-instance, tower, attr-arg1_of, [t2, attr-instance, time_01, attr-degree, [h, attr-instance, half]], attr-arg1_of, [m, attr-instance, make_01, attr-arg2, [ii, attr-instance, iron]], attr-domain, [t3, attr-instance, tower, attr-name, [n, attr-instance, name, attr-op1, ""eiffel"", attr-op2, ""tower""]]]"
1530,1530,1530,1530,1835,12437,eiffelturm,"Der Turm steht in Paris, Frankreich.",1_short,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,"0:=Der 1:=Turm 2:=steht 3:=in 4:=Paris, 5:=Frankreich.",2,"[[4], [5]]","The tower is located in Paris, France.","['# ::snt The tower is located in Paris, France.\n(b / be-located-at-91\n      :ARG1 (t / tower)\n      :ARG2 (c / city\n            :name (n / name\n                  :op1 ""Paris"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""France""))))']","[b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, tower], attr-arg2, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""paris""], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""france""]]]]"
1531,1531,1531,1531,1836,12438,eiffelturm,Der Turm ist das Wahr-zeichen von Paris.,2_short,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,0:=Der 1:=Turm 2:=ist 3:=das 4:=Wahr-zeichen 5:=von 6:=Paris.,1,,The tower is the landmark of Paris.,"['# ::snt The tower is the landmark of Paris.\n(l / landmark\n      :domain (t / tower)\n      :poss (c / city\n            :name (n / name\n                  :op1 ""Paris"")))']","[l, attr-instance, landmark, attr-domain, [t, attr-instance, tower], attr-poss, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""paris""]]]"
1532,1532,1532,1532,1837,12439,eiffelturm,"Er ist 324 Meter hoch, \newline und hat 1700 Stufen.",3_short,Ort,2015-03-31T17:25:55Z,45975183761f50ed006efcbab4df0803,"0:=Er 1:=ist 2:=324 3:=Meter 4:=hoch, 5:=\newline 6:=und 7:=hat 8:=1700 9:=Stufen.",2,"[[2, 3, 4], [7, 8, 9]]","It is 324 meters high, \newline and has 1700 steps.","['# ::snt It is 324 meters high, \\newline and has 1700 steps.\n(a / and\n      :op1 (h / high-02\n            :ARG1 (ii / it)\n            :ARG2 (d / distance-quantity\n                  :quant 324\n                  :unit (m / meter))\n            :mod (l / line\n                  :name (n / name\n                        :op1 ""Newline"")))\n      :op2 (h2 / have-03\n            :ARG0 ii\n            :ARG1 (s / step-01\n                  :quant 1700\n                  :ARG1 ii)))']","[a, attr-instance, and, attr-op1, [h, attr-instance, high_02, attr-arg1, [ii, attr-instance, it], attr-arg2, [d, attr-instance, distance_quantity, attr-quant, 324, attr-unit, [m, attr-instance, meter]], attr-mod, [l, attr-instance, line, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]], attr-op2, [h2, attr-instance, have_03, attr-arg0, ii, attr-arg1, [s, attr-instance, step_01, attr-quant, 1700, attr-arg1, ii]]]"
1533,1533,1533,1533,1838,12440,eigentum,"Wenn man  Eigentum hat,  \newline ist man Eigentümer.",0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-03-30T07:09:32Z,bd2d2b337209f330d5f813c36f304815,"0:=Wenn 1:=man 2:= 3:=Eigentum 4:=hat, 5:= 6:=\newline 7:=ist 8:=man 9:=Eigentümer.",2,"[[0, 1, 3, 4], [7, 8, 9]]","If you own property, \newline you are an owner.","['# ::snt If you own property, \\newline you are an owner.\n(o / own-01\n      :ARG0 (y / you)\n      :ARG1 (p / property)\n      :ARG1-of (n / newline-00)\n      :condition (o2 / own-01\n            :ARG0 y\n            :ARG1 p))']","[o, attr-instance, own_01, attr-arg0, [y, attr-instance, you], attr-arg1, [p, attr-instance, property], attr-arg1_of, [n, attr-instance, newline_00], attr-condition, [o2, attr-instance, own_01, attr-arg0, y, attr-arg1, p]]"
1534,1534,1534,1534,1839,12441,eigentum,Eigentum ist ge-schützt.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-03-30T07:09:32Z,bd2d2b337209f330d5f813c36f304815,0:=Eigentum 1:=ist 2:=ge-schützt.,1,,Property is protected.,['# ::snt Property is protected.\n(p / protect-01\n      :ARG1 (p2 / property))'],"[p, attr-instance, protect_01, attr-arg1, [p2, attr-instance, property]]"
1535,1535,1535,1535,1840,12442,eigentum,Das steht im Grund-gesetz.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-03-30T07:09:32Z,bd2d2b337209f330d5f813c36f304815,0:=Das 1:=steht 2:=im 3:=Grund-gesetz.,1,,That's what the constitution says.,"[""# ::snt That's what the constitution says.\n(s / say-01\n      :ARG0 (c / constitution)\n      :ARG1 (t / that))""]","[s, attr-instance, say_01, attr-arg0, [c, attr-instance, constitution], attr-arg1, [t, attr-instance, that]]"
1536,1536,1536,1536,1841,12443,eigentum,Eigentum ist etwas das einem selbst gehört.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-03-30T07:09:32Z,bd2d2b337209f330d5f813c36f304815,0:=Eigentum 1:=ist 2:=etwas 3:=das 4:=einem 5:=selbst 6:=gehört.,2,"[[0, 1, 2], [3, 4, 5, 6]]",Property is something that belongs to oneself.,['# ::snt Property is something that belongs to oneself.\n(s / something\n      :ARG0-of (b / belong-01\n            :ARG1 (o / oneself)\n            :domain (p / property)))'],"[s, attr-instance, something, attr-arg0_of, [b, attr-instance, belong_01, attr-arg1, [o, attr-instance, oneself], attr-domain, [p, attr-instance, property]]]"
1537,1537,1537,1537,1843,12445,eigentum,"Man darf alleine entscheiden, \newline was man damit macht.",2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-03-30T07:09:32Z,bd2d2b337209f330d5f813c36f304815,"0:=Man 1:=darf 2:=alleine 3:=entscheiden, 4:=\newline 5:=was 6:=man 7:=damit 8:=macht.",2,"[[0, 1, 2, 3], [5, 6, 7, 8]]",You can decide for yourself what to do with it.,['# ::snt You can decide for yourself what to do with it.\n(p / possible-01\n      :ARG1 (d / decide-01\n            :ARG0 (y / you)\n            :ARG1 (t / thing\n                  :ARG1-of (d2 / do-02\n                        :ARG0 y\n                        :ARG2 (ii / it)))\n            :mod (b / by-oneself)))'],"[p, attr-instance, possible_01, attr-arg1, [d, attr-instance, decide_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [d2, attr-instance, do_02, attr-arg0, y, attr-arg2, [ii, attr-instance, it]]], attr-mod, [b, attr-instance, by_oneself]]]"
1538,1538,1538,1538,1844,12446,eigenverantwortung,Bei der Selbstbestimmung hat man auch Eigen-verantwortung.,0_long,Selbstbestimmung|Seiten_mit_defekten_Dateilinks,2012-10-25T08:45:26Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Bei 1:=der 2:=Selbstbestimmung 3:=hat 4:=man 5:=auch 6:=Eigen-verantwortung.,2,"[[0, 2], [3, 4, 5, 6]]",With self-determination you also have personal responsibility.,['# ::snt With self-determination you also have personal responsibility.\n(r / responsible-03\n      :ARG0 (y / you)\n      :ARG1-of (p / personal-02)\n      :mod (a / also)\n      :condition (d / decide-01\n            :ARG0 y\n            :ARG3 y))'],"[r, attr-instance, responsible_03, attr-arg0, [y, attr-instance, you], attr-arg1_of, [p, attr-instance, personal_02], attr-mod, [a, attr-instance, also], attr-condition, [d, attr-instance, decide_01, attr-arg0, y, attr-arg3, y]]"
1539,1539,1539,1539,1845,12447,eigenverantwortung,Man muss die Folgen selbst übernehmen.,1_long,Selbstbestimmung|Seiten_mit_defekten_Dateilinks,2012-10-25T08:45:26Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Man 1:=muss 2:=die 3:=Folgen 4:=selbst 5:=übernehmen.,1,,You have to accept the consequences yourself.,['# ::snt You have to accept the consequences yourself.\n(o / obligate-01\n      :ARG1 (y / you)\n      :ARG2 (a / accept-01\n            :ARG0 y\n            :ARG1 (c / consequence-03\n                  :ARG3 y)))'],"[o, attr-instance, obligate_01, attr-arg1, [y, attr-instance, you], attr-arg2, [a, attr-instance, accept_01, attr-arg0, y, attr-arg1, [c, attr-instance, consequence_03, attr-arg3, y]]]"
1540,1540,1540,1540,1846,12448,eigenverantwortung,"Für das, was man tut.",2_long,Selbstbestimmung|Seiten_mit_defekten_Dateilinks,2012-10-25T08:45:26Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,"0:=Für 1:=das, 2:=was 3:=man 4:=tut.",1,,For what you do.,['# ::snt For what you do.\n(c / cause-01\n      :ARG0 (t / thing\n            :ARG1-of (d / do-02\n                  :ARG0 (y / you))))'],"[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you]]]]"
1541,1541,1541,1541,1850,12452,einen-schlussstrich-ziehen,Und kommt aus Deutschland.,1_long,Redewendungen|Seiten_mit_defekten_Dateilinks,2021-12-30T22:23:38Z,e800bebc9060331edfac65e663a55570,0:=Und 1:=kommt 2:=aus 3:=Deutschland.,1,,And comes from Germany.,"['# ::snt And comes from Germany.\n(a / and\n      :op2 (c / come-01\n            :ARG3 (c2 / country\n                  :name (n / name\n                        :op1 ""Germany""))))']","[a, attr-instance, and, attr-op2, [c, attr-instance, come_01, attr-arg3, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]]"
1542,1542,1542,1542,1851,12453,einen-schlussstrich-ziehen,Vielleicht kommt dieser Spruch aus der Buchführung.,2_long,Redewendungen|Seiten_mit_defekten_Dateilinks,2021-12-30T22:23:38Z,e800bebc9060331edfac65e663a55570,0:=Vielleicht 1:=kommt 2:=dieser 3:=Spruch 4:=aus 5:=der 6:=Buchführung.,1,,Maybe this saying comes from accounting.,['# ::snt Maybe this saying comes from accounting.\n(p / possible-01\n      :ARG1 (c / come-03\n            :ARG1 (s / say-01\n                  :mod (t / this))\n            :ARG2 (a / account-01)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, come_03, attr-arg1, [s, attr-instance, say_01, attr-mod, [t, attr-instance, this]], attr-arg2, [a, attr-instance, account_01]]]"
1543,1543,1543,1543,1852,12454,einen-schlussstrich-ziehen,"Weil wenn ein Buchhalter eine waagerechte Linie unter ein Konto zieht,  \newline dann schließt dieser eine Rechnung ab.",3_long,Redewendungen|Seiten_mit_defekten_Dateilinks,2021-12-30T22:23:38Z,e800bebc9060331edfac65e663a55570,"0:=Weil 1:=wenn 2:=ein 3:=Buchhalter 4:=eine 5:=waagerechte 6:=Linie 7:=unter 8:=ein 9:=Konto 10:=zieht, 11:= 12:=\newline 13:=dann 14:=schließt 15:=dieser 16:=eine 17:=Rechnung 18:=ab.",3,"[[0, 1, 3, 4, 5, 6, 10], [6, 7, 9], [13, 14, 15, 16, 17, 18]]","Because when an accountant draws a horizontal line under an account, \newline he closes an account.","['# ::snt Because when an accountant draws a horizontal line under an account, \\newline he closes an account.\n(c / cause-01\n      :ARG0 (c2 / close-01\n            :ARG0 (a / accountant)\n            :ARG1 (a2 / account)\n            :condition (d / draw-01\n                  :ARG0 a\n                  :ARG1 (l / line\n                        :mod (h / horizontal))\n                  :location (u / under\n                        :op1 (a3 / account)))\n            :ARG1-of (m / mean-01\n                  :ARG2 l\n                  :mod (n / newline))))']","[c, attr-instance, cause_01, attr-arg0, [c2, attr-instance, close_01, attr-arg0, [a, attr-instance, accountant], attr-arg1, [a2, attr-instance, account], attr-condition, [d, attr-instance, draw_01, attr-arg0, a, attr-arg1, [l, attr-instance, line, attr-mod, [h, attr-instance, horizontal]], attr-location, [u, attr-instance, under, attr-op1, [a3, attr-instance, account]]], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, l, attr-mod, [n, attr-instance, newline]]]]"
1544,1544,1544,1544,1854,12456,einen-schlussstrich-ziehen,"Wenn man einen Schlussstrich unter etwas zieht, \newline dann schließt man etwas ab.",1_short,Redewendungen|Seiten_mit_defekten_Dateilinks,2021-12-30T22:23:38Z,e800bebc9060331edfac65e663a55570,"0:=Wenn 1:=man 2:=einen 3:=Schlussstrich 4:=unter 5:=etwas 6:=zieht, 7:=\newline 8:=dann 9:=schließt 10:=man 11:=etwas 12:=ab.",3,"[[0, 1, 3, 6], [3, 4, 5], [8, 9, 10, 11, 12]]","When you draw a line under something, \newline then you are closing something.","['# ::snt When you draw a line under something, \\newline then you are closing something.\n(c / close-01\n      :ARG0 (y / you)\n      :ARG1 (s / something)\n      :time (d / draw-line\n            :mod (s2 / string-entity\n                  :value ""newline"")\n            :location (u / under\n                  :op1 (s3 / something))))']","[c, attr-instance, close_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-time, [d, attr-instance, draw_line, attr-mod, [s2, attr-instance, string_entity, attr-value, ""newline""], attr-location, [u, attr-instance, under, attr-op1, [s3, attr-instance, something]]]]"
1545,1545,1545,1545,1856,12458,einfache-sprache,Schwierige Fremd-wörter werden bei Einfacher Sprache erklärt.,0_long,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,0:=Schwierige 1:=Fremd-wörter 2:=werden 3:=bei 4:=Einfacher 5:=Sprache 6:=erklärt.,1,,Difficult foreign words are explained in simple language.,['# ::snt Difficult foreign words are explained in simple language.\n(e / explain-01\n      :ARG1 (w / word\n            :mod (f / foreign)\n            :ARG1-of (d / difficult-02))\n      :medium (l / language\n            :ARG1-of (s / simple-02)))'],"[e, attr-instance, explain_01, attr-arg1, [w, attr-instance, word, attr-mod, [f, attr-instance, foreign], attr-arg1_of, [d, attr-instance, difficult_02]], attr-medium, [l, attr-instance, language, attr-arg1_of, [s, attr-instance, simple_02]]]"
1546,1546,1546,1546,1857,12459,einfache-sprache,Für Einfache Sprache gibt es keine genauen Regeln.,1_long,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,0:=Für 1:=Einfache 2:=Sprache 3:=gibt 4:=es 5:=keine 6:=genauen 7:=Regeln.,1,,There are no exact rules for simple language.,['# ::snt There are no exact rules for simple language.\n(r / rule-01\n      :polarity -\n      :ARG3 (l / language\n            :ARG1-of (s / simple-02))\n      :mod (e / exact))'],"[r, attr-instance, rule_01, attr-polarity, negative, attr-arg3, [l, attr-instance, language, attr-arg1_of, [s, attr-instance, simple_02]], attr-mod, [e, attr-instance, exact]]"
1547,1547,1547,1547,1858,12460,einfache-sprache,Einfache Sprache ist für viele Menschen wichtig.,2_long,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,0:=Einfache 1:=Sprache 2:=ist 3:=für 4:=viele 5:=Menschen 6:=wichtig.,1,,Simple language is important for many people.,['# ::snt Simple language is important for many people.\n(ii / important-01\n      :ARG1 (l / language\n            :ARG1-of (s / simple-02))\n      :ARG2 (p / person\n            :quant (m / many)))'],"[ii, attr-instance, important_01, attr-arg1, [l, attr-instance, language, attr-arg1_of, [s, attr-instance, simple_02]], attr-arg2, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]]"
1548,1548,1548,1548,1859,12461,einfache-sprache,Mit Einfacher Sprache können viele Menschen Texte verstehen.,3_long,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,0:=Mit 1:=Einfacher 2:=Sprache 3:=können 4:=viele 5:=Menschen 6:=Texte 7:=verstehen.,1,,"With simple language, many people can understand texts.","['# ::snt With simple language, many people can understand texts.\n(p / possible-01\n      :ARG1 (u / understand-01\n            :ARG0 (p2 / person\n                  :quant (m / many))\n            :ARG1 (t / text))\n      :instrument (l / language\n            :ARG1-of (s / simple-02)))']","[p, attr-instance, possible_01, attr-arg1, [u, attr-instance, understand_01, attr-arg0, [p2, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [t, attr-instance, text]], attr-instrument, [l, attr-instance, language, attr-arg1_of, [s, attr-instance, simple_02]]]"
1549,1549,1549,1549,1861,12463,einfache-sprache,Texte in Einfacher Sprache helfen beim Lesen.,5_long,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,0:=Texte 1:=in 2:=Einfacher 3:=Sprache 4:=helfen 5:=beim 6:=Lesen.,1,,Texts in simple language help with reading.,['# ::snt Texts in simple language help with reading.\n(h / help-01\n      :ARG0 (t / text\n            :medium (l / language\n                  :ARG1-of (s / simple-02)))\n      :ARG1 (r / read-01))'],"[h, attr-instance, help_01, attr-arg0, [t, attr-instance, text, attr-medium, [l, attr-instance, language, attr-arg1_of, [s, attr-instance, simple_02]]], attr-arg1, [r, attr-instance, read_01]]"
1550,1550,1550,1550,1862,12464,einfache-sprache,Bei der Einfacher Sprache können die Sätze bis zu 15 Wörter haben.,6_long,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,0:=Bei 1:=der 2:=Einfacher 3:=Sprache 4:=können 5:=die 6:=Sätze 7:=bis 8:=zu 9:=15 10:=Wörter 11:=haben.,1,,"In Simple Language, sentences can have up to 15 words.","['# ::snt In Simple Language, sentences can have up to 15 words.\n(p / possible-01\n      :ARG1 (h / have-03\n            :ARG0 (s / sentence)\n            :ARG1 (w / word\n                  :quant (u / up-to\n                        :op1 15)))\n      :prep-in (l / language\n            :ARG1-of (s2 / simple-02)))']","[p, attr-instance, possible_01, attr-arg1, [h, attr-instance, have_03, attr-arg0, [s, attr-instance, sentence], attr-arg1, [w, attr-instance, word, attr-quant, [u, attr-instance, up_to, attr-op1, 15]]], attr-prep_in, [l, attr-instance, language, attr-arg1_of, [s2, attr-instance, simple_02]]]"
1551,1551,1551,1551,1863,12465,einfache-sprache,"Das heißt,  \newline die Sätze können länger als bei Leichter Sprache sein.",7_long,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,"0:=Das 1:=heißt, 2:= 3:=\newline 4:=die 5:=Sätze 6:=können 7:=länger 8:=als 9:=bei 10:=Leichter 11:=Sprache 12:=sein.",1,,This means that \newline the sentences can be longer than in Easy Language.,['# ::snt This means that \\newline the sentences can be longer than in Easy Language.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (p / possible-01\n            :ARG1 (l / long-03\n                  :ARG1 (s / sentence)\n                  :ARG2-of (h / have-degree-91\n                        :ARG1 s\n                        :ARG3 (m2 / more)\n                        :ARG4 (l2 / language\n                              :ARG1-of (e / easy-05))))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [p, attr-instance, possible_01, attr-arg1, [l, attr-instance, long_03, attr-arg1, [s, attr-instance, sentence], attr-arg2_of, [h, attr-instance, have_degree_91, attr-arg1, s, attr-arg3, [m2, attr-instance, more], attr-arg4, [l2, attr-instance, language, attr-arg1_of, [e, attr-instance, easy_05]]]]]]"
1552,1552,1552,1552,1864,12466,einfache-sprache,"Einfache Sprache heißt, \newline so reden und schreiben, dass es viele verstehen.",0_short,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,"0:=Einfache 1:=Sprache 2:=heißt, 3:=\newline 4:=so 5:=reden 6:=und 7:=schreiben, 8:=dass 9:=es 10:=viele 11:=verstehen.",4,"[[0, 1, 2], [4, 5], [4, 7], [8, 9, 10, 11]]",Simple language means speaking and writing \newline in a way that many people can understand.,['# ::snt Simple language means speaking and writing \\newline in a way that many people can understand.\n(m / mean-01\n      :ARG1 (l / language\n            :ARG1-of (s / simple-02))\n      :ARG2 (a / and\n            :op1 (s2 / speak-01\n                  :ARG1 l)\n            :op2 (w / write-01\n                  :ARG1 l)\n            :manner (w2 / way\n                  :ARG1-of (u / understand-01\n                        :ARG0 (p / person\n                              :quant (m2 / many))\n                        :ARG1-of (p2 / possible-01)))))'],"[m, attr-instance, mean_01, attr-arg1, [l, attr-instance, language, attr-arg1_of, [s, attr-instance, simple_02]], attr-arg2, [a, attr-instance, and, attr-op1, [s2, attr-instance, speak_01, attr-arg1, l], attr-op2, [w, attr-instance, write_01, attr-arg1, l], attr-manner, [w2, attr-instance, way, attr-arg1_of, [u, attr-instance, understand_01, attr-arg0, [p, attr-instance, person, attr-quant, [m2, attr-instance, many]], attr-arg1_of, [p2, attr-instance, possible_01]]]]]"
1553,1553,1553,1553,1865,12467,einfache-sprache,Einfache Sprache ist ähnlich wie Leichte Sprache.,1_short,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,0:=Einfache 1:=Sprache 2:=ist 3:=ähnlich 4:=wie 5:=Leichte 6:=Sprache.,1,,Simple language is similar to easy language.,['# ::snt Simple language is similar to easy language.\n(r / resemble-01\n      :ARG1 (l / language\n            :ARG1-of (s / simple-02))\n      :ARG2 (l2 / language\n            :ARG1-of (e / easy-05)))'],"[r, attr-instance, resemble_01, attr-arg1, [l, attr-instance, language, attr-arg1_of, [s, attr-instance, simple_02]], attr-arg2, [l2, attr-instance, language, attr-arg1_of, [e, attr-instance, easy_05]]]"
1554,1554,1554,1554,1866,12468,einfache-sprache,Die Einfache Sprache ist schwieriger als die Leichte Sprache.,2_short,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,0:=Die 1:=Einfache 2:=Sprache 3:=ist 4:=schwieriger 5:=als 6:=die 7:=Leichte 8:=Sprache.,1,,Simple language is more difficult than easy language.,['# ::snt Simple language is more difficult than easy language.\n(h / have-degree-91\n      :ARG1 (l / language\n            :ARG1-of (s / simple-02))\n      :ARG2 (d / difficult)\n      :ARG3 (m / more)\n      :ARG4 (l2 / language\n            :ARG1-of (e / easy-05)))'],"[h, attr-instance, have_degree_91, attr-arg1, [l, attr-instance, language, attr-arg1_of, [s, attr-instance, simple_02]], attr-arg2, [d, attr-instance, difficult], attr-arg3, [m, attr-instance, more], attr-arg4, [l2, attr-instance, language, attr-arg1_of, [e, attr-instance, easy_05]]]"
1555,1555,1555,1555,1867,12469,einfache-sprache,Bei Einfacher Sprache benutzt man auch schwere Wörter.,3_short,Sprache|Hurraki|Leichte_Sprache,2015-01-01T19:58:21Z,be9da3e660311583f64df8d974bcb2fe,0:=Bei 1:=Einfacher 2:=Sprache 3:=benutzt 4:=man 5:=auch 6:=schwere 7:=Wörter.,1,,Simple language also uses difficult words.,['# ::snt Simple language also uses difficult words.\n(u / use-01\n      :ARG0 (l / language\n            :ARG1-of (s / simple-02))\n      :ARG1 (w / word\n            :mod (d / difficult))\n      :mod (a / also))'],"[u, attr-instance, use_01, attr-arg0, [l, attr-instance, language, attr-arg1_of, [s, attr-instance, simple_02]], attr-arg1, [w, attr-instance, word, attr-mod, [d, attr-instance, difficult]], attr-mod, [a, attr-instance, also]]"
1556,1556,1556,1556,1868,12470,einfaches-leben,Ein einfaches Leben ist das Gegenteil von: Überfluss-leben.,0_long,Ohne_Kategorie,2015-04-06T13:18:53Z,af28a20dfb151690981ee13d72ce655c,0:=Ein 1:=einfaches 2:=Leben 3:=ist 4:=das 5:=Gegenteil 6:=von: 7:=Überfluss-leben.,1,,A simple life is the opposite of a life of excess.,['# ::snt A simple life is the opposite of a life of excess.\n(o / opposite-01\n      :ARG1 (l / live-01\n            :ARG1-of (s / simple-02))\n      :ARG2 (l2 / live-01\n            :mod (e / excess)))'],"[o, attr-instance, opposite_01, attr-arg1, [l, attr-instance, live_01, attr-arg1_of, [s, attr-instance, simple_02]], attr-arg2, [l2, attr-instance, live_01, attr-mod, [e, attr-instance, excess]]]"
1557,1557,1557,1557,1869,12471,einfaches-leben,"Die Menschen die ein einfaches Leben leben, \newline möchten nicht so viele Dinge besitzen.",1_long,Ohne_Kategorie,2015-04-06T13:18:53Z,af28a20dfb151690981ee13d72ce655c,"0:=Die 1:=Menschen 2:=die 3:=ein 4:=einfaches 5:=Leben 6:=leben, 7:=\newline 8:=möchten 9:=nicht 10:=so 11:=viele 12:=Dinge 13:=besitzen.",2,"[[4, 5, 6], [8, 9, 10, 11, 12, 13]]",People who live a simple life don't want to own so many things.,"[""# ::snt People who live a simple life don't want to own so many things.\n(w / want-01\n      :polarity -\n      :ARG0 (p / person\n            :ARG0-of (l / live-01\n                  :ARG1 (l2 / life\n                        :ARG1-of (s / simple-02))))\n      :ARG1 (o / own-01\n            :ARG0 p\n            :ARG1 (t / thing\n                  :quant (m / many\n                        :degree (s2 / so)))))""]","[w, attr-instance, want_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-arg0_of, [l, attr-instance, live_01, attr-arg1, [l2, attr-instance, life, attr-arg1_of, [s, attr-instance, simple_02]]]], attr-arg1, [o, attr-instance, own_01, attr-arg0, p, attr-arg1, [t, attr-instance, thing, attr-quant, [m, attr-instance, many, attr-degree, [s2, attr-instance, so]]]]]"
1558,1558,1558,1558,1871,12473,einfaches-leben,Sie sagen dazu: Konsum-verzicht.,3_long,Ohne_Kategorie,2015-04-06T13:18:53Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=sagen 2:=dazu: 3:=Konsum-verzicht.,1,,They say: abstinence from consumption.,['# ::snt They say: abstinence from consumption.\n(s / say-01\n      :ARG0 (t / they)\n      :ARG1 (a / abstain-01\n            :ARG2 (c / consume-01)))'],"[s, attr-instance, say_01, attr-arg0, [t, attr-instance, they], attr-arg1, [a, attr-instance, abstain_01, attr-arg2, [c, attr-instance, consume_01]]]"
1559,1559,1559,1559,1872,12474,einfaches-leben,Die Menschen schauen genau was sie kaufen.,4_long,Ohne_Kategorie,2015-04-06T13:18:53Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Menschen 2:=schauen 3:=genau 4:=was 5:=sie 6:=kaufen.,2,"[[1, 2, 3], [4, 5, 6]]",People look carefully at what they buy.,['# ::snt People look carefully at what they buy.\n(l / look-01\n      :ARG0 (p / person)\n      :ARG1 (t / thing\n            :ARG1-of (b / buy-01\n                  :ARG0 p))\n      :ARG1-of (c / care-04))'],"[l, attr-instance, look_01, attr-arg0, [p, attr-instance, person], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [b, attr-instance, buy_01, attr-arg0, p]], attr-arg1_of, [c, attr-instance, care_04]]"
1560,1560,1560,1560,1873,12475,einfaches-leben,Sie beobachten sich selber bei ihrem Kauf-verhalten.,5_long,Ohne_Kategorie,2015-04-06T13:18:53Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=beobachten 2:=sich 3:=selber 4:=bei 5:=ihrem 6:=Kauf-verhalten.,1,,They observe their own purchasing behavior.,['# ::snt They observe their own purchasing behavior.\n(o / observe-01\n      :ARG0 (t / they)\n      :ARG1 (b / behave-01\n            :ARG0 t\n            :ARG1 (p / purchase-01\n                  :ARG0 t)))'],"[o, attr-instance, observe_01, attr-arg0, [t, attr-instance, they], attr-arg1, [b, attr-instance, behave_01, attr-arg0, t, attr-arg1, [p, attr-instance, purchase_01, attr-arg0, t]]]"
1561,1561,1561,1561,1874,12476,einfaches-leben,Und stellen sich Fragen dazu.,6_long,Ohne_Kategorie,2015-04-06T13:18:53Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=stellen 2:=sich 3:=Fragen 4:=dazu.,1,,And ask questions about it.,['# ::snt And ask questions about it.\n(a / and\n      :op2 (q / question-01\n            :ARG1 (ii / it)))'],"[a, attr-instance, and, attr-op2, [q, attr-instance, question_01, attr-arg1, [ii, attr-instance, it]]]"
1562,1562,1562,1562,1875,12477,einfaches-leben,Ein Einfaches Leben ist ein Leben ohne viele Sachen zu haben.,0_short,Ohne_Kategorie,2015-04-06T13:18:53Z,af28a20dfb151690981ee13d72ce655c,0:=Ein 1:=Einfaches 2:=Leben 3:=ist 4:=ein 5:=Leben 6:=ohne 7:=viele 8:=Sachen 9:=zu 10:=haben.,2,"[[1, 2, 3], [6, 7, 8, 9, 10]]",A simple life is a life without having many things.,['# ::snt A simple life is a life without having many things.\n(m / mean-01\n      :ARG1 (l / life\n            :ARG1-of (s / simple-02))\n      :ARG2 (l2 / life\n            :ARG0-of (h / have-03\n                  :polarity -\n                  :ARG1 (t / thing\n                        :quant (m2 / many)))))'],"[m, attr-instance, mean_01, attr-arg1, [l, attr-instance, life, attr-arg1_of, [s, attr-instance, simple_02]], attr-arg2, [l2, attr-instance, life, attr-arg0_of, [h, attr-instance, have_03, attr-polarity, negative, attr-arg1, [t, attr-instance, thing, attr-quant, [m2, attr-instance, many]]]]]"
1563,1563,1563,1563,1877,12479,einfaltig,Das Wort einfältig ist ein Adjektiv.,0_long,Ohne_Kategorie,2012-12-17T19:44:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=einfältig 3:=ist 4:=ein 5:=Adjektiv.,1,,The word simple-minded is an adjective.,['# ::snt The word simple-minded is an adjective.\n(w / word\n      :mod (s / simple-minded)\n      :domain (a / adjective))'],"[w, attr-instance, word, attr-mod, [s, attr-instance, simple_minded], attr-domain, [a, attr-instance, adjective]]"
1564,1564,1564,1564,1878,12480,einfaltig,"Einfältig ist jemand,  \newline der nicht besonders schlau ist.",0_short,Ohne_Kategorie,2012-12-17T19:44:12Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Einfältig 1:=ist 2:=jemand, 3:= 4:=\newline 5:=der 6:=nicht 7:=besonders 8:=schlau 9:=ist.",2,"[[0, 1, 2], [5, 6, 7, 8, 9]]",A simpleton is someone who is not particularly clever.,['# ::snt A simpleton is someone who is not particularly clever.\n(s / someone\n      :ARG1-of (c / clever-01\n            :polarity -\n            :mod (p / particular))\n      :domain (s2 / simpleton))'],"[s, attr-instance, someone, attr-arg1_of, [c, attr-instance, clever_01, attr-polarity, negative, attr-mod, [p, attr-instance, particular]], attr-domain, [s2, attr-instance, simpleton]]"
1565,1565,1565,1565,1880,12482,einfuhlungsvermogen,Mit den Ohren von Anderen zu hören.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks|Hurraki:Überarbeiten,2022-01-07T12:36:11Z,e800bebc9060331edfac65e663a55570,0:=Mit 1:=den 2:=Ohren 3:=von 4:=Anderen 5:=zu 6:=hören.,1,,To hear with the ears of others.,['# ::snt To hear with the ears of others.\n(h / have-03\n      :ARG1 (h2 / hear-01\n            :manner (e / ear\n                  :part-of (p / person\n                        :mod (o / other)))))'],"[h, attr-instance, have_03, attr-arg1, [h2, attr-instance, hear_01, attr-manner, [e, attr-instance, ear, attr-part_of, [p, attr-instance, person, attr-mod, [o, attr-instance, other]]]]]"
1566,1566,1566,1566,1881,12483,einfuhlungsvermogen,Mit dem Herzen von Anderen zu fühlen.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks|Hurraki:Überarbeiten,2022-01-07T12:36:11Z,e800bebc9060331edfac65e663a55570,0:=Mit 1:=dem 2:=Herzen 3:=von 4:=Anderen 5:=zu 6:=fühlen.,1,,To feel with the hearts of others.,['# ::snt To feel with the hearts of others.\n(f / feel-01\n      :manner (h / heart\n            :part-of (p / person\n                  :mod (o / other))))'],"[f, attr-instance, feel_01, attr-manner, [h, attr-instance, heart, attr-part_of, [p, attr-instance, person, attr-mod, [o, attr-instance, other]]]]"
1567,1567,1567,1567,1882,12484,eingabe-und-ausgabe,Eingabe und Ausgabe sind Wörter.,0_short,Computer,2012-11-09T22:05:06Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eingabe 1:=und 2:=Ausgabe 3:=sind 4:=Wörter.,2,"[[0], [2]]",Input and output are words.,['# ::snt Input and output are words.\n(w / word\n      :domain (a / and\n            :op1 (ii / input)\n            :op2 (o / output)))'],"[w, attr-instance, word, attr-domain, [a, attr-instance, and, attr-op1, [ii, attr-instance, input], attr-op2, [o, attr-instance, output]]]"
1568,1568,1568,1568,1883,12485,eingabe-und-ausgabe,Sie werden in der Computer-Fach-Sprache benutzt werden.,1_short,Computer,2012-11-09T22:05:06Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Sie 1:=werden 2:=in 3:=der 4:=Computer-Fach-Sprache 5:=benutzt 6:=werden.,1,,They will be used in computer terminology.,['# ::snt They will be used in computer terminology.\n(u / use-01\n      :ARG1 (t / they)\n      :ARG2 (t2 / terminology\n            :mod (c / computer)))'],"[u, attr-instance, use_01, attr-arg1, [t, attr-instance, they], attr-arg2, [t2, attr-instance, terminology, attr-mod, [c, attr-instance, computer]]]"
1569,1569,1569,1569,1884,12486,eingabe-und-ausgabe,Die Eingabe ist das was gemacht wird.,2_short,Computer,2012-11-09T22:05:06Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Eingabe 2:=ist 3:=das 4:=was 5:=gemacht 6:=wird.,2,"[[1, 2, 3], [4, 5, 6]]",The input is what is done.,['# ::snt The input is what is done.\n(t / thing\n      :ARG1-of (d / do-02)\n      :domain (ii / input))'],"[t, attr-instance, thing, attr-arg1_of, [d, attr-instance, do_02], attr-domain, [ii, attr-instance, input]]"
1570,1570,1570,1570,1885,12487,eingabe-und-ausgabe,Die Ausgabe ist das Ergebnis.,3_short,Computer,2012-11-09T22:05:06Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Ausgabe 2:=ist 3:=das 4:=Ergebnis.,1,,The output is the result.,['# ::snt The output is the result.\n(t / thing\n      :ARG2-of (r / result-01)\n      :domain (o / output))'],"[t, attr-instance, thing, attr-arg2_of, [r, attr-instance, result_01], attr-domain, [o, attr-instance, output]]"
1571,1571,1571,1571,1886,12488,eingewohnungszeit,Die Eingewöhnung-zeit ist der Anfang im Kindergarten.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T12:53:09Z,022a27447b80860fa0ec84e918eedf36,0:=Die 1:=Eingewöhnung-zeit 2:=ist 3:=der 4:=Anfang 5:=im 6:=Kindergarten.,1,,The settling-in period is the beginning of kindergarten.,['# ::snt The settling-in period is the beginning of kindergarten.\n(b / begin-01\n      :ARG1 (k / kindergarten)\n      :domain (p / period\n            :time-of (s / settle-in-02)))'],"[b, attr-instance, begin_01, attr-arg1, [k, attr-instance, kindergarten], attr-domain, [p, attr-instance, period, attr-time_of, [s, attr-instance, settle_in_02]]]"
1572,1572,1572,1572,1887,12489,eingewohnungszeit,Eltern und Erzieher machen zusammen einen Plan für die Eingewöhnung.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T12:53:09Z,022a27447b80860fa0ec84e918eedf36,0:=Eltern 1:=und 2:=Erzieher 3:=machen 4:=zusammen 5:=einen 6:=Plan 7:=für 8:=die 9:=Eingewöhnung.,4,"[[0, 3, 6], [2, 3, 6], [4], [6, 7, 9]]",Parents and educators work together to create a plan for the settling-in process.,['# ::snt Parents and educators work together to create a plan for the settling-in process.\n(w / work-01\n      :ARG0 (a / and\n            :op1 (p / parent)\n            :op2 (p2 / person\n                  :ARG0-of (e / educate-01)))\n      :ARG1 (c / create-01\n            :ARG0 a\n            :ARG1 (p3 / plan-01\n                  :ARG1 (p4 / process-02\n                        :ARG1 (s / settle-03))))\n      :manner (t / together))'],"[w, attr-instance, work_01, attr-arg0, [a, attr-instance, and, attr-op1, [p, attr-instance, parent], attr-op2, [p2, attr-instance, person, attr-arg0_of, [e, attr-instance, educate_01]]], attr-arg1, [c, attr-instance, create_01, attr-arg0, a, attr-arg1, [p3, attr-instance, plan_01, attr-arg1, [p4, attr-instance, process_02, attr-arg1, [s, attr-instance, settle_03]]]], attr-manner, [t, attr-instance, together]]"
1573,1573,1573,1573,1888,12490,eingewohnungszeit,Am Anfang ist das Kind mit Mama oder Papa im Kindergarten.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T12:53:09Z,022a27447b80860fa0ec84e918eedf36,0:=Am 1:=Anfang 2:=ist 3:=das 4:=Kind 5:=mit 6:=Mama 7:=oder 8:=Papa 9:=im 10:=Kindergarten.,3,"[[0, 1], [2, 4, 5, 6, 9, 10], [2, 4, 5, 8, 9, 10]]",At the beginning the child is with mom or dad in kindergarten.,['# ::snt At the beginning the child is with mom or dad in kindergarten.\n(b / be-with-10\n      :ARG0 (c / child)\n      :ARG1 (o / or\n            :op1 (p / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 c\n                        :ARG2 (m / mom)))\n            :op2 (p2 / person\n                  :ARG0-of (h2 / have-rel-role-91\n                        :ARG1 c\n                        :ARG2 (d / dad))))\n      :location (k / kindergarten)\n      :time (b2 / begin-01))'],"[b, attr-instance, be_with_10, attr-arg0, [c, attr-instance, child], attr-arg1, [o, attr-instance, or, attr-op1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, c, attr-arg2, [m, attr-instance, mom]]], attr-op2, [p2, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, c, attr-arg2, [d, attr-instance, dad]]]], attr-location, [k, attr-instance, kindergarten], attr-time, [b2, attr-instance, begin_01]]"
1574,1574,1574,1574,1889,12491,eingewohnungszeit,Später bleibt das Kind für 2 oder 3 Stunden alleine.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T12:53:09Z,022a27447b80860fa0ec84e918eedf36,0:=Später 1:=bleibt 2:=das 3:=Kind 4:=für 5:=2 6:=oder 7:=3 8:=Stunden 9:=alleine.,3,"[[0], [1, 3, 4, 5, 8, 9], [1, 3, 4, 7, 8, 9]]",Later the child is left alone for 2 or 3 hours.,['# ::snt Later the child is left alone for 2 or 3 hours.\n(l / leave-14\n      :ARG1 (c / child)\n      :mod (a / alone)\n      :time (a2 / after)\n      :duration (o / or\n            :op1 (t / temporal-quantity\n                  :quant 2\n                  :unit (h / hour))\n            :op2 (t2 / temporal-quantity\n                  :quant 3\n                  :unit (h2 / hour))))'],"[l, attr-instance, leave_14, attr-arg1, [c, attr-instance, child], attr-mod, [a, attr-instance, alone], attr-time, [a2, attr-instance, after], attr-duration, [o, attr-instance, or, attr-op1, [t, attr-instance, temporal_quantity, attr-quant, 2, attr-unit, [h, attr-instance, hour]], attr-op2, [t2, attr-instance, temporal_quantity, attr-quant, 3, attr-unit, [h2, attr-instance, hour]]]]"
1575,1575,1575,1575,1890,12492,eingewohnungszeit,Nach ein paar Wochen bleibt das Kind ganz allein im Kindergarten und kommt jeden Tag.,4_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-06T12:53:09Z,022a27447b80860fa0ec84e918eedf36,0:=Nach 1:=ein 2:=paar 3:=Wochen 4:=bleibt 5:=das 6:=Kind 7:=ganz 8:=allein 9:=im 10:=Kindergarten 11:=und 12:=kommt 13:=jeden 14:=Tag.,3,"[[0, 2, 3], [4, 6, 7, 8, 9, 10], [6, 12, 13, 14]]","After a few weeks, the child stays alone in the kindergarten and comes every day.","['# ::snt After a few weeks, the child stays alone in the kindergarten and comes every day.\n(a / and\n      :op1 (s / stay-01\n            :ARG1 (c / child)\n            :ARG3 (a2 / alone\n                  :location (k / kindergarten))\n            :time (a3 / after\n                  :quant (f / few\n                        :op1 (t / temporal-quantity\n                              :quant 1\n                              :unit (w / week)))))\n      :op2 (c2 / come-01\n            :ARG1 c\n            :frequency (r / rate-entity-91\n                  :ARG3 (t2 / temporal-quantity\n                        :quant 1\n                        :unit (d / day)))))']","[a, attr-instance, and, attr-op1, [s, attr-instance, stay_01, attr-arg1, [c, attr-instance, child], attr-arg3, [a2, attr-instance, alone, attr-location, [k, attr-instance, kindergarten]], attr-time, [a3, attr-instance, after, attr-quant, [f, attr-instance, few, attr-op1, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [w, attr-instance, week]]]]], attr-op2, [c2, attr-instance, come_01, attr-arg1, c, attr-frequency, [r, attr-instance, rate_entity_91, attr-arg3, [t2, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [d, attr-instance, day]]]]]"
1576,1576,1576,1576,1891,12493,eingliederungshilfe," • Wer Hilfe braucht, muss sie bekommen.",0_long,Recht_und_Gesetz,2009-12-26T16:15:41Z,d8779288de353a0da9951dfcae710103,"0:= 1:=• 2:=Wer 3:=Hilfe 4:=braucht, 5:=muss 6:=sie 7:=bekommen.",2,"[[2, 3, 4], [5, 6, 7]]",• Those who need help must get it.,['# ::snt • Those who need help must get it.\n(o / obligate-01\n      :ARG2 (g / get-01\n            :ARG0 (p / person\n                  :ARG0-of (n / need-01\n                        :ARG1 (h / help-01\n                              :ARG1 p\n                              :ARG1-of g)))))'],"[o, attr-instance, obligate_01, attr-arg2, [g, attr-instance, get_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [n, attr-instance, need_01, attr-arg1, [h, attr-instance, help_01, attr-arg1, p, attr-arg1_of, g]]]]]"
1577,1577,1577,1577,1892,12494,eingliederungshilfe,"Das kann Geld sein. • Eingliederungshilfe gibt es, wenn man krank ist",1_long,Recht_und_Gesetz,2009-12-26T16:15:41Z,d8779288de353a0da9951dfcae710103,"0:=Das 1:=kann 2:=Geld 3:=sein. 4:=• 5:=Eingliederungshilfe 6:=gibt 7:=es, 8:=wenn 9:=man 10:=krank 11:=ist",3,"[[0, 1, 2, 3], [5, 6, 7], [8, 9, 10, 11]]",This can be money. • Integration assistance is available if you are ill,"['# ::snt This can be money.\n(p / possible-01\n      :ARG1 (m / money\n            :domain (t / this)))', '# ::snt • Integration assistance is available if you are ill\n(a / available-02\n      :ARG2 (a2 / assist-01\n            :ARG2 (ii / integrate-01))\n      :condition (ii2 / ill-01\n            :ARG1 (y / you)))']","[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, money, attr-domain, [t, attr-instance, this]]]"
1578,1578,1578,1578,1893,12495,eingliederungshilfe,Das kann Geld sein. • Eingliederungshilfe gibt es zur Teilhabe am Arbeitsleben,2_long,Recht_und_Gesetz,2009-12-26T16:15:41Z,d8779288de353a0da9951dfcae710103,0:=Das 1:=kann 2:=Geld 3:=sein. 4:=• 5:=Eingliederungshilfe 6:=gibt 7:=es 8:=zur 9:=Teilhabe 10:=am 11:=Arbeitsleben,2,"[[0, 1, 2, 3], [5, 6, 7, 8, 9, 10, 11]]",This can be money. • Integration assistance is available to help people participate in working life,"['# ::snt This can be money.\n(p / possible-01\n      :ARG1 (m / money\n            :domain (t / this)))', '# ::snt • Integration assistance is available to help people participate in working life\n(a / available-02\n      :ARG2 (a2 / assist-01\n            :ARG2 (ii / integrate-01))\n      :purpose (h / help-01\n            :ARG0 a2\n            :ARG1 (p / participate-01\n                  :ARG0 (p2 / person)\n                  :ARG1 (l / life\n                        :mod (w / work-01)))\n            :ARG2 p2))']","[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, money, attr-domain, [t, attr-instance, this]]]"
1579,1579,1579,1579,1894,12496,eingliederungshilfe,Das kann Geld sein. • Eingliederungshilfe gibt es zur Teilhabe am Leben in der Gemeinschaft.,3_long,Recht_und_Gesetz,2009-12-26T16:15:41Z,d8779288de353a0da9951dfcae710103,0:=Das 1:=kann 2:=Geld 3:=sein. 4:=• 5:=Eingliederungshilfe 6:=gibt 7:=es 8:=zur 9:=Teilhabe 10:=am 11:=Leben 12:=in 13:=der 14:=Gemeinschaft.,3,"[[0, 1, 2, 3], [5, 6, 7, 8, 10, 11], [11, 12, 14]]",This can be money. • Integration assistance is available to help people participate in community life.,"['# ::snt This can be money.\n(p / possible-01\n      :ARG1 (m / money\n            :domain (t / this)))', '# ::snt • Integration assistance is available to help people participate in community life.\n(a / available-02\n      :ARG2 (a2 / assist-01\n            :ARG2 (ii / integrate-01))\n      :purpose (h / help-01\n            :ARG0 a2\n            :ARG1 (p / participate-01\n                  :ARG0 (p2 / person)\n                  :ARG1 (l / life\n                        :mod (c / community)))\n            :ARG2 p2))']","[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, money, attr-domain, [t, attr-instance, this]]]"
1580,1580,1580,1580,1895,12497,eingliederungshilfe,Das kann Geld sein. • Manchmal gibt es Eingliederungshilfe auch als Gutschein.,4_long,Recht_und_Gesetz,2009-12-26T16:15:41Z,d8779288de353a0da9951dfcae710103,0:=Das 1:=kann 2:=Geld 3:=sein. 4:=• 5:=Manchmal 6:=gibt 7:=es 8:=Eingliederungshilfe 9:=auch 10:=als 11:=Gutschein.,2,"[[0, 1, 2, 3], [5, 6, 7, 8, 9, 10, 11]]",This can be money. • Sometimes integration assistance is also available as a voucher.,"['# ::snt This can be money.\n(p / possible-01\n      :ARG1 (m / money\n            :domain (t / this)))', '# ::snt •\n(a / amr-empty)', '# ::snt Sometimes integration assistance is also available as a voucher.\n(a / available-02\n      :ARG2 (a2 / assist-01\n            :ARG2 (ii / integrate-01)\n            :ARG3-of (v / voucher-00))\n      :time (s / sometimes)\n      :mod (a3 / also))']","[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, money, attr-domain, [t, attr-instance, this]]]"
1581,1581,1581,1581,1896,12499,einkommen-aus-besitz,Ein-kommen aus Besitz bedeutet:  \newline Du hast etwas.,0_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommen 1:=aus 2:=Besitz 3:=bedeutet: 4:= 5:=\newline 6:=Du 7:=hast 8:=etwas.,2,"[[0, 1, 2, 3], [6, 7, 8]]",Coming in from possessions means: \newline You have something.,['# ::snt Coming in from possessions means: \\newline You have something.\n(m / mean-01\n      :ARG1 (c / come-03\n            :ARG3 (t / thing\n                  :ARG1-of (p / possess-01)))\n      :ARG2 (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (s / something))\n      :mod (n / newline))'],"[m, attr-instance, mean_01, attr-arg1, [c, attr-instance, come_03, attr-arg3, [t, attr-instance, thing, attr-arg1_of, [p, attr-instance, possess_01]]], attr-arg2, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something]], attr-mod, [n, attr-instance, newline]]"
1582,1582,1582,1582,1897,12500,einkommen-aus-besitz,Beispiel: Du hast Geld.,1_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Beispiel: 1:=Du 2:=hast 3:=Geld.,1,,Example: You have money.,['# ::snt Example: You have money.\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (m / money)))'],"[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money]]]"
1583,1583,1583,1583,1898,12501,einkommen-aus-besitz,Du bringst dein Geld auf die Bank.,2_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=bringst 2:=dein 3:=Geld 4:=auf 5:=die 6:=Bank.,1,,You put your money in the bank.,['# ::snt You put your money in the bank.\n(p / put-01\n      :ARG0 (y / you)\n      :ARG1 (m / money\n            :poss y)\n      :ARG2 (b / bank))'],"[p, attr-instance, put_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money, attr-poss, y], attr-arg2, [b, attr-instance, bank]]"
1584,1584,1584,1584,1899,12502,einkommen-aus-besitz,Das heißt: Du hast dein Geld auf einem Bank-konto.,3_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Das 1:=heißt: 2:=Du 3:=hast 4:=dein 5:=Geld 6:=auf 7:=einem 8:=Bank-konto.,1,,This means: You have your money in a bank account.,['# ::snt This means: You have your money in a bank account.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (m2 / money\n                  :poss y)\n            :location (a / account\n                  :mod (b / bank))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [m2, attr-instance, money, attr-poss, y], attr-location, [a, attr-instance, account, attr-mod, [b, attr-instance, bank]]]]"
1585,1585,1585,1585,1900,12503,einkommen-aus-besitz,Du bekommst von der Bank Geld.,4_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=bekommst 2:=von 3:=der 4:=Bank 5:=Geld.,1,,You get money from the bank.,['# ::snt You get money from the bank.\n(g / get-01\n      :ARG0 (y / you)\n      :ARG1 (m / money)\n      :ARG2 (b / bank))'],"[g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money], attr-arg2, [b, attr-instance, bank]]"
1586,1586,1586,1586,1901,12504,einkommen-aus-besitz,Denn du gibst der Bank dein Geld.,5_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Denn 1:=du 2:=gibst 3:=der 4:=Bank 5:=dein 6:=Geld.,1,,Because you give the bank your money.,['# ::snt Because you give the bank your money.\n(c / cause-01\n      :ARG0 (g / give-01\n            :ARG0 (y / you)\n            :ARG1 (m / money\n                  :poss y)\n            :ARG2 (b / bank)))'],"[c, attr-instance, cause_01, attr-arg0, [g, attr-instance, give_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money, attr-poss, y], attr-arg2, [b, attr-instance, bank]]]"
1587,1587,1587,1587,1902,12505,einkommen-aus-besitz,Du bekommst von der Bank Geld.,6_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=bekommst 2:=von 3:=der 4:=Bank 5:=Geld.,1,,You get money from the bank.,['# ::snt You get money from the bank.\n(g / get-01\n      :ARG0 (y / you)\n      :ARG1 (m / money)\n      :ARG2 (b / bank))'],"[g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money], attr-arg2, [b, attr-instance, bank]]"
1588,1588,1588,1588,1903,12506,einkommen-aus-besitz,Das Geld heißt Zinsen.,7_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Das 1:=Geld 2:=heißt 3:=Zinsen.,1,,The money is called interest.,['# ::snt The money is called interest.\n(c / call-01\n      :ARG1 (m / money)\n      :ARG2 (ii / interest))'],"[c, attr-instance, call_01, attr-arg1, [m, attr-instance, money], attr-arg2, [ii, attr-instance, interest]]"
1589,1589,1589,1589,1904,12507,einkommen-aus-besitz,Beispiel:  \newline Du hast ein Haus.,8_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Beispiel: 1:= 2:=\newline 3:=Du 4:=hast 5:=ein 6:=Haus.,1,,Example: \newline You have a house.,"['# ::snt Example: \\newline You have a house.\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (h2 / house))\n      :mod (a / amr-unintelligible\n            :value ""newline""))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [h2, attr-instance, house]], attr-mod, [a, attr-instance, amr_unintelligible, attr-value, ""newline""]]"
1590,1590,1590,1590,1905,12508,einkommen-aus-besitz,Das Haus gehört dir.,9_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Das 1:=Haus 2:=gehört 3:=dir.,1,,The house is yours.,['# ::snt The house is yours.\n(o / own-01\n      :ARG0 (y / you)\n      :ARG1 (h / house))'],"[o, attr-instance, own_01, attr-arg0, [y, attr-instance, you], attr-arg1, [h, attr-instance, house]]"
1591,1591,1591,1591,1906,12509,einkommen-aus-besitz,Du sagst: Ich wohne in einer anderen Stadt.,10_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=sagst: 2:=Ich 3:=wohne 4:=in 5:=einer 6:=anderen 7:=Stadt.,2,"[[0, 1], [2, 3, 4, 6, 7]]",You say: I live in another city.,['# ::snt You say: I live in another city.\n(s / say-01\n      :ARG0 (y / you)\n      :ARG1 (l / live-01\n            :ARG0 y\n            :location (c / city\n                  :mod (a / another))))'],"[s, attr-instance, say_01, attr-arg0, [y, attr-instance, you], attr-arg1, [l, attr-instance, live_01, attr-arg0, y, attr-location, [c, attr-instance, city, attr-mod, [a, attr-instance, another]]]]"
1592,1592,1592,1592,1907,12510,einkommen-aus-besitz,Darum können Menschen in meinem Haus wohnen.,11_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Darum 1:=können 2:=Menschen 3:=in 4:=meinem 5:=Haus 6:=wohnen.,1,,That's why people can live in my house.,"[""# ::snt That's why people can live in my house.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (p / possible-01\n            :ARG1 (l / live-01\n                  :ARG0 (p2 / person)\n                  :location (h / house\n                        :poss (ii / i)))))""]","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [p, attr-instance, possible_01, attr-arg1, [l, attr-instance, live_01, attr-arg0, [p2, attr-instance, person], attr-location, [h, attr-instance, house, attr-poss, [ii, attr-instance, i]]]]]"
1593,1593,1593,1593,1908,12511,einkommen-aus-besitz,Du lässt Menschen in deinem Haus wohnen.,12_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=lässt 2:=Menschen 3:=in 4:=deinem 5:=Haus 6:=wohnen.,1,,You let people live in your house.,['# ::snt You let people live in your house.\n(l / let-01\n      :ARG0 (y / you)\n      :ARG1 (l2 / live-01\n            :ARG0 (p / person)\n            :location (h / house\n                  :poss y)))'],"[l, attr-instance, let_01, attr-arg0, [y, attr-instance, you], attr-arg1, [l2, attr-instance, live_01, attr-arg0, [p, attr-instance, person], attr-location, [h, attr-instance, house, attr-poss, y]]]"
1594,1594,1594,1594,1909,12512,einkommen-aus-besitz,Dafür geben dir die Menschen Geld.,13_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Dafür 1:=geben 2:=dir 3:=die 4:=Menschen 5:=Geld.,1,,That's why people give you money.,"[""# ::snt That's why people give you money.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (g / give-01\n            :ARG0 (p / person)\n            :ARG1 (m / money)\n            :ARG2 (y / you)))""]","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [g, attr-instance, give_01, attr-arg0, [p, attr-instance, person], attr-arg1, [m, attr-instance, money], attr-arg2, [y, attr-instance, you]]]"
1595,1595,1595,1595,1910,12513,einkommen-aus-besitz,Das Geld heißt Miete.,14_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Das 1:=Geld 2:=heißt 3:=Miete.,1,,The money is called rent.,['# ::snt The money is called rent.\n(c / call-01\n      :ARG1 (m / money)\n      :ARG2 (r / rent))'],"[c, attr-instance, call_01, attr-arg1, [m, attr-instance, money], attr-arg2, [r, attr-instance, rent]]"
1596,1596,1596,1596,1911,12514,einkommen-aus-besitz,Die Menschen sind Mieter.,15_long,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Die 1:=Menschen 2:=sind 3:=Mieter.,1,,The people are tenants.,['# ::snt The people are tenants.\n(p / person\n      :ARG0-of (r / rent-01))'],"[p, attr-instance, person, attr-arg0_of, [r, attr-instance, rent_01]]"
1597,1597,1597,1597,1912,12515,einkommen-aus-besitz,Ein-kommen bedeutet: Du bekommst Geld.,0_short,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommen 1:=bedeutet: 2:=Du 3:=bekommst 4:=Geld.,2,"[[0, 1], [2, 3, 4]]",Coming in means: you get money.,['# ::snt Coming in means: you get money.\n(m / mean-01\n      :ARG1 (c / come-in-07)\n      :ARG2 (g / get-01\n            :ARG0 (y / you)\n            :ARG1 (m2 / money)))'],"[m, attr-instance, mean_01, attr-arg1, [c, attr-instance, come_in_07], attr-arg2, [g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m2, attr-instance, money]]]"
1598,1598,1598,1598,1913,12516,einkommen-aus-besitz,Ein-kommen aus Besitz bedeutet:  \newline Du hast schon etwas.,1_short,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommen 1:=aus 2:=Besitz 3:=bedeutet: 4:= 5:=\newline 6:=Du 7:=hast 8:=schon 9:=etwas.,2,"[[0, 1, 2, 3], [6, 7, 8, 9]]",Coming in from possessions means: \newline You already have something.,['# ::snt Coming in from possessions means: \\newline You already have something.\n(m / mean-01\n      :ARG1 (c / come-in-07\n            :ARG3 (t / thing\n                  :ARG1-of (p / possess-01)))\n      :ARG2 (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (s / something)\n            :time (a / already))\n      :mod (n / newline))'],"[m, attr-instance, mean_01, attr-arg1, [c, attr-instance, come_in_07, attr-arg3, [t, attr-instance, thing, attr-arg1_of, [p, attr-instance, possess_01]]], attr-arg2, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-time, [a, attr-instance, already]], attr-mod, [n, attr-instance, newline]]"
1599,1599,1599,1599,1914,12517,einkommen-aus-besitz,Und dafür bekommst du Geld.,2_short,Geld,2021-10-30T11:15:40Z,4e761a928113c1f23dda0939b1022778,0:=Und 1:=dafür 2:=bekommst 3:=du 4:=Geld.,1,,And you get money for that.,['# ::snt And you get money for that.\n(a / and\n      :op2 (g / get-01\n            :ARG0 (y / you)\n            :ARG1 (m / money)\n            :ARG3 (t / that)))'],"[a, attr-instance, and, attr-op2, [g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money], attr-arg3, [t, attr-instance, that]]]"
1600,1600,1600,1600,1915,12518,einkommen,"Wenn du arbeitest, \newline dann bekommst du Geld.",0_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,"0:=Wenn 1:=du 2:=arbeitest, 3:=\newline 4:=dann 5:=bekommst 6:=du 7:=Geld.",2,"[[0, 1, 2], [4, 5, 6, 7]]","If you work, \newline you get money.","['# ::snt If you work, \\newline you get money.\n(g / get-01\n      :ARG0 (y / you)\n      :ARG1 (m / money)\n      :ARG4 (c / company\n            :name (n / name\n                  :op1 ""Newline""))\n      :condition (w / work-01\n            :ARG0 y))']","[g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money], attr-arg4, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]], attr-condition, [w, attr-instance, work_01, attr-arg0, y]]"
1601,1601,1601,1601,1916,12519,einkommen,Du kannst zu diesem Geld Ein-kommen sagen.,1_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=kannst 2:=zu 3:=diesem 4:=Geld 5:=Ein-kommen 6:=sagen.,1,,You can call this money income.,['# ::snt You can call this money income.\n(p / possible-01\n      :ARG1 (c / call-01\n            :ARG0 (y / you)\n            :ARG1 (m / money\n                  :mod (t / this))\n            :ARG2 (ii / income)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, call_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money, attr-mod, [t, attr-instance, this]], attr-arg2, [ii, attr-instance, income]]]"
1602,1602,1602,1602,1917,12520,einkommen,Beispiel:  \newline Marco arbeitet in einer Auto-werkstatt.,2_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Beispiel: 1:= 2:=\newline 3:=Marco 4:=arbeitet 5:=in 6:=einer 7:=Auto-werkstatt.,1,,Example: \newline Marco works in a car repair shop.,"['# ::snt Example: \\newline Marco works in a car repair shop.\n(e / exemplify-01\n      :ARG0 (w / work-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Unnewline""\n                        :op2 ""Marco""))\n            :ARG2 (s / shop\n                  :purpose (r / repair-01\n                        :ARG1 (c / car)))))']","[e, attr-instance, exemplify_01, attr-arg0, [w, attr-instance, work_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""unnewline"", attr-op2, ""marco""]], attr-arg2, [s, attr-instance, shop, attr-purpose, [r, attr-instance, repair_01, attr-arg1, [c, attr-instance, car]]]]]"
1603,1603,1603,1603,1918,12521,einkommen,Marco hat mit seiner Arbeit ein Ein-kommen.,3_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Marco 1:=hat 2:=mit 3:=seiner 4:=Arbeit 5:=ein 6:=Ein-kommen.,2,"[[0, 1, 6], [2, 3, 4]]",Marco earns an income from his work.,"['# ::snt Marco earns an income from his work.\n(e / earn-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Marco""))\n      :ARG1 (ii / income)\n      :ARG3 (w / work-01\n            :ARG0 p))']","[e, attr-instance, earn_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""marco""]], attr-arg1, [ii, attr-instance, income], attr-arg3, [w, attr-instance, work_01, attr-arg0, p]]"
1604,1604,1604,1604,1919,12522,einkommen,Ein-kommens-arten sind zum Beispiel: • Ein-kommen aus selbst-ständiger Tätigkeit,4_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommens-arten 1:=sind 2:=zum 3:=Beispiel: 4:=• 5:=Ein-kommen 6:=aus 7:=selbst-ständiger 8:=Tätigkeit,2,"[[0, 1, 2, 3], [5, 6, 7, 8]]",Types of income include: • Income from self-employment,['# ::snt Types of income include: • Income from self-employment\n(ii / include-01\n      :ARG1 (ii2 / income\n            :source (e / employ-01\n                  :ARG0 (s / self)))\n      :ARG2 (ii3 / income\n            :mod (t / type)))'],"[ii, attr-instance, include_01, attr-arg1, [ii2, attr-instance, income, attr-source, [e, attr-instance, employ_01, attr-arg0, [s, attr-instance, self]]], attr-arg2, [ii3, attr-instance, income, attr-mod, [t, attr-instance, type]]]"
1605,1605,1605,1605,1920,12523,einkommen,Ein-kommens-arten sind zum Beispiel: • Ein-kommen aus nicht-selbst-ständiger Tätigkeit,5_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommens-arten 1:=sind 2:=zum 3:=Beispiel: 4:=• 5:=Ein-kommen 6:=aus 7:=nicht-selbst-ständiger 8:=Tätigkeit,2,"[[0, 1, 2, 3], [5, 6, 7, 8]]",Types of income include: • Income from employment,['# ::snt Types of income include: • Income from employment\n(ii / include-01\n      :ARG1 (ii2 / income\n            :source (e / employ-01))\n      :ARG2 (ii3 / income\n            :mod (t / type)))'],"[ii, attr-instance, include_01, attr-arg1, [ii2, attr-instance, income, attr-source, [e, attr-instance, employ_01]], attr-arg2, [ii3, attr-instance, income, attr-mod, [t, attr-instance, type]]]"
1606,1606,1606,1606,1921,12524,einkommen,Ein-kommens-arten sind zum Beispiel: • Ein-kommen aus Besitz,6_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommens-arten 1:=sind 2:=zum 3:=Beispiel: 4:=• 5:=Ein-kommen 6:=aus 7:=Besitz,1,,Types of income include: • Income from property,['# ::snt Types of income include: • Income from property\n(ii / include-01\n      :ARG1 (ii2 / income\n            :source (p / property))\n      :ARG2 (ii3 / income\n            :mod (t / type)))'],"[ii, attr-instance, include_01, attr-arg1, [ii2, attr-instance, income, attr-source, [p, attr-instance, property]], attr-arg2, [ii3, attr-instance, income, attr-mod, [t, attr-instance, type]]]"
1607,1607,1607,1607,1922,12525,einkommen,Ein-kommens-arten sind zum Beispiel: • Transfer-Ein-kommen,7_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommens-arten 1:=sind 2:=zum 3:=Beispiel: 4:=• 5:=Transfer-Ein-kommen,1,,Types of income include: • Transfer income,['# ::snt Types of income include: • Transfer income\n(ii / include-01\n      :ARG1 (ii2 / income\n            :ARG1-of (t / transfer-01))\n      :ARG2 (ii3 / income\n            :mod (t2 / type)))'],"[ii, attr-instance, include_01, attr-arg1, [ii2, attr-instance, income, attr-arg1_of, [t, attr-instance, transfer_01]], attr-arg2, [ii3, attr-instance, income, attr-mod, [t2, attr-instance, type]]]"
1608,1608,1608,1608,1923,12526,einkommen,Ein-kommens-arten sind zum Beispiel: • Mini-Job,8_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommens-arten 1:=sind 2:=zum 3:=Beispiel: 4:=• 5:=Mini-Job,1,,Types of income include: • Mini-job,['# ::snt Types of income include: • Mini-job\n(ii / include-01\n      :ARG1 (j / job\n            :mod (m / mini))\n      :ARG2 (t / type\n            :mod (ii2 / income)))'],"[ii, attr-instance, include_01, attr-arg1, [j, attr-instance, job, attr-mod, [m, attr-instance, mini]], attr-arg2, [t, attr-instance, type, attr-mod, [ii2, attr-instance, income]]]"
1609,1609,1609,1609,1924,12527,einkommen,Ein-kommen ist ein Substantiv.,9_long,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommen 1:=ist 2:=ein 3:=Substantiv.,1,,Coming in is a noun.,['# ::snt Coming in is a noun.\n(c / come-in-07\n      :mod (n / noun))'],"[c, attr-instance, come_in_07, attr-mod, [n, attr-instance, noun]]"
1610,1610,1610,1610,1925,12528,einkommen,Ein-kommen bedeutet: Du bekommst Geld.,0_short,Geld,2021-10-27T16:11:52Z,4e761a928113c1f23dda0939b1022778,0:=Ein-kommen 1:=bedeutet: 2:=Du 3:=bekommst 4:=Geld.,2,"[[0, 1], [2, 3, 4]]",Coming in means: you get money.,['# ::snt Coming in means: you get money.\n(m / mean-01\n      :ARG1 (c / come-in-07)\n      :ARG2 (g / get-01\n            :ARG0 (y / you)\n            :ARG1 (m2 / money)))'],"[m, attr-instance, mean_01, attr-arg1, [c, attr-instance, come_in_07], attr-arg2, [g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m2, attr-instance, money]]]"
1611,1611,1611,1611,1926,12529,einladung,Das Gegenteil von einer Einladung ist eine Ausladung.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-02-15T07:34:41Z,d49497e3abada5f79c3745c314471167,0:=Das 1:=Gegenteil 2:=von 3:=einer 4:=Einladung 5:=ist 6:=eine 7:=Ausladung.,1,,The opposite of an invitation is an uninvitation.,['# ::snt The opposite of an invitation is an uninvitation.\n(o / opposite-01\n      :ARG1 (ii / invite-01)\n      :ARG2 (ii2 / invite-01\n            :polarity -))'],"[o, attr-instance, opposite_01, attr-arg1, [ii, attr-instance, invite_01], attr-arg2, [ii2, attr-instance, invite_01, attr-polarity, negative]]"
1612,1612,1612,1612,1927,12530,einladung,Eine Einladung ist wenn man möchte das jemand zu Besuch kommt.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-02-15T07:34:41Z,d49497e3abada5f79c3745c314471167,0:=Eine 1:=Einladung 2:=ist 3:=wenn 4:=man 5:=möchte 6:=das 7:=jemand 8:=zu 9:=Besuch 10:=kommt.,3,"[[1, 2], [3, 4, 5], [6, 7, 8, 9, 10]]",An invitation is when you want someone to come and visit.,['# ::snt An invitation is when you want someone to come and visit.\n(ii / invite-01\n      :time (w / want-01\n            :ARG0 (y / you)\n            :ARG1 (a / and\n                  :op1 (c / come-01\n                        :ARG1 (s / someone))\n                  :op2 (v / visit-01\n                        :ARG0 s))))'],"[ii, attr-instance, invite_01, attr-time, [w, attr-instance, want_01, attr-arg0, [y, attr-instance, you], attr-arg1, [a, attr-instance, and, attr-op1, [c, attr-instance, come_01, attr-arg1, [s, attr-instance, someone]], attr-op2, [v, attr-instance, visit_01, attr-arg0, s]]]]"
1613,1613,1613,1613,1929,12532,einladung,Man kann eine Einladung mündlich geben.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-02-15T07:34:41Z,d49497e3abada5f79c3745c314471167,0:=Man 1:=kann 2:=eine 3:=Einladung 4:=mündlich 5:=geben.,1,,You can give an invitation verbally.,['# ::snt You can give an invitation verbally.\n(p / possible-01\n      :ARG1 (ii / invite-01\n            :ARG0 (y / you)\n            :manner (v / verbal)))'],"[p, attr-instance, possible_01, attr-arg1, [ii, attr-instance, invite_01, attr-arg0, [y, attr-instance, you], attr-manner, [v, attr-instance, verbal]]]"
1614,1614,1614,1614,1930,12533,einladung,Oder man kann sie schreiben.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-02-15T07:34:41Z,d49497e3abada5f79c3745c314471167,0:=Oder 1:=man 2:=kann 3:=sie 4:=schreiben.,1,,Or you can write them.,['# ::snt Or you can write them.\n(o / or\n      :op2 (p / possible-01\n            :ARG1 (w / write-01\n                  :ARG0 (y / you)\n                  :ARG1 (t / they))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, possible_01, attr-arg1, [w, attr-instance, write_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, they]]]]"
1615,1615,1615,1615,1931,12534,einpersonenpackung,Ein-personen-packungen gibt es für Soldaten.,0_long,Übung|Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-06-18T07:20:09Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein-personen-packungen 1:=gibt 2:=es 3:=für 4:=Soldaten.,1,,Single-person packs are available for soldiers.,['# ::snt Single-person packs are available for soldiers.\n(a / available-02\n      :ARG1 (s / soldier)\n      :ARG2 (p / pack\n            :consist-of (p2 / person\n                  :quant 1)))'],"[a, attr-instance, available_02, attr-arg1, [s, attr-instance, soldier], attr-arg2, [p, attr-instance, pack, attr-consist_of, [p2, attr-instance, person, attr-quant, 1]]]"
1616,1616,1616,1616,1933,12536,einpersonenpackung,Früher hat man dazu Ein-mann-packung gesagt.,2_long,Übung|Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-06-18T07:20:09Z,48f66906899cc4a9477b6c9e32ff4424,0:=Früher 1:=hat 2:=man 3:=dazu 4:=Ein-mann-packung 5:=gesagt.,1,,"In the past, this was called a one-man pack.","['# ::snt In the past, this was called a one-man pack.\n(c / call-01\n      :ARG1 (t / this)\n      :ARG2 (p / pack\n            :consist-of (m / man\n                  :quant 1))\n      :time (p2 / past))']","[c, attr-instance, call_01, attr-arg1, [t, attr-instance, this], attr-arg2, [p, attr-instance, pack, attr-consist_of, [m, attr-instance, man, attr-quant, 1]], attr-time, [p2, attr-instance, past]]"
1617,1617,1617,1617,1934,12537,einpersonenpackung,Noch früher hat man Eiserne Ration gesagt.,3_long,Übung|Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-06-18T07:20:09Z,48f66906899cc4a9477b6c9e32ff4424,0:=Noch 1:=früher 2:=hat 3:=man 4:=Eiserne 5:=Ration 6:=gesagt.,1,,Even earlier it was called an iron ration.,['# ::snt Even earlier it was called an iron ration.\n(c / call-01\n      :ARG1 (ii / it)\n      :ARG2 (r / ration-01\n            :ARG1 (ii2 / iron))\n      :time (b / before\n            :mod (e / even)))'],"[c, attr-instance, call_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [r, attr-instance, ration_01, attr-arg1, [ii2, attr-instance, iron]], attr-time, [b, attr-instance, before, attr-mod, [e, attr-instance, even]]]"
1618,1618,1618,1618,1935,12538,einpersonenpackung,Ein-personen-packungen sind sehr lange halt-bar.,4_long,Übung|Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-06-18T07:20:09Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein-personen-packungen 1:=sind 2:=sehr 3:=lange 4:=halt-bar.,1,,Single-person packs have a very long shelf life.,['# ::snt Single-person packs have a very long shelf life.\n(h / have-03\n      :ARG0 (p / pack\n            :consist-of (p2 / person\n                  :quant 1))\n      :ARG1 (l / life\n            :mod (s / shelf)\n            :ARG1-of (l2 / long-03\n                  :degree (v / very))))'],"[h, attr-instance, have_03, attr-arg0, [p, attr-instance, pack, attr-consist_of, [p2, attr-instance, person, attr-quant, 1]], attr-arg1, [l, attr-instance, life, attr-mod, [s, attr-instance, shelf], attr-arg1_of, [l2, attr-instance, long_03, attr-degree, [v, attr-instance, very]]]]"
1619,1619,1619,1619,1938,12541,einpersonenpackung,Eine Einpersonenpackung ist Essen und Trinken.,0_short,Übung|Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-06-18T07:20:09Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Einpersonenpackung 2:=ist 3:=Essen 4:=und 5:=Trinken.,2,"[[3], [5]]",A single person pack is food and drink.,['# ::snt A single person pack is food and drink.\n(a / and\n      :op1 (f / food)\n      :op2 (d / drink)\n      :domain (p / pack\n            :consist-of (p2 / person\n                  :ARG1-of (s / single-02))))'],"[a, attr-instance, and, attr-op1, [f, attr-instance, food], attr-op2, [d, attr-instance, drink], attr-domain, [p, attr-instance, pack, attr-consist_of, [p2, attr-instance, person, attr-arg1_of, [s, attr-instance, single_02]]]]"
1620,1620,1620,1620,1939,12542,einpersonenpackung,Damit kann man 1 Tag lang Essen und Trinken.,1_short,Übung|Essen_und_Trinken|Seiten_mit_defekten_Dateilinks,2023-06-18T07:20:09Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=kann 2:=man 3:=1 4:=Tag 5:=lang 6:=Essen 7:=und 8:=Trinken.,2,"[[6], [8]]",This is enough to eat and drink for one day.,['# ::snt This is enough to eat and drink for one day.\n(h / have-quant-91\n      :ARG1 (t / this)\n      :ARG3 (e / enough)\n      :ARG6 (a / and\n            :op1 (e2 / eat-01)\n            :op2 (d / drink-01)\n            :duration (t2 / temporal-quantity\n                  :quant 1\n                  :unit (d2 / day))))'],"[h, attr-instance, have_quant_91, attr-arg1, [t, attr-instance, this], attr-arg3, [e, attr-instance, enough], attr-arg6, [a, attr-instance, and, attr-op1, [e2, attr-instance, eat_01], attr-op2, [d, attr-instance, drink_01], attr-duration, [t2, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [d2, attr-instance, day]]]]"
1621,1621,1621,1621,1940,12543,einrad,Meistens hat ein Ein-rad: • keine Bremse,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Meistens 1:=hat 2:=ein 3:=Ein-rad: 4:=• 5:=keine 6:=Bremse,1,,Most unicycles have: • no brakes,['# ::snt Most unicycles have: • no brakes\n(h / have-03\n      :ARG0 (v / vehicle\n            :mod (m / most)\n            :mod (m2 / motorcycle))\n      :ARG1 (b / brake-01\n            :polarity -))'],"[h, attr-instance, have_03, attr-arg0, [v, attr-instance, vehicle, attr-mod, [m, attr-instance, most], attr-mod, [m2, attr-instance, motorcycle]], attr-arg1, [b, attr-instance, brake_01, attr-polarity, negative]]"
1622,1622,1622,1622,1941,12544,einrad,Meistens hat ein Ein-rad: • keinen Lenker,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Meistens 1:=hat 2:=ein 3:=Ein-rad: 4:=• 5:=keinen 6:=Lenker,1,,Most unicycles have: • no handlebars,['# ::snt Most unicycles have: • no handlebars\n(h / have-03\n      :ARG0 (v / vehicle\n            :mod (m / most)\n            :mod (m2 / motorcycle))\n      :ARG1 (h2 / handlebar\n            :polarity -))'],"[h, attr-instance, have_03, attr-arg0, [v, attr-instance, vehicle, attr-mod, [m, attr-instance, most], attr-mod, [m2, attr-instance, motorcycle]], attr-arg1, [h2, attr-instance, handlebar, attr-polarity, negative]]"
1623,1623,1623,1623,1942,12545,einrad,Meistens hat ein Ein-rad: • keine Gangschaltung,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Meistens 1:=hat 2:=ein 3:=Ein-rad: 4:=• 5:=keine 6:=Gangschaltung,1,,Most unicycles have: • no gears,['# ::snt Most unicycles have: • no gears\n(h / have-03\n      :ARG0 (v / vehicle\n            :mod (m / most)\n            :mod (m2 / motorcycle))\n      :ARG1 (g / gear\n            :polarity -))'],"[h, attr-instance, have_03, attr-arg0, [v, attr-instance, vehicle, attr-mod, [m, attr-instance, most], attr-mod, [m2, attr-instance, motorcycle]], attr-arg1, [g, attr-instance, gear, attr-polarity, negative]]"
1624,1624,1624,1624,1943,12546,einrad,Meistens hat ein Ein-rad: • keine Fahr-rad-kette,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Meistens 1:=hat 2:=ein 3:=Ein-rad: 4:=• 5:=keine 6:=Fahr-rad-kette,1,,Most unicycles have: • no bicycle chain,['# ::snt Most unicycles have: • no bicycle chain\n(h / have-03\n      :ARG0 (b / bicycle\n            :quant (m / most))\n      :ARG1 (c / chain\n            :polarity -\n            :mod (b2 / bicycle)))'],"[h, attr-instance, have_03, attr-arg0, [b, attr-instance, bicycle, attr-quant, [m, attr-instance, most]], attr-arg1, [c, attr-instance, chain, attr-polarity, negative, attr-mod, [b2, attr-instance, bicycle]]]"
1625,1625,1625,1625,1944,12547,einrad,Manche Artisten im Zirkus fahren ein Ein-rad.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Manche 1:=Artisten 2:=im 3:=Zirkus 4:=fahren 5:=ein 6:=Ein-rad.,1,,Some artists in the circus ride a unicycle.,['# ::snt Some artists in the circus ride a unicycle.\n(r / ride-01\n      :ARG0 (a / artist\n            :quant (s / some)\n            :mod (c / circus))\n      :ARG1 (u / unicycle))'],"[r, attr-instance, ride_01, attr-arg0, [a, attr-instance, artist, attr-quant, [s, attr-instance, some], attr-mod, [c, attr-instance, circus]], attr-arg1, [u, attr-instance, unicycle]]"
1626,1626,1626,1626,1945,12549,einrad,Es gibt auch für verschiedene Ein-rad-sport-arten.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Es 1:=gibt 2:=auch 3:=für 4:=verschiedene 5:=Ein-rad-sport-arten.,1,,There are also different unicycle sports.,['# ::snt There are also different unicycle sports.\n(d / differ-02\n      :ARG1 (s / sport\n            :mod (u / unicycle))\n      :mod (a / also))'],"[d, attr-instance, differ_02, attr-arg1, [s, attr-instance, sport, attr-mod, [u, attr-instance, unicycle]], attr-mod, [a, attr-instance, also]]"
1627,1627,1627,1627,1948,12552,einrad,Ein Ein-rad ist ein Fahrrad.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Ein 1:=Ein-rad 2:=ist 3:=ein 4:=Fahrrad.,1,,A unicycle is a bicycle.,['# ::snt A unicycle is a bicycle.\n(b / bicycle\n      :domain (u / unicycle))'],"[b, attr-instance, bicycle, attr-domain, [u, attr-instance, unicycle]]"
1628,1628,1628,1628,1949,12553,einrad,Das Ein-rad hat nur 1 Rad.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Das 1:=Ein-rad 2:=hat 3:=nur 4:=1 5:=Rad.,1,,The unicycle only has one wheel.,['# ::snt The unicycle only has one wheel.\n(h / have-03\n      :ARG0 (u / unicycle)\n      :ARG1 (w / wheel\n            :quant 1)\n      :mod (o / only))'],"[h, attr-instance, have_03, attr-arg0, [u, attr-instance, unicycle], attr-arg1, [w, attr-instance, wheel, attr-quant, 1], attr-mod, [o, attr-instance, only]]"
1629,1629,1629,1629,1950,12554,einrad,Der Sattel ist direkt über dem Rad.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Sattel 2:=ist 3:=direkt 4:=über 5:=dem 6:=Rad.,1,,The saddle is directly above the wheel.,['# ::snt The saddle is directly above the wheel.\n(a / above\n      :op1 (w / wheel)\n      :ARG1-of (d / direct-02)\n      :domain (s / saddle))'],"[a, attr-instance, above, attr-op1, [w, attr-instance, wheel], attr-arg1_of, [d, attr-instance, direct_02], attr-domain, [s, attr-instance, saddle]]"
1630,1630,1630,1630,1951,12555,einrad,Die Pedale sind direkt am Rad.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-09-15T15:33:55Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Pedale 2:=sind 3:=direkt 4:=am 5:=Rad.,1,,The pedals are directly on the bike.,['# ::snt The pedals are directly on the bike.\n(p / pedal\n      :location (b / bike)\n      :ARG1-of (d / direct-02))'],"[p, attr-instance, pedal, attr-location, [b, attr-instance, bike], attr-arg1_of, [d, attr-instance, direct_02]]"
1631,1631,1631,1631,1952,12556,eins,Die Zahl Eins (1) ist eine Un-gerade Zahl.,0_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Zahl 2:=Eins 3:=(1) 4:=ist 5:=eine 6:=Un-gerade 7:=Zahl.,1,,The number one (1) is an odd number.,['# ::snt The number one (1) is an odd number.\n(n / number\n      :mod (o / odd)\n      :domain (n2 / number\n            :mod 1))'],"[n, attr-instance, number, attr-mod, [o, attr-instance, odd], attr-domain, [n2, attr-instance, number, attr-mod, 1]]"
1632,1632,1632,1632,1953,12557,eins,Und sie ist eine Quadrat-zahl.,1_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=ist 3:=eine 4:=Quadrat-zahl.,1,,And it is a square number.,['# ::snt And it is a square number.\n(a / and\n      :op2 (n / number\n            :mod (s / square)\n            :domain (ii / it)))'],"[a, attr-instance, and, attr-op2, [n, attr-instance, number, attr-mod, [s, attr-instance, square], attr-domain, [ii, attr-instance, it]]]"
1633,1633,1633,1633,1954,12558,eins,Und sie ist eine Kubik-zahl.,2_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=ist 3:=eine 4:=Kubik-zahl.,1,,And it is a cubic number.,['# ::snt And it is a cubic number.\n(a / and\n      :op2 (n / number\n            :mod (c / cubic)\n            :domain (ii / it)))'],"[a, attr-instance, and, attr-op2, [n, attr-instance, number, attr-mod, [c, attr-instance, cubic], attr-domain, [ii, attr-instance, it]]]"
1634,1634,1634,1634,1955,12559,eins,Schul-note sind Zahlen.,3_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Schul-note 1:=sind 2:=Zahlen.,1,,School grades are numbers.,['# ::snt School grades are numbers.\n(n / number\n      :domain (g / grade\n            :mod (s / school)))'],"[n, attr-instance, number, attr-domain, [g, attr-instance, grade, attr-mod, [s, attr-instance, school]]]"
1635,1635,1635,1635,1956,12560,eins,In Deutschland bedeutet Eins (1) dass man etwas sehr gut gemacht hat.,4_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=In 1:=Deutschland 2:=bedeutet 3:=Eins 4:=(1) 5:=dass 6:=man 7:=etwas 8:=sehr 9:=gut 10:=gemacht 11:=hat.,4,"[[0, 1], [2, 3], [2, 4], [5, 6, 7, 8, 10, 11]]","In Germany, Eins (1) means that you have done something very well.","['# ::snt In Germany, Eins (1) means that you have done something very well.\n(m / mean-01\n      :li 1\n      :ARG1 (e / experiment-01)\n      :ARG2 (d / do-02\n            :ARG0 (y / you)\n            :ARG1 (s / something)\n            :ARG1-of (w / well-09\n                  :degree (v / very)))\n      :location (c / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[m, attr-instance, mean_01, attr-li, 1, attr-arg1, [e, attr-instance, experiment_01], attr-arg2, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-arg1_of, [w, attr-instance, well_09, attr-degree, [v, attr-instance, very]]], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
1636,1636,1636,1636,1957,12561,eins,Und in der Schweiz bedeutet Eins (1) das man etwas sehr schlecht gemacht hat.,5_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=in 2:=der 3:=Schweiz 4:=bedeutet 5:=Eins 6:=(1) 7:=das 8:=man 9:=etwas 10:=sehr 11:=schlecht 12:=gemacht 13:=hat.,4,"[[1, 3], [4, 5], [4, 6], [7, 8, 9, 10, 11, 12, 13]]","And in Switzerland, one (1) means that you have done something very badly.","['# ::snt And in Switzerland, one (1) means that you have done something very badly.\n(a / and\n      :op2 (m / mean-01\n            :li 1\n            :ARG1 (e / event)\n            :ARG2 (d / do-02\n                  :ARG0 (y / you)\n                  :ARG1 (s / something\n                        :ARG1-of (b / bad-05\n                              :degree (v / very))))\n            :location (c / country\n                  :name (n / name\n                        :op1 ""Switzerland""))))']","[a, attr-instance, and, attr-op2, [m, attr-instance, mean_01, attr-li, 1, attr-arg1, [e, attr-instance, event], attr-arg2, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something, attr-arg1_of, [b, attr-instance, bad_05, attr-degree, [v, attr-instance, very]]]], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""switzerland""]]]]"
1637,1637,1637,1637,1958,12562,eins,Eins ist eine Uhr-zeit.,6_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eins 1:=ist 2:=eine 3:=Uhr-zeit.,1,,One is a clock-time.,['# ::snt One is a clock-time.\n(t / time\n      :mod (c / clock)\n      :domain (o / one))'],"[t, attr-instance, time, attr-mod, [c, attr-instance, clock], attr-domain, [o, attr-instance, one]]"
1638,1638,1638,1638,1960,12564,eins,Eins ist eine Zahl.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eins 1:=ist 2:=eine 3:=Zahl.,1,,One is a number.,['# ::snt One is a number.\n(n / number\n      :domain (o / one))'],"[n, attr-instance, number, attr-domain, [o, attr-instance, one]]"
1639,1639,1639,1639,1961,12565,eins,Sie kommt zwischen Null und Zwei.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=kommt 2:=zwischen 3:=Null 4:=und 5:=Zwei.,1,,It comes between zero and two.,['# ::snt It comes between zero and two.\n(c / come-04\n      :ARG1 (ii / it)\n      :ARG2 (b / between\n            :op1 (z / zero)\n            :op2 (t / two)))'],"[c, attr-instance, come_04, attr-arg1, [ii, attr-instance, it], attr-arg2, [b, attr-instance, between, attr-op1, [z, attr-instance, zero], attr-op2, [t, attr-instance, two]]]"
1640,1640,1640,1640,1963,12567,eins,Man kann damit rechnen.,3_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=kann 2:=damit 3:=rechnen.,1,,You can count on it.,['# ::snt You can count on it.\n(p / possible-01\n      :ARG1 (c / count-03\n            :ARG0 (y / you)\n            :ARG1 (ii / it)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, count_03, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, it]]]"
1641,1641,1641,1641,1964,12568,eins,Und man kann damit Sachen be-schreiben.,4_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=man 2:=kann 3:=damit 4:=Sachen 5:=be-schreiben.,1,,And you can use it to describe things.,['# ::snt And you can use it to describe things.\n(a / and\n      :op2 (p / possible-01\n            :ARG1 (u / use-01\n                  :ARG0 (y / you)\n                  :ARG1 (ii / it)\n                  :ARG2 (d / describe-01\n                        :ARG0 y\n                        :ARG1 (t / thing)))))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, possible_01, attr-arg1, [u, attr-instance, use_01, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, it], attr-arg2, [d, attr-instance, describe_01, attr-arg0, y, attr-arg1, [t, attr-instance, thing]]]]]"
1642,1642,1642,1642,1966,12570,eins,In der Computer-sprache bedeutet Eins (1) ein-schalten.,6_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=In 1:=der 2:=Computer-sprache 3:=bedeutet 4:=Eins 5:=(1) 6:=ein-schalten.,1,,"In computer language, one (1) means to turn on.","['# ::snt In computer language, one (1) means to turn on.\n(m / mean-01\n      :li 1\n      :ARG1 (t / turn-on-13\n            :ARG1 (l / language\n                  :mod (c / computer))))']","[m, attr-instance, mean_01, attr-li, 1, attr-arg1, [t, attr-instance, turn_on_13, attr-arg1, [l, attr-instance, language, attr-mod, [c, attr-instance, computer]]]]"
1643,1643,1643,1643,1967,12571,eins,Oder sie bedeutet Richtig.,7_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=sie 2:=bedeutet 3:=Richtig.,1,,Or it means right.,['# ::snt Or it means right.\n(o / or\n      :op2 (m / mean-01\n            :ARG1 (ii / it)\n            :ARG2 (r / right-06)))'],"[o, attr-instance, or, attr-op2, [m, attr-instance, mean_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [r, attr-instance, right_06]]]"
1644,1644,1644,1644,1968,12572,eins,Eins (1) kann man als Zeichen schreiben.,8_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eins 1:=(1) 2:=kann 3:=man 4:=als 5:=Zeichen 6:=schreiben.,1,,One (1) can be written as a symbol.,['# ::snt One (1) can be written as a symbol.\n(p / possible-01\n      :ARG1 (w / write-01\n            :ARG1 (o / one\n                  :li 1)\n            :ARG3 (s / symbolize-01\n                  :ARG2 o)))'],"[p, attr-instance, possible_01, attr-arg1, [w, attr-instance, write_01, attr-arg1, [o, attr-instance, one, attr-li, 1], attr-arg3, [s, attr-instance, symbolize_01, attr-arg2, o]]]"
1645,1645,1645,1645,1969,12573,eins,Man kann Eins (1) aus-schreiben.,9_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=kann 2:=Eins 3:=(1) 4:=aus-schreiben.,1,,One can write out one (1).,['# ::snt One can write out one (1).\n(p / possible-01\n      :ARG1 (w / write-01\n            :ARG0 (o / one)\n            :ARG1 (o2 / one\n                  :ARG1-of (m / mean-01\n                        :ARG2 1))))'],"[p, attr-instance, possible_01, attr-arg1, [w, attr-instance, write_01, attr-arg0, [o, attr-instance, one], attr-arg1, [o2, attr-instance, one, attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, 1]]]]"
1646,1646,1646,1646,1970,12574,eins,Man kann Eins (1) mit einem Hand-zeichen zeigen.,10_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2018-11-19T09:26:30Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=kann 2:=Eins 3:=(1) 4:=mit 5:=einem 6:=Hand-zeichen 7:=zeigen.,1,,You can show one (1) with a hand signal.,['# ::snt You can show one (1) with a hand signal.\n(p / possible-01\n      :ARG1 (s / show-01\n            :ARG0 (y / you)\n            :ARG1 (o / one\n                  :ARG1-of (m / mean-01\n                        :ARG2 1))\n            :instrument (s2 / signal-07\n                  :ARG0 y\n                  :ARG1 (h / hand))))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, show_01, attr-arg0, [y, attr-instance, you], attr-arg1, [o, attr-instance, one, attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, 1]], attr-instrument, [s2, attr-instance, signal_07, attr-arg0, y, attr-arg1, [h, attr-instance, hand]]]]"
1647,1647,1647,1647,1973,26853,kopfballtischtennis,Nach dem Kopf-Stoß muss aber 1 Körper-Teil auf dem Boden sein.,2_long,Sport,2013-10-04T08:34:55Z,d4171b2c36772be4cad75ef4078874bd,0:=Nach 1:=dem 2:=Kopf-Stoß 3:=muss 4:=aber 5:=1 6:=Körper-Teil 7:=auf 8:=dem 9:=Boden 10:=sein.,2,"[[0, 2], [3, 4, 5, 6, 7, 9, 10]]","However, after the headbutt, one body part must be on the ground.","['# ::snt However, after the headbutt, one body part must be on the ground.\n(c / contrast-01\n      :ARG2 (o / obligate-01\n            :ARG2 (b / be-located-at-91\n                  :ARG1 (p / part\n                        :quant 1\n                        :part-of (b2 / body))\n                  :ARG2 (g / ground)\n                  :time (a / after\n                        :op1 (b3 / butt-01\n                              :ARG1 (h / head))))))']","[c, attr-instance, contrast_01, attr-arg2, [o, attr-instance, obligate_01, attr-arg2, [b, attr-instance, be_located_at_91, attr-arg1, [p, attr-instance, part, attr-quant, 1, attr-part_of, [b2, attr-instance, body]], attr-arg2, [g, attr-instance, ground], attr-time, [a, attr-instance, after, attr-op1, [b3, attr-instance, butt_01, attr-arg1, [h, attr-instance, head]]]]]]"
1648,1648,1648,1648,1974,26854,kopfballtischtennis,Das heißt: \newline man darf nicht auf dem Tisch liegen bleiben.,3_long,Sport,2013-10-04T08:34:55Z,d4171b2c36772be4cad75ef4078874bd,0:=Das 1:=heißt: 2:=\newline 3:=man 4:=darf 5:=nicht 6:=auf 7:=dem 8:=Tisch 9:=liegen 10:=bleiben.,2,"[[4, 5, 9, 10], [6, 7, 8]]",This means: \newline you are not allowed to remain lying on the table.,['# ::snt This means: \\newline you are not allowed to remain lying on the table.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (a / allow-01\n            :polarity -\n            :ARG1 (r / remain-01\n                  :ARG1 (y / you)\n                  :ARG3 (l / lie-07\n                        :ARG1 y\n                        :ARG2 (t2 / table)))\n            :mod (n / newline)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [a, attr-instance, allow_01, attr-polarity, negative, attr-arg1, [r, attr-instance, remain_01, attr-arg1, [y, attr-instance, you], attr-arg3, [l, attr-instance, lie_07, attr-arg1, y, attr-arg2, [t2, attr-instance, table]]], attr-mod, [n, attr-instance, newline]]]"
1649,1649,1649,1649,1975,26855,kopfballtischtennis,Es werden 2 Spiele gespielt.,4_long,Sport,2013-10-04T08:34:55Z,d4171b2c36772be4cad75ef4078874bd,0:=Es 1:=werden 2:=2 3:=Spiele 4:=gespielt.,1,,2 games will be played.,['# ::snt 2 games will be played.\n(p / play-01\n      :ARG1 (g / game\n            :quant 2))'],"[p, attr-instance, play_01, attr-arg1, [g, attr-instance, game, attr-quant, 2]]"
1650,1650,1650,1650,1976,26856,kopfballtischtennis,"Bei jedem Spiel muss man 11 Punkte machen, \newline damit man gewinnt.",5_long,Sport,2013-10-04T08:34:55Z,d4171b2c36772be4cad75ef4078874bd,"0:=Bei 1:=jedem 2:=Spiel 3:=muss 4:=man 5:=11 6:=Punkte 7:=machen, 8:=\newline 9:=damit 10:=man 11:=gewinnt.",2,"[[0, 1, 2, 3, 4, 5, 6, 7], [9, 10, 11]]",In each game you have to score 11 points to win.,['# ::snt In each game you have to score 11 points to win.\n(o / obligate-01\n      :ARG2 (s / score-01\n            :ARG0 (y / you)\n            :ARG1 (p / point\n                  :quant 11)\n            :purpose (w / win-01\n                  :ARG0 y))\n      :time (g / game\n            :mod (e / each)))'],"[o, attr-instance, obligate_01, attr-arg2, [s, attr-instance, score_01, attr-arg0, [y, attr-instance, you], attr-arg1, [p, attr-instance, point, attr-quant, 11], attr-purpose, [w, attr-instance, win_01, attr-arg0, y]], attr-time, [g, attr-instance, game, attr-mod, [e, attr-instance, each]]]"
1651,1651,1651,1651,1977,26857,kopfballtischtennis,Wer 2 Spiele gewinnt ist der Gewinner.,6_long,Sport,2013-10-04T08:34:55Z,d4171b2c36772be4cad75ef4078874bd,0:=Wer 1:=2 2:=Spiele 3:=gewinnt 4:=ist 5:=der 6:=Gewinner.,2,"[[0, 1, 2, 3], [4, 6]]",Whoever wins 2 games is the winner.,['# ::snt Whoever wins 2 games is the winner.\n(w / win-01\n      :ARG0 (p / person\n            :ARG0-of (w2 / win-01\n                  :ARG2 (g / game\n                        :quant 2\n                        :ARG1-of w))))'],"[w, attr-instance, win_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [w2, attr-instance, win_01, attr-arg2, [g, attr-instance, game, attr-quant, 2, attr-arg1_of, w]]]]"
1652,1652,1652,1652,1978,26858,kopfballtischtennis,Kopfballtischtennis ist eine Sportart.,0_short,Sport,2013-10-04T08:34:55Z,d4171b2c36772be4cad75ef4078874bd,0:=Kopfballtischtennis 1:=ist 2:=eine 3:=Sportart.,1,,Header table tennis is a sport.,['# ::snt Header table tennis is a sport.\n(s / sport\n      :domain (t / tennis\n            :mod (t2 / table)\n            :mod (h / Header)))'],"[s, attr-instance, sport, attr-domain, [t, attr-instance, tennis, attr-mod, [t2, attr-instance, table], attr-mod, [h, attr-instance, header]]]"
1653,1653,1653,1653,1979,26859,kopfballtischtennis,"Zwei Personen spielen gegeneinander,  \newline mit einem Ball auf einem Tisch.",1_short,Sport,2013-10-04T08:34:55Z,d4171b2c36772be4cad75ef4078874bd,"0:=Zwei 1:=Personen 2:=spielen 3:=gegeneinander, 4:= 5:=\newline 6:=mit 7:=einem 8:=Ball 9:=auf 10:=einem 11:=Tisch.",3,"[[3], [6, 8], [9, 11]]","Two people play against each other, \newline with a ball on a table.","['# ::snt Two people play against each other, \\newline with a ball on a table.\n(p / play-01\n      :ARG0 (p2 / person\n            :quant 2)\n      :ARG3 (o / other\n            :mod (e / each))\n      :manner (l / line\n            :mod (n / newline)\n            :location (t / table)))']","[p, attr-instance, play_01, attr-arg0, [p2, attr-instance, person, attr-quant, 2], attr-arg3, [o, attr-instance, other, attr-mod, [e, attr-instance, each]], attr-manner, [l, attr-instance, line, attr-mod, [n, attr-instance, newline], attr-location, [t, attr-instance, table]]]"
1654,1654,1654,1654,1980,26860,kopfballtischtennis,Der Ball muss auf die andere Tisch-Seite gestoßen werden.,2_short,Sport,2013-10-04T08:34:55Z,d4171b2c36772be4cad75ef4078874bd,0:=Der 1:=Ball 2:=muss 3:=auf 4:=die 5:=andere 6:=Tisch-Seite 7:=gestoßen 8:=werden.,1,,The ball must be pushed to the other side of the table.,['# ::snt The ball must be pushed to the other side of the table.\n(o / obligate-01\n      :ARG2 (p / push-01\n            :ARG1 (b / ball)\n            :ARG2 (s / side\n                  :mod (o2 / other)\n                  :part-of (t / table))))'],"[o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, push_01, attr-arg1, [b, attr-instance, ball], attr-arg2, [s, attr-instance, side, attr-mod, [o2, attr-instance, other], attr-part_of, [t, attr-instance, table]]]]"
1655,1655,1655,1655,1981,26861,kopfballtischtennis,Der Ball darf nur mit dem Kopf berührt werden.,3_short,Sport,2013-10-04T08:34:55Z,d4171b2c36772be4cad75ef4078874bd,0:=Der 1:=Ball 2:=darf 3:=nur 4:=mit 5:=dem 6:=Kopf 7:=berührt 8:=werden.,1,,The ball may only be touched with the head.,['# ::snt The ball may only be touched with the head.\n(p / possible-01\n      :ARG1 (t / touch-01\n            :ARG1 (b / ball)\n            :ARG2 (h / head)\n            :mod (o / only)))'],"[p, attr-instance, possible_01, attr-arg1, [t, attr-instance, touch_01, attr-arg1, [b, attr-instance, ball], attr-arg2, [h, attr-instance, head], attr-mod, [o, attr-instance, only]]]"
1656,1656,1656,1656,1982,26862,kopfgeld,Kopf-geld ist eine Belohnung.,0_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2021-09-09T06:31:21Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kopf-geld 1:=ist 2:=eine 3:=Belohnung.,1,,Bounty is a reward.,['# ::snt Bounty is a reward.\n(r / reward-01\n      :ARG2 (o / ounty))'],"[r, attr-instance, reward_01, attr-arg2, [o, attr-instance, ounty]]"
1657,1657,1657,1657,1983,26863,kopfgeld,Dafür das man jemand tötet.,1_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2021-09-09T06:31:21Z,48f66906899cc4a9477b6c9e32ff4424,0:=Dafür 1:=das 2:=man 3:=jemand 4:=tötet.,1,,For killing someone.,['# ::snt For killing someone.\n(c / cause-01\n      :ARG0 (k / kill-01\n            :ARG1 (s / someone)))'],"[c, attr-instance, cause_01, attr-arg0, [k, attr-instance, kill_01, attr-arg1, [s, attr-instance, someone]]]"
1658,1658,1658,1658,1985,26865,kopfgeld,Kopf-geld gibt es für Verbrecher.,3_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2021-09-09T06:31:21Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kopf-geld 1:=gibt 2:=es 3:=für 4:=Verbrecher.,1,,There is a bounty for criminals.,['# ::snt There is a bounty for criminals.\n(b / be-located-at-91\n      :ARG1 (b2 / bounty\n            :beneficiary (p / person\n                  :ARG2-of (c / criminal-03)))\n      :ARG2 (t / there))'],"[b, attr-instance, be_located_at_91, attr-arg1, [b2, attr-instance, bounty, attr-beneficiary, [p, attr-instance, person, attr-arg2_of, [c, attr-instance, criminal_03]]], attr-arg2, [t, attr-instance, there]]"
1659,1659,1659,1659,1987,26867,kopfgeld,"Jemand der für Geld Personen sucht, \newline ist ein Kopf-geld-jäger.",5_long,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2021-09-09T06:31:21Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Jemand 1:=der 2:=für 3:=Geld 4:=Personen 5:=sucht, 6:=\newline 7:=ist 8:=ein 9:=Kopf-geld-jäger.",2,"[[1, 2, 3, 4, 5], [7, 9]]","Someone who seeks out people for money,\newline is a bounty hunter.","['# ::snt Someone who seeks out people for money,\\newline is a bounty hunter.\n(p / person\n      :ARG0-of (h / hunt-01\n            :ARG1 (b / bear-02))\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""newline""))\n      :ARG0-of (s / seek-out-02\n            :ARG1 (m / money)\n            :ARG2 p))']","[p, attr-instance, person, attr-arg0_of, [h, attr-instance, hunt_01, attr-arg1, [b, attr-instance, bear_02]], attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""newline""]], attr-arg0_of, [s, attr-instance, seek_out_02, attr-arg1, [m, attr-instance, money], attr-arg2, p]]"
1660,1660,1660,1660,1988,26868,kopfgeld,Kopfgeld ist Geld.,0_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2021-09-09T06:31:21Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kopfgeld 1:=ist 2:=Geld.,1,,Bounty is money.,['# ::snt Bounty is money.\n(m / money\n      :domain (o / ounty))'],"[m, attr-instance, money, attr-domain, [o, attr-instance, ounty]]"
1661,1661,1661,1661,1989,26869,kopfgeld,"Man bekommt es, wenn man eine Person findet.",1_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2021-09-09T06:31:21Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Man 1:=bekommt 2:=es, 3:=wenn 4:=man 5:=eine 6:=Person 7:=findet.",2,"[[0, 1, 2], [3, 4, 6, 7]]",You get it when you find a person.,['# ::snt You get it when you find a person.\n(g / get-01\n      :ARG0 (y / you)\n      :ARG1 (ii / it)\n      :time (f / find-01\n            :ARG0 y\n            :ARG1 (p / person)))'],"[g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, it], attr-time, [f, attr-instance, find_01, attr-arg0, y, attr-arg1, [p, attr-instance, person]]]"
1662,1662,1662,1662,1990,26870,kopfgeld,Eine Person die von vielen ge-sucht wird.,2_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2021-09-09T06:31:21Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Person 2:=die 3:=von 4:=vielen 5:=ge-sucht 6:=wird.,1,,A person who is sought after by many.,['# ::snt A person who is sought after by many.\n(p / person\n      :ARG1-of (s / seek-01\n            :ARG0 (m / many)))'],"[p, attr-instance, person, attr-arg1_of, [s, attr-instance, seek_01, attr-arg0, [m, attr-instance, many]]]"
1663,1663,1663,1663,1991,26871,kopfgeld,Zum Beispiel eine Person die ein Verbrechen gemacht hat.,3_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2021-09-09T06:31:21Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=eine 3:=Person 4:=die 5:=ein 6:=Verbrechen 7:=gemacht 8:=hat.,1,,"For example, a person who has committed a crime.","['# ::snt For example, a person who has committed a crime.\n(e / exemplify-01\n      :ARG0 (p / person\n            :ARG0-of (c / commit-02\n                  :ARG1 (c2 / crime-02))))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [c, attr-instance, commit_02, attr-arg1, [c2, attr-instance, crime_02]]]]"
1664,1664,1664,1664,1992,26872,kopfgeld,Oder eine Person die aus dem Gefängnis aus-gebrochen ist.,4_short,Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2021-09-09T06:31:21Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=eine 2:=Person 3:=die 4:=aus 5:=dem 6:=Gefängnis 7:=aus-gebrochen 8:=ist.,2,"[[2, 7], [4, 6]]",Or a person who escaped from prison.,['# ::snt Or a person who escaped from prison.\n(o / or\n      :op2 (p / person\n            :ARG0-of (e / escape-01\n                  :ARG1 (p2 / prison))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, person, attr-arg0_of, [e, attr-instance, escape_01, attr-arg1, [p2, attr-instance, prison]]]]"
1665,1665,1665,1665,1993,26873,kopfsalat,Kopf-salat ist eine Pflanze.,0_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Kopf-salat 1:=ist 2:=eine 3:=Pflanze.,1,,Lettuce is a plant.,['# ::snt Lettuce is a plant.\n(p / plant\n      :domain (l / lettuce))'],"[p, attr-instance, plant, attr-domain, [l, attr-instance, lettuce]]"
1666,1666,1666,1666,1994,26874,kopfsalat,Wahrscheinlich stammt der Kopf-salat vom Wilden Lattich ab.,1_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Wahrscheinlich 1:=stammt 2:=der 3:=Kopf-salat 4:=vom 5:=Wilden 6:=Lattich 7:=ab.,1,,The lettuce probably originates from the wild lettuce.,['# ::snt The lettuce probably originates from the wild lettuce.\n(o / originate-01\n      :ARG1 (l / lettuce)\n      :ARG2 (l2 / lettuce\n            :mod (w / wild))\n      :mod (p / probable))'],"[o, attr-instance, originate_01, attr-arg1, [l, attr-instance, lettuce], attr-arg2, [l2, attr-instance, lettuce, attr-mod, [w, attr-instance, wild]], attr-mod, [p, attr-instance, probable]]"
1667,1667,1667,1667,1995,26875,kopfsalat,Wilder Lattich ist eine Steppen-pflanze.,2_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Wilder 1:=Lattich 2:=ist 3:=eine 4:=Steppen-pflanze.,1,,Wild lettuce is a steppe plant.,['# ::snt Wild lettuce is a steppe plant.\n(p / plant\n      :mod (s / steppe)\n      :domain (l / lettuce\n            :mod (w / wild)))'],"[p, attr-instance, plant, attr-mod, [s, attr-instance, steppe], attr-domain, [l, attr-instance, lettuce, attr-mod, [w, attr-instance, wild]]]"
1668,1668,1668,1668,1996,26876,kopfsalat,Wilder Lattich wächst in Süd-europa und Vorder-asien.,3_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Wilder 1:=Lattich 2:=wächst 3:=in 4:=Süd-europa 5:=und 6:=Vorder-asien.,2,"[[4], [6]]",Wild lettuce grows in southern Europe and Western Asia.,"['# ::snt Wild lettuce grows in southern Europe and Western Asia.\n(g / grow-03\n      :ARG1 (l / lettuce\n            :mod (w / wild))\n      :location (a / and\n            :op1 (s / south\n                  :part-of (c / continent\n                        :name (n / name\n                              :op1 ""Europe"")))\n            :op2 (w2 / world-region\n                  :name (n2 / name\n                        :op1 ""Western""\n                        :op2 ""Asia""))))']","[g, attr-instance, grow_03, attr-arg1, [l, attr-instance, lettuce, attr-mod, [w, attr-instance, wild]], attr-location, [a, attr-instance, and, attr-op1, [s, attr-instance, south, attr-part_of, [c, attr-instance, continent, attr-name, [n, attr-instance, name, attr-op1, ""europe""]]], attr-op2, [w2, attr-instance, world_region, attr-name, [n2, attr-instance, name, attr-op1, ""western"", attr-op2, ""asia""]]]]"
1669,1669,1669,1669,1997,26877,kopfsalat,Kopf-salat kann man im Freien anpflanzen.,4_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Kopf-salat 1:=kann 2:=man 3:=im 4:=Freien 5:=anpflanzen.,2,"[[3, 4], [5]]",Lettuce can be grown outdoors.,['# ::snt Lettuce can be grown outdoors.\n(p / possible-01\n      :ARG1 (g / grow-03\n            :ARG1 (l / lettuce)\n            :location (o / outdoors)))'],"[p, attr-instance, possible_01, attr-arg1, [g, attr-instance, grow_03, attr-arg1, [l, attr-instance, lettuce], attr-location, [o, attr-instance, outdoors]]]"
1670,1670,1670,1670,1999,26879,kopfsalat,Kopf-salat kann 1 Jahr bis 2 Jahre alt werden.,6_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Kopf-salat 1:=kann 2:=1 3:=Jahr 4:=bis 5:=2 6:=Jahre 7:=alt 8:=werden.,2,"[[2, 3], [4, 5, 6]]",Lettuce can live for 1 to 2 years.,['# ::snt Lettuce can live for 1 to 2 years.\n(p / possible-01\n      :ARG1 (l / live-01\n            :ARG0 (e / eliminate-01)\n            :duration (b / between\n                  :op1 (t / temporal-quantity\n                        :quant 1\n                        :unit (y / year))\n                  :op2 (t2 / temporal-quantity\n                        :quant 2\n                        :unit (y2 / year)))))'],"[p, attr-instance, possible_01, attr-arg1, [l, attr-instance, live_01, attr-arg0, [e, attr-instance, eliminate_01], attr-duration, [b, attr-instance, between, attr-op1, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [y, attr-instance, year]], attr-op2, [t2, attr-instance, temporal_quantity, attr-quant, 2, attr-unit, [y2, attr-instance, year]]]]]"
1671,1671,1671,1671,2000,26880,kopfsalat,Kopf-salat ist empfindlich.,7_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Kopf-salat 1:=ist 2:=empfindlich.,1,,Lettuce is sensitive.,['# ::snt Lettuce is sensitive.\n(s / sensitive-03\n      :ARG0 (l / lure-01))'],"[s, attr-instance, sensitive_03, attr-arg0, [l, attr-instance, lure_01]]"
1672,1672,1672,1672,2001,26881,kopfsalat,Darum darf man diesen nicht drücken.,8_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Darum 1:=darf 2:=man 3:=diesen 4:=nicht 5:=drücken.,1,,That's why you shouldn't press it.,"[""# ::snt That's why you shouldn't press it.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (r / recommend-01\n            :ARG1 (p / press-01\n                  :polarity -\n                  :ARG0 (y / you)\n                  :ARG1 (ii / it))\n            :ARG2 y))""]","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [r, attr-instance, recommend_01, attr-arg1, [p, attr-instance, press_01, attr-polarity, negative, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, it]], attr-arg2, y]]"
1673,1673,1673,1673,2002,26882,kopfsalat,Kopf-salat kann man nur wenige Tage lagern.,9_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Kopf-salat 1:=kann 2:=man 3:=nur 4:=wenige 5:=Tage 6:=lagern.,1,,Lettuce can only be stored for a few days.,['# ::snt Lettuce can only be stored for a few days.\n(p / possible-01\n      :ARG1 (s / store-01\n            :ARG1 (l / lettuce)\n            :ARG2 (f / few\n                  :op1 (t / temporal-quantity\n                        :quant 1\n                        :unit (d / day))\n                  :mod (o / only))))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, store_01, attr-arg1, [l, attr-instance, lettuce], attr-arg2, [f, attr-instance, few, attr-op1, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [d, attr-instance, day]], attr-mod, [o, attr-instance, only]]]]"
1674,1674,1674,1674,2003,26883,kopfsalat,"Zum Beispiel: \newline Wenn die Temperatur 0 Grad Celsius beträgt, \newline dann kann man Kopf-salat 8 bis 12 Tage lagern.",10_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,"0:=Zum 1:=Beispiel: 2:=\newline 3:=Wenn 4:=die 5:=Temperatur 6:=0 7:=Grad 8:=Celsius 9:=beträgt, 10:=\newline 11:=dann 12:=kann 13:=man 14:=Kopf-salat 15:=8 16:=bis 17:=12 18:=Tage 19:=lagern.",3,"[[3, 5, 6, 7, 8, 9], [11, 12, 13, 14, 15, 18, 19], [11, 12, 13, 14, 16, 17, 18, 19]]","For example: \newline If the temperature is 0 degrees Celsius, \newline then you can store lettuce for 8 to 12 days.","['# ::snt For example: \\newline If the temperature is 0 degrees Celsius, \\newline then you can store lettuce for 8 to 12 days.\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :ARG1 (s / store-01\n                  :ARG0 (y / you)\n                  :ARG1 (l / lettuce)\n                  :duration (b / between\n                        :op1 (t / temporal-quantity\n                              :quant 8\n                              :unit (d / day))\n                        :op2 (t2 / temporal-quantity\n                              :quant 12\n                              :unit (d2 / day))))\n            :condition (t3 / temperature\n                  :mod (t4 / temperature-quantity\n                        :quant 0\n                        :scale (c / celsius)))\n            :mod (c2 / company\n                  :name (n / name\n                        :op1 ""Newline""))))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [s, attr-instance, store_01, attr-arg0, [y, attr-instance, you], attr-arg1, [l, attr-instance, lettuce], attr-duration, [b, attr-instance, between, attr-op1, [t, attr-instance, temporal_quantity, attr-quant, 8, attr-unit, [d, attr-instance, day]], attr-op2, [t2, attr-instance, temporal_quantity, attr-quant, 12, attr-unit, [d2, attr-instance, day]]]], attr-condition, [t3, attr-instance, temperature, attr-mod, [t4, attr-instance, temperature_quantity, attr-quant, 0, attr-scale, [c, attr-instance, celsius]]], attr-mod, [c2, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]]]"
1675,1675,1675,1675,2004,26884,kopfsalat,Aus Kopf-salat kann man einen Blatt-salat machen.,11_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Aus 1:=Kopf-salat 2:=kann 3:=man 4:=einen 5:=Blatt-salat 6:=machen.,1,,You can make a leaf salad from lettuce.,['# ::snt You can make a leaf salad from lettuce.\n(p / possible-01\n      :ARG1 (m / make-01\n            :ARG0 (y / you)\n            :ARG1 (s / salad\n                  :mod (l / leaf))\n            :ARG2 (l2 / lettuce)))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, make_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, salad, attr-mod, [l, attr-instance, leaf]], attr-arg2, [l2, attr-instance, lettuce]]]"
1676,1676,1676,1676,2005,26885,kopfsalat,Im Kopf-salat sind viele Mineralien und Vitamine.,12_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Im 1:=Kopf-salat 2:=sind 3:=viele 4:=Mineralien 5:=und 6:=Vitamine.,2,"[[4], [6]]",Lettuce contains many minerals and vitamins.,['# ::snt Lettuce contains many minerals and vitamins.\n(c / contain-01\n      :ARG0 (l / lettuce)\n      :ARG1 (a / and\n            :op1 (m / mineral\n                  :quant (m2 / many))\n            :op2 (v / vitamin\n                  :quant (m3 / many))))'],"[c, attr-instance, contain_01, attr-arg0, [l, attr-instance, lettuce], attr-arg1, [a, attr-instance, and, attr-op1, [m, attr-instance, mineral, attr-quant, [m2, attr-instance, many]], attr-op2, [v, attr-instance, vitamin, attr-quant, [m3, attr-instance, many]]]]"
1677,1677,1677,1677,2006,26886,kopfsalat,Kopf-salat besteht aus 95 Prozent Wasser.,13_long,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Kopf-salat 1:=besteht 2:=aus 3:=95 4:=Prozent 5:=Wasser.,1,,Lettuce consists of 95 percent water.,['# ::snt Lettuce consists of 95 percent water.\n(c / consist-01\n      :ARG1 (e / eliminate-01)\n      :ARG2 (w / water\n            :mod (p / percentage-entity\n                  :value 95)))'],"[c, attr-instance, consist_01, attr-arg1, [e, attr-instance, eliminate_01], attr-arg2, [w, attr-instance, water, attr-mod, [p, attr-instance, percentage_entity, attr-value, 95]]]"
1678,1678,1678,1678,2007,26887,kopfsalat,Kopf-salat ist ein Gemüse.,0_short,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Kopf-salat 1:=ist 2:=ein 3:=Gemüse.,1,,Lettuce is a vegetable.,['# ::snt Lettuce is a vegetable.\n(v / vegetable\n      :domain (l / lettuce))'],"[v, attr-instance, vegetable, attr-domain, [l, attr-instance, lettuce]]"
1679,1679,1679,1679,2008,26888,kopfsalat,Die Blätter vom Kopf-salat kann man essen.,1_short,Essen_und_Trinken|Natur,2022-01-12T15:29:05Z,e800bebc9060331edfac65e663a55570,0:=Die 1:=Blätter 2:=vom 3:=Kopf-salat 4:=kann 5:=man 6:=essen.,1,,The leaves of the lettuce can be eaten.,['# ::snt The leaves of the lettuce can be eaten.\n(p / possible-01\n      :ARG1 (e / eat-01\n            :ARG1 (l / leaf\n                  :part-of (l2 / lettuce))))'],"[p, attr-instance, possible_01, attr-arg1, [e, attr-instance, eat_01, attr-arg1, [l, attr-instance, leaf, attr-part_of, [l2, attr-instance, lettuce]]]]"
1680,1680,1680,1680,2009,26889,koprolalie,Koprolalie kann zwanghaft sein.,0_long,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Koprolalie 1:=kann 2:=zwanghaft 3:=sein.,1,,Coprolalia can be compulsive.,['# ::snt Coprolalia can be compulsive.\n(p / possible-01\n      :ARG1 (c / compulsive\n            :domain (c2 / coprolalia)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, compulsive, attr-domain, [c2, attr-instance, coprolalia]]]"
1681,1681,1681,1681,2010,26890,koprolalie,Der Mensch mit Koprolalie kann die Wörter nicht steuern.,1_long,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Mensch 2:=mit 3:=Koprolalie 4:=kann 5:=die 6:=Wörter 7:=nicht 8:=steuern.,1,,The person with coprolalia cannot control words.,['# ::snt The person with coprolalia cannot control words.\n(p / possible-01\n      :polarity -\n      :ARG1 (c / control-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-03\n                        :ARG1 (c2 / coprolalia)))\n            :ARG1 (w / word)))'],"[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [c, attr-instance, control_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [c2, attr-instance, coprolalia]]], attr-arg1, [w, attr-instance, word]]]"
1682,1682,1682,1682,2011,26891,koprolalie,"Die Wörter zum Thema Kot werden ausgesprochen,  \newline ohne das die Person es möchte.",2_long,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,"0:=Die 1:=Wörter 2:=zum 3:=Thema 4:=Kot 5:=werden 6:=ausgesprochen, 7:= 8:=\newline 9:=ohne 10:=das 11:=die 12:=Person 13:=es 14:=möchte.",3,"[[1, 2, 3, 4], [1, 5, 6], [9, 10, 12, 13, 14]]","The words about feces are spoken, \newline without the person wanting it.","['# ::snt The words about feces are spoken, \\newline without the person wanting it.\n(s / speak-01\n      :ARG1 (w / word\n            :topic (f / feces))\n      :ARG1-of (n / newline-00)\n      :manner (w2 / want-01\n            :polarity -\n            :ARG0 (p / person)\n            :ARG1 s))']","[s, attr-instance, speak_01, attr-arg1, [w, attr-instance, word, attr-topic, [f, attr-instance, feces]], attr-arg1_of, [n, attr-instance, newline_00], attr-manner, [w2, attr-instance, want_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person], attr-arg1, s]]"
1683,1683,1683,1683,2012,26892,koprolalie,Koprolalie ist ein Griechisches Wort.,3_long,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Koprolalie 1:=ist 2:=ein 3:=Griechisches 4:=Wort.,2,"[[3], [4]]",Coprolalia is a Greek word.,"['# ::snt Coprolalia is a Greek word.\n(w / word\n      :mod (c / country\n            :name (n / name\n                  :op1 ""Greece""))\n      :domain (c2 / coprolalia))']","[w, attr-instance, word, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""greece""]], attr-domain, [c2, attr-instance, coprolalia]]"
1684,1684,1684,1684,2015,26895,koprolalie,Koprolalie ist sehr oft mit dem Tourette-Syndrom verbunden.,6_long,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Koprolalie 1:=ist 2:=sehr 3:=oft 4:=mit 5:=dem 6:=Tourette-Syndrom 7:=verbunden.,1,,Coprolalia is very often associated with Tourette syndrome.,"['# ::snt Coprolalia is very often associated with Tourette syndrome.\n(a / associate-01\n      :ARG1 (c / coprolalia)\n      :ARG2 (s / syndrome\n            :name (n / name\n                  :op1 ""Tourette""))\n      :frequency (o / often\n            :degree (v / very)))']","[a, attr-instance, associate_01, attr-arg1, [c, attr-instance, coprolalia], attr-arg2, [s, attr-instance, syndrome, attr-name, [n, attr-instance, name, attr-op1, ""tourette""]], attr-frequency, [o, attr-instance, often, attr-degree, [v, attr-instance, very]]]"
1685,1685,1685,1685,2016,26896,koprolalie,Gegen Koprolalie kann helfen: • Medikamente,7_long,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Gegen 1:=Koprolalie 2:=kann 3:=helfen: 4:=• 5:=Medikamente,1,,Coprolalia can be treated with: • Medication,['# ::snt Coprolalia can be treated with: • Medication\n(p / possible-01\n      :ARG1 (t / treat-03\n            :ARG1 (c / coprolalia)\n            :ARG2 (m / medicate-01)))'],"[p, attr-instance, possible_01, attr-arg1, [t, attr-instance, treat_03, attr-arg1, [c, attr-instance, coprolalia], attr-arg2, [m, attr-instance, medicate_01]]]"
1686,1686,1686,1686,2017,26897,koprolalie,Gegen Koprolalie kann helfen: • Autogenes Training,8_long,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Gegen 1:=Koprolalie 2:=kann 3:=helfen: 4:=• 5:=Autogenes 6:=Training,1,,The following can help against coprolalia: • Autogenic training,['# ::snt The following can help against coprolalia: • Autogenic training\n(p / possible-01\n      :ARG1 (h / help-01\n            :ARG0 (t / thing\n                  :ARG1-of (f / follow-04)\n                  :example (t2 / train-01\n                        :mod (a / autogenic)))\n            :ARG1 (a2 / against\n                  :op1 (c / coprolalia))))'],"[p, attr-instance, possible_01, attr-arg1, [h, attr-instance, help_01, attr-arg0, [t, attr-instance, thing, attr-arg1_of, [f, attr-instance, follow_04], attr-example, [t2, attr-instance, train_01, attr-mod, [a, attr-instance, autogenic]]], attr-arg1, [a2, attr-instance, against, attr-op1, [c, attr-instance, coprolalia]]]]"
1687,1687,1687,1687,2018,26898,koprolalie,Gegen Koprolalie kann helfen: • Biofeedback,9_long,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Gegen 1:=Koprolalie 2:=kann 3:=helfen: 4:=• 5:=Biofeedback,1,,Coprolalia can be helped by: • Biofeedback,"['# ::snt Coprolalia can be helped by: • Biofeedback\n(p / possible-01\n      :ARG1 (h / help-01\n            :ARG0 (b / biofeedback)\n            :ARG1 (c / country\n                  :name (n / name\n                        :op1 ""Coptrolalia""))))']","[p, attr-instance, possible_01, attr-arg1, [h, attr-instance, help_01, attr-arg0, [b, attr-instance, biofeedback], attr-arg1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""coptrolalia""]]]]"
1688,1688,1688,1688,2019,26899,koprolalie,Gegen Koprolalie kann helfen: • Psychotherapie,10_long,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Gegen 1:=Koprolalie 2:=kann 3:=helfen: 4:=• 5:=Psychotherapie,1,,Coprolalia can be treated with: • Psychotherapy,['# ::snt Coprolalia can be treated with: • Psychotherapy\n(p / possible-01\n      :ARG1 (t / treat-03\n            :ARG1 (c / coprolalia)\n            :ARG2 (p2 / psychotherapy)))'],"[p, attr-instance, possible_01, attr-arg1, [t, attr-instance, treat_03, attr-arg1, [c, attr-instance, coprolalia], attr-arg2, [p2, attr-instance, psychotherapy]]]"
1689,1689,1689,1689,2020,26900,koprolalie,Bei der Koprolalie spricht jemand Wörter aus.,0_short,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Bei 1:=der 2:=Koprolalie 3:=spricht 4:=jemand 5:=Wörter 6:=aus.,1,,Coprolalia is when someone speaks words.,"['# ::snt Coprolalia is when someone speaks words.\n(b / be-temporally-at-91\n      :ARG1 (c / country\n            :name (n / name\n                  :op1 ""Coptalia""))\n      :ARG2 (s / speak-01\n            :ARG0 (s2 / someone)\n            :ARG1 (w / word)))']","[b, attr-instance, be_temporally_at_91, attr-arg1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""coptalia""]], attr-arg2, [s, attr-instance, speak_01, attr-arg0, [s2, attr-instance, someone], attr-arg1, [w, attr-instance, word]]]"
1690,1690,1690,1690,2021,26901,koprolalie,Die Wörter werden hintereinander ausgesprochen.,1_short,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Wörter 2:=werden 3:=hintereinander 4:=ausgesprochen.,1,,The words are pronounced one after the other.,['# ::snt The words are pronounced one after the other.\n(p / pronounce-01\n      :ARG1 (w / word)\n      :manner (o / one-after-the-other))'],"[p, attr-instance, pronounce_01, attr-arg1, [w, attr-instance, word], attr-manner, [o, attr-instance, one_after_the_other]]"
1691,1691,1691,1691,2022,26902,koprolalie,Die Wörter sind zum Thema: • Kot,2_short,Gesundheit,2014-04-25T20:23:18Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Wörter 2:=sind 3:=zum 4:=Thema: 5:=• 6:=Kot,1,,The words are on the topic: • Kot,['# ::snt The words are on the topic: • Kot\n(w / word-01\n      :ARG1 (k / Kot)\n      :topic (t / topic))'],"[w, attr-instance, word_01, attr-arg1, [k, attr-instance, kot], attr-topic, [t, attr-instance, topic]]"
1692,1692,1692,1692,2023,26903,koran,Der Koran war zuerst auf Arabisch geschrieben.,0_long,Religion|Seiten_mit_defekten_Dateilinks,2023-03-06T12:37:08Z,022a27447b80860fa0ec84e918eedf36,0:=Der 1:=Koran 2:=war 3:=zuerst 4:=auf 5:=Arabisch 6:=geschrieben.,1,,The Quran was first written in Arabic.,"['# ::snt The Quran was first written in Arabic.\n(w / write-01\n      :ARG1 (b / book\n            :name (n / name\n                  :op1 ""Quran""))\n      :ARG3 (l / language\n            :name (n2 / name\n                  :op1 ""Arabic""))\n      :ord (o / ordinal-entity\n            :value 1))']","[w, attr-instance, write_01, attr-arg1, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""quran""]], attr-arg3, [l, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""arabic""]], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]]"
1693,1693,1693,1693,2024,26904,koran,Auf Arabisch schreibt man so: Quran.,1_long,Religion|Seiten_mit_defekten_Dateilinks,2023-03-06T12:37:08Z,022a27447b80860fa0ec84e918eedf36,0:=Auf 1:=Arabisch 2:=schreibt 3:=man 4:=so: 5:=Quran.,1,,In Arabic it is written like this: Quran.,"['# ::snt In Arabic it is written like this: Quran.\n(w / write-01\n      :ARG1 (ii / it)\n      :manner (r / resemble-01\n            :ARG2 (b / book\n                  :name (n / name\n                        :op1 ""Quran"")\n                  :mod (t / this)))\n      :medium (l / language\n            :name (n2 / name\n                  :op1 ""Arabic"")))']","[w, attr-instance, write_01, attr-arg1, [ii, attr-instance, it], attr-manner, [r, attr-instance, resemble_01, attr-arg2, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""quran""], attr-mod, [t, attr-instance, this]]], attr-medium, [l, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""arabic""]]]"
1694,1694,1694,1694,2025,26905,koran,Auf Türkisch schreibt man so: Kuran.,2_long,Religion|Seiten_mit_defekten_Dateilinks,2023-03-06T12:37:08Z,022a27447b80860fa0ec84e918eedf36,0:=Auf 1:=Türkisch 2:=schreibt 3:=man 4:=so: 5:=Kuran.,1,,In Turkish it is written like this: Kuran.,"['# ::snt In Turkish it is written like this: Kuran.\n(w / write-01\n      :ARG1 (ii / it)\n      :manner (r / resemble-01\n            :ARG2 (t / this\n                  :ARG1-of (m / mean-01\n                        :ARG2 (p / person\n                              :name (n / name\n                                    :op1 ""Kuran"")))))\n      :medium (l / language\n            :name (n2 / name\n                  :op1 ""Turkey"")))']","[w, attr-instance, write_01, attr-arg1, [ii, attr-instance, it], attr-manner, [r, attr-instance, resemble_01, attr-arg2, [t, attr-instance, this, attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""kuran""]]]]], attr-medium, [l, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""turkey""]]]"
1695,1695,1695,1695,2026,26906,koran,Heute gibt es den Koran in vielen Sprachen.,3_long,Religion|Seiten_mit_defekten_Dateilinks,2023-03-06T12:37:08Z,022a27447b80860fa0ec84e918eedf36,0:=Heute 1:=gibt 2:=es 3:=den 4:=Koran 5:=in 6:=vielen 7:=Sprachen.,1,,Today the Koran is available in many languages.,"['# ::snt Today the Koran is available in many languages.\n(a / available-02\n      :ARG2 (b / book\n            :name (n / name\n                  :op1 ""Koran""))\n      :medium (l / language\n            :quant (m / many))\n      :time (t / today))']","[a, attr-instance, available_02, attr-arg2, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""koran""]], attr-medium, [l, attr-instance, language, attr-quant, [m, attr-instance, many]], attr-time, [t, attr-instance, today]]"
1696,1696,1696,1696,2027,26907,koran,Der Koran hat 114 Kapitel.,4_long,Religion|Seiten_mit_defekten_Dateilinks,2023-03-06T12:37:08Z,022a27447b80860fa0ec84e918eedf36,0:=Der 1:=Koran 2:=hat 3:=114 4:=Kapitel.,1,,The Quran has 114 chapters.,"['# ::snt The Quran has 114 chapters.\n(h / have-03\n      :ARG0 (b / book\n            :name (n / name\n                  :op1 ""Quran""))\n      :ARG1 (c / chapter\n            :quant 114))']","[h, attr-instance, have_03, attr-arg0, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""quran""]], attr-arg1, [c, attr-instance, chapter, attr-quant, 114]]"
1697,1697,1697,1697,2028,26908,koran,Die Kapitel im Koran heißen Suren.,5_long,Religion|Seiten_mit_defekten_Dateilinks,2023-03-06T12:37:08Z,022a27447b80860fa0ec84e918eedf36,0:=Die 1:=Kapitel 2:=im 3:=Koran 4:=heißen 5:=Suren.,1,,The chapters in the Koran are called suras.,"['# ::snt The chapters in the Koran are called suras.\n(c / call-01\n      :ARG1 (c2 / chapter\n            :part-of (b / book\n                  :name (n / name\n                        :op1 ""Koran"")))\n      :ARG2 (s / sura))']","[c, attr-instance, call_01, attr-arg1, [c2, attr-instance, chapter, attr-part_of, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""koran""]]], attr-arg2, [s, attr-instance, sura]]"
1698,1698,1698,1698,2029,26909,koran,Der Koran ist die heilige Schrift im Islam.,0_short,Religion|Seiten_mit_defekten_Dateilinks,2023-03-06T12:37:08Z,022a27447b80860fa0ec84e918eedf36,0:=Der 1:=Koran 2:=ist 3:=die 4:=heilige 5:=Schrift 6:=im 7:=Islam.,2,"[[4], [6, 7]]",The Quran is the holy scripture in Islam.,"['# ::snt The Quran is the holy scripture in Islam.\n(s / scripture\n      :mod (h / holy)\n      :domain (b / book\n            :name (n / name\n                  :op1 ""Quran""))\n      :location (r / religious-group\n            :name (n2 / name\n                  :op1 ""Islam"")))']","[s, attr-instance, scripture, attr-mod, [h, attr-instance, holy], attr-domain, [b, attr-instance, book, attr-name, [n, attr-instance, name, attr-op1, ""quran""]], attr-location, [r, attr-instance, religious_group, attr-name, [n2, attr-instance, name, attr-op1, ""islam""]]]"
1699,1699,1699,1699,2030,26910,koran,"Dinge, die in einer Religion wichtig sind, nennt man heilig.",1_short,Religion|Seiten_mit_defekten_Dateilinks,2023-03-06T12:37:08Z,022a27447b80860fa0ec84e918eedf36,"0:=Dinge, 1:=die 2:=in 3:=einer 4:=Religion 5:=wichtig 6:=sind, 7:=nennt 8:=man 9:=heilig.",2,"[[1, 2, 4, 5, 6], [7, 8, 9]]",Things that are important in a religion are called sacred.,['# ::snt Things that are important in a religion are called sacred.\n(c / call-01\n      :ARG1 (t / thing\n            :ARG1-of (ii / important-01\n                  :ARG2 (r / religion)))\n      :ARG2 (s / sacred))'],"[c, attr-instance, call_01, attr-arg1, [t, attr-instance, thing, attr-arg1_of, [ii, attr-instance, important_01, attr-arg2, [r, attr-instance, religion]]], attr-arg2, [s, attr-instance, sacred]]"
1700,1700,1700,1700,2031,26911,koran,Der Islam ist eine Religion.,2_short,Religion|Seiten_mit_defekten_Dateilinks,2023-03-06T12:37:08Z,022a27447b80860fa0ec84e918eedf36,0:=Der 1:=Islam 2:=ist 3:=eine 4:=Religion.,1,,Islam is a religion.,"['# ::snt Islam is a religion.\n(r / religion\n      :domain (r2 / religious-group\n            :name (n / name\n                  :op1 ""Islam"")))']","[r, attr-instance, religion, attr-domain, [r2, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""islam""]]]"
1701,1701,1701,1701,2033,26913,korea-konflikt,Der Streit zwischen den beiden Länder ist ein sehr großer Konflikt.,0_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Streit 2:=zwischen 3:=den 4:=beiden 5:=Länder 6:=ist 7:=ein 8:=sehr 9:=großer 10:=Konflikt.,2,"[[2, 4, 5], [6, 8, 9, 10]]",The dispute between the two countries is a very big conflict.,['# ::snt The dispute between the two countries is a very big conflict.\n(c / conflict-01\n      :ARG0 (c2 / country\n            :quant 2)\n      :ARG2 (d / dispute-01\n            :ARG0 c2)\n      :mod (b / big\n            :degree (v / very)))'],"[c, attr-instance, conflict_01, attr-arg0, [c2, attr-instance, country, attr-quant, 2], attr-arg2, [d, attr-instance, dispute_01, attr-arg0, c2], attr-mod, [b, attr-instance, big, attr-degree, [v, attr-instance, very]]]"
1702,1702,1702,1702,2034,26914,korea-konflikt,Der Korea-Konflikt geht schon sehr lange.,1_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Korea-Konflikt 2:=geht 3:=schon 4:=sehr 5:=lange.,1,,The Korean conflict has been going on for a very long time.,"['# ::snt The Korean conflict has been going on for a very long time.\n(g / go-on-15\n      :ARG1 (c / conflict-01\n            :ARG0 (c2 / country\n                  :name (n / name\n                        :op1 ""Korea"")))\n      :ARG1-of (l / long-03\n            :degree (v / very)))']","[g, attr-instance, go_on_15, attr-arg1, [c, attr-instance, conflict_01, attr-arg0, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""korea""]]], attr-arg1_of, [l, attr-instance, long_03, attr-degree, [v, attr-instance, very]]]"
1703,1703,1703,1703,2035,26915,korea-konflikt,Er hat im Jahr 1945 angefangen.,2_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=im 3:=Jahr 4:=1945 5:=angefangen.,1,,He started in 1945.,['# ::snt He started in 1945.\n(s / start-01\n      :ARG0 (h / he)\n      :time (d / date-entity\n            :year 1945))'],"[s, attr-instance, start_01, attr-arg0, [h, attr-instance, he], attr-time, [d, attr-instance, date_entity, attr-year, 1945]]"
1704,1704,1704,1704,2036,26916,korea-konflikt,Davor ist Süd-korea und Nord-korea ein (1) Land gewesen.,3_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Davor 1:=ist 2:=Süd-korea 3:=und 4:=Nord-korea 5:=ein 6:=(1) 7:=Land 8:=gewesen.,1,,"Before that, South Korea and North Korea were one (1) country.","['# ::snt Before that, South Korea and North Korea were one (1) country.\n(c / country\n      :quant 1\n      :domain (a / and\n            :op1 (c2 / country\n                  :name (n / name\n                        :op1 ""South""\n                        :op2 ""Korea""))\n            :op2 (c3 / country\n                  :name (n2 / name\n                        :op1 ""North""\n                        :op2 ""Korea"")))\n      :time (b / before\n            :op1 (t / that)))']","[c, attr-instance, country, attr-quant, 1, attr-domain, [a, attr-instance, and, attr-op1, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]], attr-op2, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]]], attr-time, [b, attr-instance, before, attr-op1, [t, attr-instance, that]]]"
1705,1705,1705,1705,2037,26917,korea-konflikt,Der größte Streit hat im Jahr 1950 angefangen.,4_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=größte 2:=Streit 3:=hat 4:=im 5:=Jahr 6:=1950 7:=angefangen.,1,,The biggest dispute started in 1950.,['# ::snt The biggest dispute started in 1950.\n(s / start-01\n      :ARG1 (d / dispute-01\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (b / big)\n                  :ARG3 (m / most)))\n      :time (d2 / date-entity\n            :year 1950))'],"[s, attr-instance, start_01, attr-arg1, [d, attr-instance, dispute_01, attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [b, attr-instance, big], attr-arg3, [m, attr-instance, most]]], attr-time, [d2, attr-instance, date_entity, attr-year, 1950]]"
1706,1706,1706,1706,2038,26918,korea-konflikt,Im Juni 1950 hat der Korea-krieg angefangen.,5_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Juni 2:=1950 3:=hat 4:=der 5:=Korea-krieg 6:=angefangen.,1,,The Korean War began in June 1950.,"['# ::snt The Korean War began in June 1950.\n(b / begin-01\n      :ARG1 (w / war\n            :name (n / name\n                  :op1 ""Korean""\n                  :op2 ""War""))\n      :time (d / date-entity\n            :month 6\n            :year 1950))']","[b, attr-instance, begin_01, attr-arg1, [w, attr-instance, war, attr-name, [n, attr-instance, name, attr-op1, ""korean"", attr-op2, ""war""]], attr-time, [d, attr-instance, date_entity, attr-month, 6, attr-year, 1950]]"
1707,1707,1707,1707,2039,26919,korea-konflikt,Nord-korea und Süd-korea streiten sich um 2 große Sachen.,6_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Nord-korea 1:=und 2:=Süd-korea 3:=streiten 4:=sich 5:=um 6:=2 7:=große 8:=Sachen.,2,"[[0, 1, 2, 3, 4], [5, 6, 7, 8]]",North Korea and South Korea are arguing about two big issues.,"['# ::snt North Korea and South Korea are arguing about two big issues.\n(a / argue-02\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""North""\n                  :op2 ""Korea""))\n      :ARG1 (c2 / country\n            :name (n2 / name\n                  :op1 ""South""\n                  :op2 ""Korea""))\n      :ARG2 (ii / issue-02\n            :quant 2\n            :mod (b / big)))']","[a, attr-instance, argue_02, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]], attr-arg1, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]], attr-arg2, [ii, attr-instance, issue_02, attr-quant, 2, attr-mod, [b, attr-instance, big]]]"
1708,1708,1708,1708,2040,26920,korea-konflikt,Sie streiten sich um eine Insel in Korea.,7_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=streiten 2:=sich 3:=um 4:=eine 5:=Insel 6:=in 7:=Korea.,2,"[[0, 1, 2], [3, 5, 6, 7]]",They are fighting over an island in Korea.,"['# ::snt They are fighting over an island in Korea.\n(f / fight-01\n      :ARG0 (t / they)\n      :ARG2 (ii / island\n            :location (c / country\n                  :name (n / name\n                        :op1 ""Korea""))))']","[f, attr-instance, fight_01, attr-arg0, [t, attr-instance, they], attr-arg2, [ii, attr-instance, island, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""korea""]]]]"
1709,1709,1709,1709,2041,26921,korea-konflikt,Nord-korea und Süd-korea streiten darum wem die Insel gehört.,8_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Nord-korea 1:=und 2:=Süd-korea 3:=streiten 4:=darum 5:=wem 6:=die 7:=Insel 8:=gehört.,2,"[[0, 1, 2, 3], [4, 5, 7, 8]]",North Korea and South Korea are arguing about who owns the island.,"['# ::snt North Korea and South Korea are arguing about who owns the island.\n(a / argue-02\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""North""\n                  :op2 ""Korea""))\n      :ARG1 (c2 / country\n            :name (n2 / name\n                  :op1 ""South""\n                  :op2 ""Korea""))\n      :ARG2 (p / person\n            :ARG0-of (o / own-01\n                  :ARG1 (ii / island))))']","[a, attr-instance, argue_02, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]], attr-arg1, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]], attr-arg2, [p, attr-instance, person, attr-arg0_of, [o, attr-instance, own_01, attr-arg1, [ii, attr-instance, island]]]]"
1710,1710,1710,1710,2042,26922,korea-konflikt,Und sie streiten sich um das Atom-programm von Nord-korea.,9_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=streiten 3:=sich 4:=um 5:=das 6:=Atom-programm 7:=von 8:=Nord-korea.,2,"[[1, 2, 3], [4, 6, 7, 8]]",And they argue about North Korea's nuclear program.,"['# ::snt And they argue about North Korea\'s nuclear program.\n(a / and\n      :op2 (a2 / argue-02\n            :ARG0 (t / they)\n            :ARG2 (p / program\n                  :mod (n / nucleus)\n                  :poss (c / country\n                        :name (n2 / name\n                              :op1 ""North""\n                              :op2 ""Korea"")))))']","[a, attr-instance, and, attr-op2, [a2, attr-instance, argue_02, attr-arg0, [t, attr-instance, they], attr-arg2, [p, attr-instance, program, attr-mod, [n, attr-instance, nucleus], attr-poss, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]]]]]"
1711,1711,1711,1711,2043,26923,korea-konflikt,Süd-korea möchte das Atom-programm von Nord-korea verbieten.,10_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Süd-korea 1:=möchte 2:=das 3:=Atom-programm 4:=von 5:=Nord-korea 6:=verbieten.,2,"[[0, 1, 6], [4, 5]]",South Korea wants to ban North Korea's nuclear program.,"['# ::snt South Korea wants to ban North Korea\'s nuclear program.\n(w / want-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""South""\n                  :op2 ""Korea""))\n      :ARG1 (b / ban-01\n            :ARG0 c\n            :ARG1 (p / program\n                  :mod (n2 / nucleus)\n                  :poss (c2 / country\n                        :name (n3 / name\n                              :op1 ""North""\n                              :op2 ""Korea"")))))']","[w, attr-instance, want_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]], attr-arg1, [b, attr-instance, ban_01, attr-arg0, c, attr-arg1, [p, attr-instance, program, attr-mod, [n2, attr-instance, nucleus], attr-poss, [c2, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]]]]]"
1712,1712,1712,1712,2044,26924,korea-konflikt,Sie haben Angst das Nord-korea Atom-waffen baut.,11_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=haben 2:=Angst 3:=das 4:=Nord-korea 5:=Atom-waffen 6:=baut.,2,"[[0, 1, 2], [3, 4, 5, 6]]",They are afraid that North Korea is building nuclear weapons.,"['# ::snt They are afraid that North Korea is building nuclear weapons.\n(f / fear-01\n      :ARG0 (t / they)\n      :ARG1 (b / build-01\n            :ARG0 (c / country\n                  :name (n / name\n                        :op1 ""North""\n                        :op2 ""Korea""))\n            :ARG1 (w / weapon\n                  :mod (n2 / nucleus))))']","[f, attr-instance, fear_01, attr-arg0, [t, attr-instance, they], attr-arg1, [b, attr-instance, build_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]], attr-arg1, [w, attr-instance, weapon, attr-mod, [n2, attr-instance, nucleus]]]]"
1713,1713,1713,1713,2045,26925,korea-konflikt,Viele Politiker wollen das es Sanktionen gegen Nord-korea gibt.,12_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Viele 1:=Politiker 2:=wollen 3:=das 4:=es 5:=Sanktionen 6:=gegen 7:=Nord-korea 8:=gibt.,3,"[[0, 1, 2], [3, 4, 5, 8], [5, 6, 7]]",Many politicians want sanctions against North Korea.,"['# ::snt Many politicians want sanctions against North Korea.\n(w / want-01\n      :ARG0 (p / politician\n            :quant (m / many))\n      :ARG1 (s / sanction-02\n            :ARG1 (c / country\n                  :name (n / name\n                        :op1 ""North""\n                        :op2 ""Korea""))))']","[w, attr-instance, want_01, attr-arg0, [p, attr-instance, politician, attr-quant, [m, attr-instance, many]], attr-arg1, [s, attr-instance, sanction_02, attr-arg1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]]]]"
1714,1714,1714,1714,2046,26926,korea-konflikt,Es gibt viele verschiedene Meinungen zum Streit zwischen Nord-korea und Süd-korea.,13_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=viele 3:=verschiedene 4:=Meinungen 5:=zum 6:=Streit 7:=zwischen 8:=Nord-korea 9:=und 10:=Süd-korea.,1,,There are many different opinions about the dispute between North Korea and South Korea.,"['# ::snt There are many different opinions about the dispute between North Korea and South Korea.\n(o / opine-01\n      :ARG1 (d / dispute-01\n            :ARG0 (c / country\n                  :name (n / name\n                        :op1 ""North""\n                        :op2 ""Korea""))\n            :ARG1 (c2 / country\n                  :name (n2 / name\n                        :op1 ""South""\n                        :op2 ""Korea"")))\n      :quant (m / many)\n      :ARG1-of (d2 / differ-02))']","[o, attr-instance, opine_01, attr-arg1, [d, attr-instance, dispute_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]], attr-arg1, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]]], attr-quant, [m, attr-instance, many], attr-arg1_of, [d2, attr-instance, differ_02]]"
1715,1715,1715,1715,2047,26927,korea-konflikt,Beide Länder werden von anderen Ländern unterstützt.,14_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beide 1:=Länder 2:=werden 3:=von 4:=anderen 5:=Ländern 6:=unterstützt.,1,,Both countries are supported by other countries.,['# ::snt Both countries are supported by other countries.\n(s / support-01\n      :ARG0 (c / country\n            :mod (o / other))\n      :ARG1 (c2 / country\n            :mod (b / both)))'],"[s, attr-instance, support_01, attr-arg0, [c, attr-instance, country, attr-mod, [o, attr-instance, other]], attr-arg1, [c2, attr-instance, country, attr-mod, [b, attr-instance, both]]]"
1716,1716,1716,1716,2048,26928,korea-konflikt,China unterstützt Nord-korea.,15_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=China 1:=unterstützt 2:=Nord-korea.,1,,China supports North Korea.,"['# ::snt China supports North Korea.\n(s / support-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""China""))\n      :ARG1 (c2 / country\n            :name (n2 / name\n                  :op1 ""North""\n                  :op2 ""Korea"")))']","[s, attr-instance, support_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""china""]], attr-arg1, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]]]"
1717,1717,1717,1717,2049,26929,korea-konflikt,Und früher hat die Sowjetunion auch Nord-korea unterstützt.,16_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=früher 2:=hat 3:=die 4:=Sowjetunion 5:=auch 6:=Nord-korea 7:=unterstützt.,2,"[[1], [2, 4, 5, 6, 7]]","And in the past, the Soviet Union also supported North Korea.","['# ::snt And in the past, the Soviet Union also supported North Korea.\n(a / and\n      :op2 (s / support-01\n            :ARG0 (c / country\n                  :name (n / name\n                        :op1 ""Soviet""\n                        :op2 ""Union""))\n            :ARG1 (c2 / country\n                  :name (n2 / name\n                        :op1 ""North""\n                        :op2 ""Korea""))\n            :mod (a2 / also)\n            :time (p / past)))']","[a, attr-instance, and, attr-op2, [s, attr-instance, support_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""soviet"", attr-op2, ""union""]], attr-arg1, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]], attr-mod, [a2, attr-instance, also], attr-time, [p, attr-instance, past]]]"
1718,1718,1718,1718,2050,26930,korea-konflikt,Süd-korea wird von Amerika unterstützt.,17_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Süd-korea 1:=wird 2:=von 3:=Amerika 4:=unterstützt.,1,,South Korea is supported by America.,"['# ::snt South Korea is supported by America.\n(s / support-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""America""))\n      :ARG1 (c2 / country\n            :name (n2 / name\n                  :op1 ""South""\n                  :op2 ""Korea"")))']","[s, attr-instance, support_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""america""]], attr-arg1, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]]]"
1719,1719,1719,1719,2051,26931,korea-konflikt,Seit dem Jahr 2018 gibt es Gespräche.,18_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Seit 1:=dem 2:=Jahr 3:=2018 4:=gibt 5:=es 6:=Gespräche.,1,,Talks have been taking place since 2018.,['# ::snt Talks have been taking place since 2018.\n(t / talk-01\n      :time (s / since\n            :op1 (d / date-entity\n                  :year 2018)))'],"[t, attr-instance, talk_01, attr-time, [s, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-year, 2018]]]"
1720,1720,1720,1720,2052,26932,korea-konflikt,Politiker aus Süd-korea und Politiker aus Nord-korea sprechen mit-einander.,19_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Politiker 1:=aus 2:=Süd-korea 3:=und 4:=Politiker 5:=aus 6:=Nord-korea 7:=sprechen 8:=mit-einander.,3,"[[0, 4, 7, 8], [0, 1, 2], [4, 5, 6]]",Politicians from South Korea and politicians from North Korea talk to each other.,"['# ::snt Politicians from South Korea and politicians from North Korea talk to each other.\n(t / talk-01\n      :ARG0 (a / and\n            :op1 (p / politician\n                  :source (c / country\n                        :name (n / name\n                              :op1 ""South""\n                              :op2 ""Korea"")))\n            :op2 (p2 / politician\n                  :source (c2 / country\n                        :name (n2 / name\n                              :op1 ""North""\n                              :op2 ""Korea""))))\n      :ARG2 a)']","[t, attr-instance, talk_01, attr-arg0, [a, attr-instance, and, attr-op1, [p, attr-instance, politician, attr-source, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]]], attr-op2, [p2, attr-instance, politician, attr-source, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]]]], attr-arg2, a]"
1721,1721,1721,1721,2053,26933,korea-konflikt,Und Sportler aus Nord-korea machen bei den Olympia-spiele in Süd-korea mit.,20_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=Sportler 2:=aus 3:=Nord-korea 4:=machen 5:=bei 6:=den 7:=Olympia-spiele 8:=in 9:=Süd-korea 10:=mit.,3,"[[1, 4, 5, 7, 10], [1, 2, 3], [7, 8, 9]]",And athletes from North Korea are taking part in the Olympic Games in South Korea.,"['# ::snt And athletes from North Korea are taking part in the Olympic Games in South Korea.\n(a / and\n      :op2 (p / participate-01\n            :ARG0 (a2 / athlete\n                  :source (c / country\n                        :name (n / name\n                              :op1 ""North""\n                              :op2 ""Korea"")))\n            :ARG1 (g / game\n                  :name (n2 / name\n                        :op1 ""Olympics"")\n                  :location (c2 / country\n                        :name (n3 / name\n                              :op1 ""South""\n                              :op2 ""Korea"")))))']","[a, attr-instance, and, attr-op2, [p, attr-instance, participate_01, attr-arg0, [a2, attr-instance, athlete, attr-source, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]]], attr-arg1, [g, attr-instance, game, attr-name, [n2, attr-instance, name, attr-op1, ""olympics""], attr-location, [c2, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]]]]]"
1722,1722,1722,1722,2054,26934,korea-konflikt,Kim Jong-un möchte wieder mehr Gespräche mit Süd-korea.,21_long,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kim 1:=Jong-un 2:=möchte 3:=wieder 4:=mehr 5:=Gespräche 6:=mit 7:=Süd-korea.,2,"[[4], [6, 7]]",Kim Jong-un wants more talks with South Korea again.,"['# ::snt Kim Jong-un wants more talks with South Korea again.\n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Kim""\n                  :op2 ""Jong-un""))\n      :ARG1 (t / talk-01\n            :ARG0 p\n            :ARG1 (c / country\n                  :name (n2 / name\n                        :op1 ""South""\n                        :op2 ""Korea""))\n            :mod (a / again)\n            :quant (m / more)))']","[w, attr-instance, want_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""kim"", attr-op2, ""jong_un""]], attr-arg1, [t, attr-instance, talk_01, attr-arg0, p, attr-arg1, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]], attr-mod, [a, attr-instance, again], attr-quant, [m, attr-instance, more]]]"
1723,1723,1723,1723,2055,26935,korea-konflikt,Der Korea-Konflikt ist ein großer Streit zwischen zwei (2) Ländern.,0_short,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Korea-Konflikt 2:=ist 3:=ein 4:=großer 5:=Streit 6:=zwischen 7:=zwei 8:=(2) 9:=Ländern.,3,"[[4], [6, 7, 9], [6, 8, 9]]",The Korean conflict is a major dispute between two (2) countries.,"['# ::snt The Korean conflict is a major dispute between two (2) countries.\n(d / dispute-01\n      :ARG0 (c / country\n            :quant 2)\n      :ARG1 (c2 / country\n            :name (n / name\n                  :op1 ""Korea""))\n      :ARG1-of (m / major-02))']","[d, attr-instance, dispute_01, attr-arg0, [c, attr-instance, country, attr-quant, 2], attr-arg1, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""korea""]], attr-arg1_of, [m, attr-instance, major_02]]"
1724,1724,1724,1724,2056,26936,korea-konflikt,Der Streit ist zwischen dem Land Nord-korea und dem Land Süd-korea.,1_short,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Streit 2:=ist 3:=zwischen 4:=dem 5:=Land 6:=Nord-korea 7:=und 8:=dem 9:=Land 10:=Süd-korea.,1,,The dispute is between the country of North Korea and the country of South Korea.,"['# ::snt The dispute is between the country of North Korea and the country of South Korea.\n(d / dispute-01\n      :ARG0 (c / country\n            :name (n / name\n                  :op1 ""North""\n                  :op2 ""Korea""))\n      :ARG1 (c2 / country\n            :name (n2 / name\n                  :op1 ""South""\n                  :op2 ""Korea"")))']","[d, attr-instance, dispute_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]], attr-arg1, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""south"", attr-op2, ""korea""]]]"
1725,1725,1725,1725,2057,26937,korea-konflikt,Beiden Länder streiten sich um eine Insel in Korea.,2_short,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beiden 1:=Länder 2:=streiten 3:=sich 4:=um 5:=eine 6:=Insel 7:=in 8:=Korea.,2,"[[0, 1, 2, 3], [4, 6, 7, 8]]",Both countries are fighting over an island in Korea.,"['# ::snt Both countries are fighting over an island in Korea.\n(f / fight-01\n      :ARG0 (c / country\n            :quant (b / both))\n      :ARG2 (ii / island\n            :location (c2 / country\n                  :name (n / name\n                        :op1 ""Korea""))))']","[f, attr-instance, fight_01, attr-arg0, [c, attr-instance, country, attr-quant, [b, attr-instance, both]], attr-arg2, [ii, attr-instance, island, attr-location, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""korea""]]]]"
1726,1726,1726,1726,2058,26938,korea-konflikt,Und sie streiten sich um Kern-waffen von Nord-korea.,3_short,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=streiten 3:=sich 4:=um 5:=Kern-waffen 6:=von 7:=Nord-korea.,2,"[[1, 2, 3], [4, 5, 6, 7]]",And they are arguing about North Korea's nuclear weapons.,"['# ::snt And they are arguing about North Korea\'s nuclear weapons.\n(a / and\n      :op2 (a2 / argue-02\n            :ARG0 (t / they)\n            :ARG2 (w / weapon\n                  :mod (n / nucleus)\n                  :poss (c / country\n                        :name (n2 / name\n                              :op1 ""North""\n                              :op2 ""Korea"")))))']","[a, attr-instance, and, attr-op2, [a2, attr-instance, argue_02, attr-arg0, [t, attr-instance, they], attr-arg2, [w, attr-instance, weapon, attr-mod, [n, attr-instance, nucleus], attr-poss, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""north"", attr-op2, ""korea""]]]]]"
1727,1727,1727,1727,2059,26939,korea-konflikt,Und beide Länder haben viele verschiedene politische Meinungen.,4_short,Geopolitik|Politik|Aus_den_Nachrichten,2018-02-18T07:36:44Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=beide 2:=Länder 3:=haben 4:=viele 5:=verschiedene 6:=politische 7:=Meinungen.,1,,And both countries have many different political opinions.,['# ::snt And both countries have many different political opinions.\n(a / and\n      :op2 (o / opine-01\n            :ARG0 (c / country\n                  :mod (b / both))\n            :ARG1 (p / politics)\n            :ARG1-of (d / differ-02)\n            :quant (m / many)))'],"[a, attr-instance, and, attr-op2, [o, attr-instance, opine_01, attr-arg0, [c, attr-instance, country, attr-mod, [b, attr-instance, both]], attr-arg1, [p, attr-instance, politics], attr-arg1_of, [d, attr-instance, differ_02], attr-quant, [m, attr-instance, many]]]"
1728,1728,1728,1728,2061,26941,korperbemalung,Bei der Körper-be-malung wird der Körper gestaltet.,0_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Bei 1:=der 2:=Körper-be-malung 3:=wird 4:=der 5:=Körper 6:=gestaltet.,1,,Body painting involves designing the body.,['# ::snt Body painting involves designing the body.\n(ii / involve-01\n      :ARG1 (d / design-01\n            :ARG1 (b / body))\n      :ARG2 (p / paint-02\n            :ARG1 b))'],"[ii, attr-instance, involve_01, attr-arg1, [d, attr-instance, design_01, attr-arg1, [b, attr-instance, body]], attr-arg2, [p, attr-instance, paint_02, attr-arg1, b]]"
1729,1729,1729,1729,2062,26942,korperbemalung,Er wird mit Farbe angemalt.,1_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Er 1:=wird 2:=mit 3:=Farbe 4:=angemalt.,1,,It is painted with color.,['# ::snt It is painted with color.\n(p / paint-02\n      :ARG1 (ii / it)\n      :ARG2 (c / color))'],"[p, attr-instance, paint_02, attr-arg1, [ii, attr-instance, it], attr-arg2, [c, attr-instance, color]]"
1730,1730,1730,1730,2064,26944,korperbemalung,Die Farbe geht nach einiger Zeit wieder weg.,3_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Farbe 2:=geht 3:=nach 4:=einiger 5:=Zeit 6:=wieder 7:=weg.,2,"[[1, 2, 6, 7], [3, 4, 5]]",The color goes away after some time.,['# ::snt The color goes away after some time.\n(g / go-01\n      :ARG1 (c / color)\n      :direction (a / away)\n      :time (a2 / after\n            :quant (t / time\n                  :mod (s / some))))'],"[g, attr-instance, go_01, attr-arg1, [c, attr-instance, color], attr-direction, [a, attr-instance, away], attr-time, [a2, attr-instance, after, attr-quant, [t, attr-instance, time, attr-mod, [s, attr-instance, some]]]]"
1731,1731,1731,1731,2066,26946,korperbemalung,Eine Tätowierung lässt sich nicht ab-waschen.,5_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Tätowierung 2:=lässt 3:=sich 4:=nicht 5:=ab-waschen.,1,,A tattoo cannot be washed off.,['# ::snt A tattoo cannot be washed off.\n(p / possible-01\n      :polarity -\n      :ARG1 (w / wash-01\n            :ARG1 (t / tattoo)\n            :ARG2 (o / off)))'],"[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [w, attr-instance, wash_01, attr-arg1, [t, attr-instance, tattoo], attr-arg2, [o, attr-instance, off]]]"
1732,1732,1732,1732,2067,26947,korperbemalung,Henna-Farbe hält sehr lange.,6_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Henna-Farbe 1:=hält 2:=sehr 3:=lange.,1,,Henna color lasts a very long time.,['# ::snt Henna color lasts a very long time.\n(l / last-01\n      :ARG1 (c / color\n            :mod (e / enna))\n      :ARG2 (t / time\n            :ARG1-of (l2 / long-03\n                  :degree (v / very))))'],"[l, attr-instance, last_01, attr-arg1, [c, attr-instance, color, attr-mod, [e, attr-instance, enna]], attr-arg2, [t, attr-instance, time, attr-arg1_of, [l2, attr-instance, long_03, attr-degree, [v, attr-instance, very]]]]"
1733,1733,1733,1733,2069,26949,korperbemalung,Das An-malen des Körpers gibt es schon sehr lange.,8_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=An-malen 2:=des 3:=Körpers 4:=gibt 5:=es 6:=schon 7:=sehr 8:=lange.,1,,Painting the body has been around for a very long time.,['# ::snt Painting the body has been around for a very long time.\n(e / exist-01\n      :ARG1 (p / pain-01\n            :ARG1 (b / body))\n      :duration (t / time\n            :ARG1-of (l / long-03\n                  :degree (v / very))))'],"[e, attr-instance, exist_01, attr-arg1, [p, attr-instance, pain_01, attr-arg1, [b, attr-instance, body]], attr-duration, [t, attr-instance, time, attr-arg1_of, [l, attr-instance, long_03, attr-degree, [v, attr-instance, very]]]]"
1734,1734,1734,1734,2070,26950,korperbemalung,Früher haben die Menschen Erdfarbe dazu benutzt.,9_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Früher 1:=haben 2:=die 3:=Menschen 4:=Erdfarbe 5:=dazu 6:=benutzt.,2,"[[0], [5]]","In the past, people used earth paint for this purpose.","['# ::snt In the past, people used earth paint for this purpose.\n(u / use-01\n      :ARG0 (p / person)\n      :ARG1 (p2 / paint\n            :source (e / earth))\n      :ARG2 (p3 / purpose\n            :mod (t / this))\n      :time (p4 / past))']","[u, attr-instance, use_01, attr-arg0, [p, attr-instance, person], attr-arg1, [p2, attr-instance, paint, attr-source, [e, attr-instance, earth]], attr-arg2, [p3, attr-instance, purpose, attr-mod, [t, attr-instance, this]], attr-time, [p4, attr-instance, past]]"
1735,1735,1735,1735,2071,26951,korperbemalung,Die Menschen haben Stöcke als Pinsel benutzt.,10_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Menschen 2:=haben 3:=Stöcke 4:=als 5:=Pinsel 6:=benutzt.,2,"[[1, 2, 6], [4, 5]]",People used sticks as brushes.,['# ::snt People used sticks as brushes.\n(u / use-01\n      :ARG0 (p / person)\n      :ARG1 (s / stick)\n      :ARG2 (b / brush))'],"[u, attr-instance, use_01, attr-arg0, [p, attr-instance, person], attr-arg1, [s, attr-instance, stick], attr-arg2, [b, attr-instance, brush]]"
1736,1736,1736,1736,2072,26952,korperbemalung,An den Stöcken waren Tier-haare.,11_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=An 1:=den 2:=Stöcken 3:=waren 4:=Tier-haare.,1,,There were animal hairs on the sticks.,['# ::snt There were animal hairs on the sticks.\n(b / be-located-at-91\n      :ARG1 (h / hair\n            :mod (a / animal))\n      :ARG2 (s / stick))'],"[b, attr-instance, be_located_at_91, attr-arg1, [h, attr-instance, hair, attr-mod, [a, attr-instance, animal]], attr-arg2, [s, attr-instance, stick]]"
1737,1737,1737,1737,2073,26953,korperbemalung,Oder sie haben die Hände zum malen benutzt.,12_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Oder 1:=sie 2:=haben 3:=die 4:=Hände 5:=zum 6:=malen 7:=benutzt.,2,"[[0, 1, 2, 7], [5, 6]]",Or they used their hands to paint.,['# ::snt Or they used their hands to paint.\n(o / or\n      :op2 (u / use-01\n            :ARG0 (t / they\n                  :part (h / hand))\n            :ARG1 h\n            :ARG2 (p / paint-02\n                  :ARG0 t)))'],"[o, attr-instance, or, attr-op2, [u, attr-instance, use_01, attr-arg0, [t, attr-instance, they, attr-part, [h, attr-instance, hand]], attr-arg1, h, attr-arg2, [p, attr-instance, paint_02, attr-arg0, t]]]"
1738,1738,1738,1738,2074,26954,korperbemalung,Bei den Indianern war Körper-bemalung sehr wichtig.,13_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Bei 1:=den 2:=Indianern 3:=war 4:=Körper-bemalung 5:=sehr 6:=wichtig.,1,,Body painting was very important to the Indians.,"['# ::snt Body painting was very important to the Indians.\n(ii / important-01\n      :ARG1 (p / paint-02\n            :ARG1 (b / body))\n      :ARG2 (p2 / person\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""India"")))\n      :degree (v / very))']","[ii, attr-instance, important_01, attr-arg1, [p, attr-instance, paint_02, attr-arg1, [b, attr-instance, body]], attr-arg2, [p2, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]]], attr-degree, [v, attr-instance, very]]"
1739,1739,1739,1739,2075,26955,korperbemalung,Damit andere sehen konnten wer der Chef ist.,14_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Damit 1:=andere 2:=sehen 3:=konnten 4:=wer 5:=der 6:=Chef 7:=ist.,2,"[[0, 1, 2, 3], [4, 6, 7]]",So that others could see who was the boss.,['# ::snt So that others could see who was the boss.\n(c / cause-01\n      :ARG1 (p / possible-01\n            :ARG1 (s / see-01\n                  :ARG0 (o / other)\n                  :ARG1 (b / boss\n                        :domain (p2 / person)))))'],"[c, attr-instance, cause_01, attr-arg1, [p, attr-instance, possible_01, attr-arg1, [s, attr-instance, see_01, attr-arg0, [o, attr-instance, other], attr-arg1, [b, attr-instance, boss, attr-domain, [p2, attr-instance, person]]]]]"
1740,1740,1740,1740,2076,26956,korperbemalung,Oder wer viel Erfolg hat.,15_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Oder 1:=wer 2:=viel 3:=Erfolg 4:=hat.,1,,Or who has a lot of success.,['# ::snt Or who has a lot of success.\n(o / or\n      :op1 (h / have-03\n            :ARG0 (a / amr-unknown)\n            :ARG1 (s / succeed-01\n                  :quant (l / lot))))'],"[o, attr-instance, or, attr-op1, [h, attr-instance, have_03, attr-arg0, [a, attr-instance, amr_unknown], attr-arg1, [s, attr-instance, succeed_01, attr-quant, [l, attr-instance, lot]]]]"
1741,1741,1741,1741,2077,26957,korperbemalung,Dazu haben sie verschiedene Farben benutzt.,16_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Dazu 1:=haben 2:=sie 3:=verschiedene 4:=Farben 5:=benutzt.,1,,They used different colors for this.,['# ::snt They used different colors for this.\n(u / use-01\n      :ARG0 (t / they)\n      :ARG1 (c / color\n            :ARG1-of (d / differ-02))\n      :ARG2 (t2 / this))'],"[u, attr-instance, use_01, attr-arg0, [t, attr-instance, they], attr-arg1, [c, attr-instance, color, attr-arg1_of, [d, attr-instance, differ_02]], attr-arg2, [t2, attr-instance, this]]"
1742,1742,1742,1742,2078,26958,korperbemalung,Zum Beispiel: \newline Die Farbe rot sagt: ich habe Erfolg.,17_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel: 2:=\newline 3:=Die 4:=Farbe 5:=rot 6:=sagt: 7:=ich 8:=habe 9:=Erfolg.,2,"[[4, 5, 6], [7, 8, 9]]",For example: \newline The color red says: I am successful.,['# ::snt For example: \\newline The color red says: I am successful.\n(e / exemplify-01\n      :ARG0 (s / say-01\n            :ARG0 (c / color\n                  :ARG1-of (r / red-02))\n            :ARG1 (s2 / succeed-01\n                  :ARG0 (ii / i))))'],"[e, attr-instance, exemplify_01, attr-arg0, [s, attr-instance, say_01, attr-arg0, [c, attr-instance, color, attr-arg1_of, [r, attr-instance, red_02]], attr-arg1, [s2, attr-instance, succeed_01, attr-arg0, [ii, attr-instance, i]]]]"
1743,1743,1743,1743,2079,26959,korperbemalung,Die Farbe blau sagt: ich habe Schwierigkeiten.,18_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Farbe 2:=blau 3:=sagt: 4:=ich 5:=habe 6:=Schwierigkeiten.,2,"[[1, 2, 3], [4, 5, 6]]",The color blue says: I am in trouble.,['# ::snt The color blue says: I am in trouble.\n(s / say-01\n      :ARG0 (c / color\n            :mod (b / blue))\n      :ARG1 (ii / in-trouble-02\n            :ARG1 (ii2 / i)))'],"[s, attr-instance, say_01, attr-arg0, [c, attr-instance, color, attr-mod, [b, attr-instance, blue]], attr-arg1, [ii, attr-instance, in_trouble_02, attr-arg1, [ii2, attr-instance, i]]]"
1744,1744,1744,1744,2080,26960,korperbemalung,Die Menschen früher haben Körper-be-malung auch als Kriegsbemalung benutzt.,19_long,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Menschen 2:=früher 3:=haben 4:=Körper-be-malung 5:=auch 6:=als 7:=Kriegsbemalung 8:=benutzt.,3,"[[1, 3, 4, 8], [6, 7], [2]]",People in the past also used body painting as war paint.,['# ::snt People in the past also used body painting as war paint.\n(u / use-01\n      :ARG0 (p / person)\n      :ARG1 (p2 / paint\n            :mod (b / body))\n      :ARG2 (p3 / paint\n            :mod (w / war))\n      :time (p4 / past)\n      :mod (a / also))'],"[u, attr-instance, use_01, attr-arg0, [p, attr-instance, person], attr-arg1, [p2, attr-instance, paint, attr-mod, [b, attr-instance, body]], attr-arg2, [p3, attr-instance, paint, attr-mod, [w, attr-instance, war]], attr-time, [p4, attr-instance, past], attr-mod, [a, attr-instance, also]]"
1745,1745,1745,1745,2081,26961,korperbemalung,Körperbemalung ist Fabe auf der Haut.,0_short,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Körperbemalung 1:=ist 2:=Fabe 3:=auf 4:=der 5:=Haut.,2,"[[2], [3, 5]]",Body painting is color on the skin.,['# ::snt Body painting is color on the skin.\n(c / color\n      :domain (p / paint-02\n            :ARG1 (b / body))\n      :location (s / skin))'],"[c, attr-instance, color, attr-domain, [p, attr-instance, paint_02, attr-arg1, [b, attr-instance, body]], attr-location, [s, attr-instance, skin]]"
1746,1746,1746,1746,2082,26962,korperbemalung,Der Körper wird mit Farbe an gemalt.,1_short,Kleider|Seiten_mit_defekten_Dateilinks,2015-06-05T15:33:34Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Der 1:=Körper 2:=wird 3:=mit 4:=Farbe 5:=an 6:=gemalt.,1,,The body is painted with color.,['# ::snt The body is painted with color.\n(p / paint-02\n      :ARG1 (b / body)\n      :ARG2 (c / color))'],"[p, attr-instance, paint_02, attr-arg1, [b, attr-instance, body], attr-arg2, [c, attr-instance, color]]"
1747,1747,1747,1747,2085,26965,korpergewicht,Ein kleines Kind hat wenig Körper-gewicht.,0_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=kleines 2:=Kind 3:=hat 4:=wenig 5:=Körper-gewicht.,1,,A small child has little body weight.,['# ::snt A small child has little body weight.\n(h / have-03\n      :ARG0 (c / child\n            :mod (s / small))\n      :ARG1 (w / weight\n            :mod (b / body)\n            :quant (l / little)))'],"[h, attr-instance, have_03, attr-arg0, [c, attr-instance, child, attr-mod, [s, attr-instance, small]], attr-arg1, [w, attr-instance, weight, attr-mod, [b, attr-instance, body], attr-quant, [l, attr-instance, little]]]"
1748,1748,1748,1748,2086,26966,korpergewicht,Und ein Erwachsener hat mehr Körper-gewicht.,1_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Und 1:=ein 2:=Erwachsener 3:=hat 4:=mehr 5:=Körper-gewicht.,1,,And an adult has more body weight.,['# ::snt And an adult has more body weight.\n(a / and\n      :op2 (h / have-03\n            :ARG0 (a2 / adult)\n            :ARG1 (w / weight\n                  :mod (b / body)\n                  :quant (m / more))))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, have_03, attr-arg0, [a2, attr-instance, adult], attr-arg1, [w, attr-instance, weight, attr-mod, [b, attr-instance, body], attr-quant, [m, attr-instance, more]]]]"
1749,1749,1749,1749,2087,26967,korpergewicht,"Unter-gewicht ist, \newline wenn man viel zu wenig Körper-gewicht hat.",2_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Unter-gewicht 1:=ist, 2:=\newline 3:=wenn 4:=man 5:=viel 6:=zu 7:=wenig 8:=Körper-gewicht 9:=hat.",2,"[[0, 1], [3, 4, 5, 6, 7, 8, 9]]",Being underweight is when you have far too little body weight.,['# ::snt Being underweight is when you have far too little body weight.\n(u / underweight\n      :domain (y / you)\n      :time (h / have-03\n            :ARG0 y\n            :ARG1 (w / weight\n                  :mod (b / body)\n                  :mod (l / little\n                        :ARG2-of (h2 / have-degree-91\n                              :ARG1 w\n                              :ARG3 (t / too\n                                    :mod (f / far)))))))'],"[u, attr-instance, underweight, attr-domain, [y, attr-instance, you], attr-time, [h, attr-instance, have_03, attr-arg0, y, attr-arg1, [w, attr-instance, weight, attr-mod, [b, attr-instance, body], attr-mod, [l, attr-instance, little, attr-arg2_of, [h2, attr-instance, have_degree_91, attr-arg1, w, attr-arg3, [t, attr-instance, too, attr-mod, [f, attr-instance, far]]]]]]]"
1750,1750,1750,1750,2088,26968,korpergewicht,Es ist un-gesund.,3_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Es 1:=ist 2:=un-gesund.,1,,It is unhealthy.,['# ::snt It is unhealthy.\n(h / healthy\n      :polarity -\n      :domain (ii / it))'],"[h, attr-instance, healthy, attr-polarity, negative, attr-domain, [ii, attr-instance, it]]"
1751,1751,1751,1751,2089,26969,korpergewicht,"Über-gewicht ist,  \newline wenn man zu viel Körper-gewicht  hat.",4_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Über-gewicht 1:=ist, 2:= 3:=\newline 4:=wenn 5:=man 6:=zu 7:=viel 8:=Körper-gewicht 9:= 10:=hat.",2,"[[0, 1], [4, 5, 6, 7, 8, 10]]",Obesity is when you have too much body weight.,['# ::snt Obesity is when you have too much body weight.\n(o / obesity\n      :time (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (w / weight\n                  :mod (b / body)\n                  :ARG1-of (h2 / have-quant-91\n                        :ARG2 (m / much)\n                        :ARG3 (t / too)))))'],"[o, attr-instance, obesity, attr-time, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [w, attr-instance, weight, attr-mod, [b, attr-instance, body], attr-arg1_of, [h2, attr-instance, have_quant_91, attr-arg2, [m, attr-instance, much], attr-arg3, [t, attr-instance, too]]]]]"
1752,1752,1752,1752,2090,26970,korpergewicht,Es ist un-gesund.,5_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Es 1:=ist 2:=un-gesund.,1,,It is unhealthy.,['# ::snt It is unhealthy.\n(h / healthy\n      :polarity -\n      :domain (ii / it))'],"[h, attr-instance, healthy, attr-polarity, negative, attr-domain, [ii, attr-instance, it]]"
1753,1753,1753,1753,2091,26971,korpergewicht,"Was ein gutes Körper-gewicht ist,  \newline kann man aus-rechnen.",6_long,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Was 1:=ein 2:=gutes 3:=Körper-gewicht 4:=ist, 5:= 6:=\newline 7:=kann 8:=man 9:=aus-rechnen.",2,"[[0, 2, 3, 4], [7, 8, 9]]",What a good body weight is can be calculated.,['# ::snt What a good body weight is can be calculated.\n(p / possible-01\n      :ARG1 (c / calculate-01\n            :ARG1 (w / weight\n                  :mod (b / body)\n                  :ARG1-of (g / good-02\n                        :degree (s / so)))))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, calculate_01, attr-arg1, [w, attr-instance, weight, attr-mod, [b, attr-instance, body], attr-arg1_of, [g, attr-instance, good_02, attr-degree, [s, attr-instance, so]]]]]"
1754,1754,1754,1754,2093,26973,korpergewicht,Körper-gewicht ist wie schwer man ist.,0_short,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Körper-gewicht 1:=ist 2:=wie 3:=schwer 4:=man 5:=ist.,2,"[[0, 1], [2, 3, 4, 5]]",Body weight is how heavy you are.,['# ::snt Body weight is how heavy you are.\n(w / weight\n      :mod (b / body)\n      :domain (m / mass-quantity\n            :degree-of (h / heavy\n                  :domain (y / you))))'],"[w, attr-instance, weight, attr-mod, [b, attr-instance, body], attr-domain, [m, attr-instance, mass_quantity, attr-degree_of, [h, attr-instance, heavy, attr-domain, [y, attr-instance, you]]]]"
1755,1755,1755,1755,2094,26974,korpergewicht,Man sagt es in Kilogramm-Kilo-gramm.,1_short,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Man 1:=sagt 2:=es 3:=in 4:=Kilogramm-Kilo-gramm.,1,,It is said in kilograms-kilo-grams.,['# ::snt It is said in kilograms-kilo-grams.\n(s / say-01\n      :ARG1 (ii / it)\n      :manner (m / mass-quantity\n            :quant 1\n            :unit (k / kilogram)))'],"[s, attr-instance, say_01, attr-arg1, [ii, attr-instance, it], attr-manner, [m, attr-instance, mass_quantity, attr-quant, 1, attr-unit, [k, attr-instance, kilogram]]]"
1756,1756,1756,1756,2095,26975,korpergewicht,"Wenn man schwer ist,  \newline hat man viel Körper-gewicht.",2_short,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Wenn 1:=man 2:=schwer 3:=ist, 4:= 5:=\newline 6:=hat 7:=man 8:=viel 9:=Körper-gewicht.",2,"[[0, 1, 2, 3], [6, 7, 8, 9]]","When you are heavy, \newline you have a lot of body weight.","['# ::snt When you are heavy, \\newline you have a lot of body weight.\n(h / have-03\n      :ARG0 (y / you)\n      :ARG1 (w / weight\n            :mod (b / body)\n            :quant (l / lot))\n      :condition (h2 / heavy\n            :domain y)\n      :ARG1-of (n / newline-00))']","[h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [w, attr-instance, weight, attr-mod, [b, attr-instance, body], attr-quant, [l, attr-instance, lot]], attr-condition, [h2, attr-instance, heavy, attr-domain, y], attr-arg1_of, [n, attr-instance, newline_00]]"
1757,1757,1757,1757,2096,26976,korpergewicht,"Wenn man leicht ist,  \newline hat man wenig Körper-gewicht.",3_short,Gesundheit|Seiten_mit_defekten_Dateilinks,2019-12-27T09:05:27Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Wenn 1:=man 2:=leicht 3:=ist, 4:= 5:=\newline 6:=hat 7:=man 8:=wenig 9:=Körper-gewicht.",2,"[[0, 1, 2, 3], [6, 7, 8, 9]]","If you are light, \newline you have little body weight.","['# ::snt If you are light, \\newline you have little body weight.\n(h / have-condition-91\n      :ARG1 (h2 / have-03\n            :ARG0 (y / you)\n            :ARG1 (w / weight\n                  :mod (b / body)\n                  :quant (l / little)))\n      :ARG2 (l2 / light-06\n            :ARG1 y\n            :mod (n / newline)))']","[h, attr-instance, have_condition_91, attr-arg1, [h2, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [w, attr-instance, weight, attr-mod, [b, attr-instance, body], attr-quant, [l, attr-instance, little]]], attr-arg2, [l2, attr-instance, light_06, attr-arg1, y, attr-mod, [n, attr-instance, newline]]]"
1758,1758,1758,1758,2097,26977,korruption-in-der-fifa,Am 27. Mai 2015 gab es bei der FIFA eine Hausdurchsuchung.,0_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Am 1:=27. 2:=Mai 3:=2015 4:=gab 5:=es 6:=bei 7:=der 8:=FIFA 9:=eine 10:=Hausdurchsuchung.,3,"[[0, 1, 2, 3], [4, 10], [6, 8, 10]]","On 27 May 2015, FIFA's premises were searched.","['# ::snt On 27 May 2015, FIFA\'s premises were searched.\n(s / search-01\n      :ARG1 (p / premise\n            :poss (o / organization\n                  :name (n / name\n                        :op1 ""FIFA"")))\n      :time (d / date-entity\n            :day 27\n            :month 5\n            :year 2015))']","[s, attr-instance, search_01, attr-arg1, [p, attr-instance, premise, attr-poss, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""fifa""]]], attr-time, [d, attr-instance, date_entity, attr-day, 27, attr-month, 5, attr-year, 2015]]"
1759,1759,1759,1759,2098,26978,korruption-in-der-fifa,Und am selben Tag wurden 7 Mitarbeiter von der Polizei verhaftet.,1_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=am 2:=selben 3:=Tag 4:=wurden 5:=7 6:=Mitarbeiter 7:=von 8:=der 9:=Polizei 10:=verhaftet.,3,"[[0, 1, 2, 3], [4, 5, 6, 10], [7, 9, 10]]","And on the same day, 7 employees were arrested by the police.","['# ::snt And on the same day, 7 employees were arrested by the police.\n(a / and\n      :op2 (a2 / arrest-01\n            :ARG0 (p / police)\n            :ARG1 (p2 / person\n                  :quant 7\n                  :ARG1-of (e / employ-01))\n            :time (d / day\n                  :ARG1-of (s / same-01))))']","[a, attr-instance, and, attr-op2, [a2, attr-instance, arrest_01, attr-arg0, [p, attr-instance, police], attr-arg1, [p2, attr-instance, person, attr-quant, 7, attr-arg1_of, [e, attr-instance, employ_01]], attr-time, [d, attr-instance, day, attr-arg1_of, [s, attr-instance, same_01]]]]"
1760,1760,1760,1760,2099,26979,korruption-in-der-fifa,Das war in der Schweiz.,2_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=war 2:=in 3:=der 4:=Schweiz.,1,,That was in Switzerland.,"['# ::snt That was in Switzerland.\n(t / that\n      :location (c / country\n            :name (n / name\n                  :op1 ""Switzerland"")))']","[t, attr-instance, that, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""switzerland""]]]"
1761,1761,1761,1761,2101,26981,korruption-in-der-fifa,Diese Personen sind verhaftet worden: • Eugenio Figueredo,4_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Diese 1:=Personen 2:=sind 3:=verhaftet 4:=worden: 5:=• 6:=Eugenio 7:=Figueredo,1,,These people have been arrested: • Eugenio Figueredo,"['# ::snt These people have been arrested: • Eugenio Figueredo\n(a / arrest-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Eugenio""\n                  :op2 ""Figueredo"")\n            :domain (p2 / person\n                  :mod (t / this))))']","[a, attr-instance, arrest_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""eugenio"", attr-op2, ""figueredo""], attr-domain, [p2, attr-instance, person, attr-mod, [t, attr-instance, this]]]]"
1762,1762,1762,1762,2102,26982,korruption-in-der-fifa,Diese Personen sind verhaftet worden: • Eduardo Li,5_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Diese 1:=Personen 2:=sind 3:=verhaftet 4:=worden: 5:=• 6:=Eduardo 7:=Li,1,,These people have been arrested: • Eduardo Li,"['# ::snt These people have been arrested: • Eduardo Li\n(a / arrest-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Eduardo""\n                  :op2 ""Li"")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (p2 / person))\n            :mod (t / this)))']","[a, attr-instance, arrest_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""eduardo"", attr-op2, ""li""], attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [p2, attr-instance, person]], attr-mod, [t, attr-instance, this]]]"
1763,1763,1763,1763,2103,26983,korruption-in-der-fifa,Diese Personen sind verhaftet worden: • Julio Rocha,6_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Diese 1:=Personen 2:=sind 3:=verhaftet 4:=worden: 5:=• 6:=Julio 7:=Rocha,1,,These people have been arrested: • Julio Rocha,"['# ::snt These people have been arrested: • Julio Rocha\n(a / arrest-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Julio""\n                  :op2 ""Rocha"")\n            :domain (p2 / person\n                  :mod (t / this))))']","[a, attr-instance, arrest_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""julio"", attr-op2, ""rocha""], attr-domain, [p2, attr-instance, person, attr-mod, [t, attr-instance, this]]]]"
1764,1764,1764,1764,2104,26984,korruption-in-der-fifa,Diese Personen sind verhaftet worden: • Costas Takkas,7_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Diese 1:=Personen 2:=sind 3:=verhaftet 4:=worden: 5:=• 6:=Costas 7:=Takkas,1,,These people have been arrested: • Costas Takkas,"['# ::snt These people have been arrested: • Costas Takkas\n(a / arrest-01\n      :ARG1 (p / person\n            :mod (t / this)\n            :ARG2-of (ii / include-91\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 ""Costas""\n                              :op2 ""Takkas"")))))']","[a, attr-instance, arrest_01, attr-arg1, [p, attr-instance, person, attr-mod, [t, attr-instance, this], attr-arg2_of, [ii, attr-instance, include_91, attr-arg1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""costas"", attr-op2, ""takkas""]]]]]"
1765,1765,1765,1765,2105,26985,korruption-in-der-fifa,Diese Personen sind verhaftet worden: • José Maria Marin,8_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Diese 1:=Personen 2:=sind 3:=verhaftet 4:=worden: 5:=• 6:=José 7:=Maria 8:=Marin,1,,These people have been arrested: • José Maria Marin,"['# ::snt These people have been arrested: • José Maria Marin\n(a / arrest-01\n      :ARG1 (p / person\n            :mod (t / this)\n            :ARG1-of (m / mean-01\n                  :ARG2 (p2 / person\n                        :name (n / name\n                              :op1 ""Jose""\n                              :op2 ""Maria""\n                              :op3 ""Marin"")))))']","[a, attr-instance, arrest_01, attr-arg1, [p, attr-instance, person, attr-mod, [t, attr-instance, this], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""jose"", attr-op2, ""maria"", attr-op3, ""marin""]]]]]"
1766,1766,1766,1766,2106,26986,korruption-in-der-fifa,Diese Personen sind verhaftet worden: • Rafael Esquivel,9_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Diese 1:=Personen 2:=sind 3:=verhaftet 4:=worden: 5:=• 6:=Rafael 7:=Esquivel,1,,These people have been arrested: • Rafael Esquivel,"['# ::snt These people have been arrested: • Rafael Esquivel\n(a / arrest-01\n      :ARG1 (p / person\n            :mod (t / this)\n            :ARG1-of (m / mean-01\n                  :ARG2 (p2 / person\n                        :name (n / name\n                              :op1 ""Rafael""\n                              :op2 ""Esquivel"")))))']","[a, attr-instance, arrest_01, attr-arg1, [p, attr-instance, person, attr-mod, [t, attr-instance, this], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""rafael"", attr-op2, ""esquivel""]]]]]"
1767,1767,1767,1767,2107,26987,korruption-in-der-fifa,Diese Personen sind verhaftet worden: • Jeffrey Webb,10_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Diese 1:=Personen 2:=sind 3:=verhaftet 4:=worden: 5:=• 6:=Jeffrey 7:=Webb,1,,These people have been arrested: • Jeffrey Webb,"['# ::snt These people have been arrested: • Jeffrey Webb\n(a / arrest-01\n      :ARG1 (p / person\n            :mod (t / this)\n            :example (p2 / person\n                  :name (n / name\n                        :op1 ""Jeffrey""\n                        :op2 ""Webb""))))']","[a, attr-instance, arrest_01, attr-arg1, [p, attr-instance, person, attr-mod, [t, attr-instance, this], attr-example, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""jeffrey"", attr-op2, ""webb""]]]]"
1768,1768,1768,1768,2108,26988,korruption-in-der-fifa,Die FIFA soll sehr viel Geld genommen haben.,11_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=FIFA 2:=soll 3:=sehr 4:=viel 5:=Geld 6:=genommen 7:=haben.,1,,FIFA is said to have taken a lot of money.,"['# ::snt FIFA is said to have taken a lot of money.\n(s / say-01\n      :ARG1 (t / take-01\n            :ARG0 (o / organization\n                  :name (n / name\n                        :op1 ""FIFA""))\n            :ARG1 (m / money\n                  :quant (l / lot))))']","[s, attr-instance, say_01, attr-arg1, [t, attr-instance, take_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""fifa""]], attr-arg1, [m, attr-instance, money, attr-quant, [l, attr-instance, lot]]]]"
1769,1769,1769,1769,2110,26990,korruption-in-der-fifa,Obwohl die FIFA das Geld nicht nehmen durfte.,13_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Obwohl 1:=die 2:=FIFA 3:=das 4:=Geld 5:=nicht 6:=nehmen 7:=durfte.,1,,Although FIFA was not allowed to take the money.,"['# ::snt Although FIFA was not allowed to take the money.\n(h / have-concession-91\n      :ARG2 (a / allow-01\n            :polarity -\n            :ARG1 (t / take-01\n                  :ARG0 (o / organization\n                        :name (n / name\n                              :op1 ""FIFA""))\n                  :ARG1 (m / money))))']","[h, attr-instance, have_concession_91, attr-arg2, [a, attr-instance, allow_01, attr-polarity, negative, attr-arg1, [t, attr-instance, take_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""fifa""]], attr-arg1, [m, attr-instance, money]]]]"
1770,1770,1770,1770,2111,26991,korruption-in-der-fifa,Sie haben zum Beispiel Geld für die Vergabe der Fußball-Weltmeisterschaften 2018 und 2022 genommen.,14_long,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=haben 2:=zum 3:=Beispiel 4:=Geld 5:=für 6:=die 7:=Vergabe 8:=der 9:=Fußball-Weltmeisterschaften 10:=2018 11:=und 12:=2022 13:=genommen.,5,"[[0, 1, 4, 13], [4, 5, 7], [7, 9], [9, 10], [9, 12]]","For example, they took money to host the 2018 and 2022 World Cups.","['# ::snt For example, they took money to host the 2018 and 2022 World Cups.\n(e / exemplify-01\n      :ARG0 (t / take-01\n            :ARG0 (t2 / they)\n            :ARG1 (m / money)\n            :ARG3 (h / host-01\n                  :ARG0 t2\n                  :ARG1 (a / and\n                        :op1 (g / game\n                              :name (n / name\n                                    :op1 ""World""\n                                    :op2 ""Cup"")\n                              :year 2018))\n                  :op2 (g2 / game\n                        :name (n2 / name\n                              :op1 ""World""\n                              :op2 ""Cup"")\n                        :time (d / date-entity\n                              :year 2022)))))']","[e, attr-instance, exemplify_01, attr-arg0, [t, attr-instance, take_01, attr-arg0, [t2, attr-instance, they], attr-arg1, [m, attr-instance, money], attr-arg3, [h, attr-instance, host_01, attr-arg0, t2, attr-arg1, [a, attr-instance, and, attr-op1, [g, attr-instance, game, attr-name, [n, attr-instance, name, attr-op1, ""world"", attr-op2, ""cup""], attr-year, 2018]], attr-op2, [g2, attr-instance, game, attr-name, [n2, attr-instance, name, attr-op1, ""world"", attr-op2, ""cup""], attr-time, [d, attr-instance, date_entity, attr-year, 2022]]]]]"
1771,1771,1771,1771,2113,26993,korruption-in-der-fifa,Zum Beispiel: behalten sie Geld das anderen gehört.,1_short,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Zum 1:=Beispiel: 2:=behalten 3:=sie 4:=Geld 5:=das 6:=anderen 7:=gehört.,2,"[[2, 3], [5, 6, 7]]",For example: keep money that belongs to others.,['# ::snt For example: keep money that belongs to others.\n(e / exemplify-01\n      :ARG0 (k / keep-01\n            :ARG1 (m / money\n                  :ARG0-of (b / belong-01\n                        :ARG1 (o / other)))))'],"[e, attr-instance, exemplify_01, attr-arg0, [k, attr-instance, keep_01, attr-arg1, [m, attr-instance, money, attr-arg0_of, [b, attr-instance, belong_01, attr-arg1, [o, attr-instance, other]]]]]"
1772,1772,1772,1772,2114,26994,korruption-in-der-fifa,Oder: sie waschen Geld von verbotenen Geschäften.,2_short,Sport|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2015-05-28T14:24:34Z,af28a20dfb151690981ee13d72ce655c,0:=Oder: 1:=sie 2:=waschen 3:=Geld 4:=von 5:=verbotenen 6:=Geschäften.,2,"[[0, 1, 2], [4, 5, 6]]",Or: they launder money from illegal transactions.,['# ::snt Or: they launder money from illegal transactions.\n(o / or\n      :op2 (l / launder-01\n            :ARG0 (t / they)\n            :ARG1 (m / money)\n            :source (t2 / transact-01\n                  :ARG1-of (l2 / legal-02\n                        :polarity -))))'],"[o, attr-instance, or, attr-op2, [l, attr-instance, launder_01, attr-arg0, [t, attr-instance, they], attr-arg1, [m, attr-instance, money], attr-source, [t2, attr-instance, transact_01, attr-arg1_of, [l2, attr-instance, legal_02, attr-polarity, negative]]]]"
1773,1773,1773,1773,2115,26995,korruption,Beispiel 1: \newline Ein Verbrecher gibt einem Richter Geld.,0_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Beispiel 1:=1: 2:=\newline 3:=Ein 4:=Verbrecher 5:=gibt 6:=einem 7:=Richter 8:=Geld.,1,,Example 1: \newline A criminal gives money to a judge.,['# ::snt Example 1: \\newline A criminal gives money to a judge.\n(e / exemplify-01\n      :li 1\n      :ARG0 (g / give-01\n            :ARG0 (l / line\n                  :mod (n / new))\n            :ARG1 (m / money)\n            :ARG2 (p / person\n                  :ARG0-of (j / judge-01))))'],"[e, attr-instance, exemplify_01, attr-li, 1, attr-arg0, [g, attr-instance, give_01, attr-arg0, [l, attr-instance, line, attr-mod, [n, attr-instance, new]], attr-arg1, [m, attr-instance, money], attr-arg2, [p, attr-instance, person, attr-arg0_of, [j, attr-instance, judge_01]]]]"
1774,1774,1774,1774,2116,26996,korruption,Damit der Richter lügt.,1_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Damit 1:=der 2:=Richter 3:=lügt.,1,,So that the judge lies.,['# ::snt So that the judge lies.\n(ii / infer-01\n      :ARG1 (l / lie-08\n            :ARG0 (p / person\n                  :ARG0-of (j / judge-01))))'],"[ii, attr-instance, infer_01, attr-arg1, [l, attr-instance, lie_08, attr-arg0, [p, attr-instance, person, attr-arg0_of, [j, attr-instance, judge_01]]]]"
1775,1775,1775,1775,2117,26997,korruption,"Der Richter sagt, der Verbrecher ist unschuldig.",2_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,"0:=Der 1:=Richter 2:=sagt, 3:=der 4:=Verbrecher 5:=ist 6:=unschuldig.",2,"[[1, 2], [4, 5, 6]]",The judge says the criminal is innocent.,['# ::snt The judge says the criminal is innocent.\n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG3 (j / judge-01)))\n      :ARG1 (ii / innocent-01\n            :ARG1 (p2 / person\n                  :ARG2-of (c / criminal-03))))'],"[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg3, [j, attr-instance, judge_01]]], attr-arg1, [ii, attr-instance, innocent_01, attr-arg1, [p2, attr-instance, person, attr-arg2_of, [c, attr-instance, criminal_03]]]]"
1776,1776,1776,1776,2118,26998,korruption,Der Richter ist korrupt.,3_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Der 1:=Richter 2:=ist 3:=korrupt.,1,,The judge is corrupt.,['# ::snt The judge is corrupt.\n(c / corrupt-01\n      :ARG1 (p / person\n            :ARG0-of (j / judge-01)))'],"[c, attr-instance, corrupt_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [j, attr-instance, judge_01]]]"
1777,1777,1777,1777,2119,26999,korruption,Beispiel 2: \newline Ein Politiker sammelt Geld für eine gute Sache.,4_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Beispiel 1:=2: 2:=\newline 3:=Ein 4:=Politiker 5:=sammelt 6:=Geld 7:=für 8:=eine 9:=gute 10:=Sache.,2,"[[4, 5, 6], [7, 9, 10]]",Example 2: \newline A politician collects money for a good cause.,['# ::snt Example 2: \\newline A politician collects money for a good cause.\n(e / exemplify-01\n      :li 2\n      :ARG1 (c / collect-01\n            :ARG0 (p / politician)\n            :ARG1 (m / money)\n            :ARG3 (c2 / cause\n                  :ARG1-of (g / good-02))))'],"[e, attr-instance, exemplify_01, attr-li, 2, attr-arg1, [c, attr-instance, collect_01, attr-arg0, [p, attr-instance, politician], attr-arg1, [m, attr-instance, money], attr-arg3, [c2, attr-instance, cause, attr-arg1_of, [g, attr-instance, good_02]]]]"
1778,1778,1778,1778,2120,27000,korruption,Dieses Geld gibt er aber nicht weiter an die gute Sache.,5_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Dieses 1:=Geld 2:=gibt 3:=er 4:=aber 5:=nicht 6:=weiter 7:=an 8:=die 9:=gute 10:=Sache.,2,"[[6], [7, 9, 10]]",But he does not pass this money on to the good cause.,['# ::snt But he does not pass this money on to the good cause.\n(c / contrast-01\n      :ARG2 (p / pass-on-09\n            :polarity -\n            :ARG0 (h / he)\n            :ARG1 (m / money\n                  :mod (t / this))\n            :ARG2 (c2 / cause\n                  :ARG1-of (g / good-02))))'],"[c, attr-instance, contrast_01, attr-arg2, [p, attr-instance, pass_on_09, attr-polarity, negative, attr-arg0, [h, attr-instance, he], attr-arg1, [m, attr-instance, money, attr-mod, [t, attr-instance, this]], attr-arg2, [c2, attr-instance, cause, attr-arg1_of, [g, attr-instance, good_02]]]]"
1779,1779,1779,1779,2121,27001,korruption,Er kauft sich davon ein eigenes Haus.,6_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Er 1:=kauft 2:=sich 3:=davon 4:=ein 5:=eigenes 6:=Haus.,1,,He uses the money to buy his own house.,['# ::snt He uses the money to buy his own house.\n(u / use-01\n      :ARG0 (h / he)\n      :ARG1 (m / money)\n      :ARG2 (b / buy-01\n            :ARG0 h\n            :ARG1 (h2 / house\n                  :poss h)))'],"[u, attr-instance, use_01, attr-arg0, [h, attr-instance, he], attr-arg1, [m, attr-instance, money], attr-arg2, [b, attr-instance, buy_01, attr-arg0, h, attr-arg1, [h2, attr-instance, house, attr-poss, h]]]"
1780,1780,1780,1780,2122,27002,korruption,Er hat die Menschen die Geld gespendet haben betrogen.,7_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Er 1:=hat 2:=die 3:=Menschen 4:=die 5:=Geld 6:=gespendet 7:=haben 8:=betrogen.,2,"[[0, 1, 8], [4, 5, 6, 7]]",He cheated the people who donated money.,['# ::snt He cheated the people who donated money.\n(c / cheat-02\n      :ARG0 (h / he)\n      :ARG1 (p / person\n            :ARG0-of (d / donate-01\n                  :ARG1 (m / money))))'],"[c, attr-instance, cheat_02, attr-arg0, [h, attr-instance, he], attr-arg1, [p, attr-instance, person, attr-arg0_of, [d, attr-instance, donate_01, attr-arg1, [m, attr-instance, money]]]]"
1781,1781,1781,1781,2123,27003,korruption,Dieser Politiker ist dann korrupt.,8_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Dieser 1:=Politiker 2:=ist 3:=dann 4:=korrupt.,1,,This politician is then corrupt.,['# ::snt This politician is then corrupt.\n(c / corrupt-01\n      :ARG1 (p / politician\n            :mod (t / this))\n      :time (t2 / then))'],"[c, attr-instance, corrupt_01, attr-arg1, [p, attr-instance, politician, attr-mod, [t, attr-instance, this]], attr-time, [t2, attr-instance, then]]"
1782,1782,1782,1782,2124,27004,korruption,Korruption ist verboten.,9_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Korruption 1:=ist 2:=verboten.,1,,Corruption is prohibited.,['# ::snt Corruption is prohibited.\n(p / prohibit-01\n      :ARG1 (c / corrupt-01))'],"[p, attr-instance, prohibit_01, attr-arg1, [c, attr-instance, corrupt_01]]"
1783,1783,1783,1783,2125,27005,korruption,Korruption wird in Deutschland bestraft,10_long,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Korruption 1:=wird 2:=in 3:=Deutschland 4:=bestraft,2,"[[0, 1], [2, 3]]",Corruption is punished in Germany,"['# ::snt Corruption is punished in Germany\n(p / punish-01\n      :ARG1 (c / corrupt-01)\n      :location (c2 / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[p, attr-instance, punish_01, attr-arg1, [c, attr-instance, corrupt_01], attr-location, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
1784,1784,1784,1784,2126,27006,korruption,Korruption ist ein lateinisches Wort.,0_short,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Korruption 1:=ist 2:=ein 3:=lateinisches 4:=Wort.,2,"[[3], [4]]",Corruption is a Latin word.,"['# ::snt Corruption is a Latin word.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""Latin""))\n      :domain (c / corrupt-01))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""latin""]], attr-domain, [c, attr-instance, corrupt_01]]"
1785,1785,1785,1785,2127,27007,korruption,"Es heisst übersetzt ""Bestechlichkeit"".",1_short,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,"0:=Es 1:=heisst 2:=übersetzt 3:=""Bestechlichkeit"".",1,,"It means ""bribery"".","['# ::snt It means ""bribery"".\n(m / mean-01\n      :ARG1 (ii / it)\n      :ARG2 (b / bery))']","[m, attr-instance, mean_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [b, attr-instance, bery]]"
1786,1786,1786,1786,2128,27008,korruption,"Korruption bedeutet: \newline Eine Person hat einen Beruf, dem viele Menschen Vertrauen.",2_short,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,"0:=Korruption 1:=bedeutet: 2:=\newline 3:=Eine 4:=Person 5:=hat 6:=einen 7:=Beruf, 8:=dem 9:=viele 10:=Menschen 11:=Vertrauen.",3,"[[0, 1], [4, 5, 7], [8, 9, 10, 11]]",Corruption means: \newline A person has a job that many people trust.,['# ::snt Corruption means: \\newline A person has a job that many people trust.\n(m / mean-01\n      :ARG1 (c / corrupt-01)\n      :ARG2 (h / have-03\n            :ARG0 (p / person)\n            :ARG1 (j / job\n                  :ARG1-of (t / trust-02\n                        :ARG0 (p2 / person\n                              :quant (m2 / many))))))'],"[m, attr-instance, mean_01, attr-arg1, [c, attr-instance, corrupt_01], attr-arg2, [h, attr-instance, have_03, attr-arg0, [p, attr-instance, person], attr-arg1, [j, attr-instance, job, attr-arg1_of, [t, attr-instance, trust_02, attr-arg0, [p2, attr-instance, person, attr-quant, [m2, attr-instance, many]]]]]]"
1787,1787,1787,1787,2129,27009,korruption,Oder eine Person kann in ihrem Amt wichtige Entscheidungen treffen.,3_short,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Oder 1:=eine 2:=Person 3:=kann 4:=in 5:=ihrem 6:=Amt 7:=wichtige 8:=Entscheidungen 9:=treffen.,2,"[[2, 3, 7, 8, 9], [4, 5, 6]]",Or a person can make important decisions in their office.,['# ::snt Or a person can make important decisions in their office.\n(o / or\n      :op2 (p / possible-01\n            :ARG1 (d / decide-01\n                  :ARG0 (p2 / person)\n                  :ARG1-of (ii / important-01)\n                  :location (o2 / office\n                        :poss p2))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, possible_01, attr-arg1, [d, attr-instance, decide_01, attr-arg0, [p2, attr-instance, person], attr-arg1_of, [ii, attr-instance, important_01], attr-location, [o2, attr-instance, office, attr-poss, p2]]]]"
1788,1788,1788,1788,2130,27010,korruption,Die Person benutzt den Beruf.,4_short,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Die 1:=Person 2:=benutzt 3:=den 4:=Beruf.,1,,The person uses the profession.,['# ::snt The person uses the profession.\n(u / use-01\n      :ARG0 (p / person)\n      :ARG1 (p2 / profession))'],"[u, attr-instance, use_01, attr-arg0, [p, attr-instance, person], attr-arg1, [p2, attr-instance, profession]]"
1789,1789,1789,1789,2131,27011,korruption,Oder das Amt um Vorteile zu haben.,5_short,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Oder 1:=das 2:=Amt 3:=um 4:=Vorteile 5:=zu 6:=haben.,1,,Or the office to have advantages.,['# ::snt Or the office to have advantages.\n(o / or\n      :op2 (a / advantage-01\n            :ARG2 (o2 / office)))'],"[o, attr-instance, or, attr-op2, [a, attr-instance, advantage_01, attr-arg2, [o2, attr-instance, office]]]"
1790,1790,1790,1790,2132,27012,korruption,Dabei schadet er anderen.,6_short,Politik|Recht_und_Gesetz,2008-10-10T21:54:55Z,e3afed0047b08059d0fada10f400c1e5,0:=Dabei 1:=schadet 2:=er 3:=anderen.,1,,"In doing so, he harms others.","['# ::snt In doing so, he harms others.\n(h / harm-01\n      :ARG0 (h2 / he)\n      :ARG1 (o / other)\n      :ARG1-of (c / cause-01\n            :ARG0 (d / do-02\n                  :ARG0 h2\n                  :ARG1 (s / so))))']","[h, attr-instance, harm_01, attr-arg0, [h2, attr-instance, he], attr-arg1, [o, attr-instance, other], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [d, attr-instance, do_02, attr-arg0, h2, attr-arg1, [s, attr-instance, so]]]]"
1791,1791,1791,1791,2133,27013,korsett,Ein Korsett soll den Körper anders aussehen lassen.,0_long,Gesundheit,2012-04-28T11:43:57Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Korsett 2:=soll 3:=den 4:=Körper 5:=anders 6:=aussehen 7:=lassen.,1,,A corset is supposed to make the body look different.,['# ::snt A corset is supposed to make the body look different.\n(s / suppose-02\n      :ARG1 (c / corset)\n      :ARG2 (m / make-02\n            :ARG0 c\n            :ARG1 (l / look-02\n                  :ARG0 (b / body)\n                  :ARG1 (d / differ-02))))'],"[s, attr-instance, suppose_02, attr-arg1, [c, attr-instance, corset], attr-arg2, [m, attr-instance, make_02, attr-arg0, c, attr-arg1, [l, attr-instance, look_02, attr-arg0, [b, attr-instance, body], attr-arg1, [d, attr-instance, differ_02]]]]"
1792,1792,1792,1792,2134,27014,korsett,"Ein Korsett zieht man an,  \newline weil es schön aussieht.",1_long,Gesundheit,2012-04-28T11:43:57Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Ein 1:=Korsett 2:=zieht 3:=man 4:=an, 5:= 6:=\newline 7:=weil 8:=es 9:=schön 10:=aussieht.",2,"[[1, 2, 3, 4], [7, 8, 9, 10]]",You wear a corset because it looks nice.,['# ::snt You wear a corset because it looks nice.\n(w / wear-01\n      :ARG0 (y / you)\n      :ARG1 (c / corset)\n      :ARG1-of (c2 / cause-01\n            :ARG0 (l / look-02\n                  :ARG0 c\n                  :ARG1 (n / nice-01\n                        :ARG1 c))))'],"[w, attr-instance, wear_01, attr-arg0, [y, attr-instance, you], attr-arg1, [c, attr-instance, corset], attr-arg1_of, [c2, attr-instance, cause_01, attr-arg0, [l, attr-instance, look_02, attr-arg0, c, attr-arg1, [n, attr-instance, nice_01, attr-arg1, c]]]]"
1793,1793,1793,1793,2135,27015,korsett,Oder weil es für die Gesundheit gut ist.,2_long,Gesundheit,2012-04-28T11:43:57Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Oder 1:=weil 2:=es 3:=für 4:=die 5:=Gesundheit 6:=gut 7:=ist.,1,,Or because it is good for your health.,['# ::snt Or because it is good for your health.\n(o / or\n      :op2 (c / cause-01\n            :ARG0 (g / good-04\n                  :ARG1 (ii / it)\n                  :ARG2 (h / healthy\n                        :domain (y / you)))))'],"[o, attr-instance, or, attr-op2, [c, attr-instance, cause_01, attr-arg0, [g, attr-instance, good_04, attr-arg1, [ii, attr-instance, it], attr-arg2, [h, attr-instance, healthy, attr-domain, [y, attr-instance, you]]]]]"
1794,1794,1794,1794,2136,27016,korsett,Zum Beispiel: \newline wenn man einen krummen Rücken hat.,3_long,Gesundheit,2012-04-28T11:43:57Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel: 2:=\newline 3:=wenn 4:=man 5:=einen 6:=krummen 7:=Rücken 8:=hat.,1,,For example: \newline if you have a hunched back.,['# ::snt For example: \\newline if you have a hunched back.\n(e / exemplify-01\n      :ARG0 (l / line\n            :mod (n / newline)\n            :condition (h / have-03\n                  :ARG0 (y / you)\n                  :ARG1 (b / back\n                        :ARG1-of (h2 / hunched-01\n                              :ARG0 y)))))'],"[e, attr-instance, exemplify_01, attr-arg0, [l, attr-instance, line, attr-mod, [n, attr-instance, newline], attr-condition, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [b, attr-instance, back, attr-arg1_of, [h2, attr-instance, hunched_01, attr-arg0, y]]]]]"
1795,1795,1795,1795,2137,27017,korsett,Ein Korsett ist ein Kleidungsstück.,0_short,Gesundheit,2012-04-28T11:43:57Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Korsett 2:=ist 3:=ein 4:=Kleidungsstück.,1,,A corset is a piece of clothing.,['# ::snt A corset is a piece of clothing.\n(p / piece\n      :consist-of (c / clothing)\n      :domain (c2 / corset))'],"[p, attr-instance, piece, attr-consist_of, [c, attr-instance, clothing], attr-domain, [c2, attr-instance, corset]]"
1796,1796,1796,1796,2138,27018,korsett,"Ein Korsett ist sehr eng, \newline und gibt dem Körper eine andere Form.",1_short,Gesundheit,2012-04-28T11:43:57Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Ein 1:=Korsett 2:=ist 3:=sehr 4:=eng, 5:=\newline 6:=und 7:=gibt 8:=dem 9:=Körper 10:=eine 11:=andere 12:=Form.",2,"[[2, 3, 4], [7, 9, 11, 12]]","A corset is very tight, \newline and gives the body a different shape.","['# ::snt A corset is very tight, \\newline and gives the body a different shape.\n(a / and\n      :op1 (t / tight-05\n            :ARG0 (c / corset)\n            :degree (v / very)\n            :ARG1-of (n / newline-00))\n      :op2 (g / give-01\n            :ARG0 c\n            :ARG1 (s / shape\n                  :ARG1-of (d / differ-02))\n            :ARG2 (b / body)))']","[a, attr-instance, and, attr-op1, [t, attr-instance, tight_05, attr-arg0, [c, attr-instance, corset], attr-degree, [v, attr-instance, very], attr-arg1_of, [n, attr-instance, newline_00]], attr-op2, [g, attr-instance, give_01, attr-arg0, c, attr-arg1, [s, attr-instance, shape, attr-arg1_of, [d, attr-instance, differ_02]], attr-arg2, [b, attr-instance, body]]]"
1797,1797,1797,1797,2139,27019,koryphae,Das Wort Koryphäe ist ein Substantiv.,0_long,Ohne_Kategorie,2012-03-02T11:56:09Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Das 1:=Wort 2:=Koryphäe 3:=ist 4:=ein 5:=Substantiv.,1,,The word luminary is a noun.,['# ::snt The word luminary is a noun.\n(n / noun\n      :domain (w / word\n            :mod (l / luminary)))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [l, attr-instance, luminary]]]"
1798,1798,1798,1798,2140,27020,koryphae,Bill Gates kennt sich besonders gut mit Computer aus.,1_long,Ohne_Kategorie,2012-03-02T11:56:09Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Bill 1:=Gates 2:=kennt 3:=sich 4:=besonders 5:=gut 6:=mit 7:=Computer 8:=aus.,1,,Bill Gates is particularly knowledgeable about computers.,"['# ::snt Bill Gates is particularly knowledgeable about computers.\n(k / know-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Bill""\n                  :op2 ""Gates""))\n      :ARG1 (c / computer)\n      :mod (p2 / particular))']","[k, attr-instance, know_03, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""bill"", attr-op2, ""gates""]], attr-arg1, [c, attr-instance, computer], attr-mod, [p2, attr-instance, particular]]"
1799,1799,1799,1799,2141,27021,koryphae,Darum ist er eine Koryphäe im Bereich Computer.,2_long,Ohne_Kategorie,2012-03-02T11:56:09Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Darum 1:=ist 2:=er 3:=eine 4:=Koryphäe 5:=im 6:=Bereich 7:=Computer.,2,"[[0, 2, 3, 4], [5, 6, 7]]",That is why he is a luminary in the field of computers.,['# ::snt That is why he is a luminary in the field of computers.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (l / luminary\n            :domain (h / he)\n            :topic (f / field\n                  :mod (c2 / computer))))'],"[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [l, attr-instance, luminary, attr-domain, [h, attr-instance, he], attr-topic, [f, attr-instance, field, attr-mod, [c2, attr-instance, computer]]]]"
1800,1800,1800,1800,2142,27022,koryphae,"Eine Koryphäe ist eine Person, die sich besonders gut in etwas auskennt.",0_short,Ohne_Kategorie,2012-03-02T11:56:09Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,"0:=Eine 1:=Koryphäe 2:=ist 3:=eine 4:=Person, 5:=die 6:=sich 7:=besonders 8:=gut 9:=in 10:=etwas 11:=auskennt.",3,"[[1, 2, 4], [5, 6, 7, 8, 11], [9, 10]]",A luminary is a person who is particularly knowledgeable about something.,['# ::snt A luminary is a person who is particularly knowledgeable about something.\n(p / person\n      :ARG0-of (k / know-01\n            :ARG1 (s / something)\n            :mod (p2 / particular))\n      :domain (l / luminary))'],"[p, attr-instance, person, attr-arg0_of, [k, attr-instance, know_01, attr-arg1, [s, attr-instance, something], attr-mod, [p2, attr-instance, particular]], attr-domain, [l, attr-instance, luminary]]"
1801,1801,1801,1801,2143,27023,koryphae,"Es ist ein anderes Wort für ""Experte"".",1_short,Ohne_Kategorie,2012-03-02T11:56:09Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,"0:=Es 1:=ist 2:=ein 3:=anderes 4:=Wort 5:=für 6:=""Experte"".",1,,"It's another word for ""expert.""","['# ::snt It\'s another word for ""expert.""\n(w / word\n      :mod (a / another)\n      :domain (ii / it)\n      :topic (e / expert-01))']","[w, attr-instance, word, attr-mod, [a, attr-instance, another], attr-domain, [ii, attr-instance, it], attr-topic, [e, attr-instance, expert_01]]"
1802,1802,1802,1802,2144,27024,kosewort,Beim Kosewort kommen Buchstaben zu einem Namen dazu.,0_long,Sprache,2014-02-25T10:11:04Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Beim 1:=Kosewort 2:=kommen 3:=Buchstaben 4:=zu 5:=einem 6:=Namen 7:=dazu.,1,,"In a term of endearment, letters are added to a name.","['# ::snt In a term of endearment, letters are added to a name.\n(a / add-02\n      :ARG1 (l / letter)\n      :ARG2 (n / name)\n      :purpose (t / term\n            :mod (e / endear-01)))']","[a, attr-instance, add_02, attr-arg1, [l, attr-instance, letter], attr-arg2, [n, attr-instance, name], attr-purpose, [t, attr-instance, term, attr-mod, [e, attr-instance, endear_01]]]"
1803,1803,1803,1803,2146,27026,kosewort,Ein Kosewort ist ein Kurz-wort für einen Namen.,0_short,Sprache,2014-02-25T10:11:04Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Kosewort 2:=ist 3:=ein 4:=Kurz-wort 5:=für 6:=einen 7:=Namen.,2,"[[1, 2, 4], [5, 7]]",A term of endearment is a short word for a name.,['# ::snt A term of endearment is a short word for a name.\n(w / word\n      :ARG1-of (s / short-07)\n      :purpose (n / name)\n      :domain (t / term-01\n            :ARG1 (e / endear-01)))'],"[w, attr-instance, word, attr-arg1_of, [s, attr-instance, short_07], attr-purpose, [n, attr-instance, name], attr-domain, [t, attr-instance, term_01, attr-arg1, [e, attr-instance, endear_01]]]"
1804,1804,1804,1804,2147,27027,kosmopolitismus,Kosmo-politis-mus ist eine Welt-anschauung.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kosmo-politis-mus 1:=ist 2:=eine 3:=Welt-anschauung.,1,,Cosmo-polit-ism is a world-view.,"['# ::snt Cosmo-polit-ism is a world-view.\n(v / view-02\n      :ARG0 (w / world)\n      :ARG1 (p / political-movement\n            :name (n / name\n                  :op1 ""Cosmo-politism"")))']","[v, attr-instance, view_02, attr-arg0, [w, attr-instance, world], attr-arg1, [p, attr-instance, political_movement, attr-name, [n, attr-instance, name, attr-op1, ""cosmo_politism""]]]"
1805,1805,1805,1805,2148,27028,kosmopolitismus,"Das heißt, \newline wie man die Welt sieht.",1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=wie 4:=man 5:=die 6:=Welt 7:=sieht.",1,,"That is, \newline how one sees the world.","['# ::snt That is, \\newline how one sees the world.\n(d / define-01\n      :ARG1 (t / that)\n      :ARG2 (t2 / thing\n            :manner-of (s / see-01\n                  :ARG0 (o / one)\n                  :ARG1 (w / world))))']","[d, attr-instance, define_01, attr-arg1, [t, attr-instance, that], attr-arg2, [t2, attr-instance, thing, attr-manner_of, [s, attr-instance, see_01, attr-arg0, [o, attr-instance, one], attr-arg1, [w, attr-instance, world]]]]"
1806,1806,1806,1806,2149,27029,kosmopolitismus,Oder wie man die Welt gerne hat.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=wie 2:=man 3:=die 4:=Welt 5:=gerne 6:=hat.,1,,Or how you like the world to be.,['# ::snt Or how you like the world to be.\n(o / or\n      :op2 (t / thing\n            :ARG1-of (l / like-01\n                  :ARG0 (y / you)\n                  :ARG2 (h / have-mod-91\n                        :ARG1 (w / world)))))'],"[o, attr-instance, or, attr-op2, [t, attr-instance, thing, attr-arg1_of, [l, attr-instance, like_01, attr-arg0, [y, attr-instance, you], attr-arg2, [h, attr-instance, have_mod_91, attr-arg1, [w, attr-instance, world]]]]]"
1807,1807,1807,1807,2150,27030,kosmopolitismus,Oder wie die Welt sein soll.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=wie 2:=die 3:=Welt 4:=sein 5:=soll.,1,,Or how the world should be.,['# ::snt Or how the world should be.\n(o / or\n      :op2 (r / recommend-01\n            :ARG1 (t / thing\n                  :domain (w / world))))'],"[o, attr-instance, or, attr-op2, [r, attr-instance, recommend_01, attr-arg1, [t, attr-instance, thing, attr-domain, [w, attr-instance, world]]]]"
1808,1808,1808,1808,2151,27031,kosmopolitismus,Wer an Kosmo-politis-mus glaubt ist Kosmo-politisch .,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Wer 1:=an 2:=Kosmo-politis-mus 3:=glaubt 4:=ist 5:=Kosmo-politisch 6:=.,2,"[[0, 1, 2, 3], [4, 5]]",Whoever believes in cosmo-polit-ism is cosmo-political.,"['# ::snt Whoever believes in cosmo-polit-ism is cosmo-political.\n(c / cosmo-political\n      :domain (w / whoever\n            :ARG0-of (b / believe-01\n                  :ARG1 (p / political-movement\n                        :name (n / name\n                              :op1 ""Cosmo-politism"")))))']","[c, attr-instance, cosmo_political, attr-domain, [w, attr-instance, whoever, attr-arg0_of, [b, attr-instance, believe_01, attr-arg1, [p, attr-instance, political_movement, attr-name, [n, attr-instance, name, attr-op1, ""cosmo_politism""]]]]]"
1809,1809,1809,1809,2152,27032,kosmopolitismus,Eine Frau ist ein Kosmo-politin.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Frau 2:=ist 3:=ein 4:=Kosmo-politin.,1,,A woman is a cosmopolitan.,['# ::snt A woman is a cosmopolitan.\n(c / cosmopolitan\n      :domain (w / woman))'],"[c, attr-instance, cosmopolitan, attr-domain, [w, attr-instance, woman]]"
1810,1810,1810,1810,2154,27034,kosmopolitismus,Ein Mann ist ein Kosmo-polit.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Mann 2:=ist 3:=ein 4:=Kosmo-polit.,1,,A man is a cosmopolitan.,['# ::snt A man is a cosmopolitan.\n(c / cosmopolitan\n      :domain (m / man))'],"[c, attr-instance, cosmopolitan, attr-domain, [m, attr-instance, man]]"
1811,1811,1811,1811,2156,27036,kosmopolitismus,Wenn sich mehrere Menschen als Welt-bürger zusammen-schließen sind sie eine Welt-bürger-bewegung.,9_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Wenn 1:=sich 2:=mehrere 3:=Menschen 4:=als 5:=Welt-bürger 6:=zusammen-schließen 7:=sind 8:=sie 9:=eine 10:=Welt-bürger-bewegung.,3,"[[0, 1, 2, 3, 6], [4, 5, 6], [7, 8, 10]]","When several people come together as world citizens, they form a world citizen movement.","['# ::snt When several people come together as world citizens, they form a world citizen movement.\n(f / form-01\n      :ARG0 (p / person\n            :quant (s / several))\n      :ARG1 (m / movement-07\n            :ARG0 p\n            :ARG1 (c / citizen\n                  :mod (w / world)))\n      :time (c2 / come-01\n            :ARG1 p\n            :manner c))']","[f, attr-instance, form_01, attr-arg0, [p, attr-instance, person, attr-quant, [s, attr-instance, several]], attr-arg1, [m, attr-instance, movement_07, attr-arg0, p, attr-arg1, [c, attr-instance, citizen, attr-mod, [w, attr-instance, world]]], attr-time, [c2, attr-instance, come_01, attr-arg1, p, attr-manner, c]]"
1812,1812,1812,1812,2157,27037,kosmopolitismus,Das Gegenteil von Kosmo-politis-mus ist Nationalis-mus.,10_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Gegenteil 2:=von 3:=Kosmo-politis-mus 4:=ist 5:=Nationalis-mus.,1,,The opposite of cosmopolitanism is nationalism.,['# ::snt The opposite of cosmopolitanism is nationalism.\n(o / opposite-01\n      :ARG1 (n / nationalism)\n      :ARG2 (c / cosmopolitanism))'],"[o, attr-instance, opposite_01, attr-arg1, [n, attr-instance, nationalism], attr-arg2, [c, attr-instance, cosmopolitanism]]"
1813,1813,1813,1813,2158,27038,kosmopolitismus,Kosmopolitismus  ist wenn man die ganze Welt als Heimat hat.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kosmopolitismus 1:= 2:=ist 3:=wenn 4:=man 5:=die 6:=ganze 7:=Welt 8:=als 9:=Heimat 10:=hat.,2,"[[0, 2], [3, 4, 6, 7,8, 9, 10]]",Cosmopolitanism is when you have the whole world as your home.,['# ::snt Cosmopolitanism is when you have the whole world as your home.\n(c / cosmopolitanism\n      :domain (h / have-03\n            :ARG0 (y / you)\n            :ARG1 (w / world\n                  :mod (w2 / whole))\n            :prep-as (h2 / home\n                  :poss y)))'],"[c, attr-instance, cosmopolitanism, attr-domain, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [w, attr-instance, world, attr-mod, [w2, attr-instance, whole]], attr-prep_as, [h2, attr-instance, home, attr-poss, y]]]"
1814,1814,1814,1814,2159,27039,kosmopolitismus,In jedem Teil von der Welt leben gleiche Menschen.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=In 1:=jedem 2:=Teil 3:=von 4:=der 5:=Welt 6:=leben 7:=gleiche 8:=Menschen.,1,,The same people live in every part of the world.,['# ::snt The same people live in every part of the world.\n(l / live-01\n      :ARG0 (p / person\n            :ARG1-of (s / same-01))\n      :location (p2 / part\n            :mod (e / every)\n            :part-of (w / world)))'],"[l, attr-instance, live_01, attr-arg0, [p, attr-instance, person, attr-arg1_of, [s, attr-instance, same_01]], attr-location, [p2, attr-instance, part, attr-mod, [e, attr-instance, every], attr-part_of, [w, attr-instance, world]]]"
1815,1815,1815,1815,2160,27040,kosmopolitismus,Und man fühlt sich überall zu Hause.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2019-06-16T07:49:02Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=man 2:=fühlt 3:=sich 4:=überall 5:=zu 6:=Hause.,1,,And you feel at home everywhere.,['# ::snt And you feel at home everywhere.\n(a / and\n      :op2 (f / feel-01\n            :ARG0 (y / you)\n            :ARG1 (h / home)\n            :location (e / everywhere)))'],"[a, attr-instance, and, attr-op2, [f, attr-instance, feel_01, attr-arg0, [y, attr-instance, you], attr-arg1, [h, attr-instance, home], attr-location, [e, attr-instance, everywhere]]]"
1816,1816,1816,1816,2161,27041,kraftknoten,Ein Kraftknoten ist ein Hilfsmittel.,0_long,Hilfsmittel,2008-02-12T19:08:32Z,e3afed0047b08059d0fada10f400c1e5,0:=Ein 1:=Kraftknoten 2:=ist 3:=ein 4:=Hilfsmittel.,1,,A power knot is a tool.,['# ::snt A power knot is a tool.\n(t / tool\n      :domain (k / knot\n            :mod (p / power)))'],"[t, attr-instance, tool, attr-domain, [k, attr-instance, knot, attr-mod, [p, attr-instance, power]]]"
1817,1817,1817,1817,2162,27042,kraftknoten,"Das heißt, die Krankenversicherung muss den Kraftknoten bezahlen.",1_long,Hilfsmittel,2008-02-12T19:08:32Z,e3afed0047b08059d0fada10f400c1e5,"0:=Das 1:=heißt, 2:=die 3:=Krankenversicherung 4:=muss 5:=den 6:=Kraftknoten 7:=bezahlen.",1,,This means that the health insurance has to pay for the power node.,['# ::snt This means that the health insurance has to pay for the power node.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (o / obligate-01\n            :ARG1 (ii / insure-02\n                  :ARG1 (h / health))\n            :ARG2 (p / pay-01\n                  :ARG0 ii\n                  :ARG3 (n / node\n                        :mod (p2 / power)))))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [o, attr-instance, obligate_01, attr-arg1, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]], attr-arg2, [p, attr-instance, pay_01, attr-arg0, ii, attr-arg3, [n, attr-instance, node, attr-mod, [p2, attr-instance, power]]]]]"
1818,1818,1818,1818,2163,27043,kraftknoten,An manchen Rollstühlen sind Kraftknoten.,0_short,Hilfsmittel,2008-02-12T19:08:32Z,e3afed0047b08059d0fada10f400c1e5,0:=An 1:=manchen 2:=Rollstühlen 3:=sind 4:=Kraftknoten.,1,,Some wheelchairs have power nodes.,['# ::snt Some wheelchairs have power nodes.\n(h / have-03\n      :ARG0 (w / wheelchair\n            :quant (s / some))\n      :ARG1 (n / node\n            :mod (p / power)))'],"[h, attr-instance, have_03, attr-arg0, [w, attr-instance, wheelchair, attr-quant, [s, attr-instance, some]], attr-arg1, [n, attr-instance, node, attr-mod, [p, attr-instance, power]]]"
1819,1819,1819,1819,2164,27044,kraftknoten,Mit einem Kraftknoten kann man einen Rollstuhl im Auto befestigen.,1_short,Hilfsmittel,2008-02-12T19:08:32Z,e3afed0047b08059d0fada10f400c1e5,0:=Mit 1:=einem 2:=Kraftknoten 3:=kann 4:=man 5:=einen 6:=Rollstuhl 7:=im 8:=Auto 9:=befestigen.,2,"[[6, 9], [7, 8]]",With a power knot you can secure a wheelchair in a car.,['# ::snt With a power knot you can secure a wheelchair in a car.\n(p / possible-01\n      :ARG1 (s / secure-02\n            :ARG0 (y / you)\n            :ARG1 (w / wheelchair)\n            :location (c / car))\n      :instrument (k / knot\n            :mod (p2 / power)))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, secure_02, attr-arg0, [y, attr-instance, you], attr-arg1, [w, attr-instance, wheelchair], attr-location, [c, attr-instance, car]], attr-instrument, [k, attr-instance, knot, attr-mod, [p2, attr-instance, power]]]"
1820,1820,1820,1820,2165,27045,krafttraining,Kraft-training macht man zum Beispiel beim Body-building.,0_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Kraft-training 1:=macht 2:=man 3:=zum 4:=Beispiel 5:=beim 6:=Body-building.,1,,"Strength training is done, for example, in bodybuilding.","['# ::snt Strength training is done, for example, in bodybuilding.\n(e / exemplify-01\n      :ARG0 (t / train-01\n            :ARG1 (s / strengthen-01)\n            :manner (b / build-01\n                  :ARG1 (b2 / body))))']","[e, attr-instance, exemplify_01, attr-arg0, [t, attr-instance, train_01, attr-arg1, [s, attr-instance, strengthen_01], attr-manner, [b, attr-instance, build_01, attr-arg1, [b2, attr-instance, body]]]]"
1821,1821,1821,1821,2167,27047,krafttraining,Man kann Kraft-training mit Geräten machen.,2_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Man 1:=kann 2:=Kraft-training 3:=mit 4:=Geräten 5:=machen.,1,,You can do strength training with equipment.,['# ::snt You can do strength training with equipment.\n(p / possible-01\n      :ARG1 (t / train-01\n            :ARG0 (y / you)\n            :ARG1 (s / strong-02)\n            :instrument (e / equipment)))'],"[p, attr-instance, possible_01, attr-arg1, [t, attr-instance, train_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, strong_02], attr-instrument, [e, attr-instance, equipment]]]"
1822,1822,1822,1822,2169,27049,krafttraining,Oder man kann sein eigenes Körper-gewicht benutzen.,4_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Oder 1:=man 2:=kann 3:=sein 4:=eigenes 5:=Körper-gewicht 6:=benutzen.,1,,Or you can use your own body weight.,['# ::snt Or you can use your own body weight.\n(o / or\n      :op2 (p / possible-01\n            :ARG1 (u / use-01\n                  :ARG0 (y / you)\n                  :ARG1 (w / weight\n                        :mod (b / body)\n                        :poss y))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, possible_01, attr-arg1, [u, attr-instance, use_01, attr-arg0, [y, attr-instance, you], attr-arg1, [w, attr-instance, weight, attr-mod, [b, attr-instance, body], attr-poss, y]]]]"
1823,1823,1823,1823,2170,27050,krafttraining,Bei den Übungen macht man Wieder-holungen.,5_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Bei 1:=den 2:=Übungen 3:=macht 4:=man 5:=Wieder-holungen.,1,,When doing the exercises you do repetitions.,['# ::snt When doing the exercises you do repetitions.\n(r / repeat-01\n      :ARG0 (y / you)\n      :time (d / do-02\n            :ARG0 y\n            :ARG1 (e / exercise-02)))'],"[r, attr-instance, repeat_01, attr-arg0, [y, attr-instance, you], attr-time, [d, attr-instance, do_02, attr-arg0, y, attr-arg1, [e, attr-instance, exercise_02]]]"
1824,1824,1824,1824,2171,27051,krafttraining,Man macht die gleiche Bewegung hinter-einander.,6_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Man 1:=macht 2:=die 3:=gleiche 4:=Bewegung 5:=hinter-einander.,1,,You make the same movement one after the other.,['# ::snt You make the same movement one after the other.\n(m / make-01\n      :ARG0 (y / you)\n      :ARG1 (m2 / movement-07\n            :ARG0 y\n            :ARG1-of (s / same-01))\n      :manner (o / one-after-another))'],"[m, attr-instance, make_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m2, attr-instance, movement_07, attr-arg0, y, attr-arg1_of, [s, attr-instance, same_01]], attr-manner, [o, attr-instance, one_after_another]]"
1825,1825,1825,1825,2173,27053,krafttraining,Man macht bei den Übungen Sätze.,8_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Man 1:=macht 2:=bei 3:=den 4:=Übungen 5:=Sätze.,1,,During the exercises you make sentences.,['# ::snt During the exercises you make sentences.\n(s / sentence-01\n      :ARG0 (y / you)\n      :time (e / exercise-02))'],"[s, attr-instance, sentence_01, attr-arg0, [y, attr-instance, you], attr-time, [e, attr-instance, exercise_02]]"
1826,1826,1826,1826,2174,27054,krafttraining,Das sind Wieder-holungen und eine Pause.,9_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=sind 2:=Wieder-holungen 3:=und 4:=eine 5:=Pause.,2,"[[2], [5]]",These are repetitions and a break.,['# ::snt These are repetitions and a break.\n(a / and\n      :op1 (r / repeat-01\n            :ARG1 (t / this))\n      :op2 (b / break-19\n            :ARG1 t))'],"[a, attr-instance, and, attr-op1, [r, attr-instance, repeat_01, attr-arg1, [t, attr-instance, this]], attr-op2, [b, attr-instance, break_19, attr-arg1, t]]"
1827,1827,1827,1827,2180,27060,krafttraining,Beim Kraft-training macht man die Bewegungen langsam.,15_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Beim 1:=Kraft-training 2:=macht 3:=man 4:=die 5:=Bewegungen 6:=langsam.,1,,"When doing strength training, you make movements slowly.","['# ::snt When doing strength training, you make movements slowly.\n(m / move-01\n      :ARG0 (y / you)\n      :ARG1-of (s / slow-05)\n      :condition (t / train-01\n            :ARG0 y\n            :ARG1 (s2 / strong-02)))']","[m, attr-instance, move_01, attr-arg0, [y, attr-instance, you], attr-arg1_of, [s, attr-instance, slow_05], attr-condition, [t, attr-instance, train_01, attr-arg0, y, attr-arg1, [s2, attr-instance, strong_02]]]"
1828,1828,1828,1828,2181,27061,krafttraining,Damit man die Bewegung richtig macht.,16_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Damit 1:=man 2:=die 3:=Bewegung 4:=richtig 5:=macht.,1,,So that you do the movement correctly.,['# ::snt So that you do the movement correctly.\n(c / cause-01\n      :ARG1 (d / do-02\n            :ARG0 (y / you)\n            :ARG1 (m / movement-07)\n            :ARG1-of (c2 / correct-02)))'],"[c, attr-instance, cause_01, attr-arg1, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, movement_07], attr-arg1_of, [c2, attr-instance, correct_02]]]"
1829,1829,1829,1829,2182,27062,krafttraining,Schnelle und falsche Bewegungen können Sport-verletzungen geben.,17_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Schnelle 1:=und 2:=falsche 3:=Bewegungen 4:=können 5:=Sport-verletzungen 6:=geben.,2,"[[0], [2]]",Fast and incorrect movements can cause sports injuries.,['# ::snt Fast and incorrect movements can cause sports injuries.\n(p / possible-01\n      :ARG1 (c / cause-01\n            :ARG0 (m / move-01\n                  :ARG1-of (f / fast-02)\n                  :ARG1-of (c2 / correct-02\n                        :polarity -))\n            :ARG1 (ii / injure-01\n                  :ARG0 m\n                  :ARG1 (s / sport))))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, cause_01, attr-arg0, [m, attr-instance, move_01, attr-arg1_of, [f, attr-instance, fast_02], attr-arg1_of, [c2, attr-instance, correct_02, attr-polarity, negative]], attr-arg1, [ii, attr-instance, injure_01, attr-arg0, m, attr-arg1, [s, attr-instance, sport]]]]"
1830,1830,1830,1830,2183,27063,krafttraining,Vor dem Kraft-training wärmt man die Muskeln auf.,18_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Vor 1:=dem 2:=Kraft-training 3:=wärmt 4:=man 5:=die 6:=Muskeln 7:=auf.,2,"[[0, 2], [3, 4, 6, 7]]","Before strength training, you warm up your muscles.","['# ::snt Before strength training, you warm up your muscles.\n(w / warm-up-02\n      :ARG0 (y / you\n            :part (m / muscle))\n      :ARG1 m\n      :time (b / before\n            :op1 (t / train-01\n                  :ARG1 (s / strong-02))))']","[w, attr-instance, warm_up_02, attr-arg0, [y, attr-instance, you, attr-part, [m, attr-instance, muscle]], attr-arg1, m, attr-time, [b, attr-instance, before, attr-op1, [t, attr-instance, train_01, attr-arg1, [s, attr-instance, strong_02]]]]"
1831,1831,1831,1831,2184,27064,krafttraining,Damit man sich weniger verletzt.,19_long,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Damit 1:=man 2:=sich 3:=weniger 4:=verletzt.,1,,So that you get injured less.,['# ::snt So that you get injured less.\n(ii / infer-01\n      :ARG1 (ii2 / injure-01\n            :ARG1 (y / you)\n            :ARG1-of (h / have-quant-91\n                  :ARG3 (l / less))))'],"[ii, attr-instance, infer_01, attr-arg1, [ii2, attr-instance, injure_01, attr-arg1, [y, attr-instance, you], attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg3, [l, attr-instance, less]]]]"
1832,1832,1832,1832,2185,27065,krafttraining,Beim Kraft-training macht man Bewegungen mit dem Körper.,0_short,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Beim 1:=Kraft-training 2:=macht 3:=man 4:=Bewegungen 5:=mit 6:=dem 7:=Körper.,2,"[[4], [5, 7]]",During strength training you make movements with your body.,['# ::snt During strength training you make movements with your body.\n(m / move-01\n      :ARG0 (y / you)\n      :accompanier (b / body\n            :poss y)\n      :time (t / train-01\n            :ARG1 (s / strong-02)))'],"[m, attr-instance, move_01, attr-arg0, [y, attr-instance, you], attr-accompanier, [b, attr-instance, body, attr-poss, y], attr-time, [t, attr-instance, train_01, attr-arg1, [s, attr-instance, strong_02]]]"
1833,1833,1833,1833,2186,27066,krafttraining,Man kann damit stärker werden.,1_short,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Man 1:=kann 2:=damit 3:=stärker 4:=werden.,1,,It can make you stronger.,['# ::snt It can make you stronger.\n(p / possible-01\n      :ARG1 (m / make-02\n            :ARG0 (ii / it)\n            :ARG1 (h / have-degree-91\n                  :ARG1 (y / you)\n                  :ARG2 (s / strong-02)\n                  :ARG3 (m2 / more))))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, make_02, attr-arg0, [ii, attr-instance, it], attr-arg1, [h, attr-instance, have_degree_91, attr-arg1, [y, attr-instance, you], attr-arg2, [s, attr-instance, strong_02], attr-arg3, [m2, attr-instance, more]]]]"
1834,1834,1834,1834,2187,27067,krafttraining,Und man kann mehr Muskeln bekommen.,2_short,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Und 1:=man 2:=kann 3:=mehr 4:=Muskeln 5:=bekommen.,1,,And you can get more muscles.,['# ::snt And you can get more muscles.\n(a / and\n      :op2 (p / possible-01\n            :ARG1 (g / get-01\n                  :ARG0 (y / you)\n                  :ARG1 (m / muscle\n                        :quant (m2 / more)))))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, possible_01, attr-arg1, [g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, muscle, attr-quant, [m2, attr-instance, more]]]]]"
1835,1835,1835,1835,2188,27068,krafttraining,Eine bekannte Übung sind Knie-beugen.,3_short,Sport|Seiten_mit_defekten_Dateilinks,2019-10-28T08:05:49Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=bekannte 2:=Übung 3:=sind 4:=Knie-beugen.,1,,A well-known exercise is knee bends.,['# ::snt A well-known exercise is knee bends.\n(e / exercise-02\n      :ARG1 (b / bend-01\n            :ARG1 (k / knee))\n      :ARG1-of (k2 / know-02\n            :degree (w / well)))'],"[e, attr-instance, exercise_02, attr-arg1, [b, attr-instance, bend_01, attr-arg1, [k, attr-instance, knee]], attr-arg1_of, [k2, attr-instance, know_02, attr-degree, [w, attr-instance, well]]]"
1836,1836,1836,1836,2189,27069,krankenkasse,Bei einer Kranken-kasse kann man Mitglied werden.,0_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Bei 1:=einer 2:=Kranken-kasse 3:=kann 4:=man 5:=Mitglied 6:=werden.,1,,You can become a member of a health insurance company.,['# ::snt You can become a member of a health insurance company.\n(p / possible-01\n      :ARG1 (b / become-01\n            :ARG1 (y / you)\n            :ARG2 (m / member\n                  :ARG2-of (ii / include-91\n                        :ARG1 (c / company\n                              :ARG0-of (ii2 / insure-02\n                                    :ARG1 (h / health)))))))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, become_01, attr-arg1, [y, attr-instance, you], attr-arg2, [m, attr-instance, member, attr-arg2_of, [ii, attr-instance, include_91, attr-arg1, [c, attr-instance, company, attr-arg0_of, [ii2, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]]]]]]"
1837,1837,1837,1837,2190,27070,krankenkasse,Die Mitglieder müssen Geld zahlen.,1_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Mitglieder 2:=müssen 3:=Geld 4:=zahlen.,1,,The members have to pay money.,['# ::snt The members have to pay money.\n(o / obligate-01\n      :ARG2 (p / pay-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG2 (m / member)))\n            :ARG1 (m2 / money)))'],"[o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, pay_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [m, attr-instance, member]]], attr-arg1, [m2, attr-instance, money]]]"
1838,1838,1838,1838,2191,27072,krankenkasse,"Wer wenig Geld hat, muss weniger Mitglieds-beitrag zahlen.",3_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,"0:=Wer 1:=wenig 2:=Geld 3:=hat, 4:=muss 5:=weniger 6:=Mitglieds-beitrag 7:=zahlen.",2,"[[0, 1, 2, 3], [4, 5, 6, 7]]",Those who have little money have to pay less membership fee.,['# ::snt Those who have little money have to pay less membership fee.\n(o / obligate-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-03\n                  :ARG1 (m / money\n                        :quant (l / little))))\n      :ARG2 (p2 / pay-01\n            :ARG0 p\n            :ARG1 (f / fee\n                  :mod (m2 / membership)\n                  :quant (l2 / less))))'],"[o, attr-instance, obligate_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [m, attr-instance, money, attr-quant, [l, attr-instance, little]]]], attr-arg2, [p2, attr-instance, pay_01, attr-arg0, p, attr-arg1, [f, attr-instance, fee, attr-mod, [m2, attr-instance, membership], attr-quant, [l2, attr-instance, less]]]]"
1839,1839,1839,1839,2192,27073,krankenkasse,"Wer mehr Geld hat, muss mehr Mitglieds-beitrag zahlen.",4_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,"0:=Wer 1:=mehr 2:=Geld 3:=hat, 4:=muss 5:=mehr 6:=Mitglieds-beitrag 7:=zahlen.",2,"[[0, 1, 2, 3], [4, 5, 6, 7]]",Those who have more money have to pay more membership fees.,['# ::snt Those who have more money have to pay more membership fees.\n(o / obligate-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-03\n                  :ARG1 (m / money\n                        :quant (m2 / more))))\n      :ARG2 (p2 / pay-01\n            :ARG0 p\n            :ARG3 (f / fee\n                  :mod (m3 / membership)\n                  :quant (m4 / more))))'],"[o, attr-instance, obligate_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [m, attr-instance, money, attr-quant, [m2, attr-instance, more]]]], attr-arg2, [p2, attr-instance, pay_01, attr-arg0, p, attr-arg3, [f, attr-instance, fee, attr-mod, [m3, attr-instance, membership], attr-quant, [m4, attr-instance, more]]]]"
1840,1840,1840,1840,2193,27074,krankenkasse,Es gibt ein Gesetz.,5_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Es 1:=gibt 2:=ein 3:=Gesetz.,1,,There is a law.,['# ::snt There is a law.\n(l / law)'],"[l, attr-instance, law]"
1841,1841,1841,1841,2194,27075,krankenkasse,"Im Gesetz steht,  \newline was die Kranken-versicherung alles zahlen muss.",6_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,"0:=Im 1:=Gesetz 2:=steht, 3:= 4:=\newline 5:=was 6:=die 7:=Kranken-versicherung 8:=alles 9:=zahlen 10:=muss.",2,"[[0, 1, 2], [5, 7, 8, 9, 10]]",The law states \newline what the health insurance has to pay.,['# ::snt The law states \\newline what the health insurance has to pay.\n(s / state-01\n      :ARG0 (l / law)\n      :ARG1 (l2 / line-01\n            :ARG1 (o / obligate-01\n                  :ARG2 (p / pay-01\n                        :ARG1 (ii / insure-02\n                              :ARG1 (h / health))))))'],"[s, attr-instance, state_01, attr-arg0, [l, attr-instance, law], attr-arg1, [l2, attr-instance, line_01, attr-arg1, [o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, pay_01, attr-arg1, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]]]]]"
1842,1842,1842,1842,2195,27076,krankenkasse,Die Kranken-kasse zahlt die Rechnungen der Mitglieder.,7_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-kasse 2:=zahlt 3:=die 4:=Rechnungen 5:=der 6:=Mitglieder.,1,,The health insurance company pays the members’ bills.,['# ::snt The health insurance company pays the members’ bills.\n(p / pay-01\n      :ARG0 (c / company\n            :ARG0-of (ii / insure-02\n                  :ARG1 (h / health)))\n      :ARG1 (b / bill-01\n            :ARG2 (m / member)))'],"[p, attr-instance, pay_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]], attr-arg1, [b, attr-instance, bill_01, attr-arg2, [m, attr-instance, member]]]"
1843,1843,1843,1843,2196,27077,krankenkasse,Die Kranken-kasse zahlt zum Beispiel für: • den Arzt,8_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-kasse 2:=zahlt 3:=zum 4:=Beispiel 5:=für: 6:=• 7:=den 8:=Arzt,1,,The health insurance company pays for example for: • the doctor,['# ::snt The health insurance company pays for example for: • the doctor\n(p / pay-01\n      :ARG0 (c / company\n            :ARG0-of (ii / insure-02\n                  :ARG1 (h / health)))\n      :ARG2 (e / exemplify-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h2 / have-rel-role-91\n                        :ARG2 (d / doctor)))))'],"[p, attr-instance, pay_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]], attr-arg2, [e, attr-instance, exemplify_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg2, [d, attr-instance, doctor]]]]]"
1844,1844,1844,1844,2197,27078,krankenkasse,Die Kranken-kasse zahlt zum Beispiel für: • den Zahn-arzt,9_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-kasse 2:=zahlt 3:=zum 4:=Beispiel 5:=für: 6:=• 7:=den 8:=Zahn-arzt,1,,The health insurance pays for example for: • the dentist,['# ::snt The health insurance pays for example for: • the dentist\n(p / pay-01\n      :ARG0 (ii / insure-02\n            :ARG1 (h / health))\n      :example (e / exemplify-01\n            :ARG0 (d / dentist)))'],"[p, attr-instance, pay_01, attr-arg0, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]], attr-example, [e, attr-instance, exemplify_01, attr-arg0, [d, attr-instance, dentist]]]"
1845,1845,1845,1845,2198,27079,krankenkasse,Die Kranken-kasse zahlt zum Beispiel für: • für das Kranken-haus,10_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-kasse 2:=zahlt 3:=zum 4:=Beispiel 5:=für: 6:=• 7:=für 8:=das 9:=Kranken-haus,1,,"The health insurance pays, for example, for: • for the hospital","['# ::snt The health insurance pays, for example, for: • for the hospital\n(p / pay-01\n      :ARG0 (ii / insure-02\n            :ARG1 (h / health))\n      :ARG3 (h2 / hospital)\n      :ARG0-of (e / exemplify-01))']","[p, attr-instance, pay_01, attr-arg0, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]], attr-arg3, [h2, attr-instance, hospital], attr-arg0_of, [e, attr-instance, exemplify_01]]"
1846,1846,1846,1846,2199,27080,krankenkasse,Die Kranken-kasse zahlt zum Beispiel für: • Medikamente,11_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-kasse 2:=zahlt 3:=zum 4:=Beispiel 5:=für: 6:=• 7:=Medikamente,1,,The health insurance company pays for example for: • Medicines,['# ::snt The health insurance company pays for example for: • Medicines\n(p / pay-01\n      :ARG0 (c / company\n            :ARG0-of (ii / insure-02\n                  :ARG1 (h / health)))\n      :example (m / medicine))'],"[p, attr-instance, pay_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]], attr-example, [m, attr-instance, medicine]]"
1847,1847,1847,1847,2200,27081,krankenkasse,Die Kranken-kasse zahlt zum Beispiel für: • die Therapie,12_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-kasse 2:=zahlt 3:=zum 4:=Beispiel 5:=für: 6:=• 7:=die 8:=Therapie,1,,The health insurance company pays for example for: • therapy,['# ::snt The health insurance company pays for example for: • therapy\n(p / pay-01\n      :ARG0 (c / company\n            :ARG0-of (ii / insure-02\n                  :ARG1 (h / health)))\n      :ARG3 (e / exemplify-01\n            :ARG0 (t / therapy)))'],"[p, attr-instance, pay_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]], attr-arg3, [e, attr-instance, exemplify_01, attr-arg0, [t, attr-instance, therapy]]]"
1848,1848,1848,1848,2201,27082,krankenkasse,Die Kranken-kasse zahlt zum Beispiel für: • die Reha,13_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-kasse 2:=zahlt 3:=zum 4:=Beispiel 5:=für: 6:=• 7:=die 8:=Reha,1,,The health insurance pays for example for: • rehabilitation,['# ::snt The health insurance pays for example for: • rehabilitation\n(p / pay-01\n      :ARG0 (ii / insure-02\n            :ARG1 (h / health))\n      :ARG3 (e / exemplify-01\n            :ARG0 (r / rehabilitate-01)))'],"[p, attr-instance, pay_01, attr-arg0, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]], attr-arg3, [e, attr-instance, exemplify_01, attr-arg0, [r, attr-instance, rehabilitate_01]]]"
1849,1849,1849,1849,2202,27083,krankenkasse,Die Kranken-kasse zahlt zum Beispiel für: • eine Brille,14_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-kasse 2:=zahlt 3:=zum 4:=Beispiel 5:=für: 6:=• 7:=eine 8:=Brille,1,,The health insurance company pays for example for: • glasses,['# ::snt The health insurance company pays for example for: • glasses\n(e / exemplify-01\n      :ARG0 (p / pay-01\n            :ARG0 (c / company\n                  :ARG0-of (ii / insure-02\n                        :ARG1 (h / health)))\n            :ARG3 (g / glasses)))'],"[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, pay_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]], attr-arg3, [g, attr-instance, glasses]]]"
1850,1850,1850,1850,2203,27084,krankenkasse,Manchmal müssen die Mitglieder Geld dazu geben.,15_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Manchmal 1:=müssen 2:=die 3:=Mitglieder 4:=Geld 5:=dazu 6:=geben.,1,,Sometimes members have to contribute money.,['# ::snt Sometimes members have to contribute money.\n(o / obligate-01\n      :ARG1 (m / member)\n      :ARG2 (c / contribute-01\n            :ARG0 m\n            :ARG1 (m2 / money))\n      :frequency (s / sometimes))'],"[o, attr-instance, obligate_01, attr-arg1, [m, attr-instance, member], attr-arg2, [c, attr-instance, contribute_01, attr-arg0, m, attr-arg1, [m2, attr-instance, money]], attr-frequency, [s, attr-instance, sometimes]]"
1851,1851,1851,1851,2204,27085,krankenkasse,In Deutschland sagen die Leute zu dem Geld Eigen-anteil.,16_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=In 1:=Deutschland 2:=sagen 3:=die 4:=Leute 5:=zu 6:=dem 7:=Geld 8:=Eigen-anteil.,2,"[[0, 1], [2, 4, 5, 7, 8]]","In Germany, people call this money their own contribution.","['# ::snt In Germany, people call this money their own contribution.\n(c / call-01\n      :ARG0 (p / person)\n      :ARG1 (m / money\n            :mod (t / this))\n      :ARG2 (c2 / contribute-01\n            :ARG0 p)\n      :location (c3 / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[c, attr-instance, call_01, attr-arg0, [p, attr-instance, person], attr-arg1, [m, attr-instance, money, attr-mod, [t, attr-instance, this]], attr-arg2, [c2, attr-instance, contribute_01, attr-arg0, p], attr-location, [c3, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
1852,1852,1852,1852,2205,27087,krankenkasse,In der Schweiz sagen die Leute zu dem Geld Franchise.,18_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=In 1:=der 2:=Schweiz 3:=sagen 4:=die 5:=Leute 6:=zu 7:=dem 8:=Geld 9:=Franchise.,2,"[[0, 2], [3, 5, 6, 8, 9]]",In Switzerland people call the money franchise.,"['# ::snt In Switzerland people call the money franchise.\n(c / call-01\n      :ARG0 (p / person)\n      :ARG1 (f / franchise-01\n            :ARG1 (m / money))\n      :location (c2 / country\n            :name (n / name\n                  :op1 ""Switzerland"")))']","[c, attr-instance, call_01, attr-arg0, [p, attr-instance, person], attr-arg1, [f, attr-instance, franchise_01, attr-arg1, [m, attr-instance, money]], attr-location, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""switzerland""]]]"
1853,1853,1853,1853,2206,27088,krankenkasse,Die Mitglieder bekommen eine Kranken-versicherungs-karte.,19_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Mitglieder 2:=bekommen 3:=eine 4:=Kranken-versicherungs-karte.,1,,Members receive a health insurance card.,['# ::snt Members receive a health insurance card.\n(r / receive-01\n      :ARG0 (m / member)\n      :ARG1 (c / card\n            :mod (ii / insure-02\n                  :ARG1 (h / health))))'],"[r, attr-instance, receive_01, attr-arg0, [m, attr-instance, member], attr-arg1, [c, attr-instance, card, attr-mod, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]]]"
1854,1854,1854,1854,2207,27089,krankenkasse,In Deutschland gibt es die Elektronische Gesundheits-karte.,20_long,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=In 1:=Deutschland 2:=gibt 3:=es 4:=die 5:=Elektronische 6:=Gesundheits-karte.,2,"[[0, 1], [2, 3, 5, 6]]",In Germany there is the electronic health card.,"['# ::snt In Germany there is the electronic health card.\n(c / card\n      :mod (h / health)\n      :mod (e / electronic)\n      :location (c2 / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[c, attr-instance, card, attr-mod, [h, attr-instance, health], attr-mod, [e, attr-instance, electronic], attr-location, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
1855,1855,1855,1855,2210,27092,krankenkasse,Eine Kranken-kasse ist eine Firma.,0_short,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Eine 1:=Kranken-kasse 2:=ist 3:=eine 4:=Firma.,1,,A health insurance company is a company.,['# ::snt A health insurance company is a company.\n(c / company\n      :ARG0-of (ii / insure-02\n            :ARG1 (h / health))\n      :domain (c2 / company))'],"[c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]], attr-domain, [c2, attr-instance, company]]"
1856,1856,1856,1856,2212,27094,krankenkasse,Die Kranken-kasse hilft Leuten.,2_short,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-kasse 2:=hilft 3:=Leuten.,1,,The health insurance company helps people.,['# ::snt The health insurance company helps people.\n(h / help-01\n      :ARG0 (c / company\n            :ARG0-of (ii / insure-02\n                  :ARG1 (h2 / health)))\n      :ARG2 (p / person))'],"[h, attr-instance, help_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h2, attr-instance, health]]], attr-arg2, [p, attr-instance, person]]"
1857,1857,1857,1857,2213,27095,krankenkasse,Die Leute müssen Mitglied bei der Kranken-kasse sein.,3_short,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Leute 2:=müssen 3:=Mitglied 4:=bei 5:=der 6:=Kranken-kasse 7:=sein.,2,"[[1, 2, 3, 7], [4, 6]]",People have to be members of the health insurance fund.,['# ::snt People have to be members of the health insurance fund.\n(o / obligate-01\n      :ARG2 (h / have-org-role-91\n            :ARG0 (p / person)\n            :ARG1 (f / fund-01\n                  :ARG1 (ii / insure-02\n                        :ARG1 (h2 / health)))\n            :ARG2 (m / member)))'],"[o, attr-instance, obligate_01, attr-arg2, [h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person], attr-arg1, [f, attr-instance, fund_01, attr-arg1, [ii, attr-instance, insure_02, attr-arg1, [h2, attr-instance, health]]], attr-arg2, [m, attr-instance, member]]]"
1858,1858,1858,1858,2214,27096,krankenkasse,Dann zahlt die Kranken-kasse manche Rechnungen.,4_short,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Dann 1:=zahlt 2:=die 3:=Kranken-kasse 4:=manche 5:=Rechnungen.,1,,Then the health insurance company pays some bills.,['# ::snt Then the health insurance company pays some bills.\n(p / pay-01\n      :ARG0 (c / company\n            :ARG0-of (ii / insure-02\n                  :ARG1 (h / health)))\n      :ARG1 (b / bill-01\n            :quant (s / some))\n      :time (t / then))'],"[p, attr-instance, pay_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]], attr-arg1, [b, attr-instance, bill_01, attr-quant, [s, attr-instance, some]], attr-time, [t, attr-instance, then]]"
1859,1859,1859,1859,2216,27098,krankenkasse,Es ist ein Schutz wenn man krank ist.,6_short,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Es 1:=ist 2:=ein 3:=Schutz 4:=wenn 5:=man 6:=krank 7:=ist.,2,"[[0, 1, 3], [4, 5, 6, 7]]",It is a protection when you are sick.,['# ::snt It is a protection when you are sick.\n(p / protect-01\n      :ARG0 (ii / it)\n      :time (s / sick-05\n            :ARG1 (y / you)))'],"[p, attr-instance, protect_01, attr-arg0, [ii, attr-instance, it], attr-time, [s, attr-instance, sick_05, attr-arg1, [y, attr-instance, you]]]"
1860,1860,1860,1860,2217,27099,krankenkasse,Oder wenn man einen Unfall hat.,7_short,Gesundheit|Recht_und_Gesetz|Seiten_mit_defekten_Dateilinks,2020-08-04T13:39:48Z,cfbe77d115cd524def4ccbe596a54842,0:=Oder 1:=wenn 2:=man 3:=einen 4:=Unfall 5:=hat.,1,,Or if you have an accident.,['# ::snt Or if you have an accident.\n(o / or\n      :op2 (h / have-condition-91\n            :ARG2 (a / accident\n                  :domain (y / you))))'],"[o, attr-instance, or, attr-op2, [h, attr-instance, have_condition_91, attr-arg2, [a, attr-instance, accident, attr-domain, [y, attr-instance, you]]]]"
1861,1861,1861,1861,2219,27101,krankenversicherungskarte,Auf der KVK sind verschiedene Daten gespeichert.,1_long,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Auf 1:=der 2:=KVK 3:=sind 4:=verschiedene 5:=Daten 6:=gespeichert.,1,,Various data is stored on the KVK.,"['# ::snt Various data is stored on the KVK.\n(s / store-01\n      :ARG1 (d / data\n            :mod (v / various))\n      :ARG2 (f / facility\n            :name (n / name\n                  :op1 ""KVK"")))']","[s, attr-instance, store_01, attr-arg1, [d, attr-instance, data, attr-mod, [v, attr-instance, various]], attr-arg2, [f, attr-instance, facility, attr-name, [n, attr-instance, name, attr-op1, ""kvk""]]]"
1862,1862,1862,1862,2220,27102,krankenversicherungskarte,Zum Beispiel: • Von welcher Kranken-kasse die Karte ist,2_long,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Zum 1:=Beispiel: 2:=• 3:=Von 4:=welcher 5:=Kranken-kasse 6:=die 7:=Karte 8:=ist,1,,For example: • Which health insurance company the card is from,['# ::snt For example: • Which health insurance company the card is from\n(e / exemplify-01\n      :ARG0 (c / company\n            :ARG0-of (ii / insure-02\n                  :ARG1 (h / health))\n            :source-of (c2 / card)\n            :mod (a / amr-unknown)))'],"[e, attr-instance, exemplify_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]], attr-source_of, [c2, attr-instance, card], attr-mod, [a, attr-instance, amr_unknown]]]"
1863,1863,1863,1863,2225,27107,krankenversicherungskarte,Mit der KVK kann man zum Arzt gehen.,7_long,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Mit 1:=der 2:=KVK 3:=kann 4:=man 5:=zum 6:=Arzt 7:=gehen.,1,,With the KVK you can go to the doctor.,"['# ::snt With the KVK you can go to the doctor.\n(p / possible-01\n      :ARG1 (g / go-02\n            :ARG0 (y / you)\n            :ARG4 (d / doctor))\n      :ARG1-of (c / cause-01\n            :ARG0 (l / law\n                  :name (n / name\n                        :op1 ""KVK""))))']","[p, attr-instance, possible_01, attr-arg1, [g, attr-instance, go_02, attr-arg0, [y, attr-instance, you], attr-arg4, [d, attr-instance, doctor]], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""kvk""]]]]"
1864,1864,1864,1864,2226,27108,krankenversicherungskarte,Der Arzt kann die Daten auf der Karte lesen.,8_long,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Der 1:=Arzt 2:=kann 3:=die 4:=Daten 5:=auf 6:=der 7:=Karte 8:=lesen.,2,"[[1, 2, 8], [5, 7]]",The doctor can read the data on the card.,['# ::snt The doctor can read the data on the card.\n(p / possible-01\n      :ARG1 (r / read-01\n            :ARG0 (d / doctor)\n            :ARG1 (d2 / data\n                  :location (c / card))))'],"[p, attr-instance, possible_01, attr-arg1, [r, attr-instance, read_01, attr-arg0, [d, attr-instance, doctor], attr-arg1, [d2, attr-instance, data, attr-location, [c, attr-instance, card]]]]"
1865,1865,1865,1865,2227,27109,krankenversicherungskarte,Der Arzt kann dann seine Rechnung an die Kranken-kasse schicken.,9_long,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Der 1:=Arzt 2:=kann 3:=dann 4:=seine 5:=Rechnung 6:=an 7:=die 8:=Kranken-kasse 9:=schicken.,2,"[[1, 2, 3, 4, 5, 9], [6, 8]]",The doctor can then send his bill to the health insurance company.,['# ::snt The doctor can then send his bill to the health insurance company.\n(p / possible-01\n      :ARG1 (s / send-01\n            :ARG0 (d / doctor)\n            :ARG1 (b / bill\n                  :poss d)\n            :ARG2 (c / company\n                  :ARG0-of (ii / insure-02\n                        :ARG1 (h / health)))\n            :time (t / then)))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, send_01, attr-arg0, [d, attr-instance, doctor], attr-arg1, [b, attr-instance, bill, attr-poss, d], attr-arg2, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]], attr-time, [t, attr-instance, then]]]"
1866,1866,1866,1866,2228,27110,krankenversicherungskarte,Die KVK soll abgeschafft werden.,10_long,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=KVK 2:=soll 3:=abgeschafft 4:=werden.,1,,The KVK should be abolished.,"['# ::snt The KVK should be abolished.\n(r / recommend-01\n      :ARG1 (a / abolish-01\n            :ARG1 (o / organization\n                  :name (n / name\n                        :op1 ""KVK""))))']","[r, attr-instance, recommend_01, attr-arg1, [a, attr-instance, abolish_01, attr-arg1, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""kvk""]]]]"
1867,1867,1867,1867,2229,27111,krankenversicherungskarte,Dann soll es eine andere Chip-Karte geben.,11_long,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Dann 1:=soll 2:=es 3:=eine 4:=andere 5:=Chip-Karte 6:=geben.,1,,Then there should be another chip card.,['# ::snt Then there should be another chip card.\n(ii / infer-01\n      :ARG1 (r / recommend-01\n            :ARG1 (c / card\n                  :mod (c2 / chip)\n                  :mod (a / another))))'],"[ii, attr-instance, infer_01, attr-arg1, [r, attr-instance, recommend_01, attr-arg1, [c, attr-instance, card, attr-mod, [c2, attr-instance, chip], attr-mod, [a, attr-instance, another]]]]"
1868,1868,1868,1868,2231,27113,krankenversicherungskarte,Auf dieser Karte können mehr Daten gespeichert werden.,13_long,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Auf 1:=dieser 2:=Karte 3:=können 4:=mehr 5:=Daten 6:=gespeichert 7:=werden.,2,"[[0, 2], [3, 4, 5, 6, 7]]",More data can be stored on this card.,['# ::snt More data can be stored on this card.\n(p / possible-01\n      :ARG1 (s / store-01\n            :ARG1 (d / data\n                  :quant (m / more))\n            :ARG2 (c / card\n                  :mod (t / this))))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, store_01, attr-arg1, [d, attr-instance, data, attr-quant, [m, attr-instance, more]], attr-arg2, [c, attr-instance, card, attr-mod, [t, attr-instance, this]]]]"
1869,1869,1869,1869,2232,27114,krankenversicherungskarte,Die Kranken-versicherungs-karte ist eine Chip Karte.,0_short,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Kranken-versicherungs-karte 2:=ist 3:=eine 4:=Chip 5:=Karte.,1,,The health insurance card is a chip card.,['# ::snt The health insurance card is a chip card.\n(c / card\n      :mod (c2 / chip)\n      :domain (c3 / card\n            :ARG0-of (ii / insure-02\n                  :ARG1 (h / health))))'],"[c, attr-instance, card, attr-mod, [c2, attr-instance, chip], attr-domain, [c3, attr-instance, card, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]]]"
1870,1870,1870,1870,2233,27115,krankenversicherungskarte,Diese Karte gibt es in Deutschland.,1_short,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Diese 1:=Karte 2:=gibt 3:=es 4:=in 5:=Deutschland.,1,,This card is available in Germany.,"['# ::snt This card is available in Germany.\n(a / available-02\n      :ARG2 (c / card\n            :mod (t / this))\n      :location (c2 / country\n            :name (n / name\n                  :op1 ""Germany"")))']","[a, attr-instance, available_02, attr-arg2, [c, attr-instance, card, attr-mod, [t, attr-instance, this]], attr-location, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
1871,1871,1871,1871,2234,27116,krankenversicherungskarte,Die Menschen in Deutschland bekommen die Karte von ihrer Kranken-versicherung.,2_short,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Menschen 2:=in 3:=Deutschland 4:=bekommen 5:=die 6:=Karte 7:=von 8:=ihrer 9:=Kranken-versicherung.,3,"[[1, 2, 3], [1, 4, 6], [4, 7, 8, 9]]",People in Germany get the card from their health insurance.,"['# ::snt People in Germany get the card from their health insurance.\n(g / get-01\n      :ARG0 (p / person\n            :location (c / country\n                  :name (n / name\n                        :op1 ""Germany"")))\n      :ARG1 (c2 / card)\n      :ARG2 (ii / insure-02\n            :ARG1 (h / health)\n            :ARG3 p))']","[g, attr-instance, get_01, attr-arg0, [p, attr-instance, person, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]], attr-arg1, [c2, attr-instance, card], attr-arg2, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health], attr-arg3, p]]"
1872,1872,1872,1872,2235,27117,krankenversicherungskarte,In Österreich gibt es eine ähnliche Karte.,3_short,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=In 1:=Österreich 2:=gibt 3:=es 4:=eine 5:=ähnliche 6:=Karte.,1,,There is a similar map in Austria.,"['# ::snt There is a similar map in Austria.\n(m / map\n      :ARG1-of (r / resemble-01)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Austria"")))']","[m, attr-instance, map, attr-arg1_of, [r, attr-instance, resemble_01], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""austria""]]]"
1873,1873,1873,1873,2236,27118,krankenversicherungskarte,In Österreich heißt die Karte: e-card,4_short,Ohne_Kategorie,2014-06-26T07:56:07Z,cfbe77d115cd524def4ccbe596a54842,0:=In 1:=Österreich 2:=heißt 3:=die 4:=Karte: 5:=e-card,1,,In Austria the card is called: e-card,"['# ::snt In Austria the card is called: e-card\n(c / call-01\n      :ARG1 (c2 / card)\n      :ARG2 (c3 / card\n            :mod (e / electronics))\n      :location (c4 / country\n            :name (n / name\n                  :op1 ""Austria"")))']","[c, attr-instance, call_01, attr-arg1, [c2, attr-instance, card], attr-arg2, [c3, attr-instance, card, attr-mod, [e, attr-instance, electronics]], attr-location, [c4, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""austria""]]]"
1874,1874,1874,1874,2237,27119,krankenversicherung,"Wenn du krank bist,  \newline dann gehst du vielleicht zum Arzt.",0_long,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,"0:=Wenn 1:=du 2:=krank 3:=bist, 4:= 5:=\newline 6:=dann 7:=gehst 8:=du 9:=vielleicht 10:=zum 11:=Arzt.",2,"[[0, 1, 2, 3], [6, 7, 8, 9, 10, 11]]","If you are sick, \newline then you might go to the doctor.","['# ::snt If you are sick, \\newline then you might go to the doctor.\n(h / have-condition-91\n      :ARG1 (p / possible-01\n            :ARG1 (g / go-02\n                  :ARG0 (y / you)\n                  :ARG4 (d / doctor)))\n      :ARG2 (s / sick-05\n            :ARG1 y)\n      :mod (c / company\n            :name (n / name\n                  :op1 ""Newline"")))']","[h, attr-instance, have_condition_91, attr-arg1, [p, attr-instance, possible_01, attr-arg1, [g, attr-instance, go_02, attr-arg0, [y, attr-instance, you], attr-arg4, [d, attr-instance, doctor]]], attr-arg2, [s, attr-instance, sick_05, attr-arg1, y], attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]]"
1875,1875,1875,1875,2238,27120,krankenversicherung,Du gibst beim Arzt deine Kranken-versicherungs-karte ab  \newline und der Arzt behandelt dich.,1_long,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=gibst 2:=beim 3:=Arzt 4:=deine 5:=Kranken-versicherungs-karte 6:=ab 7:= 8:=\newline 9:=und 10:=der 11:=Arzt 12:=behandelt 13:=dich.,3,"[[0, 1, 4, 5, 6], [2, 3], [11, 12, 13]]",You give your health insurance card to the doctor \newline and the doctor treats you.,"['# ::snt You give your health insurance card to the doctor \\newline and the doctor treats you.\n(a / and\n      :op1 (g / give-01\n            :ARG0 (y / you)\n            :ARG1 (c / card\n                  :mod (ii / insure-02\n                        :ARG1 (h / health)\n                        :ARG3 y))\n            :ARG2 (d / doctor\n                  :name (n / name\n                        :op1 ""Newline"")))\n      :op2 (t / treat-03\n            :ARG0 d\n            :ARG1 y))']","[a, attr-instance, and, attr-op1, [g, attr-instance, give_01, attr-arg0, [y, attr-instance, you], attr-arg1, [c, attr-instance, card, attr-mod, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health], attr-arg3, y]], attr-arg2, [d, attr-instance, doctor, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]], attr-op2, [t, attr-instance, treat_03, attr-arg0, d, attr-arg1, y]]"
1876,1876,1876,1876,2239,27121,krankenversicherung,Du musst für die Behandlung nichts zahlen.,2_long,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=musst 2:=für 3:=die 4:=Behandlung 5:=nichts 6:=zahlen.,1,,You don't have to pay anything for the treatment.,"[""# ::snt You don't have to pay anything for the treatment.\n(o / obligate-01\n      :polarity -\n      :ARG1 (y / you)\n      :ARG2 (p / pay-01\n            :ARG0 y\n            :ARG1 (a / anything)\n            :ARG3 (t / treat-03\n                  :ARG1 y)))""]","[o, attr-instance, obligate_01, attr-polarity, negative, attr-arg1, [y, attr-instance, you], attr-arg2, [p, attr-instance, pay_01, attr-arg0, y, attr-arg1, [a, attr-instance, anything], attr-arg3, [t, attr-instance, treat_03, attr-arg1, y]]]"
1877,1877,1877,1877,2240,27122,krankenversicherung,Deine Kranken-versicherung zahlt die Behandlung.,3_long,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,0:=Deine 1:=Kranken-versicherung 2:=zahlt 3:=die 4:=Behandlung.,1,,Your health insurance will pay for the treatment.,['# ::snt Your health insurance will pay for the treatment.\n(p / pay-01\n      :ARG0 (ii / insure-02\n            :ARG1 (h / health)\n            :ARG3 (y / you))\n      :ARG3 (t / treat-03))'],"[p, attr-instance, pay_01, attr-arg0, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health], attr-arg3, [y, attr-instance, you]], attr-arg3, [t, attr-instance, treat_03]]"
1878,1878,1878,1878,2241,27123,krankenversicherung,"Wenn du arbeiten gehst,  \newline dann zahlen zwei Personen deine Kranken-versicherung:  \newline dein Chef und du.",4_long,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,"0:=Wenn 1:=du 2:=arbeiten 3:=gehst, 4:= 5:=\newline 6:=dann 7:=zahlen 8:=zwei 9:=Personen 10:=deine 11:=Kranken-versicherung: 12:= 13:=\newline 14:=dein 15:=Chef 16:=und 17:=du.",4,"[[0, 1, 2, 3], [6, 7, 8, 9, 10, 11], [7, 14, 15], [7, 17]]","When you go to work, \newline two people pay for your health insurance: \newline your boss and you.","['# ::snt When you go to work, \\newline two people pay for your health insurance:\n(p / pay-01\n      :ARG0 (p2 / person\n            :quant 2\n            :mod (c / company\n                  :name (n / name\n                        :op1 ""Newline"")))\n      :ARG3 (ii / insure-02\n            :ARG1 (h / health)\n            :ARG3 (y / you))\n      :time (g / go-02\n            :ARG0 y\n            :ARG4 (w / work-01\n                  :ARG0 y)))', '# ::snt \\newline your boss and you.\n(n / newline-00\n      :ARG1 (a / and\n            :op1 (p / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 (y / you)\n                        :ARG2 (b / boss)))\n            :op2 y))']","[p, attr-instance, pay_01, attr-arg0, [p2, attr-instance, person, attr-quant, 2, attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]], attr-arg3, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health], attr-arg3, [y, attr-instance, you]], attr-time, [g, attr-instance, go_02, attr-arg0, y, attr-arg4, [w, attr-instance, work_01, attr-arg0, y]]]"
1879,1879,1879,1879,2242,27124,krankenversicherung,Dein Chef zahlt die Hälfte vom Geld für deine Kranken-versicherung.,5_long,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,0:=Dein 1:=Chef 2:=zahlt 3:=die 4:=Hälfte 5:=vom 6:=Geld 7:=für 8:=deine 9:=Kranken-versicherung.,2,"[[0, 1, 2, 4, 5, 6], [7, 8, 9]]",Your boss pays half of the money for your health insurance.,"['# ::snt Your boss pays half of the money for your health insurance.\n(p / pay-01\n      :ARG0 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (y / you)\n                  :ARG2 (b / boss)))\n      :ARG1 (m / monetary-quantity\n            :ARG1-of (ii / include-91\n                  :ARG2 (m2 / money)\n                  :ARG3 ""1/2""))\n      :ARG3 (ii2 / insure-02\n            :ARG1 (h2 / health)\n            :ARG3 y))']","[p, attr-instance, pay_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, [y, attr-instance, you], attr-arg2, [b, attr-instance, boss]]], attr-arg1, [m, attr-instance, monetary_quantity, attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [m2, attr-instance, money], attr-arg3, ""1attr-instance2""]], attr-arg3, [ii2, attr-instance, insure_02, attr-arg1, [h2, attr-instance, health], attr-arg3, y]]"
1880,1880,1880,1880,2243,27125,krankenversicherung,Du zahlst die andere Hälfte vom Geld für deine Kranken-versicherung.,6_long,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=zahlst 2:=die 3:=andere 4:=Hälfte 5:=vom 6:=Geld 7:=für 8:=deine 9:=Kranken-versicherung.,2,"[[0, 1, 2, 3, 4, 5, 6], [7, 8, 9]]",You pay the other half of the money for your health insurance.,['# ::snt You pay the other half of the money for your health insurance.\n(p / pay-01\n      :ARG0 (y / you)\n      :ARG1 (h / half\n            :mod (o / other)\n            :ARG1-of (ii / include-91\n                  :ARG2 (m / money)))\n      :ARG3 (ii2 / insure-02\n            :ARG1 (h2 / health)\n            :ARG3 y))'],"[p, attr-instance, pay_01, attr-arg0, [y, attr-instance, you], attr-arg1, [h, attr-instance, half, attr-mod, [o, attr-instance, other], attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [m, attr-instance, money]]], attr-arg3, [ii2, attr-instance, insure_02, attr-arg1, [h2, attr-instance, health], attr-arg3, y]]"
1881,1881,1881,1881,2244,27126,krankenversicherung,Eine Kranken-versicherung ist eine Ab-sicherung.,0_short,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,0:=Eine 1:=Kranken-versicherung 2:=ist 3:=eine 4:=Ab-sicherung.,1,,Health insurance is a form of protection.,['# ::snt Health insurance is a form of protection.\n(f / form\n      :ARG0-of (p / protect-01)\n      :domain (ii / insure-02\n            :ARG1 (h / health)))'],"[f, attr-instance, form, attr-arg0_of, [p, attr-instance, protect_01], attr-domain, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]]"
1882,1882,1882,1882,2245,27127,krankenversicherung,Es ist eine Ab-sicherung gegen krank sein.,1_short,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,0:=Es 1:=ist 2:=eine 3:=Ab-sicherung 4:=gegen 5:=krank 6:=sein.,2,"[[0, 1], [4, 5, 6]]",It is a safeguard against being ill.,['# ::snt It is a safeguard against being ill.\n(s / safeguard-01\n      :ARG1 (ii / ill-01)\n      :ARG2 (ii2 / it))'],"[s, attr-instance, safeguard_01, attr-arg1, [ii, attr-instance, ill_01], attr-arg2, [ii2, attr-instance, it]]"
1883,1883,1883,1883,2246,27128,krankenversicherung,"Wenn du krank bist,  \newline dann zahlt eine Kranken-kasse den Arzt.",2_short,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,"0:=Wenn 1:=du 2:=krank 3:=bist, 4:= 5:=\newline 6:=dann 7:=zahlt 8:=eine 9:=Kranken-kasse 10:=den 11:=Arzt.",2,"[[0, 1, 2, 3], [6, 7, 9, 11]]","If you are sick, \newline then a health insurance company pays the doctor.","['# ::snt If you are sick, \\newline then a health insurance company pays the doctor.\n(p / pay-01\n      :ARG0 (c / company\n            :ARG0-of (ii / insure-02\n                  :ARG1 (h / health)))\n      :ARG2 (d / doctor)\n      :condition (s / sick-05\n            :ARG1 (y / you))\n      :ARG1-of (n / new-line-07))']","[p, attr-instance, pay_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]], attr-arg2, [d, attr-instance, doctor], attr-condition, [s, attr-instance, sick_05, attr-arg1, [y, attr-instance, you]], attr-arg1_of, [n, attr-instance, new_line_07]]"
1884,1884,1884,1884,2247,27129,krankenversicherung,Oder die Kranken-kasse bezahlt das Kranken-haus.,3_short,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,0:=Oder 1:=die 2:=Kranken-kasse 3:=bezahlt 4:=das 5:=Kranken-haus.,1,,Or the health insurance company pays the hospital.,['# ::snt Or the health insurance company pays the hospital.\n(o / or\n      :op2 (p / pay-01\n            :ARG0 (c / company\n                  :ARG0-of (ii / insure-02\n                        :ARG1 (h / health)))\n            :ARG2 (h2 / hospital)))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, pay_01, attr-arg0, [c, attr-instance, company, attr-arg0_of, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]]], attr-arg2, [h2, attr-instance, hospital]]]"
1885,1885,1885,1885,2248,27130,krankenversicherung,Du kannst zu einer Kranken-versicherung auch Kranken-kasse sagen.,4_short,Arbeit,2021-10-26T07:49:24Z,4e761a928113c1f23dda0939b1022778,0:=Du 1:=kannst 2:=zu 3:=einer 4:=Kranken-versicherung 5:=auch 6:=Kranken-kasse 7:=sagen.,1,,You can also call health insurance a health insurance fund.,['# ::snt You can also call health insurance a health insurance fund.\n(p / possible-01\n      :ARG1 (c / call-01\n            :ARG0 (y / you)\n            :ARG1 (ii / insure-02\n                  :ARG1 (h / health))\n            :ARG2 (f / fund-01\n                  :ARG1 (ii2 / insure-02\n                        :ARG1 h))\n            :mod (a / also)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, call_01, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, insure_02, attr-arg1, [h, attr-instance, health]], attr-arg2, [f, attr-instance, fund_01, attr-arg1, [ii2, attr-instance, insure_02, attr-arg1, h]], attr-mod, [a, attr-instance, also]]]"
1886,1886,1886,1886,2249,27131,krankheit,Bei einer Krankheit funktionieren Körper-teile schlecht.,0_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Bei 1:=einer 2:=Krankheit 3:=funktionieren 4:=Körper-teile 5:=schlecht.,1,,"When you are ill, parts of your body don’t function properly.","['# ::snt When you are ill, parts of your body don’t function properly.\n(f / function-01\n      :polarity -\n      :ARG0 (p / part\n            :part-of (b / body\n                  :poss (y / you)))\n      :manner (p2 / proper)\n      :time (ii / ill-01\n            :ARG1 y))']","[f, attr-instance, function_01, attr-polarity, negative, attr-arg0, [p, attr-instance, part, attr-part_of, [b, attr-instance, body, attr-poss, [y, attr-instance, you]]], attr-manner, [p2, attr-instance, proper], attr-time, [ii, attr-instance, ill_01, attr-arg1, y]]"
1887,1887,1887,1887,2250,27132,krankheit,Oder der Geist funktioniert schlecht.,1_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=der 2:=Geist 3:=funktioniert 4:=schlecht.,1,,Or the mind is functioning poorly.,['# ::snt Or the mind is functioning poorly.\n(o / or\n      :op2 (f / function-01\n            :ARG0 (m / mind)\n            :manner (p / poor)))'],"[o, attr-instance, or, attr-op2, [f, attr-instance, function_01, attr-arg0, [m, attr-instance, mind], attr-manner, [p, attr-instance, poor]]]"
1888,1888,1888,1888,2251,27133,krankheit,Eine Krankheit kann durch viele Dinge passieren.,2_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Krankheit 2:=kann 3:=durch 4:=viele 5:=Dinge 6:=passieren.,1,,Illness can happen due to many things.,['# ::snt Illness can happen due to many things.\n(p / possible-01\n      :ARG1 (ii / ill-01)\n      :ARG1-of (c / cause-01\n            :ARG0 (t / thing\n                  :quant (m / many))))'],"[p, attr-instance, possible_01, attr-arg1, [ii, attr-instance, ill_01], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [t, attr-instance, thing, attr-quant, [m, attr-instance, many]]]]"
1889,1889,1889,1889,2255,27137,krankheit,Arbeiten kann auch un-gesund sein.,6_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Arbeiten 1:=kann 2:=auch 3:=un-gesund 4:=sein.,1,,Working can also be unhealthy.,['# ::snt Working can also be unhealthy.\n(p / possible-01\n      :ARG1 (h / healthy\n            :polarity -\n            :domain (w / work-01)\n            :mod (a / also)))'],"[p, attr-instance, possible_01, attr-arg1, [h, attr-instance, healthy, attr-polarity, negative, attr-domain, [w, attr-instance, work_01], attr-mod, [a, attr-instance, also]]]"
1890,1890,1890,1890,2256,27138,krankheit,Und krank machen.,7_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=krank 2:=machen.,1,,And make you sick.,['# ::snt And make you sick.\n(a / and\n      :op2 (m / make-02\n            :ARG1 (s / sick-05\n                  :ARG1 (y / you))))'],"[a, attr-instance, and, attr-op2, [m, attr-instance, make_02, attr-arg1, [s, attr-instance, sick_05, attr-arg1, [y, attr-instance, you]]]]"
1891,1891,1891,1891,2257,27139,krankheit,Krankheiten kann man mit Medikamenten behandeln.,8_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Krankheiten 1:=kann 2:=man 3:=mit 4:=Medikamenten 5:=behandeln.,2,"[[0, 1, 2, 5], [3, 4]]",Diseases can be treated with medication.,['# ::snt Diseases can be treated with medication.\n(p / possible-01\n      :ARG1 (t / treat-03\n            :ARG1 (d / disease)\n            :ARG2 (m / medication)))'],"[p, attr-instance, possible_01, attr-arg1, [t, attr-instance, treat_03, attr-arg1, [d, attr-instance, disease], attr-arg2, [m, attr-instance, medication]]]"
1892,1892,1892,1892,2260,27142,krankheit,"Ein Mensch der eine Krankheit hat, \newline nennt man Kranker.",11_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Ein 1:=Mensch 2:=der 3:=eine 4:=Krankheit 5:=hat, 6:=\newline 7:=nennt 8:=man 9:=Kranker.",2,"[[1, 2, 4, 5], [7, 8, 9]]",A person who has an illness is called a sick person.,['# ::snt A person who has an illness is called a sick person.\n(c / call-01\n      :ARG1 (p / person\n            :ARG0-of (ii / ill-01\n                  :ARG1-of (c2 / cause-01\n                        :ARG0 (ii2 / ill-01\n                              :ARG1 p))))\n      :ARG2 (p2 / person\n            :ARG1-of (s / sick-05)))'],"[c, attr-instance, call_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [ii, attr-instance, ill_01, attr-arg1_of, [c2, attr-instance, cause_01, attr-arg0, [ii2, attr-instance, ill_01, attr-arg1, p]]]], attr-arg2, [p2, attr-instance, person, attr-arg1_of, [s, attr-instance, sick_05]]]"
1893,1893,1893,1893,2261,27143,krankheit,"Jemand der eine Krankheit behandelt, nennt man Arzt.",12_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Jemand 1:=der 2:=eine 3:=Krankheit 4:=behandelt, 5:=nennt 6:=man 7:=Arzt.",2,"[[0, 1, 3, 4], [5, 6, 7]]",Someone who treats an illness is called a doctor.,['# ::snt Someone who treats an illness is called a doctor.\n(c / call-02\n      :ARG1 (s / someone\n            :ARG0-of (t / treat-03\n                  :ARG1 (ii / ill-01)))\n      :ARG2 (d / doctor))'],"[c, attr-instance, call_02, attr-arg1, [s, attr-instance, someone, attr-arg0_of, [t, attr-instance, treat_03, attr-arg1, [ii, attr-instance, ill_01]]], attr-arg2, [d, attr-instance, doctor]]"
1894,1894,1894,1894,2262,27144,krankheit,Krankheiten untersuchen Experten von der Patho-logie.,13_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Krankheiten 1:=untersuchen 2:=Experten 3:=von 4:=der 5:=Patho-logie.,2,"[[0, 1], [3, 5]]",Pathology experts examine diseases.,['# ::snt Pathology experts examine diseases.\n(e / examine-01\n      :ARG0 (p / person\n            :ARG1-of (e2 / expert-01\n                  :ARG2 (p2 / pathology)))\n      :ARG1 (d / disease))'],"[e, attr-instance, examine_01, attr-arg0, [p, attr-instance, person, attr-arg1_of, [e2, attr-instance, expert_01, attr-arg2, [p2, attr-instance, pathology]]], attr-arg1, [d, attr-instance, disease]]"
1895,1895,1895,1895,2263,27145,krankheit,Die Experten sind Patho-logen.,14_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Experten 2:=sind 3:=Patho-logen.,1,,The experts are pathologists.,['# ::snt The experts are pathologists.\n(p / pathologist\n      :domain (p2 / person\n            :ARG1-of (e / expert-01)))'],"[p, attr-instance, pathologist, attr-domain, [p2, attr-instance, person, attr-arg1_of, [e, attr-instance, expert_01]]]"
1896,1896,1896,1896,2264,27146,krankheit,"Warum es Krankheiten gibt, untersuchen Experten von der Epi-demiologie.",15_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Warum 1:=es 2:=Krankheiten 3:=gibt, 4:=untersuchen 5:=Experten 6:=von 7:=der 8:=Epi-demiologie.",2,"[[0, 1, 2, 3], [4, 5, 6, 8]]",Epidemiology experts investigate why diseases exist.,['# ::snt Epidemiology experts investigate why diseases exist.\n(ii / investigate-01\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01\n                  :ARG2 (e2 / epidemiology)))\n      :ARG1 (t / thing\n            :ARG0-of (c / cause-01\n                  :ARG1 (e3 / exist-01\n                        :ARG1 (d / disease)))))'],"[ii, attr-instance, investigate_01, attr-arg0, [p, attr-instance, person, attr-arg1_of, [e, attr-instance, expert_01, attr-arg2, [e2, attr-instance, epidemiology]]], attr-arg1, [t, attr-instance, thing, attr-arg0_of, [c, attr-instance, cause_01, attr-arg1, [e3, attr-instance, exist_01, attr-arg1, [d, attr-instance, disease]]]]]"
1897,1897,1897,1897,2265,27147,krankheit,Die Experten sind Epidemio-logen.,16_long,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Experten 2:=sind 3:=Epidemio-logen.,1,,The experts are epidemiologists.,['# ::snt The experts are epidemiologists.\n(h / have-org-role-91\n      :ARG0 (p / person\n            :ARG1-of (e / expert-01))\n      :ARG2 (e2 / epidemiologist))'],"[h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person, attr-arg1_of, [e, attr-instance, expert_01]], attr-arg2, [e2, attr-instance, epidemiologist]]"
1898,1898,1898,1898,2266,27148,krankheit,Krankheit ist etwas un-gesundes.,0_short,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Krankheit 1:=ist 2:=etwas 3:=un-gesundes.,1,,Illness is something unhealthy.,['# ::snt Illness is something unhealthy.\n(s / something\n      :mod (h / healthy\n            :polarity -)\n      :domain (ii / ill-01))'],"[s, attr-instance, something, attr-mod, [h, attr-instance, healthy, attr-polarity, negative], attr-domain, [ii, attr-instance, ill_01]]"
1899,1899,1899,1899,2267,27149,krankheit,Im Körper vom Mensch passiert etwas Schlimmes.,1_short,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Körper 2:=vom 3:=Mensch 4:=passiert 5:=etwas 6:=Schlimmes.,1,,Something bad is happening in the human body.,['# ::snt Something bad is happening in the human body.\n(s / something\n      :ARG1-of (b / bad-07)\n      :location (b2 / body\n            :mod (h / human)))'],"[s, attr-instance, something, attr-arg1_of, [b, attr-instance, bad_07], attr-location, [b2, attr-instance, body, attr-mod, [h, attr-instance, human]]]"
1900,1900,1900,1900,2268,27150,krankheit,Dadurch kann man Schmerzen haben.,2_short,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Dadurch 1:=kann 2:=man 3:=Schmerzen 4:=haben.,1,,This can cause pain.,['# ::snt This can cause pain.\n(p / possible-01\n      :ARG1 (c / cause-01\n            :ARG0 (t / this)\n            :ARG1 (p2 / pain-01)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, cause_01, attr-arg0, [t, attr-instance, this], attr-arg1, [p2, attr-instance, pain_01]]]"
1901,1901,1901,1901,2269,27151,krankheit,Oder Körper-teile funktionieren schlecht.,3_short,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=Körper-teile 2:=funktionieren 3:=schlecht.,1,,Or body parts function poorly.,['# ::snt Or body parts function poorly.\n(o / or\n      :op2 (f / function-01\n            :ARG0 (p / part\n                  :part-of (b / body))\n            :manner (p2 / poor)))'],"[o, attr-instance, or, attr-op2, [f, attr-instance, function_01, attr-arg0, [p, attr-instance, part, attr-part_of, [b, attr-instance, body]], attr-manner, [p2, attr-instance, poor]]]"
1902,1902,1902,1902,2270,27152,krankheit,Oder man kann sterben.,4_short,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=man 2:=kann 3:=sterben.,1,,Or you can die.,['# ::snt Or you can die.\n(o / or\n      :op2 (p / possible-01\n            :ARG1 (d / die-01\n                  :ARG1 (y / you))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, possible_01, attr-arg1, [d, attr-instance, die_01, attr-arg1, [y, attr-instance, you]]]]"
1903,1903,1903,1903,2271,27153,krankheit,Krankheit kann auch im Geist sein.,5_short,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Krankheit 1:=kann 2:=auch 3:=im 4:=Geist 5:=sein.,1,,Illness can also be in the mind.,['# ::snt Illness can also be in the mind.\n(p / possible-01\n      :ARG1 (b / be-located-at-91\n            :ARG1 (t / thing\n                  :ARG2-of (ii / ill-01))\n            :ARG2 (m / mind)\n            :mod (a / also)))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, thing, attr-arg2_of, [ii, attr-instance, ill_01]], attr-arg2, [m, attr-instance, mind], attr-mod, [a, attr-instance, also]]]"
1904,1904,1904,1904,2272,27154,krankheit,Dann kann es eine Psychische Störung geben.,6_short,Gesundheit|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2020-05-07T06:15:23Z,48f66906899cc4a9477b6c9e32ff4424,0:=Dann 1:=kann 2:=es 3:=eine 4:=Psychische 5:=Störung 6:=geben.,1,,Then there may be a mental disorder.,['# ::snt Then there may be a mental disorder.\n(p / possible-01\n      :ARG1 (d / disorder\n            :mod (m / mind))\n      :mod (t / then))'],"[p, attr-instance, possible_01, attr-arg1, [d, attr-instance, disorder, attr-mod, [m, attr-instance, mind]], attr-mod, [t, attr-instance, then]]"
1905,1905,1905,1905,2273,27155,krass,Das Wort Krass wird oft von Jugendlichen benutzt.,0_long,Ohne_Kategorie,2011-12-02T12:05:23Z,a9f29492ed8786de5125371472bcc003,0:=Das 1:=Wort 2:=Krass 3:=wird 4:=oft 5:=von 6:=Jugendlichen 7:=benutzt.,2,"[[1], [5, 6]]",The word Krass is often used by teenagers.,"['# ::snt The word Krass is often used by teenagers.\n(u / use-01\n      :ARG0 (t / teenager)\n      :ARG1 (w / word\n            :mod (s / string-entity\n                  :value ""Krass""))\n      :frequency (o / often))']","[u, attr-instance, use_01, attr-arg0, [t, attr-instance, teenager], attr-arg1, [w, attr-instance, word, attr-mod, [s, attr-instance, string_entity, attr-value, ""krass""]], attr-frequency, [o, attr-instance, often]]"
1906,1906,1906,1906,2274,27156,krass,Beispiel: \newline Michael findet den Horrorfilm krass.,1_long,Ohne_Kategorie,2011-12-02T12:05:23Z,a9f29492ed8786de5125371472bcc003,0:=Beispiel: 1:=\newline 2:=Michael 3:=findet 4:=den 5:=Horrorfilm 6:=krass.,1,,Example: \newline Michael thinks the horror film is crazy.,"['# ::snt Example: \\newline Michael thinks the horror film is crazy.\n(e / exemplify-01\n      :ARG0 (t / think-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Michael""\n                        :name-of p)\n                  :op1 ""Newline""))\n      :ARG1 (c / crazy-03\n            :ARG1 (f / film\n                  :mod (h / horror))))']","[e, attr-instance, exemplify_01, attr-arg0, [t, attr-instance, think_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""michael"", attr-name_of, p], attr-op1, ""newline""]], attr-arg1, [c, attr-instance, crazy_03, attr-arg1, [f, attr-instance, film, attr-mod, [h, attr-instance, horror]]]]"
1907,1907,1907,1907,2275,27157,krass,Michael findet den Horrorfilm extrem.,2_long,Ohne_Kategorie,2011-12-02T12:05:23Z,a9f29492ed8786de5125371472bcc003,0:=Michael 1:=findet 2:=den 3:=Horrorfilm 4:=extrem.,1,,Michael finds the horror film extreme.,"['# ::snt Michael finds the horror film extreme.\n(f / find-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Michael""))\n      :ARG1 (e / extreme\n            :domain (f2 / film\n                  :mod (h / horror))))']","[f, attr-instance, find_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""michael""]], attr-arg1, [e, attr-instance, extreme, attr-domain, [f2, attr-instance, film, attr-mod, [h, attr-instance, horror]]]]"
1908,1908,1908,1908,2276,27158,krass,Michael findet den Horrorfilm besonders.,3_long,Ohne_Kategorie,2011-12-02T12:05:23Z,a9f29492ed8786de5125371472bcc003,0:=Michael 1:=findet 2:=den 3:=Horrorfilm 4:=besonders.,1,,Michael finds the horror film special.,"['# ::snt Michael finds the horror film special.\n(f / find-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Michael""))\n      :ARG1 (s / special-02\n            :ARG1 (f2 / film\n                  :mod (h / horror))))']","[f, attr-instance, find_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""michael""]], attr-arg1, [s, attr-instance, special_02, attr-arg1, [f2, attr-instance, film, attr-mod, [h, attr-instance, horror]]]]"
1909,1909,1909,1909,2277,27159,krass,Krass ist ein Adjektiv.,4_long,Ohne_Kategorie,2011-12-02T12:05:23Z,a9f29492ed8786de5125371472bcc003,0:=Krass 1:=ist 2:=ein 3:=Adjektiv.,1,,Crazy is an adjective.,['# ::snt Crazy is an adjective.\n(c / crazy-03\n      :ARG1 (w / word\n            :mod (a / adjective)))'],"[c, attr-instance, crazy_03, attr-arg1, [w, attr-instance, word, attr-mod, [a, attr-instance, adjective]]]"
1910,1910,1910,1910,2278,27160,krass,"Das Gegenteil von krass ist ""durchschnittlich"", oder ""alltäglich"".",5_long,Ohne_Kategorie,2011-12-02T12:05:23Z,a9f29492ed8786de5125371472bcc003,"0:=Das 1:=Gegenteil 2:=von 3:=krass 4:=ist 5:=""durchschnittlich"", 6:=oder 7:=""alltäglich"".",2,"[[5], [7]]","The opposite of extreme is ""average"" or ""commonplace"".","['# ::snt The opposite of extreme is ""average"" or ""commonplace"".\n(o / opposite-01\n      :ARG1 (e / extreme)\n      :ARG2 (o2 / or\n            :op1 (a / average-04)\n            :op2 (c / commonplace)))']","[o, attr-instance, opposite_01, attr-arg1, [e, attr-instance, extreme], attr-arg2, [o2, attr-instance, or, attr-op1, [a, attr-instance, average_04], attr-op2, [c, attr-instance, commonplace]]]"
1911,1911,1911,1911,2279,27161,krass,Krass ist ein ein anderes Wort für besonders.,0_short,Ohne_Kategorie,2011-12-02T12:05:23Z,a9f29492ed8786de5125371472bcc003,0:=Krass 1:=ist 2:=ein 3:=ein 4:=anderes 5:=Wort 6:=für 7:=besonders.,1,,Krass is another word for special.,['# ::snt Krass is another word for special.\n(w / word\n      :mod (a / another)\n      :purpose (s / special-02)\n      :domain (k / krass))'],"[w, attr-instance, word, attr-mod, [a, attr-instance, another], attr-purpose, [s, attr-instance, special_02], attr-domain, [k, attr-instance, krass]]"
1912,1912,1912,1912,2280,27162,krawatte,Krawatten werden um den Hals gebunden.,0_long,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Krawatten 1:=werden 2:=um 3:=den 4:=Hals 5:=gebunden.,2,"[[2, 4], [5]]",Ties are tied around the neck.,['# ::snt Ties are tied around the neck.\n(t / tie-01\n      :ARG1 t\n      :ARG1 t\n      :ARG2 (n / neck))'],"[t, attr-instance, tie_01, attr-arg1, t, attr-arg1, t, attr-arg2, [n, attr-instance, neck]]"
1913,1913,1913,1913,2282,27164,krawatte,Man kann die Krawatte zum Beispiel zu einem Hemd tragen.,2_long,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Man 1:=kann 2:=die 3:=Krawatte 4:=zum 5:=Beispiel 6:=zu 7:=einem 8:=Hemd 9:=tragen.,1,,"For example, you can wear the tie with a shirt.","['# ::snt For example, you can wear the tie with a shirt.\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :ARG1 (w / wear-01\n                  :ARG0 (y / you)\n                  :ARG1 (t / tie)\n                  :ARG2 (s / shirt))))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [w, attr-instance, wear_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, tie], attr-arg2, [s, attr-instance, shirt]]]]"
1914,1914,1914,1914,2283,27165,krawatte,Es gibt Krawatten aus verschiedenem Material.,3_long,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Es 1:=gibt 2:=Krawatten 3:=aus 4:=verschiedenem 5:=Material.,1,,There are ties made of different materials.,['# ::snt There are ties made of different materials.\n(t / tie\n      :ARG1-of (m / make-01\n            :ARG2 (m2 / material\n                  :ARG1-of (d / differ-02))))'],"[t, attr-instance, tie, attr-arg1_of, [m, attr-instance, make_01, attr-arg2, [m2, attr-instance, material, attr-arg1_of, [d, attr-instance, differ_02]]]]"
1915,1915,1915,1915,2289,27171,krawatte,Es gibt Krawatten in verschiedene Farben.,9_long,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Es 1:=gibt 2:=Krawatten 3:=in 4:=verschiedene 5:=Farben.,1,,There are ties in different colors.,['# ::snt There are ties in different colors.\n(t / tie\n      :ARG1-of (c / color-01\n            :ARG1-of (d / differ-02)))'],"[t, attr-instance, tie, attr-arg1_of, [c, attr-instance, color_01, attr-arg1_of, [d, attr-instance, differ_02]]]"
1916,1916,1916,1916,2290,27172,krawatte,Früher haben hauptsächlich Männer Krawatten angezogen.,10_long,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Früher 1:=haben 2:=hauptsächlich 3:=Männer 4:=Krawatten 5:=angezogen.,1,,"In the past, ties were mainly worn by men.","['# ::snt In the past, ties were mainly worn by men.\n(w / wear-01\n      :ARG0 (m / man)\n      :ARG1 (t / tie)\n      :mod (m2 / main)\n      :time (p / past))']","[w, attr-instance, wear_01, attr-arg0, [m, attr-instance, man], attr-arg1, [t, attr-instance, tie], attr-mod, [m2, attr-instance, main], attr-time, [p, attr-instance, past]]"
1917,1917,1917,1917,2291,27173,krawatte,Heute ziehen auch manche Frauen Krawatten an.,11_long,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Heute 1:=ziehen 2:=auch 3:=manche 4:=Frauen 5:=Krawatten 6:=an.,1,,"Today, some women also wear ties.","['# ::snt Today, some women also wear ties.\n(w / wear-01\n      :ARG0 (w2 / woman\n            :quant (s / some))\n      :ARG1 (t / tie)\n      :mod (a / also)\n      :time (t2 / today))']","[w, attr-instance, wear_01, attr-arg0, [w2, attr-instance, woman, attr-quant, [s, attr-instance, some]], attr-arg1, [t, attr-instance, tie], attr-mod, [a, attr-instance, also], attr-time, [t2, attr-instance, today]]"
1918,1918,1918,1918,2292,27174,krawatte,Hier werden Krawatten oft getragen: • Privatschulen,12_long,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Hier 1:=werden 2:=Krawatten 3:=oft 4:=getragen: 5:=• 6:=Privatschulen,1,,Ties are often worn here: • Private schools,['# ::snt Ties are often worn here: • Private schools\n(w / wear-01\n      :ARG1 (t / trick)\n      :frequency (o / often)\n      :location (h / here)\n      :example (s / school\n            :ARG1-of (p / private-03)))'],"[w, attr-instance, wear_01, attr-arg1, [t, attr-instance, trick], attr-frequency, [o, attr-instance, often], attr-location, [h, attr-instance, here], attr-example, [s, attr-instance, school, attr-arg1_of, [p, attr-instance, private_03]]]"
1919,1919,1919,1919,2293,27175,krawatte,Hier werden Krawatten oft getragen: • Berufen,13_long,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Hier 1:=werden 2:=Krawatten 3:=oft 4:=getragen: 5:=• 6:=Berufen,1,,Ties are often worn here: • Professions,['# ::snt Ties are often worn here: • Professions\n(w / wear-01\n      :ARG1 (t / technique\n            :mod (r / recession-02))\n      :frequency (o / often)\n      :location (h / here))'],"[w, attr-instance, wear_01, attr-arg1, [t, attr-instance, technique, attr-mod, [r, attr-instance, recession_02]], attr-frequency, [o, attr-instance, often], attr-location, [h, attr-instance, here]]"
1920,1920,1920,1920,2294,27176,krawatte,Hier werden Krawatten oft getragen: • feierliche Anlässe,14_long,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Hier 1:=werden 2:=Krawatten 3:=oft 4:=getragen: 5:=• 6:=feierliche 7:=Anlässe,1,,Ties are often worn here: • formal occasions,['# ::snt Ties are often worn here: • formal occasions\n(w / wear-01\n      :ARG1 (s / style\n            :ARG1-of (m / mean-01\n                  :ARG2 (o / occasion-02\n                        :mod (f / formal))))\n      :frequency (o2 / often)\n      :location (h / here))'],"[w, attr-instance, wear_01, attr-arg1, [s, attr-instance, style, attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [o, attr-instance, occasion_02, attr-mod, [f, attr-instance, formal]]]], attr-frequency, [o2, attr-instance, often], attr-location, [h, attr-instance, here]]"
1921,1921,1921,1921,2295,27177,krawatte,Eine Krawatte ist ein langes Stück Stoff.,0_short,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Eine 1:=Krawatte 2:=ist 3:=ein 4:=langes 5:=Stück 6:=Stoff.,2,"[[4], [5, 6]]",A tie is a long piece of fabric.,['# ::snt A tie is a long piece of fabric.\n(p / piece\n      :ARG1-of (l / long-03)\n      :consist-of (f / fabric)\n      :domain (t / tie))'],"[p, attr-instance, piece, attr-arg1_of, [l, attr-instance, long_03], attr-consist_of, [f, attr-instance, fabric], attr-domain, [t, attr-instance, tie]]"
1922,1922,1922,1922,2296,27178,krawatte,Eine Krawatte wird um den Hals gebunden.,1_short,Kleider,2015-04-06T18:57:54Z,4189117576b2876ec34dc7db77b24cb6,0:=Eine 1:=Krawatte 2:=wird 3:=um 4:=den 5:=Hals 6:=gebunden.,2,"[[3, 5], [6]]",A tie is tied around the neck.,['# ::snt A tie is tied around the neck.\n(t / tie\n      :ARG3-of (t2 / tie-01)\n      :ARG1-of t2\n      :location (a / around\n            :op1 (n / neck)))'],"[t, attr-instance, tie, attr-arg3_of, [t2, attr-instance, tie_01], attr-arg1_of, t2, attr-location, [a, attr-instance, around, attr-op1, [n, attr-instance, neck]]]"
1923,1923,1923,1923,2297,27179,kreativitat,"Menschen mit viel Kreativität haben Spaß daran,  \newline Lösungen für Probleme zu finden.",0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-11-02T17:15:23Z,800aa39bfea9a2755c054805b2a7d478,"0:=Menschen 1:=mit 2:=viel 3:=Kreativität 4:=haben 5:=Spaß 6:=daran, 7:= 8:=\newline 9:=Lösungen 10:=für 11:=Probleme 12:=zu 13:=finden.",3,"[[0, 1, 2, 3], [0, 4, 5, 6], [9, 10, 11, 12, 13]]",People with a lot of creativity enjoy finding \newline solutions to problems.,['# ::snt People with a lot of creativity enjoy finding \\newline solutions to problems.\n(e / enjoy-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-03\n                  :ARG1 (c / creativity\n                        :quant (l / lot))))\n      :ARG1 (f / find-01\n            :ARG0 p\n            :ARG1 (t / thing\n                  :ARG2-of (s / solve-01\n                        :ARG1 (p2 / problem)\n                        :mod (o / online)))))'],"[e, attr-instance, enjoy_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [c, attr-instance, creativity, attr-quant, [l, attr-instance, lot]]]], attr-arg1, [f, attr-instance, find_01, attr-arg0, p, attr-arg1, [t, attr-instance, thing, attr-arg2_of, [s, attr-instance, solve_01, attr-arg1, [p2, attr-instance, problem], attr-mod, [o, attr-instance, online]]]]]"
1924,1924,1924,1924,2298,27180,kreativitat,Kreative Menschen geben nicht schnell auf.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-11-02T17:15:23Z,800aa39bfea9a2755c054805b2a7d478,0:=Kreative 1:=Menschen 2:=geben 3:=nicht 4:=schnell 5:=auf.,1,,Creative people don’t give up easily.,['# ::snt Creative people don’t give up easily.\n(g / give-up-07\n      :polarity -\n      :ARG0 (p / person\n            :ARG1-of (c / create-01))\n      :ARG1-of (e / easy-05))'],"[g, attr-instance, give_up_07, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-arg1_of, [c, attr-instance, create_01]], attr-arg1_of, [e, attr-instance, easy_05]]"
1925,1925,1925,1925,2299,27181,kreativitat,Sie starten immer wieder neu.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-11-02T17:15:23Z,800aa39bfea9a2755c054805b2a7d478,0:=Sie 1:=starten 2:=immer 3:=wieder 4:=neu.,1,,They start over again and again.,['# ::snt They start over again and again.\n(s / start-over-08\n      :ARG0 (t / they)\n      :mod (a / again-and-again))'],"[s, attr-instance, start_over_08, attr-arg0, [t, attr-instance, they], attr-mod, [a, attr-instance, again_and_again]]"
1926,1926,1926,1926,2300,27182,kreativitat,Kreative Menschen entwickeln neue Lösungen für Probleme.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-11-02T17:15:23Z,800aa39bfea9a2755c054805b2a7d478,0:=Kreative 1:=Menschen 2:=entwickeln 3:=neue 4:=Lösungen 5:=für 6:=Probleme.,3,"[[1, 2, 4, 5, 6], [0, 1], [3, 4]]",Creative people develop new solutions to problems.,['# ::snt Creative people develop new solutions to problems.\n(d / develop-02\n      :ARG0 (p / person\n            :ARG1-of (c / create-01))\n      :ARG1 (t / thing\n            :ARG2-of (s / solve-01\n                  :ARG1 (p2 / problem))\n            :ARG1-of (n / new-01)))'],"[d, attr-instance, develop_02, attr-arg0, [p, attr-instance, person, attr-arg1_of, [c, attr-instance, create_01]], attr-arg1, [t, attr-instance, thing, attr-arg2_of, [s, attr-instance, solve_01, attr-arg1, [p2, attr-instance, problem]], attr-arg1_of, [n, attr-instance, new_01]]]"
1927,1927,1927,1927,2301,27183,kreativitat,Kreativität ist eine Fähigkeit.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-11-02T17:15:23Z,800aa39bfea9a2755c054805b2a7d478,0:=Kreativität 1:=ist 2:=eine 3:=Fähigkeit.,1,,Creativity is a skill.,['# ::snt Creativity is a skill.\n(s / skill\n      :domain (c / creativity))'],"[s, attr-instance, skill, attr-domain, [c, attr-instance, creativity]]"
1928,1928,1928,1928,2302,27184,kreativitat,Kreativ sein heißt: neue Ideen haben.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2022-11-02T17:15:23Z,800aa39bfea9a2755c054805b2a7d478,0:=Kreativ 1:=sein 2:=heißt: 3:=neue 4:=Ideen 5:=haben.,1,,Being creative means having new ideas.,['# ::snt Being creative means having new ideas.\n(m / mean-01\n      :ARG1 (c / creative)\n      :ARG2 (h / have-03\n            :ARG1 (ii / idea\n                  :ARG1-of (n / new-01))))'],"[m, attr-instance, mean_01, attr-arg1, [c, attr-instance, creative], attr-arg2, [h, attr-instance, have_03, attr-arg1, [ii, attr-instance, idea, attr-arg1_of, [n, attr-instance, new_01]]]]"
1929,1929,1929,1929,2303,27185,kredenzen,Kredenzen macht man mit einer Karaffe.,0_long,Essen_und_Trinken,2012-10-04T09:39:58Z,a9f29492ed8786de5125371472bcc003,0:=Kredenzen 1:=macht 2:=man 3:=mit 4:=einer 5:=Karaffe.,1,,Serving is done with a carafe.,['# ::snt Serving is done with a carafe.\n(b / be-done-08\n      :ARG1 (s / serve-02)\n      :ARG2 (c / carafe))'],"[b, attr-instance, be_done_08, attr-arg1, [s, attr-instance, serve_02], attr-arg2, [c, attr-instance, carafe]]"
1930,1930,1930,1930,2305,27187,kredenzen,Beim kredenzen schenkt man etwas zu trinken in ein Glas ein.,0_short,Essen_und_Trinken,2012-10-04T09:39:58Z,a9f29492ed8786de5125371472bcc003,0:=Beim 1:=kredenzen 2:=schenkt 3:=man 4:=etwas 5:=zu 6:=trinken 7:=in 8:=ein 9:=Glas 10:=ein.,2,"[[4, 5, 6], [7, 9, 10]]","When serving, you pour something to drink into a glass.","['# ::snt When serving, you pour something to drink into a glass.\n(p / pour-01\n      :ARG0 (y / you)\n      :ARG1 (s / something)\n      :ARG3 (g / glass)\n      :purpose (d / drink-01\n            :ARG0 y\n            :ARG1 s)\n      :time (s2 / serve-02\n            :ARG0 y))']","[p, attr-instance, pour_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-arg3, [g, attr-instance, glass], attr-purpose, [d, attr-instance, drink_01, attr-arg0, y, attr-arg1, s], attr-time, [s2, attr-instance, serve_02, attr-arg0, y]]"
1931,1931,1931,1931,2306,27188,kredenzen,Oder bietet jemandem etwas zu trinken an.,1_short,Essen_und_Trinken,2012-10-04T09:39:58Z,a9f29492ed8786de5125371472bcc003,0:=Oder 1:=bietet 2:=jemandem 3:=etwas 4:=zu 5:=trinken 6:=an.,1,,Or offer someone something to drink.,['# ::snt Or offer someone something to drink.\n(o / or\n      :op2 (o2 / offer-01\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG1 (s / something\n                  :ARG1-of (d / drink-01\n                        :ARG0 (s2 / someone)))\n            :ARG3 s2))'],"[o, attr-instance, or, attr-op2, [o2, attr-instance, offer_01, attr-mode, imperative, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something, attr-arg1_of, [d, attr-instance, drink_01, attr-arg0, [s2, attr-instance, someone]]], attr-arg3, s2]]"
1932,1932,1932,1932,2307,27189,kredit,Ich leihe mir Geld von der Bank.,0_long,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Ich 1:=leihe 2:=mir 3:=Geld 4:=von 5:=der 6:=Bank.,2,"[[0, 1, 2, 3], [4, 6]]",I borrow money from the bank.,['# ::snt I borrow money from the bank.\n(b / borrow-01\n      :ARG0 (ii / i)\n      :ARG1 (m / money)\n      :ARG2 (b2 / bank))'],"[b, attr-instance, borrow_01, attr-arg0, [ii, attr-instance, i], attr-arg1, [m, attr-instance, money], attr-arg2, [b2, attr-instance, bank]]"
1933,1933,1933,1933,2308,27190,kredit,Das nennt man: Kredit bekommen.,1_long,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Das 1:=nennt 2:=man: 3:=Kredit 4:=bekommen.,1,,That's called getting credit.,"[""# ::snt That's called getting credit.\n(c / call-01\n      :ARG1 (t / that)\n      :ARG2 (g / get-01\n            :ARG1 (c2 / credit-02)))""]","[c, attr-instance, call_01, attr-arg1, [t, attr-instance, that], attr-arg2, [g, attr-instance, get_01, attr-arg1, [c2, attr-instance, credit_02]]]"
1934,1934,1934,1934,2309,27191,kredit,Ich muss das Geld an die Bank zurückzahlen.,2_long,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Ich 1:=muss 2:=das 3:=Geld 4:=an 5:=die 6:=Bank 7:=zurückzahlen.,2,"[[0, 1, 2, 3, 7], [4, 6]]",I have to pay the money back to the bank.,['# ::snt I have to pay the money back to the bank.\n(o / obligate-01\n      :ARG2 (p / pay-01\n            :ARG0 (ii / i)\n            :ARG1 (m / money)\n            :ARG3 (b / bank)\n            :mod (b2 / back)))'],"[o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, pay_01, attr-arg0, [ii, attr-instance, i], attr-arg1, [m, attr-instance, money], attr-arg3, [b, attr-instance, bank], attr-mod, [b2, attr-instance, back]]]"
1935,1935,1935,1935,2310,27192,kredit,Ich zahle zum Beispiel jeden Monat einen Teil zurück.,3_long,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Ich 1:=zahle 2:=zum 3:=Beispiel 4:=jeden 5:=Monat 6:=einen 7:=Teil 8:=zurück.,2,"[[4, 5], [7]]","For example, I pay back a portion every month.","['# ::snt For example, I pay back a portion every month.\n(e / exemplify-01\n      :ARG0 (p / pay-01\n            :ARG0 (ii / i)\n            :ARG1 (p2 / portion)\n            :mod (b / back)\n            :frequency (r / rate-entity-91\n                  :ARG3 (t / temporal-quantity\n                        :quant 1\n                        :unit (m / month)))))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, pay_01, attr-arg0, [ii, attr-instance, i], attr-arg1, [p2, attr-instance, portion], attr-mod, [b, attr-instance, back], attr-frequency, [r, attr-instance, rate_entity_91, attr-arg3, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [m, attr-instance, month]]]]]"
1936,1936,1936,1936,2311,27193,kredit,Das nennt man: Kredit-rate.,4_long,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Das 1:=nennt 2:=man: 3:=Kredit-rate.,1,,This is called: credit installment.,['# ::snt This is called: credit installment.\n(c / call-01\n      :ARG1 (t / this)\n      :ARG2 (ii / installment\n            :mod (c2 / credit-02)))'],"[c, attr-instance, call_01, attr-arg1, [t, attr-instance, this], attr-arg2, [ii, attr-instance, installment, attr-mod, [c2, attr-instance, credit_02]]]"
1937,1937,1937,1937,2312,27194,kredit,"Ich muss der Bank auch etwas dafür bezahlen, \newline wenn sie mir Geld borgt.",5_long,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,"0:=Ich 1:=muss 2:=der 3:=Bank 4:=auch 5:=etwas 6:=dafür 7:=bezahlen, 8:=\newline 9:=wenn 10:=sie 11:=mir 12:=Geld 13:=borgt.",3,"[[0, 1, 4, 5, 6, 7], [3], [9, 10, 11, 12, 13]]",I also have to pay the bank something when it lends me money.,['# ::snt I also have to pay the bank something when it lends me money.\n(o / obligate-01\n      :ARG1 (ii / i)\n      :ARG2 (p / pay-01\n            :ARG0 ii\n            :ARG1 (s / something)\n            :ARG2 (b / bank)\n            :time (l / lend-01\n                  :ARG0 b\n                  :ARG1 (m / money)\n                  :ARG2 ii))\n      :mod (a / also))'],"[o, attr-instance, obligate_01, attr-arg1, [ii, attr-instance, i], attr-arg2, [p, attr-instance, pay_01, attr-arg0, ii, attr-arg1, [s, attr-instance, something], attr-arg2, [b, attr-instance, bank], attr-time, [l, attr-instance, lend_01, attr-arg0, b, attr-arg1, [m, attr-instance, money], attr-arg2, ii]], attr-mod, [a, attr-instance, also]]"
1938,1938,1938,1938,2313,27195,kredit,Das nennt man Kredit-zinsen.,6_long,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Das 1:=nennt 2:=man 3:=Kredit-zinsen.,1,,This is called loan interest.,['# ::snt This is called loan interest.\n(c / call-01\n      :ARG1 (t / this)\n      :ARG2 (ii / interest\n            :mod (l / loan-01)))'],"[c, attr-instance, call_01, attr-arg1, [t, attr-instance, this], attr-arg2, [ii, attr-instance, interest, attr-mod, [l, attr-instance, loan_01]]]"
1939,1939,1939,1939,2314,27196,kredit,Mit einem Kredit bekommt man Geld aus-geliehen.,0_short,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Mit 1:=einem 2:=Kredit 3:=bekommt 4:=man 5:=Geld 6:=aus-geliehen.,1,,With a loan you borrow money.,['# ::snt With a loan you borrow money.\n(b / borrow-01\n      :ARG0 (y / you)\n      :ARG1 (m / money)\n      :condition (l / loan-01\n            :ARG2 y))'],"[b, attr-instance, borrow_01, attr-arg0, [y, attr-instance, you], attr-arg1, [m, attr-instance, money], attr-condition, [l, attr-instance, loan_01, attr-arg2, y]]"
1940,1940,1940,1940,2315,27197,kredit,Meistens muss man für dieses Geld Zinsen bezahlen.,1_short,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Meistens 1:=muss 2:=man 3:=für 4:=dieses 5:=Geld 6:=Zinsen 7:=bezahlen.,1,,Most of the time you have to pay interest on this money.,['# ::snt Most of the time you have to pay interest on this money.\n(o / obligate-01\n      :ARG2 (p / pay-01\n            :ARG0 (y / you)\n            :ARG1 (ii / interest\n                  :prep-on (m / money\n                        :mod (t / this))))\n      :frequency (t2 / time\n            :quant (m2 / most)))'],"[o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, pay_01, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, interest, attr-prep_on, [m, attr-instance, money, attr-mod, [t, attr-instance, this]]]], attr-frequency, [t2, attr-instance, time, attr-quant, [m2, attr-instance, most]]]"
1941,1941,1941,1941,2316,27198,kredit,Ich kann mir bei der Bank Geld ausborgen.,2_short,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Ich 1:=kann 2:=mir 3:=bei 4:=der 5:=Bank 6:=Geld 7:=ausborgen.,2,"[[0, 1, 2, 6, 7], [3, 5]]",I can borrow money from the bank.,['# ::snt I can borrow money from the bank.\n(p / possible-01\n      :ARG1 (b / borrow-01\n            :ARG0 (ii / i)\n            :ARG1 (m / money)\n            :ARG2 (b2 / bank)))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, borrow_01, attr-arg0, [ii, attr-instance, i], attr-arg1, [m, attr-instance, money], attr-arg2, [b2, attr-instance, bank]]]"
1942,1942,1942,1942,2317,27199,kredit,Man sagt: Ich bekomme einen Kredit von der Bank.,3_short,Geld,2015-11-23T11:05:06Z,88797a15ffaeedd9a8292e0b51c85385,0:=Man 1:=sagt: 2:=Ich 3:=bekomme 4:=einen 5:=Kredit 6:=von 7:=der 8:=Bank.,2,"[[2, 3, 5], [6, 8]]",You say: I get a loan from the bank.,['# ::snt You say: I get a loan from the bank.\n(s / say-01\n      :ARG0 (y / you)\n      :ARG1 (g / get-01\n            :ARG0 y\n            :ARG1 (l / loan-01\n                  :ARG0 (b / bank)\n                  :ARG2 y)))'],"[s, attr-instance, say_01, attr-arg0, [y, attr-instance, you], attr-arg1, [g, attr-instance, get_01, attr-arg0, y, attr-arg1, [l, attr-instance, loan_01, attr-arg0, [b, attr-instance, bank], attr-arg2, y]]]"
1943,1943,1943,1943,2318,27200,kreisfreie-stadt,Eine Kreisfreie Stadt gehört zu keinem Land-kreis.,0_short,Ohne_Kategorie|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2016-03-10T09:53:45Z,12c8e777393d6f1673ab5f7a7cd789da,0:=Eine 1:=Kreisfreie 2:=Stadt 3:=gehört 4:=zu 5:=keinem 6:=Land-kreis.,1,,An independent city does not belong to any district.,['# ::snt An independent city does not belong to any district.\n(b / belong-01\n      :polarity -\n      :ARG0 (c / city\n            :mod (ii / independent))\n      :ARG1 (d / district\n            :mod (a / any)))'],"[b, attr-instance, belong_01, attr-polarity, negative, attr-arg0, [c, attr-instance, city, attr-mod, [ii, attr-instance, independent]], attr-arg1, [d, attr-instance, district, attr-mod, [a, attr-instance, any]]]"
1944,1944,1944,1944,2319,27201,kreisfreie-stadt,Sie erledigt alle Aufgaben selbst.,1_short,Ohne_Kategorie|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2016-03-10T09:53:45Z,12c8e777393d6f1673ab5f7a7cd789da,0:=Sie 1:=erledigt 2:=alle 3:=Aufgaben 4:=selbst.,1,,She does all the tasks herself.,['# ::snt She does all the tasks herself.\n(d / do-02\n      :ARG0 (s / she)\n      :ARG1 (t / task\n            :mod (a / all)))'],"[d, attr-instance, do_02, attr-arg0, [s, attr-instance, she], attr-arg1, [t, attr-instance, task, attr-mod, [a, attr-instance, all]]]"
1945,1945,1945,1945,2320,27202,kreisfreie-stadt,Zum Beispiel ein Kranken-haus bauen.,2_short,Ohne_Kategorie|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2016-03-10T09:53:45Z,12c8e777393d6f1673ab5f7a7cd789da,0:=Zum 1:=Beispiel 2:=ein 3:=Kranken-haus 4:=bauen.,1,,"For example, building a hospital.","['# ::snt For example, building a hospital.\n(e / exemplify-01\n      :ARG0 (b / build-01\n            :ARG1 (h / hospital)))']","[e, attr-instance, exemplify_01, attr-arg0, [b, attr-instance, build_01, attr-arg1, [h, attr-instance, hospital]]]"
1946,1946,1946,1946,2321,27203,kreisfreie-stadt,Oder ein Auto zulassen.,3_short,Ohne_Kategorie|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2016-03-10T09:53:45Z,12c8e777393d6f1673ab5f7a7cd789da,0:=Oder 1:=ein 2:=Auto 3:=zulassen.,1,,Or register a car.,['# ::snt Or register a car.\n(o / or\n      :op2 (r / register-02\n            :ARG1 (c / car)))'],"[o, attr-instance, or, attr-op2, [r, attr-instance, register_02, attr-arg1, [c, attr-instance, car]]]"
1947,1947,1947,1947,2322,27204,krempe,Eine Krempe ist der äußere Rand von einem Hut.,0_long,Kleider,2011-11-10T10:47:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Krempe 2:=ist 3:=der 4:=äußere 5:=Rand 6:=von 7:=einem 8:=Hut.,3,"[[1, 2, 5], [4, 5], [6, 8]]",A brim is the outer edge of a hat.,['# ::snt A brim is the outer edge of a hat.\n(e / edge\n      :mod (o / outer)\n      :part-of (h / hat)\n      :domain (b / brim))'],"[e, attr-instance, edge, attr-mod, [o, attr-instance, outer], attr-part_of, [h, attr-instance, hat], attr-domain, [b, attr-instance, brim]]"
1948,1948,1948,1948,2323,27205,krempe,Dieser Rand schützt vor Regen oder Sonne.,1_long,Kleider,2011-11-10T10:47:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Dieser 1:=Rand 2:=schützt 3:=vor 4:=Regen 5:=oder 6:=Sonne.,2,"[[4], [6]]",This edge protects against rain or sun.,['# ::snt This edge protects against rain or sun.\n(p / protect-01\n      :ARG0 (e / edge\n            :mod (t / this))\n      :ARG2 (o / or\n            :op1 (r / rain-01)\n            :op2 (s / sun)))'],"[p, attr-instance, protect_01, attr-arg0, [e, attr-instance, edge, attr-mod, [t, attr-instance, this]], attr-arg2, [o, attr-instance, or, attr-op1, [r, attr-instance, rain_01], attr-op2, [s, attr-instance, sun]]]"
1949,1949,1949,1949,2324,27206,krempe,Beispiel: \newline Richard möchte auf der Straße nicht erkannt werden.,2_long,Kleider,2011-11-10T10:47:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Beispiel: 1:=\newline 2:=Richard 3:=möchte 4:=auf 5:=der 6:=Straße 7:=nicht 8:=erkannt 9:=werden.,2,"[[2, 3, 7, 8, 9], [4, 6]]",Example: \newline Richard doesn't want to be recognized on the street.,"['# ::snt Example: \\newline Richard doesn\'t want to be recognized on the street.\n(e / exemplify-01\n      :ARG0 (w / want-01\n            :polarity -\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Newline""\n                        :op2 ""Richard""))\n            :ARG1 (r / recognize-01\n                  :ARG1 p\n                  :location (s / street))))']","[e, attr-instance, exemplify_01, attr-arg0, [w, attr-instance, want_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""newline"", attr-op2, ""richard""]], attr-arg1, [r, attr-instance, recognize_01, attr-arg1, p, attr-location, [s, attr-instance, street]]]]"
1950,1950,1950,1950,2325,27207,krempe,Seine Hutkrempe hilft ihm nicht erkannt zu werden.,3_long,Kleider,2011-11-10T10:47:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Seine 1:=Hutkrempe 2:=hilft 3:=ihm 4:=nicht 5:=erkannt 6:=zu 7:=werden.,1,,His hat brim helps him avoid being recognized.,['# ::snt His hat brim helps him avoid being recognized.\n(h / help-01\n      :ARG0 (b / brim-01\n            :ARG1 (h2 / hat\n                  :poss (h3 / he)))\n      :ARG1 (a / avoid-01\n            :ARG0 h3\n            :ARG1 (r / recognize-01\n                  :ARG1 h3))\n      :ARG2 h3)'],"[h, attr-instance, help_01, attr-arg0, [b, attr-instance, brim_01, attr-arg1, [h2, attr-instance, hat, attr-poss, [h3, attr-instance, he]]], attr-arg1, [a, attr-instance, avoid_01, attr-arg0, h3, attr-arg1, [r, attr-instance, recognize_01, attr-arg1, h3]], attr-arg2, h3]"
1951,1951,1951,1951,2326,27208,krempe,Richard möchte auf der Straße nicht erkannt werden.,4_long,Kleider,2011-11-10T10:47:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Richard 1:=möchte 2:=auf 3:=der 4:=Straße 5:=nicht 6:=erkannt 7:=werden.,2,"[[0, 1, 5, 6, 7], [2, 4]]",Richard doesn’t want to be recognized on the street.,"['# ::snt Richard doesn’t want to be recognized on the street.\n(w / want-01\n      :polarity -\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Richard""))\n      :ARG1 (r / recognize-01\n            :ARG1 p\n            :location (s / street)))']","[w, attr-instance, want_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""richard""]], attr-arg1, [r, attr-instance, recognize_01, attr-arg1, p, attr-location, [s, attr-instance, street]]]"
1952,1952,1952,1952,2327,27209,krempe,Der Rand seines Hutes hilft ihm nicht erkannt zu werden.,5_long,Kleider,2011-11-10T10:47:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Der 1:=Rand 2:=seines 3:=Hutes 4:=hilft 5:=ihm 6:=nicht 7:=erkannt 8:=zu 9:=werden.,1,,The brim of his hat helps him avoid being recognized.,['# ::snt The brim of his hat helps him avoid being recognized.\n(h / help-01\n      :ARG0 (b / brim-01\n            :ARG1 (h2 / hat\n                  :part-of (h3 / he)))\n      :ARG1 (a / avoid-01\n            :ARG0 h3\n            :ARG1 (r / recognize-01\n                  :ARG1 h3))\n      :ARG2 h3)'],"[h, attr-instance, help_01, attr-arg0, [b, attr-instance, brim_01, attr-arg1, [h2, attr-instance, hat, attr-part_of, [h3, attr-instance, he]]], attr-arg1, [a, attr-instance, avoid_01, attr-arg0, h3, attr-arg1, [r, attr-instance, recognize_01, attr-arg1, h3]], attr-arg2, h3]"
1953,1953,1953,1953,2328,27210,krempe,Eine Krempe ist der Rand von einem Hut.,0_short,Kleider,2011-11-10T10:47:27Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Krempe 2:=ist 3:=der 4:=Rand 5:=von 6:=einem 7:=Hut.,1,,A brim is the edge of a hat.,['# ::snt A brim is the edge of a hat.\n(e / edge\n      :part-of (h / hat)\n      :domain (b / brim))'],"[e, attr-instance, edge, attr-part_of, [h, attr-instance, hat], attr-domain, [b, attr-instance, brim]]"
1954,1954,1954,1954,2329,27211,krieg,"Kriege werden von Politiker oder Personen, die eine Gruppe leiten geplant.",0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,"0:=Kriege 1:=werden 2:=von 3:=Politiker 4:=oder 5:=Personen, 6:=die 7:=eine 8:=Gruppe 9:=leiten 10:=geplant.",2,"[[3], [5, 6, 8, 9]]",Wars are planned by politicians or people who lead a group.,['# ::snt Wars are planned by politicians or people who lead a group.\n(p / plan-01\n      :ARG0 (o / or\n            :op1 (p2 / politician)\n            :op2 (p3 / person\n                  :ARG0-of (l / lead-02\n                        :ARG1 (g / group))))\n      :ARG1 (w / war))'],"[p, attr-instance, plan_01, attr-arg0, [o, attr-instance, or, attr-op1, [p2, attr-instance, politician], attr-op2, [p3, attr-instance, person, attr-arg0_of, [l, attr-instance, lead_02, attr-arg1, [g, attr-instance, group]]]], attr-arg1, [w, attr-instance, war]]"
1955,1955,1955,1955,2330,27212,krieg,"Man denkt, dass Kriege die einzige Lösung sind ein Konflikt zu lösen.",1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,"0:=Man 1:=denkt, 2:=dass 3:=Kriege 4:=die 5:=einzige 6:=Lösung 7:=sind 8:=ein 9:=Konflikt 10:=zu 11:=lösen.",2,"[[3, 5, 6, 7], [9, 10, 11]]",People think that wars are the only solution to resolve a conflict.,['# ::snt People think that wars are the only solution to resolve a conflict.\n(t / think-01\n      :ARG0 (p / person)\n      :ARG1 (s / solve-01\n            :ARG0 (w / war-01)\n            :ARG1 (r / resolve-01\n                  :ARG1 (c / conflict-01))\n            :mod (o / only)))'],"[t, attr-instance, think_01, attr-arg0, [p, attr-instance, person], attr-arg1, [s, attr-instance, solve_01, attr-arg0, [w, attr-instance, war_01], attr-arg1, [r, attr-instance, resolve_01, attr-arg1, [c, attr-instance, conflict_01]], attr-mod, [o, attr-instance, only]]]"
1956,1956,1956,1956,2331,27213,krieg,Früher wurden Kriege bekannt gegeben.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Früher 1:=wurden 2:=Kriege 3:=bekannt 4:=gegeben.,1,,"In the past, wars were announced.","['# ::snt In the past, wars were announced.\n(a / announce-01\n      :ARG1 (w / war)\n      :time (p / past))']","[a, attr-instance, announce_01, attr-arg1, [w, attr-instance, war], attr-time, [p, attr-instance, past]]"
1957,1957,1957,1957,2332,27214,krieg,Heutzutage gibt es keine Kriegerklärung mehr.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Heutzutage 1:=gibt 2:=es 3:=keine 4:=Kriegerklärung 5:=mehr.,1,,Nowadays there is no declaration of war anymore.,['# ::snt Nowadays there is no declaration of war anymore.\n(d / declare-02\n      :polarity -\n      :ARG1 (w / war)\n      :time (a / anymore))'],"[d, attr-instance, declare_02, attr-polarity, negative, attr-arg1, [w, attr-instance, war], attr-time, [a, attr-instance, anymore]]"
1958,1958,1958,1958,2333,27215,krieg,"Das Ziel ist es, andere Länder zu erobern \newline oder Macht zu gewinnen.",4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,"0:=Das 1:=Ziel 2:=ist 3:=es, 4:=andere 5:=Länder 6:=zu 7:=erobern 8:=\newline 9:=oder 10:=Macht 11:=zu 12:=gewinnen.",2,"[[1, 2, 3, 4, 5, 6, 7], [10, 11, 12]]",The goal is to conquer other countries \newline or gain power.,['# ::snt The goal is to conquer other countries \\newline or gain power.\n(h / have-purpose-91\n      :ARG2 (o / or\n            :op1 (c / conquer-01\n                  :ARG1 (c2 / country\n                        :mod (o2 / other))\n                  :manner (l / line\n                        :polarity -))\n            :op2 (g / gain-02\n                  :ARG1 (p / power))))'],"[h, attr-instance, have_purpose_91, attr-arg2, [o, attr-instance, or, attr-op1, [c, attr-instance, conquer_01, attr-arg1, [c2, attr-instance, country, attr-mod, [o2, attr-instance, other]], attr-manner, [l, attr-instance, line, attr-polarity, negative]], attr-op2, [g, attr-instance, gain_02, attr-arg1, [p, attr-instance, power]]]]"
1959,1959,1959,1959,2334,27216,krieg,Die Gegner betrachtet man als Feinde.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Die 1:=Gegner 2:=betrachtet 3:=man 4:=als 5:=Feinde.,1,,The opponents are considered enemies.,['# ::snt The opponents are considered enemies.\n(c / consider-01\n      :ARG1 (e / enemy\n            :domain (p / person\n                  :ARG0-of (o / oppose-01))))'],"[c, attr-instance, consider_01, attr-arg1, [e, attr-instance, enemy, attr-domain, [p, attr-instance, person, attr-arg0_of, [o, attr-instance, oppose_01]]]]"
1960,1960,1960,1960,2335,27217,krieg,Man versucht sie deshalb zu töten.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Man 1:=versucht 2:=sie 3:=deshalb 4:=zu 5:=töten.,1,,That's why people try to kill them.,"[""# ::snt That's why people try to kill them.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (t2 / try-01\n            :ARG0 (p / person)\n            :ARG1 (k / kill-01\n                  :ARG0 p\n                  :ARG1 (t3 / they))))""]","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [t2, attr-instance, try_01, attr-arg0, [p, attr-instance, person], attr-arg1, [k, attr-instance, kill_01, attr-arg0, p, attr-arg1, [t3, attr-instance, they]]]]"
1961,1961,1961,1961,2336,27218,krieg,In einem Krieg werden meistens Kriegswaffen angewendet.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=In 1:=einem 2:=Krieg 3:=werden 4:=meistens 5:=Kriegswaffen 6:=angewendet.,1,,"In a war, weapons of war are usually used.","['# ::snt In a war, weapons of war are usually used.\n(u / use-01\n      :ARG1 (w / weapon\n            :mod (w2 / war-01))\n      :mod (u2 / usual)\n      :condition (w3 / war-01))']","[u, attr-instance, use_01, attr-arg1, [w, attr-instance, weapon, attr-mod, [w2, attr-instance, war_01]], attr-mod, [u2, attr-instance, usual], attr-condition, [w3, attr-instance, war_01]]"
1962,1962,1962,1962,2340,27222,krieg,"Kriege gibt es oft in Ländern, die von Diktatoren geführt werden.",11_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,"0:=Kriege 1:=gibt 2:=es 3:=oft 4:=in 5:=Ländern, 6:=die 7:=von 8:=Diktatoren 9:=geführt 10:=werden.",2,"[[0, 1, 2, 3, 4, 5], [7, 8, 9, 10]]",Wars often occur in countries ruled by dictators.,['# ::snt Wars often occur in countries ruled by dictators.\n(w / war-01\n      :location (c / country\n            :ARG1-of (r / rule-03\n                  :ARG0 (d / dictator)))\n      :frequency (o / often))'],"[w, attr-instance, war_01, attr-location, [c, attr-instance, country, attr-arg1_of, [r, attr-instance, rule_03, attr-arg0, [d, attr-instance, dictator]]], attr-frequency, [o, attr-instance, often]]"
1963,1963,1963,1963,2341,27223,krieg,"Ein Diktator ist ein Mensch, der die alleinige Macht über ein Land hat.",12_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,"0:=Ein 1:=Diktator 2:=ist 3:=ein 4:=Mensch, 5:=der 6:=die 7:=alleinige 8:=Macht 9:=über 10:=ein 11:=Land 12:=hat.",4,"[[1, 2, 4], [5, 8, 12], [7, 8], [8, 9, 11]]",A dictator is a person who has sole power over a country.,['# ::snt A dictator is a person who has sole power over a country.\n(p / person\n      :ARG0-of (h / have-03\n            :ARG1 (p2 / power\n                  :mod (s / sole)\n                  :topic (c / country)))\n      :domain (d / dictator))'],"[p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [p2, attr-instance, power, attr-mod, [s, attr-instance, sole], attr-topic, [c, attr-instance, country]]], attr-domain, [d, attr-instance, dictator]]"
1964,1964,1964,1964,2342,27224,krieg,"Diktatoren interessieren sich nicht, was das Volk denkt.",13_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,"0:=Diktatoren 1:=interessieren 2:=sich 3:=nicht, 4:=was 5:=das 6:=Volk 7:=denkt.",2,"[[0, 1, 2, 3], [4, 6, 7]]",Dictators don't care what the people think.,"[""# ::snt Dictators don't care what the people think.\n(c / care-01\n      :polarity -\n      :ARG0 (p / person\n            :ARG0-of (l / legislate-01))\n      :ARG1 (t / thing\n            :ARG1-of (t2 / think-01\n                  :ARG0 (p2 / person))))""]","[c, attr-instance, care_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-arg0_of, [l, attr-instance, legislate_01]], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [t2, attr-instance, think_01, attr-arg0, [p2, attr-instance, person]]]]"
1965,1965,1965,1965,2343,27225,krieg,Sie schüchtern sie durch Kriege ein.,14_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Sie 1:=schüchtern 2:=sie 3:=durch 4:=Kriege 5:=ein.,2,"[[0, 1, 2, 5], [3, 4]]",They intimidate them through wars.,['# ::snt They intimidate them through wars.\n(ii / intimidate-01\n      :ARG0 (t / they)\n      :ARG1 (t2 / they)\n      :instrument (w / war-01))'],"[ii, attr-instance, intimidate_01, attr-arg0, [t, attr-instance, they], attr-arg1, [t2, attr-instance, they], attr-instrument, [w, attr-instance, war_01]]"
1966,1966,1966,1966,2344,27226,krieg,Es gibt auch Kriege indem es nur um wertvolle Rohstoffe geht.,15_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Es 1:=gibt 2:=auch 3:=Kriege 4:=indem 5:=es 6:=nur 7:=um 8:=wertvolle 9:=Rohstoffe 10:=geht.,2,"[[0, 1, 2, 3, 4, 5, 6, 7, 9, 10], [8]]",There are also wars that are only about valuable raw materials.,['# ::snt There are also wars that are only about valuable raw materials.\n(w / war-01\n      :ARG2 (m / material\n            :mod (r / raw)\n            :ARG1-of (v / value-02)\n            :mod (o / only))\n      :mod (a / also))'],"[w, attr-instance, war_01, attr-arg2, [m, attr-instance, material, attr-mod, [r, attr-instance, raw], attr-arg1_of, [v, attr-instance, value_02], attr-mod, [o, attr-instance, only]], attr-mod, [a, attr-instance, also]]"
1967,1967,1967,1967,2345,27227,krieg,"Rohstoffe sind zum Beispiel, Gold oder Öl.",16_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,"0:=Rohstoffe 1:=sind 2:=zum 3:=Beispiel, 4:=Gold 5:=oder 6:=Öl.",2,"[[4], [6]]","Raw materials include gold and oil, for example.","['# ::snt Raw materials include gold and oil, for example.\n(ii / include-01\n      :ARG1 (a / and\n            :op1 (g / gold)\n            :op2 (o / oil)\n            :ARG0-of (e / exemplify-01))\n      :ARG2 (m / material\n            :ARG1-of (r / raw-02)))']","[ii, attr-instance, include_01, attr-arg1, [a, attr-instance, and, attr-op1, [g, attr-instance, gold], attr-op2, [o, attr-instance, oil], attr-arg0_of, [e, attr-instance, exemplify_01]], attr-arg2, [m, attr-instance, material, attr-arg1_of, [r, attr-instance, raw_02]]]"
1968,1968,1968,1968,2347,27229,krieg,Es gibt mehrere Gründe für ein Kriegsende: • Man hat zu wenig Soldaten,18_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Es 1:=gibt 2:=mehrere 3:=Gründe 4:=für 5:=ein 6:=Kriegsende: 7:=• 8:=Man 9:=hat 10:=zu 11:=wenig 12:=Soldaten,2,"[[0, 1, 2, 3, 4, 6], [8, 9, 10, 11, 12]]",There are several reasons for the war to end: • There are too few soldiers,['# ::snt There are several reasons for the war to end: • There are too few soldiers\n(c / cause-01\n      :ARG0 (h / have-quant-91\n            :ARG1 (s / soldier)\n            :ARG2 (f / few)\n            :ARG3 (t / too))\n      :ARG1 (e / end-01\n            :ARG1 (w / war))\n      :quant (s2 / several))'],"[c, attr-instance, cause_01, attr-arg0, [h, attr-instance, have_quant_91, attr-arg1, [s, attr-instance, soldier], attr-arg2, [f, attr-instance, few], attr-arg3, [t, attr-instance, too]], attr-arg1, [e, attr-instance, end_01, attr-arg1, [w, attr-instance, war]], attr-quant, [s2, attr-instance, several]]"
1969,1969,1969,1969,2348,27230,krieg,Es gibt mehrere Gründe für ein Kriegsende: • die andere Seite gewinnt,19_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Es 1:=gibt 2:=mehrere 3:=Gründe 4:=für 5:=ein 6:=Kriegsende: 7:=• 8:=die 9:=andere 10:=Seite 11:=gewinnt,2,"[[0, 1, 2, 3, 4, 6], [9, 10, 11]]",There are several reasons for a war to end: • the other side wins,['# ::snt There are several reasons for a war to end: • the other side wins\n(c / cause-01\n      :ARG0 (w / win-01\n            :ARG0 (s / side\n                  :mod (o / other)))\n      :ARG1 (e / end-01\n            :ARG1 (w2 / war-01))\n      :quant (s2 / several))'],"[c, attr-instance, cause_01, attr-arg0, [w, attr-instance, win_01, attr-arg0, [s, attr-instance, side, attr-mod, [o, attr-instance, other]]], attr-arg1, [e, attr-instance, end_01, attr-arg1, [w2, attr-instance, war_01]], attr-quant, [s2, attr-instance, several]]"
1970,1970,1970,1970,2349,27231,krieg,Es gibt mehrere Gründe für ein Kriegsende: • Die UNO befiehlt Länder Kriege zu beenden.,20_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Es 1:=gibt 2:=mehrere 3:=Gründe 4:=für 5:=ein 6:=Kriegsende: 7:=• 8:=Die 9:=UNO 10:=befiehlt 11:=Länder 12:=Kriege 13:=zu 14:=beenden.,3,"[[0, 1, 2, 3, 4, 6], [9, 10, 11], [12, 13, 14]]",There are several reasons for an end to war: • The UN orders countries to end wars.,"['# ::snt There are several reasons for an end to war: • The UN orders countries to end wars.\n(c / cause-01\n      :ARG0 (o / order-01\n            :ARG0 (o2 / organization\n                  :name (n / name\n                        :op1 ""UN""))\n            :ARG1 (c2 / country)\n            :ARG2 (e / end-01\n                  :ARG0 c2\n                  :ARG1 (w / war-01)))\n      :ARG1 (e2 / end-01\n            :ARG1 (w2 / war-01))\n      :quant (s / several))']","[c, attr-instance, cause_01, attr-arg0, [o, attr-instance, order_01, attr-arg0, [o2, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""un""]], attr-arg1, [c2, attr-instance, country], attr-arg2, [e, attr-instance, end_01, attr-arg0, c2, attr-arg1, [w, attr-instance, war_01]]], attr-arg1, [e2, attr-instance, end_01, attr-arg1, [w2, attr-instance, war_01]], attr-quant, [s, attr-instance, several]]"
1971,1971,1971,1971,2350,27232,krieg,Krieg ist ein Kampf.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Krieg 1:=ist 2:=ein 3:=Kampf.,1,,War is a fight.,['# ::snt War is a fight.\n(f / fight-01\n      :domain (w / war-01))'],"[f, attr-instance, fight_01, attr-domain, [w, attr-instance, war_01]]"
1972,1972,1972,1972,2351,27233,krieg,Verschiedene Länder kämpfen gegeneinander.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Verschiedene 1:=Länder 2:=kämpfen 3:=gegeneinander.,1,,Different countries fight against each other.,['# ::snt Different countries fight against each other.\n(f / fight-01\n      :ARG0 (c / country\n            :ARG1-of (d / differ-02)\n            :ARG1-of f))'],"[f, attr-instance, fight_01, attr-arg0, [c, attr-instance, country, attr-arg1_of, [d, attr-instance, differ_02], attr-arg1_of, f]]"
1973,1973,1973,1973,2352,27234,krieg,Oder verschiedene Bevölkerungs-gruppen kämpfen gegeneinander.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-10-10T20:54:29Z,687c465aa14a2b3047e6e0c21fbc9670,0:=Oder 1:=verschiedene 2:=Bevölkerungs-gruppen 3:=kämpfen 4:=gegeneinander.,1,,Or different population groups fight against each other.,['# ::snt Or different population groups fight against each other.\n(o / or\n      :op2 (f / fight-01\n            :ARG0 (g / group\n                  :consist-of (p / population)\n                  :ARG1-of (d / differ-02)\n                  :ARG1-of f)))'],"[o, attr-instance, or, attr-op2, [f, attr-instance, fight_01, attr-arg0, [g, attr-instance, group, attr-consist_of, [p, attr-instance, population], attr-arg1_of, [d, attr-instance, differ_02], attr-arg1_of, f]]]"
1974,1974,1974,1974,2353,27235,krimkrise,Die Krim-krise ist eine Krise.,0_long,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Krim-krise 2:=ist 3:=eine 4:=Krise.,1,,The Crimean crisis is a crisis.,"['# ::snt The Crimean crisis is a crisis.\n(c / crisis\n      :domain (c2 / crisis\n            :mod (p / peninsula\n                  :name (n / name\n                        :op1 ""Crimea""))))']","[c, attr-instance, crisis, attr-domain, [c2, attr-instance, crisis, attr-mod, [p, attr-instance, peninsula, attr-name, [n, attr-instance, name, attr-op1, ""crimea""]]]]"
1975,1975,1975,1975,2354,27236,krimkrise,Die Gruppen die sich streiten können sich nicht entscheiden.,1_long,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Gruppen 2:=die 3:=sich 4:=streiten 5:=können 6:=sich 7:=nicht 8:=entscheiden.,2,"[[1, 5, 6, 7, 8], [2, 3, 4]]",The groups that are arguing cannot decide.,['# ::snt The groups that are arguing cannot decide.\n(p / possible-01\n      :polarity -\n      :ARG1 (d / decide-01\n            :ARG0 (g / group\n                  :ARG0-of (a / argue-01))))'],"[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [d, attr-instance, decide_01, attr-arg0, [g, attr-instance, group, attr-arg0_of, [a, attr-instance, argue_01]]]]"
1976,1976,1976,1976,2355,27237,krimkrise,Sie haben verschiedene Meinungen über die Insel Krim.,2_long,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=haben 2:=verschiedene 3:=Meinungen 4:=über 5:=die 6:=Insel 7:=Krim.,2,"[[0, 1, 2], [4, 6, 7]]",They have different opinions about the island of Crimea.,"['# ::snt They have different opinions about the island of Crimea.\n(o / opine-01\n      :ARG0 (t / they)\n      :ARG1 (ii / island\n            :name (n / name\n                  :op1 ""Crimea""))\n      :ARG1-of (d / differ-02))']","[o, attr-instance, opine_01, attr-arg0, [t, attr-instance, they], attr-arg1, [ii, attr-instance, island, attr-name, [n, attr-instance, name, attr-op1, ""crimea""]], attr-arg1_of, [d, attr-instance, differ_02]]"
1977,1977,1977,1977,2356,27238,krimkrise,Die Krimkrise ist ein großer Streit.,0_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Krimkrise 2:=ist 3:=ein 4:=großer 5:=Streit.,1,,The Crimean crisis is a major dispute.,"['# ::snt The Crimean crisis is a major dispute.\n(d / dispute-01\n      :ARG2 (c / crisis\n            :location (p / peninsula\n                  :name (n / name\n                        :op1 ""Crimea"")))\n      :ARG1-of (m / major-02))']","[d, attr-instance, dispute_01, attr-arg2, [c, attr-instance, crisis, attr-location, [p, attr-instance, peninsula, attr-name, [n, attr-instance, name, attr-op1, ""crimea""]]], attr-arg1_of, [m, attr-instance, major_02]]"
1978,1978,1978,1978,2357,27239,krimkrise,Der Streit ist zwischen verschiedenen Gruppen.,1_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Streit 2:=ist 3:=zwischen 4:=verschiedenen 5:=Gruppen.,1,,The dispute is between different groups.,['# ::snt The dispute is between different groups.\n(d / dispute-01\n      :ARG0 (g / group\n            :ARG1-of (d2 / differ-02)))'],"[d, attr-instance, dispute_01, attr-arg0, [g, attr-instance, group, attr-arg1_of, [d2, attr-instance, differ_02]]]"
1979,1979,1979,1979,2358,27240,krimkrise,Sie streiten sich um die Insel Krim.,2_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=streiten 2:=sich 3:=um 4:=die 5:=Insel 6:=Krim.,2,"[[0, 1, 2], [3, 5, 6]]",They are fighting over the island of Crimea.,"['# ::snt They are fighting over the island of Crimea.\n(f / fight-01\n      :ARG0 (t / they)\n      :ARG2 (ii / island\n            :name (n / name\n                  :op1 ""Crimea"")))']","[f, attr-instance, fight_01, attr-arg0, [t, attr-instance, they], attr-arg2, [ii, attr-instance, island, attr-name, [n, attr-instance, name, attr-op1, ""crimea""]]]"
1980,1980,1980,1980,2359,27241,krimkrise,Die Gruppen können sich nicht einigen wer auf der Insel bestimmen soll.,3_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Die 1:=Gruppen 2:=können 3:=sich 4:=nicht 5:=einigen 6:=wer 7:=auf 8:=der 9:=Insel 10:=bestimmen 11:=soll.,2,"[[1, 2, 3, 4, 5], [6, 7, 9, 10, 11]]",The groups cannot agree on who should be in charge on the island.,['# ::snt The groups cannot agree on who should be in charge on the island.\n(p / possible-01\n      :polarity -\n      :ARG1 (a / agree-01\n            :ARG0 (g / group)\n            :ARG1 (r / recommend-01\n                  :ARG1 (c / charge-08\n                        :ARG1 (p2 / person)\n                        :location (ii / island)))))'],"[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [a, attr-instance, agree_01, attr-arg0, [g, attr-instance, group], attr-arg1, [r, attr-instance, recommend_01, attr-arg1, [c, attr-instance, charge_08, attr-arg1, [p2, attr-instance, person], attr-location, [ii, attr-instance, island]]]]]"
1981,1981,1981,1981,2360,27242,krimkrise,Und wem die Insel gehört.,4_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=wem 2:=die 3:=Insel 4:=gehört.,1,,And who owns the island.,['# ::snt And who owns the island.\n(a / and\n      :op2 (o / own-01\n            :ARG0 (a2 / amr-unknown)\n            :ARG1 (ii / island)))'],"[a, attr-instance, and, attr-op2, [o, attr-instance, own_01, attr-arg0, [a2, attr-instance, amr_unknown], attr-arg1, [ii, attr-instance, island]]]"
1982,1982,1982,1982,2361,27243,krimkrise,Der Streit ist groß.,5_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Streit 2:=ist 3:=groß.,1,,The dispute is big.,['# ::snt The dispute is big.\n(b / big\n      :domain (d / dispute-01))'],"[b, attr-instance, big, attr-domain, [d, attr-instance, dispute_01]]"
1983,1983,1983,1983,2362,27244,krimkrise,Und die Gruppen bekämpfen sich auch mit Waffen.,6_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Und 1:=die 2:=Gruppen 3:=bekämpfen 4:=sich 5:=auch 6:=mit 7:=Waffen.,2,"[[2, 3, 4], [5, 6, 7]]",And the groups also fight each other with weapons.,['# ::snt And the groups also fight each other with weapons.\n(a / and\n      :op2 (f / fight-01\n            :ARG0 (g / group)\n            :ARG1 g\n            :ARG2 (w / weapon)\n            :mod (a2 / also)))'],"[a, attr-instance, and, attr-op2, [f, attr-instance, fight_01, attr-arg0, [g, attr-instance, group], attr-arg1, g, attr-arg2, [w, attr-instance, weapon], attr-mod, [a2, attr-instance, also]]]"
1984,1984,1984,1984,2363,27245,krimkrise,Weil sie verschiedene Meinungen haben.,7_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Weil 1:=sie 2:=verschiedene 3:=Meinungen 4:=haben.,1,,Because they have different opinions.,['# ::snt Because they have different opinions.\n(c / cause-01\n      :ARG0 (o / opine-01\n            :ARG0 (t / they)\n            :ARG1-of (d / differ-02)))'],"[c, attr-instance, cause_01, attr-arg0, [o, attr-instance, opine_01, attr-arg0, [t, attr-instance, they], attr-arg1_of, [d, attr-instance, differ_02]]]"
1985,1985,1985,1985,2364,27246,krimkrise,Der Streit geht schon lange.,8_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Streit 2:=geht 3:=schon 4:=lange.,1,,The dispute has been going on for a long time.,['# ::snt The dispute has been going on for a long time.\n(g / go-on-15\n      :ARG1 (d / dispute-01)\n      :ARG1-of (l / long-03))'],"[g, attr-instance, go_on_15, attr-arg1, [d, attr-instance, dispute_01], attr-arg1_of, [l, attr-instance, long_03]]"
1986,1986,1986,1986,2365,27247,krimkrise,Der Streit hat am 23. Februar 2014 angefangen.,9_short,Politik|Geopolitik|Seiten_mit_defekten_Dateilinks,2015-08-02T10:35:14Z,af28a20dfb151690981ee13d72ce655c,0:=Der 1:=Streit 2:=hat 3:=am 4:=23. 5:=Februar 6:=2014 7:=angefangen.,1,,"The dispute began on February 23, 2014.","['# ::snt The dispute began on February 23, 2014.\n(b / begin-01\n      :ARG1 (d / dispute-01)\n      :time (d2 / date-entity\n            :year 2014\n            :month 2\n            :day 23))']","[b, attr-instance, begin_01, attr-arg1, [d, attr-instance, dispute_01], attr-time, [d2, attr-instance, date_entity, attr-year, 2014, attr-month, 2, attr-day, 23]]"
1987,1987,1987,1987,2366,27248,krise,Eine Krise kann groß sein.,0_long,Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2009-12-26T16:03:45Z,d8779288de353a0da9951dfcae710103,0:=Eine 1:=Krise 2:=kann 3:=groß 4:=sein.,1,,A crisis can be big.,['# ::snt A crisis can be big.\n(p / possible-01\n      :ARG1 (b / big\n            :domain (c / crisis)))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, big, attr-domain, [c, attr-instance, crisis]]]"
1988,1988,1988,1988,2367,27249,krise,In einer Krise müssen sich Menschen gegenseitig helfen.,1_long,Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2009-12-26T16:03:45Z,d8779288de353a0da9951dfcae710103,0:=In 1:=einer 2:=Krise 3:=müssen 4:=sich 5:=Menschen 6:=gegenseitig 7:=helfen.,1,,"In a crisis, people have to help each other.","['# ::snt In a crisis, people have to help each other.\n(o / obligate-01\n      :ARG1 (p / person)\n      :ARG2 (h / help-01\n            :ARG0 p\n            :ARG1 p)\n      :time (c / crisis))']","[o, attr-instance, obligate_01, attr-arg1, [p, attr-instance, person], attr-arg2, [h, attr-instance, help_01, attr-arg0, p, attr-arg1, p], attr-time, [c, attr-instance, crisis]]"
1989,1989,1989,1989,2368,27250,krise,Eine Krise ist eine gefährliche Lage.,0_short,Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2009-12-26T16:03:45Z,d8779288de353a0da9951dfcae710103,0:=Eine 1:=Krise 2:=ist 3:=eine 4:=gefährliche 5:=Lage.,1,,A crisis is a dangerous situation.,['# ::snt A crisis is a dangerous situation.\n(s / situation\n      :ARG0-of (e / endanger-01)\n      :domain (c / crisis))'],"[s, attr-instance, situation, attr-arg0_of, [e, attr-instance, endanger_01], attr-domain, [c, attr-instance, crisis]]"
1990,1990,1990,1990,2369,27251,krise,In einer Krise gibt es Probleme.,1_short,Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2009-12-26T16:03:45Z,d8779288de353a0da9951dfcae710103,0:=In 1:=einer 2:=Krise 3:=gibt 4:=es 5:=Probleme.,1,,In a crisis there are problems.,['# ::snt In a crisis there are problems.\n(p / problem\n      :time (c / crisis))'],"[p, attr-instance, problem, attr-time, [c, attr-instance, crisis]]"
1991,1991,1991,1991,2370,27252,krise,Und man muss eine Entscheidung treffen.,2_short,Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2009-12-26T16:03:45Z,d8779288de353a0da9951dfcae710103,0:=Und 1:=man 2:=muss 3:=eine 4:=Entscheidung 5:=treffen.,1,,And you have to make a decision.,['# ::snt And you have to make a decision.\n(a / and\n      :op2 (o / obligate-01\n            :ARG1 (y / you)\n            :ARG2 (d / decide-01\n                  :ARG0 y)))'],"[a, attr-instance, and, attr-op2, [o, attr-instance, obligate_01, attr-arg1, [y, attr-instance, you], attr-arg2, [d, attr-instance, decide_01, attr-arg0, y]]]"
1992,1992,1992,1992,2371,27253,kriterien,Kriterien grenzen ein.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:52:21Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Kriterien 1:=grenzen 2:=ein.,1,,Criteria limit.,['# ::snt Criteria limit.\n(l / limit-01\n      :ARG1 (c / criteria))'],"[l, attr-instance, limit_01, attr-arg1, [c, attr-instance, criteria]]"
1993,1993,1993,1993,2372,27254,kriterien,Beispiel: Ich will ein Auto.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:52:21Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Beispiel: 1:=Ich 2:=will 3:=ein 4:=Auto.,1,,Example: I want a car.,['# ::snt Example: I want a car.\n(e / exemplify-01\n      :ARG0 (w / want-01\n            :ARG0 (ii / i)\n            :ARG1 (c / car)))'],"[e, attr-instance, exemplify_01, attr-arg0, [w, attr-instance, want_01, attr-arg0, [ii, attr-instance, i], attr-arg1, [c, attr-instance, car]]]"
1994,1994,1994,1994,2373,27255,kriterien,Meine Kriterien: \newline Kriterium 1: Es soll rot sein.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:52:21Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Meine 1:=Kriterien: 2:=\newline 3:=Kriterium 4:=1: 5:=Es 6:=soll 7:=rot 8:=sein.,3,"[[0, 1], [3, 4], [5, 6, 7, 8]]",My criteria: \newline Criterion 1: It should be red.,"['# ::snt My criteria: \\newline Criterion 1: It should be red.\n(m / multi-sentence\n      :snt1 (c / criteria\n            :poss (ii / i)\n            :mod (o / organization\n                  :name (n / name\n                        :op1 "" \\newline""\n                        :op2 ""Criterion""\n                        :op3 1)))\n      :snt2 (r / recommend-01\n            :ARG1 (r2 / red-02\n                  :ARG1 (ii2 / it))))']","[m, attr-instance, multi_sentence, attr-snt1, [c, attr-instance, criteria, attr-poss, [ii, attr-instance, i], attr-mod, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, "", \newline"", attr-op2, ""criterion"", attr-op3, 1]]], attr-snt2, [r, attr-instance, recommend_01, attr-arg1, [r2, attr-instance, red_02, attr-arg1, [ii2, attr-instance, it]]]]"
1995,1995,1995,1995,2374,27256,kriterien,Kriterium 2: Es soll schnell sein.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:52:21Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Kriterium 1:=2: 2:=Es 3:=soll 4:=schnell 5:=sein.,2,"[[0, 1], [2, 3, 4, 5]]",Criterion 2: It should be fast.,"['# ::snt Criterion 2: It should be fast.\n(s / say-01\n      :ARG0 (t / thing\n            :name (n / name\n                  :op1 ""Criterion""\n                  :op2 2))\n      :ARG1 (r / recommend-01\n            :ARG1 (f / fast-02\n                  :ARG1 (ii / it))))']","[s, attr-instance, say_01, attr-arg0, [t, attr-instance, thing, attr-name, [n, attr-instance, name, attr-op1, ""criterion"", attr-op2, 2]], attr-arg1, [r, attr-instance, recommend_01, attr-arg1, [f, attr-instance, fast_02, attr-arg1, [ii, attr-instance, it]]]]"
1996,1996,1996,1996,2375,27257,kriterien,Alle anderen Autos möchte ich nicht.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:52:21Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Alle 1:=anderen 2:=Autos 3:=möchte 4:=ich 5:=nicht.,1,,I don't want any other cars.,"[""# ::snt I don't want any other cars.\n(w / want-01\n      :polarity -\n      :ARG0 (ii / i)\n      :ARG1 (c / car\n            :mod (o / other)\n            :mod (a / any)))""]","[w, attr-instance, want_01, attr-polarity, negative, attr-arg0, [ii, attr-instance, i], attr-arg1, [c, attr-instance, car, attr-mod, [o, attr-instance, other], attr-mod, [a, attr-instance, any]]]"
1997,1997,1997,1997,2376,27258,kriterien,Kriterien ist die Mehrzahl von Kriterium.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:52:21Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Kriterien 1:=ist 2:=die 3:=Mehrzahl 4:=von 5:=Kriterium.,1,,Criteria is the plural of criterion.,['# ::snt Criteria is the plural of criterion.\n(c / criteria\n      :mod (p / plural\n            :domain (c2 / criterion)))'],"[c, attr-instance, criteria, attr-mod, [p, attr-instance, plural, attr-domain, [c2, attr-instance, criterion]]]"
1998,1998,1998,1998,2377,27259,kriterien,"Kriterien sind Punkte, die erfüllt sein müssen.",1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:52:21Z,8e384e35a2bd67eaeb964edc16d2f92c,"0:=Kriterien 1:=sind 2:=Punkte, 3:=die 4:=erfüllt 5:=sein 6:=müssen.",2,"[[0, 1, 2], [3, 4, 5, 6]]",Criteria are points that must be met.,['# ::snt Criteria are points that must be met.\n(o / obligate-01\n      :ARG2 (m / meet-01\n            :ARG1 (p / point-04\n                  :ARG2-of (c / criticize-01))))'],"[o, attr-instance, obligate_01, attr-arg2, [m, attr-instance, meet_01, attr-arg1, [p, attr-instance, point_04, attr-arg2_of, [c, attr-instance, criticize_01]]]]"
1999,1999,1999,1999,2378,27260,kriterium,Ein Kriterium ist ein wichtiger Punkt für eine Sache.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:47:33Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Ein 1:=Kriterium 2:=ist 3:=ein 4:=wichtiger 5:=Punkt 6:=für 7:=eine 8:=Sache.,2,"[[1, 2, 4], [6, 8]]",A criterion is an important point for something.,['# ::snt A criterion is an important point for something.\n(p / point-04\n      :ARG1 (c / criterion)\n      :ARG1-of (ii / important-01)\n      :purpose (s / something))'],"[p, attr-instance, point_04, attr-arg1, [c, attr-instance, criterion], attr-arg1_of, [ii, attr-instance, important_01], attr-purpose, [s, attr-instance, something]]"
2000,2000,2000,2000,2379,27261,kriterium,Beispiel: Ich möchte ein Auto.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:47:33Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Beispiel: 1:=Ich 2:=möchte 3:=ein 4:=Auto.,1,,Example: I want a car.,['# ::snt Example: I want a car.\n(e / exemplify-01\n      :ARG0 (w / want-01\n            :ARG0 (ii / i)\n            :ARG1 (c / car)))'],"[e, attr-instance, exemplify_01, attr-arg0, [w, attr-instance, want_01, attr-arg0, [ii, attr-instance, i], attr-arg1, [c, attr-instance, car]]]"
2001,2001,2001,2001,2380,27262,kriterium,Mein Kriterium: Das Auto soll rot sein.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:47:33Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Mein 1:=Kriterium: 2:=Das 3:=Auto 4:=soll 5:=rot 6:=sein.,2,"[[0, 1], [3, 4, 5, 6]]",My criteria: The car should be red.,['# ::snt My criteria: The car should be red.\n(c / criteria\n      :poss (ii / i)\n      :domain (r / recommend-01\n            :ARG1 (r2 / red-02\n                  :ARG1 (c2 / car))))'],"[c, attr-instance, criteria, attr-poss, [ii, attr-instance, i], attr-domain, [r, attr-instance, recommend_01, attr-arg1, [r2, attr-instance, red_02, attr-arg1, [c2, attr-instance, car]]]]"
2002,2002,2002,2002,2381,27263,kriterium,"Dann ist das Kriterium die Farbe ""rot"".",3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:47:33Z,8e384e35a2bd67eaeb964edc16d2f92c,"0:=Dann 1:=ist 2:=das 3:=Kriterium 4:=die 5:=Farbe 6:=""rot"".",2,"[[5], [6]]","Then the criterion is the color ""red"".","['# ::snt Then the criterion is the color ""red"".\n(d / determine-01\n      :ARG1 (c / color\n            :ARG1-of (r / red-02))\n      :mod (t / then))']","[d, attr-instance, determine_01, attr-arg1, [c, attr-instance, color, attr-arg1_of, [r, attr-instance, red_02]], attr-mod, [t, attr-instance, then]]"
2003,2003,2003,2003,2382,27264,kriterium,Ein Kriterium ist eine Eigenschaft.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2017-08-29T13:47:33Z,8e384e35a2bd67eaeb964edc16d2f92c,0:=Ein 1:=Kriterium 2:=ist 3:=eine 4:=Eigenschaft.,1,,A criterion is a property.,['# ::snt A criterion is a property.\n(p / property\n      :domain (c / criterion))'],"[p, attr-instance, property, attr-domain, [c, attr-instance, criterion]]"
2004,2004,2004,2004,2383,27265,kryptomnesie,Das Wort Kryptomnesie wird in der Psychologie oft benutzt.,0_long,Gesundheit,2013-01-26T10:24:13Z,a9f29492ed8786de5125371472bcc003,0:=Das 1:=Wort 2:=Kryptomnesie 3:=wird 4:=in 5:=der 6:=Psychologie 7:=oft 8:=benutzt.,1,,The word cryptomnesia is often used in psychology.,['# ::snt The word cryptomnesia is often used in psychology.\n(u / use-01\n      :ARG1 (w / word\n            :mod (c / cryptomnesia))\n      :ARG2 (p / psychology)\n      :frequency (o / often))'],"[u, attr-instance, use_01, attr-arg1, [w, attr-instance, word, attr-mod, [c, attr-instance, cryptomnesia]], attr-arg2, [p, attr-instance, psychology], attr-frequency, [o, attr-instance, often]]"
2005,2005,2005,2005,2384,27266,kryptomnesie,Bei einer Kryptomnesie hat jemand eine Idee oder Information.,0_short,Gesundheit,2013-01-26T10:24:13Z,a9f29492ed8786de5125371472bcc003,0:=Bei 1:=einer 2:=Kryptomnesie 3:=hat 4:=jemand 5:=eine 6:=Idee 7:=oder 8:=Information.,2,"[[6], [8]]","In cryptomnesia, someone has an idea or information.","['# ::snt In cryptomnesia, someone has an idea or information.\n(h / have-03\n      :ARG0 (s / someone)\n      :ARG1 (o / or\n            :op1 (ii / idea)\n            :op2 (ii2 / information))\n      :location (a / amnesia\n            :mod (c / cryptomnesia)))']","[h, attr-instance, have_03, attr-arg0, [s, attr-instance, someone], attr-arg1, [o, attr-instance, or, attr-op1, [ii, attr-instance, idea], attr-op2, [ii2, attr-instance, information]], attr-location, [a, attr-instance, amnesia, attr-mod, [c, attr-instance, cryptomnesia]]]"
2006,2006,2006,2006,2385,27267,kryptomnesie,Die Person denkt das diese Informartion oder die Idee von ihr sind.,1_short,Gesundheit,2013-01-26T10:24:13Z,a9f29492ed8786de5125371472bcc003,0:=Die 1:=Person 2:=denkt 3:=das 4:=diese 5:=Informartion 6:=oder 7:=die 8:=Idee 9:=von 10:=ihr 11:=sind.,3,"[[1, 2], [3, 5, 9, 10, 11], [3, 8, 9, 10, 11]]",The person thinks that this information or idea is his.,['# ::snt The person thinks that this information or idea is his.\n(t / think-01\n      :ARG0 (p / person)\n      :ARG1 (o / or\n            :op1 (ii / information\n                  :mod (t2 / this))\n            :op2 (ii2 / idea\n                  :mod t2)\n            :poss p))'],"[t, attr-instance, think_01, attr-arg0, [p, attr-instance, person], attr-arg1, [o, attr-instance, or, attr-op1, [ii, attr-instance, information, attr-mod, [t2, attr-instance, this]], attr-op2, [ii2, attr-instance, idea, attr-mod, t2], attr-poss, p]]"
2007,2007,2007,2007,2386,27268,kryptomnesie,In Wirklichkeit ist die Idee oder die Information aber von jemand anderem.,2_short,Gesundheit,2013-01-26T10:24:13Z,a9f29492ed8786de5125371472bcc003,0:=In 1:=Wirklichkeit 2:=ist 3:=die 4:=Idee 5:=oder 6:=die 7:=Information 8:=aber 9:=von 10:=jemand 11:=anderem.,2,"[[4], [7]]","In reality, the idea or information comes from someone else.","['# ::snt In reality, the idea or information comes from someone else.\n(c / come-03\n      :ARG1 (o / or\n            :op1 (ii / idea)\n            :op2 (ii2 / information))\n      :ARG2 (s / someone\n            :mod (e / else))\n      :mod (ii3 / in-reality))']","[c, attr-instance, come_03, attr-arg1, [o, attr-instance, or, attr-op1, [ii, attr-instance, idea], attr-op2, [ii2, attr-instance, information]], attr-arg2, [s, attr-instance, someone, attr-mod, [e, attr-instance, else]], attr-mod, [ii3, attr-instance, in_reality]]"
2008,2008,2008,2008,2387,27269,kryptowahrung,Eine Krypto-währung ist ein Tausch-mittel.,0_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Krypto-währung 2:=ist 3:=ein 4:=Tausch-mittel.,1,,A crypto currency is a medium of exchange.,['# ::snt A crypto currency is a medium of exchange.\n(m / medium\n      :medium-of (e / exchange-01)\n      :domain (c / currency\n            :mod (c2 / crypto)))'],"[m, attr-instance, medium, attr-medium_of, [e, attr-instance, exchange_01], attr-domain, [c, attr-instance, currency, attr-mod, [c2, attr-instance, crypto]]]"
2009,2009,2009,2009,2388,27270,kryptowahrung,Es ist eine Währung.,1_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=ist 2:=eine 3:=Währung.,1,,It is a currency.,['# ::snt It is a currency.\n(c / currency\n      :domain (ii / it))'],"[c, attr-instance, currency, attr-domain, [ii, attr-instance, it]]"
2010,2010,2010,2010,2389,27271,kryptowahrung,"Das heißt, \newline man kann damit etwas kaufen.",2_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=man 4:=kann 5:=damit 6:=etwas 7:=kaufen.",1,,That means \newline you can buy something with it.,['# ::snt That means \\newline you can buy something with it.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (p / possible-01\n            :ARG1 (b / buy-01\n                  :ARG0 (y / you)\n                  :ARG1 (s / something)\n                  :ARG3 (ii / it)))\n      :mod (n / newline))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [p, attr-instance, possible_01, attr-arg1, [b, attr-instance, buy_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-arg3, [ii, attr-instance, it]]], attr-mod, [n, attr-instance, newline]]"
2011,2011,2011,2011,2390,27272,kryptowahrung,Oder man bekommt die Krypto-währung wenn man etwas ver-kauft.,3_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=man 2:=bekommt 3:=die 4:=Krypto-währung 5:=wenn 6:=man 7:=etwas 8:=ver-kauft.,2,"[[1, 2, 4], [5, 6, 7, 8]]",Or you get the crypto currency when you sell something.,['# ::snt Or you get the crypto currency when you sell something.\n(o / or\n      :op2 (g / get-01\n            :ARG0 (y / you)\n            :ARG1 (c / currency\n                  :mod (c2 / crypto))\n            :time (s / sell-01\n                  :ARG0 y\n                  :ARG1 (s2 / something))))'],"[o, attr-instance, or, attr-op2, [g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [c, attr-instance, currency, attr-mod, [c2, attr-instance, crypto]], attr-time, [s, attr-instance, sell_01, attr-arg0, y, attr-arg1, [s2, attr-instance, something]]]]"
2012,2012,2012,2012,2391,27273,kryptowahrung,Es gibt über 4000 verschiedene Krypto-währungen.,4_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=über 3:=4000 4:=verschiedene 5:=Krypto-währungen.,1,,There are over 4000 different crypto currencies.,['# ::snt There are over 4000 different crypto currencies.\n(c / currency\n      :mod (c2 / crypto)\n      :ARG1-of (d / differ-02)\n      :quant (o / over\n            :op1 4000))'],"[c, attr-instance, currency, attr-mod, [c2, attr-instance, crypto], attr-arg1_of, [d, attr-instance, differ_02], attr-quant, [o, attr-instance, over, attr-op1, 4000]]"
2013,2013,2013,2013,2392,27274,kryptowahrung,Eine sehr bekannte Krypto-währung ist Bit-coin.,5_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=sehr 2:=bekannte 3:=Krypto-währung 4:=ist 5:=Bit-coin.,1,,A very well-known crypto currency is Bit-coin.,"['# ::snt A very well-known crypto currency is Bit-coin.\n(c / currency\n      :mod (c2 / crypto)\n      :ARG1-of (k / know-02\n            :degree (w / well\n                  :degree (v / very)))\n      :domain (c3 / coin\n            :name (n / name\n                  :op1 ""Bit-coin"")))']","[c, attr-instance, currency, attr-mod, [c2, attr-instance, crypto], attr-arg1_of, [k, attr-instance, know_02, attr-degree, [w, attr-instance, well, attr-degree, [v, attr-instance, very]]], attr-domain, [c3, attr-instance, coin, attr-name, [n, attr-instance, name, attr-op1, ""bit_coin""]]]"
2014,2014,2014,2014,2393,27275,kryptowahrung,Jeden Tag bezahlen sehr viele Menschen mit einer Krypto-währung.,6_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Jeden 1:=Tag 2:=bezahlen 3:=sehr 4:=viele 5:=Menschen 6:=mit 7:=einer 8:=Krypto-währung.,2,"[[0, 1], [6, 8]]","Every day, many people pay with a crypto currency.","['# ::snt Every day, many people pay with a crypto currency.\n(p / pay-01\n      :ARG0 (p2 / person\n            :quant (m / many))\n      :instrument (c / currency\n            :mod (c2 / crypto))\n      :frequency (r / rate-entity-91\n            :ARG3 (t / temporal-quantity\n                  :quant 1\n                  :unit (d / day))))']","[p, attr-instance, pay_01, attr-arg0, [p2, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-instrument, [c, attr-instance, currency, attr-mod, [c2, attr-instance, crypto]], attr-frequency, [r, attr-instance, rate_entity_91, attr-arg3, [t, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [d, attr-instance, day]]]]"
2015,2015,2015,2015,2394,27276,kryptowahrung,Sie kaufen sich Sachen mit einer Krypto-währung.,7_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=kaufen 2:=sich 3:=Sachen 4:=mit 5:=einer 6:=Krypto-währung.,2,"[[0, 1, 2, 3], [4, 6]]",You buy things with a crypto currency.,['# ::snt You buy things with a crypto currency.\n(b / buy-01\n      :ARG0 (y / you)\n      :ARG1 (t / thing)\n      :ARG3 (c / currency\n            :mod (c2 / crypto)))'],"[b, attr-instance, buy_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing], attr-arg3, [c, attr-instance, currency, attr-mod, [c2, attr-instance, crypto]]]"
2016,2016,2016,2016,2395,27277,kryptowahrung,Oder bekommen Krypto-währung wenn sie etwas verkaufen.,8_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=bekommen 2:=Krypto-währung 3:=wenn 4:=sie 5:=etwas 6:=verkaufen.,2,"[[0, 1, 2], [3, 4, 5, 6]]",Or get crypto currency when they sell something.,['# ::snt Or get crypto currency when they sell something.\n(o / or\n      :op2 (g / get-01\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG1 (c / currency\n                  :mod (c2 / crypto))\n            :time (s / sell-01\n                  :ARG0 (t / they)\n                  :ARG1 (s2 / something))))'],"[o, attr-instance, or, attr-op2, [g, attr-instance, get_01, attr-mode, imperative, attr-arg0, [y, attr-instance, you], attr-arg1, [c, attr-instance, currency, attr-mod, [c2, attr-instance, crypto]], attr-time, [s, attr-instance, sell_01, attr-arg0, [t, attr-instance, they], attr-arg1, [s2, attr-instance, something]]]]"
2017,2017,2017,2017,2396,27278,kryptowahrung,Krypto-währungen sind digital.,9_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Krypto-währungen 1:=sind 2:=digital.,1,,Cryptocurrencies are digital.,['# ::snt Cryptocurrencies are digital.\n(d / digital\n      :domain (u / urrency))'],"[d, attr-instance, digital, attr-domain, [u, attr-instance, urrency]]"
2018,2018,2018,2018,2397,27279,kryptowahrung,"Das heißt, \newline es gibt sie nur in Computer-netzwerken.",10_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=es 4:=gibt 5:=sie 6:=nur 7:=in 8:=Computer-netzwerken.",1,,"That is, \newline only exists in computer networks.","['# ::snt That is, \\newline only exists in computer networks.\n(m / mean-01\n      :ARG2 (e / exist-01\n            :ARG1 (l / line\n                  :mod (o / only))\n            :location (n / network\n                  :mod (c / computer))))']","[m, attr-instance, mean_01, attr-arg2, [e, attr-instance, exist_01, attr-arg1, [l, attr-instance, line, attr-mod, [o, attr-instance, only]], attr-location, [n, attr-instance, network, attr-mod, [c, attr-instance, computer]]]]"
2019,2019,2019,2019,2398,27280,kryptowahrung,Es gibt keine Bank die Krypto-währungen kontrolliert.,11_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=keine 3:=Bank 4:=die 5:=Krypto-währungen 6:=kontrolliert.,2,"[[0, 1, 2, 3], [4, 5, 6]]",There is no bank that controls crypto currencies.,['# ::snt There is no bank that controls crypto currencies.\n(b / bank\n      :polarity -\n      :ARG0-of (c / control-01\n            :ARG1 (c2 / currency\n                  :mod (c3 / crypto))))'],"[b, attr-instance, bank, attr-polarity, negative, attr-arg0_of, [c, attr-instance, control_01, attr-arg1, [c2, attr-instance, currency, attr-mod, [c3, attr-instance, crypto]]]]"
2020,2020,2020,2020,2399,27281,kryptowahrung,Darum muss man keine Gebühren an die Bank be-zahlen.,12_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Darum 1:=muss 2:=man 3:=keine 4:=Gebühren 5:=an 6:=die 7:=Bank 8:=be-zahlen.,2,"[[0, 1, 2, 3, 4, 8], [5, 7]]","Therefore, you do not have to pay any fees to the bank.","['# ::snt Therefore, you do not have to pay any fees to the bank.\n(c / cause-01\n      :ARG1 (o / obligate-01\n            :polarity -\n            :ARG1 (y / you)\n            :ARG2 (p / pay-01\n                  :ARG0 y\n                  :ARG1 (f / fee\n                        :mod (a / any))\n                  :ARG2 (b / bank))))']","[c, attr-instance, cause_01, attr-arg1, [o, attr-instance, obligate_01, attr-polarity, negative, attr-arg1, [y, attr-instance, you], attr-arg2, [p, attr-instance, pay_01, attr-arg0, y, attr-arg1, [f, attr-instance, fee, attr-mod, [a, attr-instance, any]], attr-arg2, [b, attr-instance, bank]]]]"
2021,2021,2021,2021,2400,27282,kryptowahrung,"Wenn viele Menschen eine Krypto-währung benutzen, \newline ist die Krypto-währung viel wert.",13_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Wenn 1:=viele 2:=Menschen 3:=eine 4:=Krypto-währung 5:=benutzen, 6:=\newline 7:=ist 8:=die 9:=Krypto-währung 10:=viel 11:=wert.",2,"[[0, 1, 2, 4, 5], [7, 9, 10, 11]]","If many people use a cryptocurrency, \newline the cryptocurrency is worth a lot.","['# ::snt If many people use a cryptocurrency, \\newline the cryptocurrency is worth a lot.\n(h / have-condition-91\n      :ARG1 (w / worth-01\n            :ARG1 (c / cryptocurrency)\n            :ARG2 (l / lot))\n      :ARG2 (u / use-01\n            :ARG0 (p / person\n                  :quant (m / many))\n            :ARG1 c))']","[h, attr-instance, have_condition_91, attr-arg1, [w, attr-instance, worth_01, attr-arg1, [c, attr-instance, cryptocurrency], attr-arg2, [l, attr-instance, lot]], attr-arg2, [u, attr-instance, use_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, c]]"
2022,2022,2022,2022,2401,27283,kryptowahrung,Das heißt man bekommt viele dafür.,14_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=heißt 2:=man 3:=bekommt 4:=viele 5:=dafür.,1,,That means you get a lot for it.,['# ::snt That means you get a lot for it.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (g / get-01\n            :ARG0 (y / you)\n            :ARG1 (l / lot)\n            :ARG3 (ii / it)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [l, attr-instance, lot], attr-arg3, [ii, attr-instance, it]]]"
2023,2023,2023,2023,2402,27284,kryptowahrung,"Wenn wenig Menschen eine Krypto-währung benutzen, \newline ist die Krypto-währung wenig wert.",15_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Wenn 1:=wenig 2:=Menschen 3:=eine 4:=Krypto-währung 5:=benutzen, 6:=\newline 7:=ist 8:=die 9:=Krypto-währung 10:=wenig 11:=wert.",2,"[[0, 1, 2, 4, 5], [7, 9, 10, 11]]","If few people use a cryptocurrency, \newline the cryptocurrency is worth little.","['# ::snt If few people use a cryptocurrency, \\newline the cryptocurrency is worth little.\n(h / have-condition-91\n      :ARG1 (w / worth-01\n            :ARG1 (c / cryptocurrency)\n            :ARG2 (l / little))\n      :ARG2 (u / use-01\n            :ARG0 (p / person\n                  :quant (f / few))\n            :ARG1 c))']","[h, attr-instance, have_condition_91, attr-arg1, [w, attr-instance, worth_01, attr-arg1, [c, attr-instance, cryptocurrency], attr-arg2, [l, attr-instance, little]], attr-arg2, [u, attr-instance, use_01, attr-arg0, [p, attr-instance, person, attr-quant, [f, attr-instance, few]], attr-arg1, c]]"
2024,2024,2024,2024,2403,27285,kryptowahrung,Das heißt man bekommt wenig dafür.,16_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=heißt 2:=man 3:=bekommt 4:=wenig 5:=dafür.,1,,That means you get little for it.,['# ::snt That means you get little for it.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (g / get-01\n            :ARG0 (y / you)\n            :ARG1 (l / little)\n            :ARG3 (ii / it)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [g, attr-instance, get_01, attr-arg0, [y, attr-instance, you], attr-arg1, [l, attr-instance, little], attr-arg3, [ii, attr-instance, it]]]"
2025,2025,2025,2025,2404,27286,kryptowahrung,Das Wort Krypto bedeutet geheim.,17_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Wort 2:=Krypto 3:=bedeutet 4:=geheim.,1,,The word crypto means secret.,"['# ::snt The word crypto means secret.\n(m / mean-01\n      :ARG1 (w / word\n            :mod (s / string-entity\n                  :value "" crypto""))\n      :ARG2 (s2 / secret))']","[m, attr-instance, mean_01, attr-arg1, [w, attr-instance, word, attr-mod, [s, attr-instance, string_entity, attr-value, "", crypto""]], attr-arg2, [s2, attr-instance, secret]]"
2026,2026,2026,2026,2405,27287,kryptowahrung,Krypto-währungen sind vers-schlüsselt.,18_long,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Krypto-währungen 1:=sind 2:=vers-schlüsselt.,1,,Crypto currencies are encrypted.,['# ::snt Crypto currencies are encrypted.\n(e / encrypt-01\n      :ARG1 (c / currency\n            :mod (c2 / Crypto)))'],"[e, attr-instance, encrypt_01, attr-arg1, [c, attr-instance, currency, attr-mod, [c2, attr-instance, crypto]]]"
2027,2027,2027,2027,2406,27288,kryptowahrung,Kryptowährung ist eine Art Geld.,0_short,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kryptowährung 1:=ist 2:=eine 3:=Art 4:=Geld.,1,,Cryptocurrency is a type of money.,['# ::snt Cryptocurrency is a type of money.\n(m / money\n      :mod (t / type)\n      :domain (c / Cryptocurrency))'],"[m, attr-instance, money, attr-mod, [t, attr-instance, type], attr-domain, [c, attr-instance, cryptocurrency]]"
2028,2028,2028,2028,2407,27289,kryptowahrung,Man kann sich damit etwas kaufen.,1_short,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=kann 2:=sich 3:=damit 4:=etwas 5:=kaufen.,1,,You can buy something with it.,['# ::snt You can buy something with it.\n(p / possible-01\n      :ARG1 (b / buy-01\n            :ARG0 (y / you)\n            :ARG1 (s / something)\n            :ARG3 (ii / it)))'],"[p, attr-instance, possible_01, attr-arg1, [b, attr-instance, buy_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-arg3, [ii, attr-instance, it]]]"
2029,2029,2029,2029,2408,27290,kryptowahrung,Krypto-währungen funktionieren ohne Banken.,2_short,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Krypto-währungen 1:=funktionieren 2:=ohne 3:=Banken.,1,,Cryptocurrencies work without banks.,['# ::snt Cryptocurrencies work without banks.\n(w / work-09\n      :ARG1 (c / Cryptocurrency)\n      :manner (b / bank-01\n            :polarity -))'],"[w, attr-instance, work_09, attr-arg1, [c, attr-instance, cryptocurrency], attr-manner, [b, attr-instance, bank_01, attr-polarity, negative]]"
2030,2030,2030,2030,2409,27291,kryptowahrung,Etwas kaufen oder verkaufen machen 2 Personen alleine.,3_short,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Etwas 1:=kaufen 2:=oder 3:=verkaufen 4:=machen 5:=2 6:=Personen 7:=alleine.,2,"[[1], [3]]",Buying or selling something is something that two people do alone.,['# ::snt Buying or selling something is something that two people do alone.\n(s / something\n      :domain (o / or\n            :op1 (b / buy-01\n                  :ARG1 s))\n      :op2 (s2 / sell-01)\n      :ARG1-of s2\n      :ARG1-of (d / do-02\n            :ARG0 (p / person\n                  :quant 2)\n            :mod (a / alone)))'],"[s, attr-instance, something, attr-domain, [o, attr-instance, or, attr-op1, [b, attr-instance, buy_01, attr-arg1, s]], attr-op2, [s2, attr-instance, sell_01], attr-arg1_of, s2, attr-arg1_of, [d, attr-instance, do_02, attr-arg0, [p, attr-instance, person, attr-quant, 2], attr-mod, [a, attr-instance, alone]]]"
2031,2031,2031,2031,2410,27292,kryptowahrung,Krypto-währungen haben keine Münzen oder Scheine.,4_short,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Krypto-währungen 1:=haben 2:=keine 3:=Münzen 4:=oder 5:=Scheine.,2,"[[3], [5]]",Cryptocurrencies do not have coins or notes.,['# ::snt Cryptocurrencies do not have coins or notes.\n(h / have-03\n      :polarity -\n      :ARG0 (c / Cryptocurrency)\n      :ARG1 (o / or\n            :op1 (c2 / coin)\n            :op2 (n / note)))'],"[h, attr-instance, have_03, attr-polarity, negative, attr-arg0, [c, attr-instance, cryptocurrency], attr-arg1, [o, attr-instance, or, attr-op1, [c2, attr-instance, coin], attr-op2, [n, attr-instance, note]]]"
2032,2032,2032,2032,2411,27293,kryptowahrung,Es gibt sie nur in Computer-netz-werken.,5_short,Geld,2018-12-19T14:08:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=sie 3:=nur 4:=in 5:=Computer-netz-werken.,1,,They only exist in computer networks.,['# ::snt They only exist in computer networks.\n(e / exist-01\n      :ARG1 (t / they)\n      :location (n / network\n            :mod (c / computer))\n      :mod (o / only))'],"[e, attr-instance, exist_01, attr-arg1, [t, attr-instance, they], attr-location, [n, attr-instance, network, attr-mod, [c, attr-instance, computer]], attr-mod, [o, attr-instance, only]]"
2033,2033,2033,2033,2412,27294,kugelgrill,Ein Kugel-grill funktioniert mit Propan oder Holzkohle.,0_long,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Kugel-grill 2:=funktioniert 3:=mit 4:=Propan 5:=oder 6:=Holzkohle.,2,"[[4], [6]]",A kettle grill works with propane or charcoal.,['# ::snt A kettle grill works with propane or charcoal.\n(w / work-09\n      :ARG1 (g / grill\n            :mod (k / kettle))\n      :ARG2 (o / or\n            :op1 (p / propane)\n            :op2 (c / charcoal)))'],"[w, attr-instance, work_09, attr-arg1, [g, attr-instance, grill, attr-mod, [k, attr-instance, kettle]], attr-arg2, [o, attr-instance, or, attr-op1, [p, attr-instance, propane], attr-op2, [c, attr-instance, charcoal]]]"
2034,2034,2034,2034,2413,27295,kugelgrill,Ein Kugelgrill hat eine Runde Form.,1_long,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Kugelgrill 2:=hat 3:=eine 4:=Runde 5:=Form.,1,,A kettle grill has a round shape.,['# ::snt A kettle grill has a round shape.\n(s / shape\n      :mod (r / round)\n      :domain (g / grill\n            :mod (k / kettle)))'],"[s, attr-instance, shape, attr-mod, [r, attr-instance, round], attr-domain, [g, attr-instance, grill, attr-mod, [k, attr-instance, kettle]]]"
2035,2035,2035,2035,2415,27297,kugelgrill,Mit dem Kugel-grill kann man indirekt grillen.,3_long,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Mit 1:=dem 2:=Kugel-grill 3:=kann 4:=man 5:=indirekt 6:=grillen.,2,"[[0, 2], [3, 4, 5, 6]]",With the kettle grill you can grill indirectly.,['# ::snt With the kettle grill you can grill indirectly.\n(p / possible-01\n      :ARG1 (g / grill-01\n            :ARG0 (y / you)\n            :ARG1-of (d / direct-02\n                  :polarity -))\n      :instrument (g2 / grill\n            :mod (k / kettle)))'],"[p, attr-instance, possible_01, attr-arg1, [g, attr-instance, grill_01, attr-arg0, [y, attr-instance, you], attr-arg1_of, [d, attr-instance, direct_02, attr-polarity, negative]], attr-instrument, [g2, attr-instance, grill, attr-mod, [k, attr-instance, kettle]]]"
2036,2036,2036,2036,2416,27298,kugelgrill,"Das heißt, \newline die Wärme kommt nicht nur von unten.",4_long,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Das 1:=heißt, 2:=\newline 3:=die 4:=Wärme 5:=kommt 6:=nicht 7:=nur 8:=von 9:=unten.",1,,This means that \newline the heat does not only come from below.,['# ::snt This means that \\newline the heat does not only come from below.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (c / come-01\n            :ARG1 (h / heat)\n            :ARG3 (b / below)\n            :mod (o / only\n                  :polarity -)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [c, attr-instance, come_01, attr-arg1, [h, attr-instance, heat], attr-arg3, [b, attr-instance, below], attr-mod, [o, attr-instance, only, attr-polarity, negative]]]"
2037,2037,2037,2037,2417,27299,kugelgrill,"Wenn der Deckel drauf ist, \newline kommt die Wäre auch von oben.",5_long,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Wenn 1:=der 2:=Deckel 3:=drauf 4:=ist, 5:=\newline 6:=kommt 7:=die 8:=Wäre 9:=auch 10:=von 11:=oben.",2,"[[0, 2, 3, 4], [6, 8, 9, 10, 11]]","When the lid is on, \newline the heat also comes from above.","['# ::snt When the lid is on, \\newline the heat also comes from above.\n(c / come-03\n      :ARG1 (h / heat)\n      :ARG2 (a / above)\n      :mod (a2 / also)\n      :time (o / on-01\n            :ARG1 (l / lid)))']","[c, attr-instance, come_03, attr-arg1, [h, attr-instance, heat], attr-arg2, [a, attr-instance, above], attr-mod, [a2, attr-instance, also], attr-time, [o, attr-instance, on_01, attr-arg1, [l, attr-instance, lid]]]"
2038,2038,2038,2038,2418,27300,kugelgrill,So wird das Essen gegart.,6_long,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=So 1:=wird 2:=das 3:=Essen 4:=gegart.,1,,This is how the food is cooked.,['# ::snt This is how the food is cooked.\n(c / cook-01\n      :ARG1 (f / food)\n      :manner (t / this))'],"[c, attr-instance, cook_01, attr-arg1, [f, attr-instance, food], attr-manner, [t, attr-instance, this]]"
2039,2039,2039,2039,2419,27301,kugelgrill,Ähnlich wie bei einem Umluftofen.,7_long,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ähnlich 1:=wie 2:=bei 3:=einem 4:=Umluftofen.,1,,Similar to a convection oven.,['# ::snt Similar to a convection oven.\n(r / resemble-01\n      :ARG2 (o / oven\n            :ARG0-of (c / convection-01)))'],"[r, attr-instance, resemble_01, attr-arg2, [o, attr-instance, oven, attr-arg0_of, [c, attr-instance, convection_01]]]"
2040,2040,2040,2040,2420,27302,kugelgrill,George Stephen hat den ersten Kugel-grill gebaut.,8_long,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=George 1:=Stephen 2:=hat 3:=den 4:=ersten 5:=Kugel-grill 6:=gebaut.,1,,George Stephen built the first kettle grill.,"['# ::snt George Stephen built the first kettle grill.\n(b / build-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""George""\n                  :op2 ""Stephen""))\n      :ARG1 (g / grill\n            :mod (k / kettle)\n            :ord (o / ordinal-entity\n                  :value 1)))']","[b, attr-instance, build_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""george"", attr-op2, ""stephen""]], attr-arg1, [g, attr-instance, grill, attr-mod, [k, attr-instance, kettle], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]]]"
2041,2041,2041,2041,2421,27303,kugelgrill,Ein Kugel-grill ist eine bestimmte Art von Grill.,0_short,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Kugel-grill 2:=ist 3:=eine 4:=bestimmte 5:=Art 6:=von 7:=Grill.,2,"[[1, 2], [4, 5, 6]]",A kettle grill is a specific type of grill.,['# ::snt A kettle grill is a specific type of grill.\n(t / type\n      :domain (g / grill\n            :mod (k / kettle))\n      :ARG1-of (s / specific-02)\n      :mod (g2 / grill))'],"[t, attr-instance, type, attr-domain, [g, attr-instance, grill, attr-mod, [k, attr-instance, kettle]], attr-arg1_of, [s, attr-instance, specific_02], attr-mod, [g2, attr-instance, grill]]"
2042,2042,2042,2042,2422,27304,kugelgrill,Ein Kugel-grill hat einen Deckel.,1_short,Essen_und_Trinken|Technik,2013-12-15T10:24:22Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Kugel-grill 2:=hat 3:=einen 4:=Deckel.,1,,A kettle grill has a lid.,['# ::snt A kettle grill has a lid.\n(h / have-03\n      :ARG0 (g / grill\n            :mod (k / kettle))\n      :ARG1 (l / lid))'],"[h, attr-instance, have_03, attr-arg0, [g, attr-instance, grill, attr-mod, [k, attr-instance, kettle]], attr-arg1, [l, attr-instance, lid]]"
2043,2043,2043,2043,2423,27305,kulanz,"Wenn man Kulanz gibt, \newline macht man etwas freiwillig.",0_long,Ohne_Kategorie,2012-03-14T09:06:01Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Wenn 1:=man 2:=Kulanz 3:=gibt, 4:=\newline 5:=macht 6:=man 7:=etwas 8:=freiwillig.",2,"[[0, 1, 2, 3], [5, 6, 7, 8]]","When you give goodwill, \newline you do something voluntarily.","['# ::snt When you give goodwill, \\newline you do something voluntarily.\n(d / do-02\n      :ARG0 (y / you)\n      :ARG1 (s / something)\n      :ARG1-of (v / voluntary-02)\n      :condition (g / give-01\n            :ARG0 y\n            :ARG1 (g2 / goodwill))\n      :ARG1-of (n / newline-00))']","[d, attr-instance, do_02, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-arg1_of, [v, attr-instance, voluntary_02], attr-condition, [g, attr-instance, give_01, attr-arg0, y, attr-arg1, [g2, attr-instance, goodwill]], attr-arg1_of, [n, attr-instance, newline_00]]"
2044,2044,2044,2044,2424,27306,kulanz,Man muss es nicht machen.,1_long,Ohne_Kategorie,2012-03-14T09:06:01Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Man 1:=muss 2:=es 3:=nicht 4:=machen.,1,,You don't have to do it.,"[""# ::snt You don't have to do it.\n(o / obligate-01\n      :polarity -\n      :ARG1 (y / you)\n      :ARG2 (d / do-02\n            :ARG0 y\n            :ARG1 (ii / it)))""]","[o, attr-instance, obligate_01, attr-polarity, negative, attr-arg1, [y, attr-instance, you], attr-arg2, [d, attr-instance, do_02, attr-arg0, y, attr-arg1, [ii, attr-instance, it]]]"
2045,2045,2045,2045,2425,27307,kulanz,Man macht dies aus verscheidenen Gründen.,2_long,Ohne_Kategorie,2012-03-14T09:06:01Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Man 1:=macht 2:=dies 3:=aus 4:=verscheidenen 5:=Gründen.,1,,People do this for various reasons.,['# ::snt People do this for various reasons.\n(d / do-02\n      :ARG0 (p / person)\n      :ARG1 (t / this)\n      :ARG1-of (c / cause-01\n            :ARG0 (r / reason\n                  :mod (v / various))))'],"[d, attr-instance, do_02, attr-arg0, [p, attr-instance, person], attr-arg1, [t, attr-instance, this], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [r, attr-instance, reason, attr-mod, [v, attr-instance, various]]]]"
2046,2046,2046,2046,2426,27308,kulanz,Zum Beispiel weil man großzügig ist.,3_long,Ohne_Kategorie,2012-03-14T09:06:01Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel 2:=weil 3:=man 4:=großzügig 5:=ist.,1,,"For example, because you are generous.","['# ::snt For example, because you are generous.\n(e / exemplify-01\n      :ARG0 (c / cause-01\n            :ARG0 (g / generous-01\n                  :ARG0 (y / you))))']","[e, attr-instance, exemplify_01, attr-arg0, [c, attr-instance, cause_01, attr-arg0, [g, attr-instance, generous_01, attr-arg0, [y, attr-instance, you]]]]"
2047,2047,2047,2047,2427,27309,kulanz,Das Wort Kulanz ist ein Substantiv.,4_long,Ohne_Kategorie,2012-03-14T09:06:01Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Kulanz 3:=ist 4:=ein 5:=Substantiv.,2,"[[1], [5]]",The word goodwill is a noun.,['# ::snt The word goodwill is a noun.\n(n / noun\n      :domain (w / word\n            :mod (g / goodwill)))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [g, attr-instance, goodwill]]]"
2048,2048,2048,2048,2428,27310,kulanz,"Kulanz bedeutet,  \newline etwas freiwillig machen.",0_short,Ohne_Kategorie,2012-03-14T09:06:01Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Kulanz 1:=bedeutet, 2:= 3:=\newline 4:=etwas 5:=freiwillig 6:=machen.",2,"[[0, 1], [4, 5, 6]]",Goodwill means doing something voluntarily.,['# ::snt Goodwill means doing something voluntarily.\n(m / mean-01\n      :ARG1 (g / goodwill)\n      :ARG2 (d / do-02\n            :ARG1 (s / something)\n            :ARG1-of (v / voluntary-02)))'],"[m, attr-instance, mean_01, attr-arg1, [g, attr-instance, goodwill], attr-arg2, [d, attr-instance, do_02, attr-arg1, [s, attr-instance, something], attr-arg1_of, [v, attr-instance, voluntary_02]]]"
2049,2049,2049,2049,2429,27312,kulturbeutel,Damit man diese Sachen leichter mitnehmen kann.,1_long,Ohne_Kategorie,2014-05-22T19:23:36Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Damit 1:=man 2:=diese 3:=Sachen 4:=leichter 5:=mitnehmen 6:=kann.,1,,So that you can take these things with you more easily.,['# ::snt So that you can take these things with you more easily.\n(c / cause-01\n      :ARG1 (p / possible-01\n            :ARG1 (t / take-01\n                  :ARG0 (y / you)\n                  :ARG1 (t2 / thing\n                        :mod (t3 / this))\n                  :accompanier y\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (e / easy-05\n                              :ARG1 t)\n                        :ARG3 (m / more)))))'],"[c, attr-instance, cause_01, attr-arg1, [p, attr-instance, possible_01, attr-arg1, [t, attr-instance, take_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t2, attr-instance, thing, attr-mod, [t3, attr-instance, this]], attr-accompanier, y, attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [e, attr-instance, easy_05, attr-arg1, t], attr-arg3, [m, attr-instance, more]]]]]"
2050,2050,2050,2050,2432,27315,kulturbeutel,Sachen für die Gesundheit und Sauberkeit gibt es viele.,4_long,Ohne_Kategorie,2014-05-22T19:23:36Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Sachen 1:=für 2:=die 3:=Gesundheit 4:=und 5:=Sauberkeit 6:=gibt 7:=es 8:=viele.,2,"[[3], [5]]",There are many things for health and cleanliness.,['# ::snt There are many things for health and cleanliness.\n(t / thing\n      :quant (m / many)\n      :purpose (a / and\n            :op1 (h / healthy)\n            :op2 (c / clean-01)))'],"[t, attr-instance, thing, attr-quant, [m, attr-instance, many], attr-purpose, [a, attr-instance, and, attr-op1, [h, attr-instance, healthy], attr-op2, [c, attr-instance, clean_01]]]"
2051,2051,2051,2051,2434,27317,kulturbeutel,Das Wort Kulturbeutel ist ein Substantiv.,6_long,Ohne_Kategorie,2014-05-22T19:23:36Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Kulturbeutel 3:=ist 4:=ein 5:=Substantiv.,2,"[[1], [5]]",The word toiletry bag is a noun.,['# ::snt The word toiletry bag is a noun.\n(n / noun\n      :domain (w / word\n            :mod (b / bag\n                  :mod (t / toiletry))))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [b, attr-instance, bag, attr-mod, [t, attr-instance, toiletry]]]]"
2052,2052,2052,2052,2435,27318,kulturbeutel,Es hat diese 2 Wörter: • Kultur (für die Pflege des eigenen Körpers  zum Beispiel waschen),7_long,Ohne_Kategorie,2014-05-22T19:23:36Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Es 1:=hat 2:=diese 3:=2 4:=Wörter: 5:=• 6:=Kultur 7:=(für 8:=die 9:=Pflege 10:=des 11:=eigenen 12:=Körpers 13:= 14:=zum 15:=Beispiel 16:=waschen),3,"[[0, 1, 2, 3, 4, 6], [7, 9, 10, 11, 12], [14, 15, 16]]","It has these 2 words: • Culture (for the care of one's own body, for example washing)","[""# ::snt It has these 2 words: • Culture (for the care of one's own body, for example washing)\n(h / have-03\n      :ARG0 (ii / it)\n      :ARG1 (w / word\n            :quant 2\n            :mod (t / this)\n            :topic (c / culture\n                  :purpose (c2 / care-03\n                        :ARG1 (b / body\n                              :poss (o / one))\n                        :example (w2 / wash-01)))))""]","[h, attr-instance, have_03, attr-arg0, [ii, attr-instance, it], attr-arg1, [w, attr-instance, word, attr-quant, 2, attr-mod, [t, attr-instance, this], attr-topic, [c, attr-instance, culture, attr-purpose, [c2, attr-instance, care_03, attr-arg1, [b, attr-instance, body, attr-poss, [o, attr-instance, one]], attr-example, [w2, attr-instance, wash_01]]]]]"
2053,2053,2053,2053,2436,27319,kulturbeutel,Es hat diese 2 Wörter: • Beutel (um etwas hinein zu tun),8_long,Ohne_Kategorie,2014-05-22T19:23:36Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Es 1:=hat 2:=diese 3:=2 4:=Wörter: 5:=• 6:=Beutel 7:=(um 8:=etwas 9:=hinein 10:=zu 11:=tun),2,"[[0, 1, 2, 3, 4, 6], [7, 8, 9, 10, 11]]",It has these 2 words: • bag (to put something in),['# ::snt It has these 2 words: • bag (to put something in)\n(h / have-03\n      :ARG0 (ii / it)\n      :ARG1 (w / word\n            :quant 2\n            :mod (t / this)\n            :consist-of (b / bag\n                  :purpose (p / put-01\n                        :ARG1 (s / something)\n                        :ARG2 (ii2 / inside)))))'],"[h, attr-instance, have_03, attr-arg0, [ii, attr-instance, it], attr-arg1, [w, attr-instance, word, attr-quant, 2, attr-mod, [t, attr-instance, this], attr-consist_of, [b, attr-instance, bag, attr-purpose, [p, attr-instance, put_01, attr-arg1, [s, attr-instance, something], attr-arg2, [ii2, attr-instance, inside]]]]]"
2054,2054,2054,2054,2437,27320,kulturbeutel,Ein Kulturbeutel ist eine kleine Tasche.,0_short,Ohne_Kategorie,2014-05-22T19:23:36Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Kulturbeutel 2:=ist 3:=eine 4:=kleine 5:=Tasche.,1,,A toiletry bag is a small bag.,['# ::snt A toiletry bag is a small bag.\n(b / bag\n      :mod (s / small)\n      :domain (b2 / bag\n            :purpose (t / toiletry)))'],"[b, attr-instance, bag, attr-mod, [s, attr-instance, small], attr-domain, [b2, attr-instance, bag, attr-purpose, [t, attr-instance, toiletry]]]"
2055,2055,2055,2055,2438,27321,kulturbeutel,In einen Kulturbeutel kommen Sachen für die Gesundheit  \newline und Sauberkeit rein.,1_short,Ohne_Kategorie,2014-05-22T19:23:36Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=einen 2:=Kulturbeutel 3:=kommen 4:=Sachen 5:=für 6:=die 7:=Gesundheit 8:= 9:=\newline 10:=und 11:=Sauberkeit 12:=rein.,3,"[[0, 2, 3, 12], [5, 7], [5, 11]]",A toiletry bag contains things for health \newline and cleanliness.,['# ::snt A toiletry bag contains things for health \\newline and cleanliness.\n(c / contain-01\n      :ARG0 (b / bag\n            :purpose (t / toiletry))\n      :ARG1 (t2 / thing\n            :purpose (a / and\n                  :op1 (h / healthy)\n                  :op2 (c2 / clean-04))))'],"[c, attr-instance, contain_01, attr-arg0, [b, attr-instance, bag, attr-purpose, [t, attr-instance, toiletry]], attr-arg1, [t2, attr-instance, thing, attr-purpose, [a, attr-instance, and, attr-op1, [h, attr-instance, healthy], attr-op2, [c2, attr-instance, clean_04]]]]"
2056,2056,2056,2056,2441,27324,kultur,Die Natur gehört nicht zur Kultur.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Natur 2:=gehört 3:=nicht 4:=zur 5:=Kultur.,1,,Nature does not belong to culture.,['# ::snt Nature does not belong to culture.\n(b / belong-01\n      :polarity -\n      :ARG0 (n / nature)\n      :ARG1 (c / culture))'],"[b, attr-instance, belong_01, attr-polarity, negative, attr-arg0, [n, attr-instance, nature], attr-arg1, [c, attr-instance, culture]]"
2057,2057,2057,2057,2442,27325,kultur,Weil Natur nicht vom Menschen erfunden oder gemacht worden ist.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Weil 1:=Natur 2:=nicht 3:=vom 4:=Menschen 5:=erfunden 6:=oder 7:=gemacht 8:=worden 9:=ist.,2,"[[5], [7]]",Because nature was not invented or created by man.,['# ::snt Because nature was not invented or created by man.\n(c / cause-01\n      :ARG0 (o / or\n            :op1 (ii / invent-01\n                  :polarity -\n                  :ARG0 (m / man)\n                  :ARG1 (n / nature))\n            :op2 (c2 / create-01\n                  :polarity -\n                  :ARG0 m\n                  :ARG1 n)))'],"[c, attr-instance, cause_01, attr-arg0, [o, attr-instance, or, attr-op1, [ii, attr-instance, invent_01, attr-polarity, negative, attr-arg0, [m, attr-instance, man], attr-arg1, [n, attr-instance, nature]], attr-op2, [c2, attr-instance, create_01, attr-polarity, negative, attr-arg0, m, attr-arg1, n]]]"
2058,2058,2058,2058,2443,27326,kultur,Das Wort Kultur kann eine Menschen-gruppe sein die etwas macht.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Wort 2:=Kultur 3:=kann 4:=eine 5:=Menschen-gruppe 6:=sein 7:=die 8:=etwas 9:=macht.,2,"[[1, 2, 3, 5, 6], [7, 8, 9]]",The word culture can be a group of people doing something.,['# ::snt The word culture can be a group of people doing something.\n(p / possible-01\n      :ARG1 (g / group\n            :consist-of (p2 / person)\n            :ARG0-of (d / do-02\n                  :ARG1 (s / something))\n            :domain (w / word\n                  :mod (c / culture))))'],"[p, attr-instance, possible_01, attr-arg1, [g, attr-instance, group, attr-consist_of, [p2, attr-instance, person], attr-arg0_of, [d, attr-instance, do_02, attr-arg1, [s, attr-instance, something]], attr-domain, [w, attr-instance, word, attr-mod, [c, attr-instance, culture]]]]"
2059,2059,2059,2059,2444,27327,kultur,Oder das Wort kann alle Menschen meinen.,3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=das 2:=Wort 3:=kann 4:=alle 5:=Menschen 6:=meinen.,1,,Or the word can mean all people.,['# ::snt Or the word can mean all people.\n(o / or\n      :op2 (p / possible-01\n            :ARG1 (m / mean-01\n                  :ARG1 (w / word)\n                  :ARG2 (p2 / person\n                        :mod (a / all)))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, possible_01, attr-arg1, [m, attr-instance, mean_01, attr-arg1, [w, attr-instance, word], attr-arg2, [p2, attr-instance, person, attr-mod, [a, attr-instance, all]]]]]"
2060,2060,2060,2060,2445,27328,kultur,Ganz genau kann man nicht sagen was Kultur ist.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ganz 1:=genau 2:=kann 3:=man 4:=nicht 5:=sagen 6:=was 7:=Kultur 8:=ist.,2,"[[0, 1, 2, 3, 4, 5], [6, 7, 8]]",It is impossible to say exactly what culture is.,['# ::snt It is impossible to say exactly what culture is.\n(p / possible-01\n      :polarity -\n      :ARG1 (s / say-01\n            :ARG1 (c / culture\n                  :mod (e / exact))))'],"[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [s, attr-instance, say_01, attr-arg1, [c, attr-instance, culture, attr-mod, [e, attr-instance, exact]]]]"
2061,2061,2061,2061,2446,27329,kultur,Für verschiedene Menschen hat es verschiedene Bedeutungen.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Für 1:=verschiedene 2:=Menschen 3:=hat 4:=es 5:=verschiedene 6:=Bedeutungen.,1,,It has different meanings for different people.,['# ::snt It has different meanings for different people.\n(m / mean-01\n      :ARG1 (ii / it)\n      :ARG2 (p / person\n            :ARG1-of (d / differ-02)\n            :ARG1-of d)\n      :ARG1-of d)'],"[m, attr-instance, mean_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [p, attr-instance, person, attr-arg1_of, [d, attr-instance, differ_02], attr-arg1_of, d], attr-arg1_of, d]"
2062,2062,2062,2062,2447,27330,kultur,Und viele Menschen streiten sich darüber was Kultur ganz genau ist.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=viele 2:=Menschen 3:=streiten 4:=sich 5:=darüber 6:=was 7:=Kultur 8:=ganz 9:=genau 10:=ist.,2,"[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]]",And many people argue about what exactly culture is.,['# ::snt And many people argue about what exactly culture is.\n(a / and\n      :op2 (a2 / argue-02\n            :ARG0 (p / person\n                  :quant (m / many))\n            :ARG2 (c / culture\n                  :mod (e / exact))))'],"[a, attr-instance, and, attr-op2, [a2, attr-instance, argue_02, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg2, [c, attr-instance, culture, attr-mod, [e, attr-instance, exact]]]]"
2063,2063,2063,2063,2449,27332,kultur,Kultur hat eine Wirkung wie Menschen denken oder was Menschen machen.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kultur 1:=hat 2:=eine 3:=Wirkung 4:=wie 5:=Menschen 6:=denken 7:=oder 8:=was 9:=Menschen 10:=machen.,3,"[[0, 1, 3], [4, 5, 6], [8, 9, 10]]",Culture influences how people think or what people do.,['# ::snt Culture influences how people think or what people do.\n(ii / influence-01\n      :ARG0 (c / culture)\n      :ARG1 (o / or\n            :op1 (t / thing\n                  :manner-of (t2 / think-01\n                        :ARG0 (p / person)))\n            :op2 (t3 / thing\n                  :ARG1-of (d / do-02\n                        :ARG0 p))))'],"[ii, attr-instance, influence_01, attr-arg0, [c, attr-instance, culture], attr-arg1, [o, attr-instance, or, attr-op1, [t, attr-instance, thing, attr-manner_of, [t2, attr-instance, think_01, attr-arg0, [p, attr-instance, person]]], attr-op2, [t3, attr-instance, thing, attr-arg1_of, [d, attr-instance, do_02, attr-arg0, p]]]]"
2064,2064,2064,2064,2450,27333,kultur,Menschen lernen von Kultur.,9_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Menschen 1:=lernen 2:=von 3:=Kultur.,1,,People learn from culture.,['# ::snt People learn from culture.\n(l / learn-01\n      :ARG0 (p / person)\n      :ARG2 (c / culture))'],"[l, attr-instance, learn_01, attr-arg0, [p, attr-instance, person], attr-arg2, [c, attr-instance, culture]]"
2065,2065,2065,2065,2451,27334,kultur,"Wenn sie viel lernen und viel Kultur machen, \newline sind Menschen kultiviert.",10_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Wenn 1:=sie 2:=viel 3:=lernen 4:=und 5:=viel 6:=Kultur 7:=machen, 8:=\newline 9:=sind 10:=Menschen 11:=kultiviert.",3,"[[0, 1, 2, 3], [0, 1, 5, 6, 7], [9, 10, 11]]","When they learn a lot and do a lot of culture, \newline people are cultured.","['# ::snt When they learn a lot and do a lot of culture, \\newline people are cultured.\n(h / have-condition-91\n      :ARG1 (c / culture\n            :mod (l / line\n                  :mod (n / newline)))\n      :ARG2 (a / and\n            :op1 (l2 / learn-01\n                  :ARG0 (t / they)\n                  :quant (l3 / lot))\n            :op2 (d / do-02\n                  :ARG0 t\n                  :ARG1 c\n                  :quant (l4 / lot))))']","[h, attr-instance, have_condition_91, attr-arg1, [c, attr-instance, culture, attr-mod, [l, attr-instance, line, attr-mod, [n, attr-instance, newline]]], attr-arg2, [a, attr-instance, and, attr-op1, [l2, attr-instance, learn_01, attr-arg0, [t, attr-instance, they], attr-quant, [l3, attr-instance, lot]], attr-op2, [d, attr-instance, do_02, attr-arg0, t, attr-arg1, c, attr-quant, [l4, attr-instance, lot]]]]"
2066,2066,2066,2066,2452,27335,kultur,Menschen zeigen mit Kultur wohin sie gehören.,11_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Menschen 1:=zeigen 2:=mit 3:=Kultur 4:=wohin 5:=sie 6:=gehören.,1,,People use culture to show where they belong.,['# ::snt People use culture to show where they belong.\n(u / use-01\n      :ARG0 (p / person)\n      :ARG1 (c / culture)\n      :ARG2 (s / show-01\n            :ARG0 p\n            :ARG1 (t / thing\n                  :ARG2-of (b / belong-01\n                        :ARG0 p))))'],"[u, attr-instance, use_01, attr-arg0, [p, attr-instance, person], attr-arg1, [c, attr-instance, culture], attr-arg2, [s, attr-instance, show_01, attr-arg0, p, attr-arg1, [t, attr-instance, thing, attr-arg2_of, [b, attr-instance, belong_01, attr-arg0, p]]]]"
2067,2067,2067,2067,2453,27336,kultur,"Zum Beispiel damit,  \newline was sie für Kleider tragen.",12_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Zum 1:=Beispiel 2:=damit, 3:= 4:=\newline 5:=was 6:=sie 7:=für 8:=Kleider 9:=tragen.",1,,"For example, \newline what kind of clothes they wear.","['# ::snt For example, \\newline what kind of clothes they wear.\n(e / exemplify-01\n      :ARG0 (l / line-01\n            :ARG1 (c / clothes\n                  :ARG1-of (w / wear-01\n                        :ARG0 (t / they))\n                  :mod (k / kind))))']","[e, attr-instance, exemplify_01, attr-arg0, [l, attr-instance, line_01, attr-arg1, [c, attr-instance, clothes, attr-arg1_of, [w, attr-instance, wear_01, attr-arg0, [t, attr-instance, they]], attr-mod, [k, attr-instance, kind]]]]"
2068,2068,2068,2068,2454,27337,kultur,Sie zeigen zu welcher sozialen Gruppe sie gehören  \newline und was sie für Meinungen haben.,13_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=zeigen 2:=zu 3:=welcher 4:=sozialen 5:=Gruppe 6:=sie 7:=gehören 8:= 9:=\newline 10:=und 11:=was 12:=sie 13:=für 14:=Meinungen 15:=haben.,3,"[[0, 1], [2, 3, 4, 5, 6, 7], [11, 12, 13, 14, 15]]",They show which social group they belong to \newline and what opinions they have.,"['# ::snt They show which social group they belong to \\newline and what opinions they have.\n(s / show-01\n      :ARG0 (t / they)\n      :ARG1 (a / and\n            :op1 (g / group\n                  :mod (s2 / social)\n                  :ARG1-of (b / belong-01\n                        :ARG0 t)\n                  :mod (c / company\n                        :name (n / name\n                              :op1 ""Newline"")))\n            :op2 (t2 / thing\n                  :ARG1-of (o / opine-01\n                        :ARG0 t))))']","[s, attr-instance, show_01, attr-arg0, [t, attr-instance, they], attr-arg1, [a, attr-instance, and, attr-op1, [g, attr-instance, group, attr-mod, [s2, attr-instance, social], attr-arg1_of, [b, attr-instance, belong_01, attr-arg0, t], attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]], attr-op2, [t2, attr-instance, thing, attr-arg1_of, [o, attr-instance, opine_01, attr-arg0, t]]]]"
2069,2069,2069,2069,2455,27338,kultur,Jede Zeit hat verschiedene Kulturen.,14_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Jede 1:=Zeit 2:=hat 3:=verschiedene 4:=Kulturen.,1,,Every era has different cultures.,['# ::snt Every era has different cultures.\n(h / have-03\n      :ARG0 (e / era\n            :mod (e2 / every))\n      :ARG1 (c / culture\n            :ARG1-of (d / differ-02)))'],"[h, attr-instance, have_03, attr-arg0, [e, attr-instance, era, attr-mod, [e2, attr-instance, every]], attr-arg1, [c, attr-instance, culture, attr-arg1_of, [d, attr-instance, differ_02]]]"
2070,2070,2070,2070,2456,27339,kultur,"Das heißt, \newline früher hat es eine andere Kultur als heute gegeben.",15_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=früher 4:=hat 5:=es 6:=eine 7:=andere 8:=Kultur 9:=als 10:=heute 11:=gegeben.",1,,"That means, \newline there used to be a different culture than there is today.","['# ::snt That means, \\newline there used to be a different culture than there is today.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (c / culture\n            :ARG1-of (d / differ-02\n                  :ARG2 (c2 / culture\n                        :time (t2 / today))\n                  :time (u / use-03))\n            :domain (t3 / there)))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [c, attr-instance, culture, attr-arg1_of, [d, attr-instance, differ_02, attr-arg2, [c2, attr-instance, culture, attr-time, [t2, attr-instance, today]], attr-time, [u, attr-instance, use_03]], attr-domain, [t3, attr-instance, there]]]"
2071,2071,2071,2071,2457,27340,kultur,Und auch Länder haben verschiedene Kulturen.,16_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=auch 2:=Länder 3:=haben 4:=verschiedene 5:=Kulturen.,1,,And countries also have different cultures.,['# ::snt And countries also have different cultures.\n(a / and\n      :op2 (h / have-03\n            :ARG0 (c / country)\n            :ARG1 (c2 / culture\n                  :ARG1-of (d / differ-02))\n            :mod (a2 / also)))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, have_03, attr-arg0, [c, attr-instance, country], attr-arg1, [c2, attr-instance, culture, attr-arg1_of, [d, attr-instance, differ_02]], attr-mod, [a2, attr-instance, also]]]"
2072,2072,2072,2072,2458,27341,kultur,Zum Beispiel was die Menschen in einem Land gerne essen.,17_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=was 3:=die 4:=Menschen 5:=in 6:=einem 7:=Land 8:=gerne 9:=essen.,2,"[[2, 3, 4, 8, 9], [5, 7]]","For example, what people in a country like to eat.","['# ::snt For example, what people in a country like to eat.\n(e / exemplify-01\n      :ARG0 (t / thing\n            :ARG1-of (e2 / eat-01\n                  :ARG0 (p / person\n                        :location (c / country))\n                  :ARG1-of (l / like-01\n                        :ARG0 p))))']","[e, attr-instance, exemplify_01, attr-arg0, [t, attr-instance, thing, attr-arg1_of, [e2, attr-instance, eat_01, attr-arg0, [p, attr-instance, person, attr-location, [c, attr-instance, country]], attr-arg1_of, [l, attr-instance, like_01, attr-arg0, p]]]]"
2073,2073,2073,2073,2459,27342,kultur,Gezüchtete Pflanzen können auch eine Kultur sein.,18_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Gezüchtete 1:=Pflanzen 2:=können 3:=auch 4:=eine 5:=Kultur 6:=sein.,1,,Cultivated plants can also be a culture.,['# ::snt Cultivated plants can also be a culture.\n(p / possible-01\n      :ARG1 (c / culture\n            :domain (p2 / plant\n                  :ARG1-of (c2 / cultivate-01))\n            :mod (a / also)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, culture, attr-domain, [p2, attr-instance, plant, attr-arg1_of, [c2, attr-instance, cultivate_01]], attr-mod, [a, attr-instance, also]]]"
2074,2074,2074,2074,2460,27343,kultur,Kultur ist alles was von Menschen gemacht worden ist.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kultur 1:=ist 2:=alles 3:=was 4:=von 5:=Menschen 6:=gemacht 7:=worden 8:=ist.,2,"[[0, 1, 2], [3, 4, 5, 6, 7, 8]]",Culture is everything that has been made by people.,['# ::snt Culture is everything that has been made by people.\n(e / everything\n      :domain (c / culture)\n      :ARG1-of (m / make-01\n            :ARG0 (p / person)))'],"[e, attr-instance, everything, attr-domain, [c, attr-instance, culture], attr-arg1_of, [m, attr-instance, make_01, attr-arg0, [p, attr-instance, person]]]"
2075,2075,2075,2075,2461,27344,kultur,Und alles was von Menschen erfunden worden ist.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=alles 2:=was 3:=von 4:=Menschen 5:=erfunden 6:=worden 7:=ist.,1,,And everything that has been invented by humans.,['# ::snt And everything that has been invented by humans.\n(a / and\n      :op2 (e / everything\n            :ARG1-of (ii / invent-01\n                  :ARG0 (h / human))))'],"[a, attr-instance, and, attr-op2, [e, attr-instance, everything, attr-arg1_of, [ii, attr-instance, invent_01, attr-arg0, [h, attr-instance, human]]]]"
2076,2076,2076,2076,2462,27345,kultur,Kultur ist auch wie Menschen Zusammen-leben.,2_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kultur 1:=ist 2:=auch 3:=wie 4:=Menschen 5:=Zusammen-leben.,1,,Culture is also how people live together.,['# ::snt Culture is also how people live together.\n(h / have-manner-91\n      :ARG1 (l / live-01\n            :ARG0 (p / person)\n            :mod (t / together))\n      :ARG2 (c / culture)\n      :mod (a / also))'],"[h, attr-instance, have_manner_91, attr-arg1, [l, attr-instance, live_01, attr-arg0, [p, attr-instance, person], attr-mod, [t, attr-instance, together]], attr-arg2, [c, attr-instance, culture], attr-mod, [a, attr-instance, also]]"
2077,2077,2077,2077,2463,27346,kultur,"Kultur kann zum Beispiel Sprache, Gesetze oder Musik sein.",3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Kultur 1:=kann 2:=zum 3:=Beispiel 4:=Sprache, 5:=Gesetze 6:=oder 7:=Musik 8:=sein.",3,"[[4], [5], [7]]","Culture can be, for example, language, laws or music.","['# ::snt Culture can be, for example, language, laws or music.\n(p / possible-01\n      :ARG1 (o / or\n            :op1 (c / culture)\n            :op2 (l / language)\n            :op3 (l2 / law)\n            :op4 (m / music)))']","[p, attr-instance, possible_01, attr-arg1, [o, attr-instance, or, attr-op1, [c, attr-instance, culture], attr-op2, [l, attr-instance, language], attr-op3, [l2, attr-instance, law], attr-op4, [m, attr-instance, music]]]"
2078,2078,2078,2078,2464,27347,kultur,Kultur ist alles von Menschen gemachte.,4_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-03-14T11:57:06Z,48f66906899cc4a9477b6c9e32ff4424,0:=Kultur 1:=ist 2:=alles 3:=von 4:=Menschen 5:=gemachte.,1,,Culture is everything made by people.,['# ::snt Culture is everything made by people.\n(e / everything\n      :domain (c / culture)\n      :ARG1-of (m / make-01\n            :ARG0 (p / person)))'],"[e, attr-instance, everything, attr-domain, [c, attr-instance, culture], attr-arg1_of, [m, attr-instance, make_01, attr-arg0, [p, attr-instance, person]]]"
2079,2079,2079,2079,2465,27349,kultusminister,Der Kultusminister ist der Chef von allen Lehrerinnen und Lehrern.,0_long,Politik,2009-11-27T17:58:10Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Der 1:=Kultusminister 2:=ist 3:=der 4:=Chef 5:=von 6:=allen 7:=Lehrerinnen 8:=und 9:=Lehrern.,2,"[[7], [9]]",The Minister of Education is the boss of all teachers.,['# ::snt The Minister of Education is the boss of all teachers.\n(b / boss\n      :domain (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :topic (e / educate-01))))\n      :poss (p2 / person\n            :ARG0-of (t / teach-01)\n            :mod (a / all)))'],"[b, attr-instance, boss, attr-domain, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [m, attr-instance, minister, attr-topic, [e, attr-instance, educate_01]]]], attr-poss, [p2, attr-instance, person, attr-arg0_of, [t, attr-instance, teach_01], attr-mod, [a, attr-instance, all]]]"
2080,2080,2080,2080,2466,27350,kultusminister,Der Chef vom Kultusminister ist der Ministerpräsident.,1_long,Politik,2009-11-27T17:58:10Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Der 1:=Chef 2:=vom 3:=Kultusminister 4:=ist 5:=der 6:=Ministerpräsident.,1,,The head of the Minister of Culture is the Prime Minister.,['# ::snt The head of the Minister of Culture is the Prime Minister.\n(h / head-01\n      :ARG0 (p / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (m / minister\n                        :topic (c / culture))))\n      :ARG1 (p2 / person\n            :ARG0-of (h3 / have-org-role-91\n                  :ARG2 (m2 / minister\n                        :mod (p3 / prime)))))'],"[h, attr-instance, head_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_org_role_91, attr-arg2, [m, attr-instance, minister, attr-topic, [c, attr-instance, culture]]]], attr-arg1, [p2, attr-instance, person, attr-arg0_of, [h3, attr-instance, have_org_role_91, attr-arg2, [m2, attr-instance, minister, attr-mod, [p3, attr-instance, prime]]]]]"
2081,2081,2081,2081,2467,27352,kultusminister,"In den Plänen steht, was die Kinder lernen sollen.",3_long,Politik,2009-11-27T17:58:10Z,1165823e29d5567f66ef3bbbcbfabcad,"0:=In 1:=den 2:=Plänen 3:=steht, 4:=was 5:=die 6:=Kinder 7:=lernen 8:=sollen.",2,"[[0, 2, 3], [4, 6, 7, 8]]",The plans state what the children should learn.,['# ::snt The plans state what the children should learn.\n(s / state-01\n      :ARG0 (p / plan-01)\n      :ARG1 (t / thing\n            :ARG1-of (l / learn-01\n                  :ARG0 (c / child)\n                  :ARG1-of (r / recommend-01))))'],"[s, attr-instance, state_01, attr-arg0, [p, attr-instance, plan_01], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [l, attr-instance, learn_01, attr-arg0, [c, attr-instance, child], attr-arg1_of, [r, attr-instance, recommend_01]]]]"
2082,2082,2082,2082,2468,27353,kultusminister,Jedes Bundesland in Deutschland hat einen eigenen Kultusminister.,0_short,Politik,2009-11-27T17:58:10Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Jedes 1:=Bundesland 2:=in 3:=Deutschland 4:=hat 5:=einen 6:=eigenen 7:=Kultusminister.,2,"[[0, 1, 4, 6, 7], [2, 3]]",Each federal state in Germany has its own Minister of Culture.,"['# ::snt Each federal state in Germany has its own Minister of Culture.\n(h / have-03\n      :ARG0 (s / state\n            :mod (f / federal)\n            :mod (e / each)\n            :location (c / country\n                  :name (n / name\n                        :op1 ""Germany"")))\n      :ARG1 (p / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG1 c\n                  :ARG2 (m / minister\n                        :topic (c2 / culture)))))']","[h, attr-instance, have_03, attr-arg0, [s, attr-instance, state, attr-mod, [f, attr-instance, federal], attr-mod, [e, attr-instance, each], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]], attr-arg1, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_org_role_91, attr-arg1, c, attr-arg2, [m, attr-instance, minister, attr-topic, [c2, attr-instance, culture]]]]]"
2083,2083,2083,2083,2469,27354,kultusminister,Der Kultusminister ist ein Teil der Landesregierung.,1_short,Politik,2009-11-27T17:58:10Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Der 1:=Kultusminister 2:=ist 3:=ein 4:=Teil 5:=der 6:=Landesregierung.,1,,The Minister of Culture is part of the state government.,['# ::snt The Minister of Culture is part of the state government.\n(h / have-part-91\n      :ARG1 (g / government-organization\n            :ARG0-of (g2 / govern-01\n                  :ARG1 (s / state)))\n      :ARG2 (p / person\n            :ARG0-of (h2 / have-org-role-91\n                  :ARG2 (m / minister\n                        :topic (c / culture)))))'],"[h, attr-instance, have_part_91, attr-arg1, [g, attr-instance, government_organization, attr-arg0_of, [g2, attr-instance, govern_01, attr-arg1, [s, attr-instance, state]]], attr-arg2, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_org_role_91, attr-arg2, [m, attr-instance, minister, attr-topic, [c, attr-instance, culture]]]]]"
2084,2084,2084,2084,2470,27355,kultusminister,"Der Kultusminister ist für alles da, was mit \newline  \newline  Schulen \newline  Sport \newline  Musik \newline  Kunst \newline  Wissenschaft \newline  \newline zu tun hat.",2_short,Politik,2009-11-27T17:58:10Z,1165823e29d5567f66ef3bbbcbfabcad,"0:=Der 1:=Kultusminister 2:=ist 3:=für 4:=alles 5:=da, 6:=was 7:=mit 8:=\newline 9:= 10:=\newline 11:= 12:=Schulen 13:=\newline 14:= 15:=Sport 16:=\newline 17:= 18:=Musik 19:=\newline 20:= 21:=Kunst 22:=\newline 23:= 24:=Wissenschaft 25:=\newline 26:= 27:=\newline 28:=zu 29:=tun 30:=hat.",6,"[[1, 2, 3, 4, 5], [6, 7, 12, 28, 29, 30], [6, 7, 15, 28, 29, 30], [6, 7, 18, 28, 29, 30], [6, 7, 21, 28, 29, 30], [6, 7, 24, 28, 29, 30]]",The Minister of Culture is responsible for everything that has to do with \newline \newline schools \newline sports \newline music \newline art \newline science \newline \newline.,['# ::snt The Minister of Culture is responsible for everything that has to do with \\newline \\newline schools \\newline sports \\newline music \\newline art \\newline science \\newline \\newline.\n(r / responsible-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (m / minister\n                        :topic (c / culture))))\n      :ARG1 (e / everything\n            :ARG2-of (h2 / have-to-do-with-04\n                  :ARG1 (a / and\n                        :op1 (s / school\n                              :mod (l / line\n                                    :mod (n / newline)))\n                        :op2 (s2 / sport\n                              :mod (l2 / line\n                                    :mod (n2 / newline)))\n                        :op3 (a2 / art\n                              :mod (l3 / line\n                                    :mod (n3 / newline)))\n                        :op4 (s3 / science\n                              :mod l3)\n                        :op5 (l4 / line\n                              :mod (n4 / newline))))))'],"[r, attr-instance, responsible_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [m, attr-instance, minister, attr-topic, [c, attr-instance, culture]]]], attr-arg1, [e, attr-instance, everything, attr-arg2_of, [h2, attr-instance, have_to_do_with_04, attr-arg1, [a, attr-instance, and, attr-op1, [s, attr-instance, school, attr-mod, [l, attr-instance, line, attr-mod, [n, attr-instance, newline]]], attr-op2, [s2, attr-instance, sport, attr-mod, [l2, attr-instance, line, attr-mod, [n2, attr-instance, newline]]], attr-op3, [a2, attr-instance, art, attr-mod, [l3, attr-instance, line, attr-mod, [n3, attr-instance, newline]]], attr-op4, [s3, attr-instance, science, attr-mod, l3], attr-op5, [l4, attr-instance, line, attr-mod, [n4, attr-instance, newline]]]]]]"
2085,2085,2085,2085,2471,41993,sim-karte,Es gibt verschiedene Arten von SIM Karten.,0_long,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,0:=Es 1:=gibt 2:=verschiedene 3:=Arten 4:=von 5:=SIM 6:=Karten.,1,,There are different types of SIM cards.,"['# ::snt There are different types of SIM cards.\n(c / card\n      :mod (p / phone-number-entity\n            :value ""SIM"")\n      :mod (t / type\n            :ARG1-of (d / differ-02)))']","[c, attr-instance, card, attr-mod, [p, attr-instance, phone_number_entity, attr-value, ""sim""], attr-mod, [t, attr-instance, type, attr-arg1_of, [d, attr-instance, differ_02]]]"
2086,2086,2086,2086,2472,41994,sim-karte,Die Karten sind unterschiedlich groß.,1_long,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Karten 2:=sind 3:=unterschiedlich 4:=groß.,1,,The cards are different sizes.,['# ::snt The cards are different sizes.\n(d / differ-02\n      :ARG1 (s / size\n            :poss (c / card)))'],"[d, attr-instance, differ_02, attr-arg1, [s, attr-instance, size, attr-poss, [c, attr-instance, card]]]"
2087,2087,2087,2087,2473,41995,sim-karte,Der Chip ist immer gleich groß.,2_long,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Chip 2:=ist 3:=immer 4:=gleich 5:=groß.,1,,The chip is always the same size.,['# ::snt The chip is always the same size.\n(s / same-01\n      :ARG1 (s2 / size\n            :poss (c / chip))\n      :time (a / always))'],"[s, attr-instance, same_01, attr-arg1, [s2, attr-instance, size, attr-poss, [c, attr-instance, chip]], attr-time, [a, attr-instance, always]]"
2088,2088,2088,2088,2474,41996,sim-karte,Er hat die Farbe Gold.,3_long,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=hat 2:=die 3:=Farbe 4:=Gold.,1,,It is gold in color.,['# ::snt It is gold in color.\n(g / gold\n      :domain (ii / it)\n      :ARG1-of (c / color-01))'],"[g, attr-instance, gold, attr-domain, [ii, attr-instance, it], attr-arg1_of, [c, attr-instance, color_01]]"
2089,2089,2089,2089,2475,41997,sim-karte,"Wenn man eine SIM-Karte kauft,   \newline bekommt eine Geheim-Nummer dazu.",4_long,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Wenn 1:=man 2:=eine 3:=SIM-Karte 4:=kauft, 5:= 6:= 7:=\newline 8:=bekommt 9:=eine 10:=Geheim-Nummer 11:=dazu.",2,"[[0, 1, 3, 4], [8, 10, 11]]","When you buy a SIM card, \newline gets a secret number.","['# ::snt When you buy a SIM card, \\newline gets a secret number.\n(g / get-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 ""Newline""))\n      :ARG1 (n2 / number\n            :mod (s / secret))\n      :condition (b / buy-01\n            :ARG0 (y / you)\n            :ARG1 (c2 / card\n                  :mod (p / product\n                        :name n\n                        :op1 ""SIM""))))']","[g, attr-instance, get_01, attr-arg0, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]], attr-arg1, [n2, attr-instance, number, attr-mod, [s, attr-instance, secret]], attr-condition, [b, attr-instance, buy_01, attr-arg0, [y, attr-instance, you], attr-arg1, [c2, attr-instance, card, attr-mod, [p, attr-instance, product, attr-name, n, attr-op1, ""sim""]]]]"
2090,2090,2090,2090,2476,41998,sim-karte,"Die Geheim-Nummer heißt: PIN, PIN-Nummer oder PIN Code",5_long,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Die 1:=Geheim-Nummer 2:=heißt: 3:=PIN, 4:=PIN-Nummer 5:=oder 6:=PIN 7:=Code",3,"[[3], [4], [6, 7]]","The secret number is called: PIN, PIN number or PIN code","['# ::snt The secret number is called: PIN, PIN number or PIN code\n(c / call-01\n      :ARG1 (n / number\n            :mod (s / secret))\n      :ARG2 (o / or\n            :op1 (s2 / string-entity\n                  :value "" PIN"")\n            :op2 (s3 / string-entity\n                  :value "" PIN"")\n            :op3 (c2 / code\n                  :mod s3)))']","[c, attr-instance, call_01, attr-arg1, [n, attr-instance, number, attr-mod, [s, attr-instance, secret]], attr-arg2, [o, attr-instance, or, attr-op1, [s2, attr-instance, string_entity, attr-value, "", pin""], attr-op2, [s3, attr-instance, string_entity, attr-value, "", pin""], attr-op3, [c2, attr-instance, code, attr-mod, s3]]]"
2091,2091,2091,2091,2477,41999,sim-karte,Die SIM-Karte ist eine Chipkarte.,0_short,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=SIM-Karte 2:=ist 3:=eine 4:=Chipkarte.,1,,The SIM card is a chip card.,['# ::snt The SIM card is a chip card.\n(c / card\n      :mod (c2 / chip)\n      :domain (c3 / card\n            :mod (s / SIM)))'],"[c, attr-instance, card, attr-mod, [c2, attr-instance, chip], attr-domain, [c3, attr-instance, card, attr-mod, [s, attr-instance, sim]]]"
2092,2092,2092,2092,2478,42000,sim-karte,Dieser Chip kommt in das Handy.,1_short,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,0:=Dieser 1:=Chip 2:=kommt 3:=in 4:=das 5:=Handy.,1,,This chip goes into the cell phone.,['# ::snt This chip goes into the cell phone.\n(g / go-01\n      :ARG1 (c / chip\n            :mod (t / this))\n      :ARG4 (p / phone\n            :mod (c2 / cell)))'],"[g, attr-instance, go_01, attr-arg1, [c, attr-instance, chip, attr-mod, [t, attr-instance, this]], attr-arg4, [p, attr-instance, phone, attr-mod, [c2, attr-instance, cell]]]"
2093,2093,2093,2093,2479,42001,sim-karte,Erst mit einer SIM Karte funktioniert das Handy.,2_short,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,0:=Erst 1:=mit 2:=einer 3:=SIM 4:=Karte 5:=funktioniert 6:=das 7:=Handy.,1,,The cell phone only works with a SIM card.,['# ::snt The cell phone only works with a SIM card.\n(w / work-09\n      :ARG1 (p / phone\n            :mod (c / cell))\n      :ARG2 (c2 / card\n            :mod (s / SIM))\n      :mod (o / only))'],"[w, attr-instance, work_09, attr-arg1, [p, attr-instance, phone, attr-mod, [c, attr-instance, cell]], attr-arg2, [c2, attr-instance, card, attr-mod, [s, attr-instance, sim]], attr-mod, [o, attr-instance, only]]"
2094,2094,2094,2094,2480,42002,sim-karte,Die SIM-Karte ist der Telefonanschluß für das Handy.,3_short,Ohne_Kategorie,2012-11-20T07:21:45Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=SIM-Karte 2:=ist 3:=der 4:=Telefonanschluß 5:=für 6:=das 7:=Handy.,2,"[[1, 2], [5, 7]]",The SIM card is the telephone connection for the mobile phone.,['# ::snt The SIM card is the telephone connection for the mobile phone.\n(c / connect-01\n      :ARG1 (t / telephone)\n      :ARG2 (p / phone\n            :ARG1-of (m / mobile-02))\n      :ARG3 (c2 / card\n            :mod (s / SIM)))'],"[c, attr-instance, connect_01, attr-arg1, [t, attr-instance, telephone], attr-arg2, [p, attr-instance, phone, attr-arg1_of, [m, attr-instance, mobile_02]], attr-arg3, [c2, attr-instance, card, attr-mod, [s, attr-instance, sim]]]"
2095,2095,2095,2095,2481,42003,simpel,Beispiel: \newline Die Hausaufgaben sind simpel.,0_long,Schimpfwort,2012-01-09T22:00:23Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Beispiel: 1:=\newline 2:=Die 3:=Hausaufgaben 4:=sind 5:=simpel.,1,,Example: \newline The homework is simple.,"['# ::snt Example:\n(e / exemplify-01)', '# ::snt \\newline The homework is simple.\n(s / simple-02\n      :ARG1 (h / homework)\n      :ARG1-of (n / new-line-07))']","[e, attr-instance, exemplify_01]"
2096,2096,2096,2096,2482,42004,simpel,Die Hausaufgaben sind einfach.,1_long,Schimpfwort,2012-01-09T22:00:23Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Hausaufgaben 2:=sind 3:=einfach.,1,,The homework is easy.,['# ::snt The homework is easy.\n(e / easy-05\n      :ARG1 (h / homework))'],"[e, attr-instance, easy_05, attr-arg1, [h, attr-instance, homework]]"
2097,2097,2097,2097,2483,42005,simpel,simpel ist ein Adjektiv.,2_long,Schimpfwort,2012-01-09T22:00:23Z,eaab3232dd7a824a6a774fd2f2814e47,0:=simpel 1:=ist 2:=ein 3:=Adjektiv.,1,,simple is an adjective.,['# ::snt simple is an adjective.\n(s / simple-02\n      :ARG1 (w / word\n            :mod (a / an)))'],"[s, attr-instance, simple_02, attr-arg1, [w, attr-instance, word, attr-mod, [a, attr-instance, an]]]"
2098,2098,2098,2098,2484,42006,simpel,"Das Gegenteil von simpel ist ""schwierig"" oder ""schwer"".",3_long,Schimpfwort,2012-01-09T22:00:23Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Das 1:=Gegenteil 2:=von 3:=simpel 4:=ist 5:=""schwierig"" 6:=oder 7:=""schwer"".",2,"[[5], [7]]","The opposite of simple is ""difficult"" or ""hard"".","['# ::snt The opposite of simple is ""difficult"" or ""hard"".\n(o / opposite-01\n      :ARG1 (s / simple-02)\n      :ARG2 (o2 / or\n            :op1 (d / difficult)\n            :op2 (h / hard-02)))']","[o, attr-instance, opposite_01, attr-arg1, [s, attr-instance, simple_02], attr-arg2, [o2, attr-instance, or, attr-op1, [d, attr-instance, difficult], attr-op2, [h, attr-instance, hard_02]]]"
2099,2099,2099,2099,2485,42007,simpel,simpel ist ein anderes Wort für einfach.,0_short,Schimpfwort,2012-01-09T22:00:23Z,eaab3232dd7a824a6a774fd2f2814e47,0:=simpel 1:=ist 2:=ein 3:=anderes 4:=Wort 5:=für 6:=einfach.,1,,simple is another word for easy.,['# ::snt simple is another word for easy.\n(w / word\n      :mod (a / another)\n      :domain (s / simple-02)\n      :purpose (e / easy-05))'],"[w, attr-instance, word, attr-mod, [a, attr-instance, another], attr-domain, [s, attr-instance, simple_02], attr-purpose, [e, attr-instance, easy_05]]"
2100,2100,2100,2100,2486,42008,simpel,simpel bedeutet dass etwas nicht schwierig ist.,1_short,Schimpfwort,2012-01-09T22:00:23Z,eaab3232dd7a824a6a774fd2f2814e47,0:=simpel 1:=bedeutet 2:=dass 3:=etwas 4:=nicht 5:=schwierig 6:=ist.,2,"[[0, 1], [2, 3, 4, 5, 6]]",simple means that something is not difficult.,['# ::snt simple means that something is not difficult.\n(m / mean-01\n      :ARG1 (s / simple-02)\n      :ARG2 (d / difficult\n            :polarity -\n            :domain (s2 / something)))'],"[m, attr-instance, mean_01, attr-arg1, [s, attr-instance, simple_02], attr-arg2, [d, attr-instance, difficult, attr-polarity, negative, attr-domain, [s2, attr-instance, something]]]"
2101,2101,2101,2101,2487,42009,simsen,Beispiel: \newline Petra simst ihrem Freund Richard.,0_long,Ohne_Kategorie,2011-11-12T21:14:47Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Beispiel: 1:=\newline 2:=Petra 3:=simst 4:=ihrem 5:=Freund 6:=Richard.,2,"[[2, 3], [4, 5]]",Example: \newline Petra is texting her friend Richard.,"['# ::snt Example: \\newline Petra is texting her friend Richard.\n(e / exemplify-01\n      :ARG0 (t / text-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Petra"")\n                  :mod (n2 / newline))\n            :ARG2 (p2 / person\n                  :name (n3 / name\n                        :op1 ""Richard"")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (f / friend)))))']","[e, attr-instance, exemplify_01, attr-arg0, [t, attr-instance, text_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""petra""], attr-mod, [n2, attr-instance, newline]], attr-arg2, [p2, attr-instance, person, attr-name, [n3, attr-instance, name, attr-op1, ""richard""], attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, p, attr-arg2, [f, attr-instance, friend]]]]]"
2102,2102,2102,2102,2489,42011,simsen,Simsen beudetet SMS schreiben.,0_short,Ohne_Kategorie,2011-11-12T21:14:47Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Simsen 1:=beudetet 2:=SMS 3:=schreiben.,2,"[[0, 1], [2, 3]]",Texting means writing an SMS.,['# ::snt Texting means writing an SMS.\n(m / mean-01\n      :ARG1 (t / text-01)\n      :ARG2 (w / write-01\n            :ARG1 t))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, text_01], attr-arg2, [w, attr-instance, write_01, attr-arg1, t]]"
2103,2103,2103,2103,2490,42012,simultanschach,Simultan-schach ist ein Schach-spiel.,0_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Simultan-schach 1:=ist 2:=ein 3:=Schach-spiel.,1,,Simultaneous chess is a game of chess.,['# ::snt Simultaneous chess is a game of chess.\n(g / game\n      :mod (c / chess)\n      :domain (c2 / chess\n            :mod (s / simultaneous)))'],"[g, attr-instance, game, attr-mod, [c, attr-instance, chess], attr-domain, [c2, attr-instance, chess, attr-mod, [s, attr-instance, simultaneous]]]"
2104,2104,2104,2104,2491,42013,simultanschach,Einer (1) alleine spielt gegen mehrere.,1_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Einer 1:=(1) 2:=alleine 3:=spielt 4:=gegen 5:=mehrere.,2,"[[0, 2, 3, 4, 5], [1]]",One (1) alone plays against several.,['# ::snt One (1) alone plays against several.\n(p / play-01\n      :ARG0 (o / one\n            :mod (a / alone))\n      :ARG1 (s / several))'],"[p, attr-instance, play_01, attr-arg0, [o, attr-instance, one, attr-mod, [a, attr-instance, alone]], attr-arg1, [s, attr-instance, several]]"
2105,2105,2105,2105,2492,42014,simultanschach,Diese Art Schach-spiel heißt Simultan-spiel.,2_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Diese 1:=Art 2:=Schach-spiel 3:=heißt 4:=Simultan-spiel.,1,,This type of chess game is called simultaneous play.,['# ::snt This type of chess game is called simultaneous play.\n(c / call-01\n      :ARG1 (g / game\n            :mod (c2 / chess)\n            :mod (t / type\n                  :mod (t2 / this)))\n      :ARG2 (p / play-01\n            :mod (s / simultaneous)))'],"[c, attr-instance, call_01, attr-arg1, [g, attr-instance, game, attr-mod, [c2, attr-instance, chess], attr-mod, [t, attr-instance, type, attr-mod, [t2, attr-instance, this]]], attr-arg2, [p, attr-instance, play_01, attr-mod, [s, attr-instance, simultaneous]]]"
2106,2106,2106,2106,2493,42015,simultanschach,Die anderen Spieler heißen Simultan-gegner.,3_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=anderen 2:=Spieler 3:=heißen 4:=Simultan-gegner.,1,,The other players are called simultaneous opponents.,['# ::snt The other players are called simultaneous opponents.\n(c / call-01\n      :ARG1 (p / person\n            :ARG0-of (p2 / play-01)\n            :mod (o / other))\n      :ARG2 (p3 / person\n            :ARG0-of (o2 / oppose-01)\n            :mod (s / simultaneous)))'],"[c, attr-instance, call_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01], attr-mod, [o, attr-instance, other]], attr-arg2, [p3, attr-instance, person, attr-arg0_of, [o2, attr-instance, oppose_01], attr-mod, [s, attr-instance, simultaneous]]]"
2107,2107,2107,2107,2494,42016,simultanschach,Der einzelne (1) Spieler ist sehr gut im Schach spielen.,4_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=einzelne 2:=(1) 3:=Spieler 4:=ist 5:=sehr 6:=gut 7:=im 8:=Schach 9:=spielen.,3,"[[1, 3, 4, 5, 6], [5, 6, 7, 8, 9], [2]]",The individual (1) player is very good at playing chess.,['# ::snt The individual (1) player is very good at playing chess.\n(g / good-03\n      :ARG1 (p / person\n            :li 1\n            :ARG0-of (p2 / play-01\n                  :ARG1 (c / chess))\n            :mod (ii / individual))\n      :ARG2 (p3 / play-01\n            :ARG0 p\n            :ARG1 c)\n      :degree (v / very))'],"[g, attr-instance, good_03, attr-arg1, [p, attr-instance, person, attr-li, 1, attr-arg0_of, [p2, attr-instance, play_01, attr-arg1, [c, attr-instance, chess]], attr-mod, [ii, attr-instance, individual]], attr-arg2, [p3, attr-instance, play_01, attr-arg0, p, attr-arg1, c], attr-degree, [v, attr-instance, very]]"
2108,2108,2108,2108,2495,42017,simultanschach,Weil der einzelne (1) gegen viele spielen muss.,5_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Weil 1:=der 2:=einzelne 3:=(1) 4:=gegen 5:=viele 6:=spielen 7:=muss.,2,"[[0, 2, 4, 5, 6, 7], [3]]",Because the individual (1) has to play against many.,['# ::snt Because the individual (1) has to play against many.\n(c / cause-01\n      :ARG0 (o / obligate-01\n            :li 1\n            :ARG1 (ii / individual)\n            :ARG2 (p / play-01\n                  :ARG0 ii\n                  :prep-against (p2 / person\n                        :quant (m / many)))))'],"[c, attr-instance, cause_01, attr-arg0, [o, attr-instance, obligate_01, attr-li, 1, attr-arg1, [ii, attr-instance, individual], attr-arg2, [p, attr-instance, play_01, attr-arg0, ii, attr-prep_against, [p2, attr-instance, person, attr-quant, [m, attr-instance, many]]]]]"
2109,2109,2109,2109,2496,42018,simultanschach,Und weil der einzelne weniger Zeit hat.,6_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=weil 2:=der 3:=einzelne 4:=weniger 5:=Zeit 6:=hat.,1,,And because individuals have less time.,['# ::snt And because individuals have less time.\n(a / and\n      :op2 (c / cause-01\n            :ARG0 (h / have-03\n                  :ARG0 (ii / individual)\n                  :ARG1 (t / time\n                        :quant (l / less)))))'],"[a, attr-instance, and, attr-op2, [c, attr-instance, cause_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [ii, attr-instance, individual], attr-arg1, [t, attr-instance, time, attr-quant, [l, attr-instance, less]]]]]"
2110,2110,2110,2110,2498,42020,simultanschach,Der einzelne Spieler geht zu jedem Schach-brett.,8_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=einzelne 2:=Spieler 3:=geht 4:=zu 5:=jedem 6:=Schach-brett.,1,,The individual player goes to each chess board.,['# ::snt The individual player goes to each chess board.\n(g / go-01\n      :ARG1 (p / person\n            :ARG0-of (p2 / play-01)\n            :mod (ii / individual))\n      :ARG4 (b / board\n            :mod (c / chess)\n            :mod (e / each)))'],"[g, attr-instance, go_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01], attr-mod, [ii, attr-instance, individual]], attr-arg4, [b, attr-instance, board, attr-mod, [c, attr-instance, chess], attr-mod, [e, attr-instance, each]]]"
2111,2111,2111,2111,2499,42021,simultanschach,Und macht bei jedem Schach-brett einen Schach-zug.,9_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=macht 2:=bei 3:=jedem 4:=Schach-brett 5:=einen 6:=Schach-zug.,1,,And makes a chess move on every chess board.,['# ::snt And makes a chess move on every chess board.\n(a / and\n      :op2 (m / make-02\n            :ARG1 (m2 / move-02\n                  :mod (c / chess))\n            :location (b / board\n                  :mod (c2 / chess)\n                  :mod (e / every))))'],"[a, attr-instance, and, attr-op2, [m, attr-instance, make_02, attr-arg1, [m2, attr-instance, move_02, attr-mod, [c, attr-instance, chess]], attr-location, [b, attr-instance, board, attr-mod, [c2, attr-instance, chess], attr-mod, [e, attr-instance, every]]]]"
2112,2112,2112,2112,2500,42022,simultanschach,Der einzelne Spieler kann sich die Figuren-farbe aus-suchen.,10_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=einzelne 2:=Spieler 3:=kann 4:=sich 5:=die 6:=Figuren-farbe 7:=aus-suchen.,1,,Each player can choose the color of the pieces.,['# ::snt Each player can choose the color of the pieces.\n(p / possible-01\n      :ARG1 (c / choose-01\n            :ARG0 (p2 / person\n                  :ARG0-of (p3 / play-01)\n                  :mod (e / each))\n            :ARG1 (c2 / color\n                  :poss (p4 / piece))))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, choose_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [p3, attr-instance, play_01], attr-mod, [e, attr-instance, each]], attr-arg1, [c2, attr-instance, color, attr-poss, [p4, attr-instance, piece]]]]"
2113,2113,2113,2113,2501,42023,simultanschach,Er kann aus-suchen ob er Weiß haben möchte.,11_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=kann 2:=aus-suchen 3:=ob 4:=er 5:=Weiß 6:=haben 7:=möchte.,1,,He can choose whether he wants white.,['# ::snt He can choose whether he wants white.\n(p / possible-01\n      :ARG1 (c / choose-01\n            :ARG0 (h / he)\n            :ARG1 (t / truth-value\n                  :polarity-of (w / want-01\n                        :ARG0 h\n                        :ARG1 (w2 / white-02\n                              :ARG1 h)))))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, choose_01, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, truth_value, attr-polarity_of, [w, attr-instance, want_01, attr-arg0, h, attr-arg1, [w2, attr-instance, white_02, attr-arg1, h]]]]]"
2114,2114,2114,2114,2502,42024,simultanschach,Oder ob er Schwarz haben möchte.,12_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=ob 2:=er 3:=Schwarz 4:=haben 5:=möchte.,1,,Or if he wants black.,['# ::snt Or if he wants black.\n(o / or\n      :op2 (h / have-condition-91\n            :ARG2 (w / want-01\n                  :ARG0 (h2 / he)\n                  :ARG1 (b / black-05\n                        :ARG1 h2))))'],"[o, attr-instance, or, attr-op2, [h, attr-instance, have_condition_91, attr-arg2, [w, attr-instance, want_01, attr-arg0, [h2, attr-instance, he], attr-arg1, [b, attr-instance, black_05, attr-arg1, h2]]]]"
2115,2115,2115,2115,2503,42025,simultanschach,Viele machen Simultan-schach zum Üben.,13_long,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Viele 1:=machen 2:=Simultan-schach 3:=zum 4:=Üben.,1,,Many people play simultaneous chess to practice.,['# ::snt Many people play simultaneous chess to practice.\n(p / play-01\n      :ARG0 (p2 / person\n            :quant (m / many))\n      :ARG1 (c / chess\n            :mod (s / simultaneous))\n      :purpose (p3 / practice-01\n            :ARG0 p2))'],"[p, attr-instance, play_01, attr-arg0, [p2, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [c, attr-instance, chess, attr-mod, [s, attr-instance, simultaneous]], attr-purpose, [p3, attr-instance, practice_01, attr-arg0, p2]]"
2116,2116,2116,2116,2505,42027,simultanschach,Simultan-schach sind Schach-spiele.,0_short,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Simultan-schach 1:=sind 2:=Schach-spiele.,1,,Simultaneous chess is chess games.,['# ::snt Simultaneous chess is chess games.\n(g / game\n      :mod (c / chess)\n      :mod (s / simultaneous)\n      :domain (c2 / chess))'],"[g, attr-instance, game, attr-mod, [c, attr-instance, chess], attr-mod, [s, attr-instance, simultaneous], attr-domain, [c2, attr-instance, chess]]"
2117,2117,2117,2117,2506,42028,simultanschach,Ein (1) Spieler spielt gegen viele andere.,1_short,Sport,2019-01-22T10:34:08Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=(1) 2:=Spieler 3:=spielt 4:=gegen 5:=viele 6:=andere.,2,"[[2, 3, 4, 5, 6], [1]]",One (1) player plays against many others.,['# ::snt One (1) player plays against many others.\n(p / play-01\n      :ARG0 (p2 / person\n            :quant 1\n            :ARG0-of (p3 / play-01))\n      :prep-against (p4 / play-01\n            :ARG0 (p5 / person\n                  :quant (m / many)\n                  :mod (o / other))))'],"[p, attr-instance, play_01, attr-arg0, [p2, attr-instance, person, attr-quant, 1, attr-arg0_of, [p3, attr-instance, play_01]], attr-prep_against, [p4, attr-instance, play_01, attr-arg0, [p5, attr-instance, person, attr-quant, [m, attr-instance, many], attr-mod, [o, attr-instance, other]]]]"
2118,2118,2118,2118,2507,42029,singles-day,Am Singles' Day kaufen viele Menschen auch im Internet Sachen.,0_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2017-11-19T11:29:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=Singles' 2:=Day 3:=kaufen 4:=viele 5:=Menschen 6:=auch 7:=im 8:=Internet 9:=Sachen.,3,"[[0, 1, 2], [3, 4, 5, 9], [6, 7, 8]]","On Singles' Day, many people also buy things online.","['# ::snt On Singles\' Day, many people also buy things online.\n(b / buy-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (t / thing)\n      :ARG3 (o / online)\n      :mod (a / also)\n      :time (f / festival\n            :name (n / name\n                  :op1 ""Singles\'""\n                  :op2 ""\'Day"")))']","[b, attr-instance, buy_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [t, attr-instance, thing], attr-arg3, [o, attr-instance, online], attr-mod, [a, attr-instance, also], attr-time, [f, attr-instance, festival, attr-name, [n, attr-instance, name, attr-op1, ""singles'"", attr-op2, ""'day""]]]"
2119,2119,2119,2119,2508,42030,singles-day,Es ist der größte Internet-Einkaufs-Tag der Welt.,1_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2017-11-19T11:29:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=ist 2:=der 3:=größte 4:=Internet-Einkaufs-Tag 5:=der 6:=Welt.,1,,It is the biggest internet shopping day in the world.,['# ::snt It is the biggest internet shopping day in the world.\n(d / day\n      :time-of (s / shop-01\n            :ARG3 (ii / internet))\n      :ARG1-of (h / have-degree-91\n            :ARG2 (b / big)\n            :ARG3 (m / most)\n            :ARG5 (w / world)))'],"[d, attr-instance, day, attr-time_of, [s, attr-instance, shop_01, attr-arg3, [ii, attr-instance, internet]], attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [b, attr-instance, big], attr-arg3, [m, attr-instance, most], attr-arg5, [w, attr-instance, world]]]"
2120,2120,2120,2120,2509,42031,singles-day,Der Singles' Day ist jedes Jahr am 11. November.,2_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2017-11-19T11:29:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Singles' 2:=Day 3:=ist 4:=jedes 5:=Jahr 6:=am 7:=11. 8:=November.,2,"[[4, 5], [6, 7, 8]]",Singles' Day is on November 11th every year.,"['# ::snt Singles\' Day is on November 11th every year.\n(b / be-temporally-at-91\n      :ARG1 (e / event\n            :name (n / name\n                  :op1 ""Singles\'""\n                  :op2 ""Day""))\n      :ARG2 (d / date-entity\n            :month 11\n            :day 11)\n      :frequency (y / year\n            :mod (e2 / every)))']","[b, attr-instance, be_temporally_at_91, attr-arg1, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""singles'"", attr-op2, ""day""]], attr-arg2, [d, attr-instance, date_entity, attr-month, 11, attr-day, 11], attr-frequency, [y, attr-instance, year, attr-mod, [e2, attr-instance, every]]]"
2121,2121,2121,2121,2510,42032,singles-day,Der Tag ist in China erfunden worden.,3_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2017-11-19T11:29:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Tag 2:=ist 3:=in 4:=China 5:=erfunden 6:=worden.,1,,The day was invented in China.,"['# ::snt The day was invented in China.\n(ii / invent-01\n      :ARG1 (d / day)\n      :location (c / country\n            :name (n / name\n                  :op1 ""China"")))']","[ii, attr-instance, invent_01, attr-arg1, [d, attr-instance, day], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""china""]]]"
2122,2122,2122,2122,2511,42033,singles-day,Die Zahl 1 ist ein Symbol für Menschen die alleine leben.,4_long,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2017-11-19T11:29:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Zahl 2:=1 3:=ist 4:=ein 5:=Symbol 6:=für 7:=Menschen 8:=die 9:=alleine 10:=leben.,3,"[[1, 2, 3, 5], [5, 6, 7], [7, 8, 9, 10]]",The number 1 is a symbol for people who live alone.,['# ::snt The number 1 is a symbol for people who live alone.\n(s / symbolize-01\n      :ARG1 (n / number\n            :mod 1)\n      :ARG2 (p / person\n            :ARG0-of (l / live-01\n                  :manner (a / alone\n                        :domain p))))'],"[s, attr-instance, symbolize_01, attr-arg1, [n, attr-instance, number, attr-mod, 1], attr-arg2, [p, attr-instance, person, attr-arg0_of, [l, attr-instance, live_01, attr-manner, [a, attr-instance, alone, attr-domain, p]]]]"
2123,2123,2123,2123,2512,42034,singles-day,Der Singles' Day ist ein Aktionstag.,0_short,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2017-11-19T11:29:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Singles' 2:=Day 3:=ist 4:=ein 5:=Aktionstag.,1,,Singles' Day is a day of action.,"['# ::snt Singles\' Day is a day of action.\n(d / day\n      :mod (a / act-02)\n      :domain (d2 / day\n            :name (n / name\n                  :op1 ""Singles""\n                  :op2 ""\'Day"")))']","[d, attr-instance, day, attr-mod, [a, attr-instance, act_02], attr-domain, [d2, attr-instance, day, attr-name, [n, attr-instance, name, attr-op1, ""singles"", attr-op2, ""'day""]]]"
2124,2124,2124,2124,2513,42035,singles-day,Am Singles' Day feiern Menschen die alleine leben.,1_short,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2017-11-19T11:29:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Am 1:=Singles' 2:=Day 3:=feiern 4:=Menschen 5:=die 6:=alleine 7:=leben.,2,"[[0, 1, 2, 3], [5, 6, 7]]","On Singles' Day, people who live alone celebrate.","['# ::snt On Singles\' Day, people who live alone celebrate.\n(c / celebrate-01\n      :ARG0 (p / person\n            :ARG0-of (l / live-01\n                  :mod (a / alone)))\n      :time (f / festival\n            :name (n / name\n                  :op1 ""Singles""\n                  :op2 ""\'Day"")))']","[c, attr-instance, celebrate_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [l, attr-instance, live_01, attr-mod, [a, attr-instance, alone]]], attr-time, [f, attr-instance, festival, attr-name, [n, attr-instance, name, attr-op1, ""singles"", attr-op2, ""'day""]]]"
2125,2125,2125,2125,2514,42036,singles-day,Sie feiern Partys oder Karaoke.,2_short,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2017-11-19T11:29:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=feiern 2:=Partys 3:=oder 4:=Karaoke.,2,"[[2], [4]]",They have parties or karaoke.,['# ::snt They have parties or karaoke.\n(h / have-03\n      :ARG0 (t / they)\n      :ARG1 (o / or\n            :op1 (p / party-01)\n            :op2 (k / karaoke)))'],"[h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [o, attr-instance, or, attr-op1, [p, attr-instance, party_01], attr-op2, [k, attr-instance, karaoke]]]"
2126,2126,2126,2126,2515,42037,singles-day,Sie wollen beim feiern neue Leute kennen-lernen.,3_short,Gedenktage_und_Aktionstage|Seiten_mit_defekten_Dateilinks,2017-11-19T11:29:31Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=wollen 2:=beim 3:=feiern 4:=neue 5:=Leute 6:=kennen-lernen.,1,,They want to meet new people while partying.,['# ::snt They want to meet new people while partying.\n(w / want-01\n      :ARG0 (t / they)\n      :ARG1 (m / meet-02\n            :ARG0 t\n            :ARG1 (p / person\n                  :ARG1-of (n / new-02))\n            :time (p2 / party-01\n                  :ARG0 t)))'],"[w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [m, attr-instance, meet_02, attr-arg0, t, attr-arg1, [p, attr-instance, person, attr-arg1_of, [n, attr-instance, new_02]], attr-time, [p2, attr-instance, party_01, attr-arg0, t]]]"
2127,2127,2127,2127,2516,42039,singular,Singular ist ein anderes Wort für Ein-zahl.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-01-05T10:43:19Z,071517655685f140a415c26a1bfd2837,0:=Singular 1:=ist 2:=ein 3:=anderes 4:=Wort 5:=für 6:=Ein-zahl.,1,,Singular is another word for single number.,"['# ::snt Singular is another word for single number.\n(w / word\n      :mod (a / another)\n      :domain (s / string-entity\n            :value ""Singular"")\n      :purpose (n / number\n            :ARG1-of (s2 / single-02)))']","[w, attr-instance, word, attr-mod, [a, attr-instance, another], attr-domain, [s, attr-instance, string_entity, attr-value, ""singular""], attr-purpose, [n, attr-instance, number, attr-arg1_of, [s2, attr-instance, single_02]]]"
2128,2128,2128,2128,2517,42040,singular,Singular  benutzt man bei Nomen.,1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-01-05T10:43:19Z,071517655685f140a415c26a1bfd2837,0:=Singular 1:= 2:=benutzt 3:=man 4:=bei 5:=Nomen.,1,,Singular is used for nouns.,['# ::snt Singular is used for nouns.\n(u / use-01\n      :ARG1 (t / term)\n      :ARG2 (n / noun))'],"[u, attr-instance, use_01, attr-arg1, [t, attr-instance, term], attr-arg2, [n, attr-instance, noun]]"
2129,2129,2129,2129,2518,42041,singular,Singular  ist nur ein Nomen einer Art.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-01-05T10:43:19Z,071517655685f140a415c26a1bfd2837,0:=Singular 1:= 2:=ist 3:=nur 4:=ein 5:=Nomen 6:=einer 7:=Art.,1,,Singular is only one noun of a kind.,['# ::snt Singular is only one noun of a kind.\n(n / noun\n      :quant 1\n      :mod (k / kind)\n      :domain (s / Singapore)\n      :mod (o / only))'],"[n, attr-instance, noun, attr-quant, 1, attr-mod, [k, attr-instance, kind], attr-domain, [s, attr-instance, singapore], attr-mod, [o, attr-instance, only]]"
2130,2130,2130,2130,2520,42043,singular,Singular ist ein anderes Wort für Ein-zahl.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-01-05T10:43:19Z,071517655685f140a415c26a1bfd2837,0:=Singular 1:=ist 2:=ein 3:=anderes 4:=Wort 5:=für 6:=Ein-zahl.,1,,Singular is another word for single number.,"['# ::snt Singular is another word for single number.\n(w / word\n      :mod (a / another)\n      :domain (s / string-entity\n            :value ""Singular"")\n      :purpose (n / number\n            :ARG1-of (s2 / single-02)))']","[w, attr-instance, word, attr-mod, [a, attr-instance, another], attr-domain, [s, attr-instance, string_entity, attr-value, ""singular""], attr-purpose, [n, attr-instance, number, attr-arg1_of, [s2, attr-instance, single_02]]]"
2131,2131,2131,2131,2521,42044,sinnfrei,"Das Gegenteil von sinnfrei ist ""sinnvoll"".",0_long,Ohne_Kategorie,2012-04-16T13:00:48Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Das 1:=Gegenteil 2:=von 3:=sinnfrei 4:=ist 5:=""sinnvoll"".",1,,"The opposite of meaningless is ""meaningful"".","['# ::snt The opposite of meaningless is ""meaningful"".\n(m / mean-01\n      :ARG1-of (o / opposite-01\n            :ARG2 (m2 / mean-01\n                  :polarity -)))']","[m, attr-instance, mean_01, attr-arg1_of, [o, attr-instance, opposite_01, attr-arg2, [m2, attr-instance, mean_01, attr-polarity, negative]]]"
2132,2132,2132,2132,2522,42045,sinnfrei,Das Wort sinnfrei ist ein Adjektiv.,1_long,Ohne_Kategorie,2012-04-16T13:00:48Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=sinnfrei 3:=ist 4:=ein 5:=Adjektiv.,1,,The word senseless is an adjective.,['# ::snt The word senseless is an adjective.\n(w / word\n      :mod w\n      :mod (s / senseless)\n      :ARG2-of (h / have-degree-91\n            :ARG3 (m / most)))'],"[w, attr-instance, word, attr-mod, w, attr-mod, [s, attr-instance, senseless], attr-arg2_of, [h, attr-instance, have_degree_91, attr-arg3, [m, attr-instance, most]]]"
2133,2133,2133,2133,2523,42046,sinnfrei,"sinnfrei ist ein anderes Wort für ""sinnlos"".",0_short,Ohne_Kategorie,2012-04-16T13:00:48Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=sinnfrei 1:=ist 2:=ein 3:=anderes 4:=Wort 5:=für 6:=""sinnlos"".",1,,"sinnfrei is another word for ""senseless"".","['# ::snt sinnfrei is another word for ""senseless"".\n(w / word\n      :mod (a / another)\n      :ARG1-of (m / mean-01\n            :ARG2 (p / person\n                  :ARG1-of (v / vulnerable-01)))\n      :domain (s / sinnfrei))']","[w, attr-instance, word, attr-mod, [a, attr-instance, another], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [p, attr-instance, person, attr-arg1_of, [v, attr-instance, vulnerable_01]]], attr-domain, [s, attr-instance, sinnfrei]]"
2134,2134,2134,2134,2524,42047,sinnfrei,"Etwas ist sinnfrei, \newline wenn es keine Bedeutung hat.",1_short,Ohne_Kategorie,2012-04-16T13:00:48Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Etwas 1:=ist 2:=sinnfrei, 3:=\newline 4:=wenn 5:=es 6:=keine 7:=Bedeutung 8:=hat.",2,"[[0, 1, 2], [4, 5, 6, 7, 8]]",Something is meaningless if it has no meaning.,['# ::snt Something is meaningless if it has no meaning.\n(m / mean-01\n      :polarity -\n      :ARG1 (s / something)\n      :condition m\n      :polarity -\n      :ARG1 s)'],"[m, attr-instance, mean_01, attr-polarity, negative, attr-arg1, [s, attr-instance, something], attr-condition, m, attr-polarity, negative, attr-arg1, s]"
2135,2135,2135,2135,2525,42051,sinnieren,"Dora macht sich Gedanken, ob ihr Freund der Richtige ist.",3_long,Ohne_Kategorie,2012-02-18T10:58:42Z,a9f29492ed8786de5125371472bcc003,"0:=Dora 1:=macht 2:=sich 3:=Gedanken, 4:=ob 5:=ihr 6:=Freund 7:=der 8:=Richtige 9:=ist.",2,"[[0, 1, 2, 3], [4, 5, 6, 8, 9]]",Dora wonders if her boyfriend is the right one.,"['# ::snt Dora wonders if her boyfriend is the right one.\n(w / wonder-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Dora""))\n      :ARG1 (t / truth-value\n            :polarity-of (r / right-06\n                  :ARG1 (p2 / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (b / boyfriend))))))']","[w, attr-instance, wonder_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""dora""]], attr-arg1, [t, attr-instance, truth_value, attr-polarity_of, [r, attr-instance, right_06, attr-arg1, [p2, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, p, attr-arg2, [b, attr-instance, boyfriend]]]]]]"
2136,2136,2136,2136,2526,42052,sinnieren,Das Wort sinnieren ist ein Verb.,4_long,Ohne_Kategorie,2012-02-18T10:58:42Z,a9f29492ed8786de5125371472bcc003,0:=Das 1:=Wort 2:=sinnieren 3:=ist 4:=ein 5:=Verb.,1,,The word sinnieren is a verb.,"['# ::snt The word sinnieren is a verb.\n(v / verb\n      :domain (s / string-entity\n            :value ""sinnieren""))']","[v, attr-instance, verb, attr-domain, [s, attr-instance, string_entity, attr-value, ""sinnieren""]]"
2137,2137,2137,2137,2527,42053,sinnieren,sinnieren bedeutet über etwas nachdenken.,0_short,Ohne_Kategorie,2012-02-18T10:58:42Z,a9f29492ed8786de5125371472bcc003,0:=sinnieren 1:=bedeutet 2:=über 3:=etwas 4:=nachdenken.,2,"[[0, 1], [2, 3, 4]]",To ponder means to think about something.,['# ::snt To ponder means to think about something.\n(p / ponder-01\n      :ARG1 (m / means\n            :manner-of (t / think-01\n                  :ARG2 (s / something))))'],"[p, attr-instance, ponder_01, attr-arg1, [m, attr-instance, means, attr-manner_of, [t, attr-instance, think_01, attr-arg2, [s, attr-instance, something]]]]"
2138,2138,2138,2138,2528,42054,sinnieren,"Es wird auch ""grübeln"" gesagt.",1_short,Ohne_Kategorie,2012-02-18T10:58:42Z,a9f29492ed8786de5125371472bcc003,"0:=Es 1:=wird 2:=auch 3:=""grübeln"" 4:=gesagt.",1,,"It is also said ""brood"".","['# ::snt It is also said ""brood"".\n(s / say-01\n      :ARG1 (b / brood)\n      :mod (a / also))']","[s, attr-instance, say_01, attr-arg1, [b, attr-instance, brood], attr-mod, [a, attr-instance, also]]"
2139,2139,2139,2139,2529,42055,siri,Das Programm Siri gibt es für: • iPhone,0_long,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Das 1:=Programm 2:=Siri 3:=gibt 4:=es 5:=für: 6:=• 7:=iPhone,1,,The Siri program is available for: • iPhone,"['# ::snt The Siri program is available for: • iPhone\n(a / available-02\n      :ARG2 (p / product\n            :name (n / name\n                  :op1 ""Siri""))\n      :prep-for (p2 / product\n            :name (n2 / name\n                  :op1 ""iPhone"")))']","[a, attr-instance, available_02, attr-arg2, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""siri""]], attr-prep_for, [p2, attr-instance, product, attr-name, [n2, attr-instance, name, attr-op1, ""iphone""]]]"
2140,2140,2140,2140,2530,42056,siri,Das Programm Siri gibt es für: • iPad,1_long,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Das 1:=Programm 2:=Siri 3:=gibt 4:=es 5:=für: 6:=• 7:=iPad,1,,The Siri program is available for: • iPad,"['# ::snt The Siri program is available for: • iPad\n(a / available-02\n      :ARG2 (p / product\n            :name (n / name\n                  :op1 ""Siri""))\n      :prep-for (p2 / product\n            :name (n2 / name\n                  :op1 ""iPad"")))']","[a, attr-instance, available_02, attr-arg2, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""siri""]], attr-prep_for, [p2, attr-instance, product, attr-name, [n2, attr-instance, name, attr-op1, ""ipad""]]]"
2141,2141,2141,2141,2531,42057,siri,Siri ist eine Sprach-steuerung für das iPhone.,2_long,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Siri 1:=ist 2:=eine 3:=Sprach-steuerung 4:=für 5:=das 6:=iPhone.,2,"[[0, 1, 3], [4, 6]]",Siri is a voice control for the iPhone.,"['# ::snt Siri is a voice control for the iPhone.\n(c / control-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Siri""))\n      :ARG1 (v / voice)\n      :beneficiary (p2 / product\n            :name (n2 / name\n                  :op1 ""iPhone"")))']","[c, attr-instance, control_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""siri""]], attr-arg1, [v, attr-instance, voice], attr-beneficiary, [p2, attr-instance, product, attr-name, [n2, attr-instance, name, attr-op1, ""iphone""]]]"
2142,2142,2142,2142,2532,42058,siri,Man kann das Handy auf verschiedene Arten steuern.,3_long,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Man 1:=kann 2:=das 3:=Handy 4:=auf 5:=verschiedene 6:=Arten 7:=steuern.,1,,You can control your phone in different ways.,['# ::snt You can control your phone in different ways.\n(p / possible-01\n      :ARG1 (c / control-01\n            :ARG0 (y / you)\n            :ARG1 (p2 / phone\n                  :poss y)\n            :manner (w / way\n                  :ARG1-of (d / differ-02))))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, control_01, attr-arg0, [y, attr-instance, you], attr-arg1, [p2, attr-instance, phone, attr-poss, y], attr-manner, [w, attr-instance, way, attr-arg1_of, [d, attr-instance, differ_02]]]]"
2143,2143,2143,2143,2533,42059,siri,Meistens macht man das mit den Fingern.,4_long,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Meistens 1:=macht 2:=man 3:=das 4:=mit 5:=den 6:=Fingern.,1,,Most of the time you do this with your fingers.,['# ::snt Most of the time you do this with your fingers.\n(d / do-02\n      :ARG0 (y / you\n            :part (f / finger))\n      :ARG1 (t / this)\n      :instrument f\n      :frequency (t2 / time\n            :quant (m / most)))'],"[d, attr-instance, do_02, attr-arg0, [y, attr-instance, you, attr-part, [f, attr-instance, finger]], attr-arg1, [t, attr-instance, this], attr-instrument, f, attr-frequency, [t2, attr-instance, time, attr-quant, [m, attr-instance, most]]]"
2144,2144,2144,2144,2534,42061,siri,Mit Siri kann man das Handy mit der Sprache steuern.,6_long,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Mit 1:=Siri 2:=kann 3:=man 4:=das 5:=Handy 6:=mit 7:=der 8:=Sprache 9:=steuern.,1,,With Siri you can control your phone with your voice.,"['# ::snt With Siri you can control your phone with your voice.\n(p / possible-01\n      :ARG1 (c / control-01\n            :ARG0 (y / you)\n            :ARG1 (p2 / phone\n                  :poss y)\n            :instrument (v / voice\n                  :poss y))\n      :instrument (p3 / product\n            :name (n / name\n                  :op1 ""Siri"")))']","[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, control_01, attr-arg0, [y, attr-instance, you], attr-arg1, [p2, attr-instance, phone, attr-poss, y], attr-instrument, [v, attr-instance, voice, attr-poss, y]], attr-instrument, [p3, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""siri""]]]"
2145,2145,2145,2145,2537,42064,siri,Es gibt verschiedene Handy Betriebs-systeme.,9_long,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Es 1:=gibt 2:=verschiedene 3:=Handy 4:=Betriebs-systeme.,1,,There are different mobile phone operating systems.,['# ::snt There are different mobile phone operating systems.\n(s / system\n      :instrument-of (o / operate-01\n            :ARG1 (p / phone\n                  :ARG1-of (m / mobile-02)))\n      :ARG1-of (d / differ-02))'],"[s, attr-instance, system, attr-instrument_of, [o, attr-instance, operate_01, attr-arg1, [p, attr-instance, phone, attr-arg1_of, [m, attr-instance, mobile_02]]], attr-arg1_of, [d, attr-instance, differ_02]]"
2146,2146,2146,2146,2538,42065,siri,Auch für andere Betriebs-systemen gibt es Sprach-steuerung.,10_long,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Auch 1:=für 2:=andere 3:=Betriebs-systemen 4:=gibt 5:=es 6:=Sprach-steuerung.,1,,Voice control is also available for other operating systems.,['# ::snt Voice control is also available for other operating systems.\n(a / available-02\n      :ARG1 (s / system\n            :ARG0-of (o / operate-01)\n            :mod (o2 / other))\n      :ARG2 (c / control-01\n            :ARG1 (v / voice))\n      :mod (a2 / also))'],"[a, attr-instance, available_02, attr-arg1, [s, attr-instance, system, attr-arg0_of, [o, attr-instance, operate_01], attr-mod, [o2, attr-instance, other]], attr-arg2, [c, attr-instance, control_01, attr-arg1, [v, attr-instance, voice]], attr-mod, [a2, attr-instance, also]]"
2147,2147,2147,2147,2540,42067,siri,Bei Android heißt die Sprach-steuerung Google Now.,12_long,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Bei 1:=Android 2:=heißt 3:=die 4:=Sprach-steuerung 5:=Google 6:=Now.,1,,"On Android, the voice control is called Google Now.","['# ::snt On Android, the voice control is called Google Now.\n(c / call-01\n      :ARG1 (c2 / control-01\n            :ARG1 (v / voice))\n      :ARG2 (p / product\n            :name (n / name\n                  :op1 ""Google""\n                  :op2 ""Now""))\n      :medium p\n      :name (n2 / name\n            :op1 ""Android""))']","[c, attr-instance, call_01, attr-arg1, [c2, attr-instance, control_01, attr-arg1, [v, attr-instance, voice]], attr-arg2, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""google"", attr-op2, ""now""]], attr-medium, p, attr-name, [n2, attr-instance, name, attr-op1, ""android""]]"
2148,2148,2148,2148,2541,42068,siri,Siri ist ein Computer-Programm.,0_short,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Siri 1:=ist 2:=ein 3:=Computer-Programm.,1,,Siri is a computer program.,"['# ::snt Siri is a computer program.\n(p / program\n      :name (n / name\n            :op1 ""Siri"")\n      :medium (c / computer))']","[p, attr-instance, program, attr-name, [n, attr-instance, name, attr-op1, ""siri""], attr-medium, [c, attr-instance, computer]]"
2149,2149,2149,2149,2542,42069,siri,Mit Siri kann man sprechen.,1_short,Computer,2012-09-13T08:37:54Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Mit 1:=Siri 2:=kann 3:=man 4:=sprechen.,1,,You can talk to Siri.,"['# ::snt You can talk to Siri.\n(p / possible-01\n      :ARG1 (t / talk-01\n            :ARG0 (y / you)\n            :ARG2 (p2 / person\n                  :name (n / name\n                        :op1 ""Siri""))))']","[p, attr-instance, possible_01, attr-arg1, [t, attr-instance, talk_01, attr-arg0, [y, attr-instance, you], attr-arg2, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""siri""]]]]"
2150,2150,2150,2150,2543,42071,sit-in,Ein Sit-in ist eine Demonstrations-art.,0_long,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Sit-in 2:=ist 3:=eine 4:=Demonstrations-art.,1,,A sit-in is a type of demonstration.,['# ::snt A sit-in is a type of demonstration.\n(d / demonstrate-01\n      :ARG1 (s / sit-in-01)\n      :mod (t / type))'],"[d, attr-instance, demonstrate_01, attr-arg1, [s, attr-instance, sit_in_01], attr-mod, [t, attr-instance, type]]"
2151,2151,2151,2151,2544,42072,sit-in,Und Sit-ins sind Gewalt-frei.,1_long,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=Sit-ins 2:=sind 3:=Gewalt-frei.,1,,And sit-ins are non-violent.,['# ::snt And sit-ins are non-violent.\n(a / and\n      :op2 (v / violent\n            :polarity -\n            :domain (s / sit-in)))'],"[a, attr-instance, and, attr-op2, [v, attr-instance, violent, attr-polarity, negative, attr-domain, [s, attr-instance, sit_in]]]"
2152,2152,2152,2152,2545,42073,sit-in,Sit-ins gibt es seit den 1930er Jahren.,2_long,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sit-ins 1:=gibt 2:=es 3:=seit 4:=den 5:=1930er 6:=Jahren.,1,,Sit-ins have been around since the 1930s.,['# ::snt Sit-ins have been around since the 1930s.\n(b / be-located-at-91\n      :ARG1 (s / sit-in)\n      :ARG2 (a / around)\n      :time (s2 / since\n            :op1 (d / date-entity\n                  :decade 1930)))'],"[b, attr-instance, be_located_at_91, attr-arg1, [s, attr-instance, sit_in], attr-arg2, [a, attr-instance, around], attr-time, [s2, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-decade, 1930]]]"
2153,2153,2153,2153,2546,42074,sit-in,Arbeiter haben Sit-ins erfunden.,3_long,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Arbeiter 1:=haben 2:=Sit-ins 3:=erfunden.,1,,Workers invented sit-ins.,['# ::snt Workers invented sit-ins.\n(ii / invent-01\n      :ARG0 (p / person\n            :ARG0-of (w / work-01))\n      :ARG1 (s / sit-in))'],"[ii, attr-instance, invent_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [w, attr-instance, work_01]], attr-arg1, [s, attr-instance, sit_in]]"
2154,2154,2154,2154,2547,42075,sit-in,Sie haben sie zum Streiken benutzt.,4_long,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=haben 2:=sie 3:=zum 4:=Streiken 5:=benutzt.,1,,They used them to strike.,['# ::snt They used them to strike.\n(u / use-01\n      :ARG0 (t / they)\n      :ARG1 (t2 / they)\n      :ARG2 (s / strike-01\n            :ARG0 t))'],"[u, attr-instance, use_01, attr-arg0, [t, attr-instance, they], attr-arg1, [t2, attr-instance, they], attr-arg2, [s, attr-instance, strike_01, attr-arg0, t]]"
2155,2155,2155,2155,2548,42076,sit-in,So lange bis die Bedingungen erfüllt sind.,5_long,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=So 1:=lange 2:=bis 3:=die 4:=Bedingungen 5:=erfüllt 6:=sind.,1,,Until the conditions are met.,['# ::snt Until the conditions are met.\n(b / be-temporally-at-91\n      :ARG2 (u / until\n            :op1 (m / meet-01\n                  :ARG1 (c / condition))))'],"[b, attr-instance, be_temporally_at_91, attr-arg2, [u, attr-instance, until, attr-op1, [m, attr-instance, meet_01, attr-arg1, [c, attr-instance, condition]]]]"
2156,2156,2156,2156,2549,42077,sit-in,Und Studenten benutzen Sit-ins gegen Rassismus.,6_long,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=Studenten 2:=benutzen 3:=Sit-ins 4:=gegen 5:=Rassismus.,1,,And students use sit-ins against racism.,['# ::snt And students use sit-ins against racism.\n(a / and\n      :op2 (u / use-01\n            :ARG0 (p / person\n                  :ARG0-of (s / study-01))\n            :ARG1 (s2 / sit-in)\n            :ARG2 (o / oppose-01\n                  :ARG0 p\n                  :ARG1 (r / racism))))'],"[a, attr-instance, and, attr-op2, [u, attr-instance, use_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [s, attr-instance, study_01]], attr-arg1, [s2, attr-instance, sit_in], attr-arg2, [o, attr-instance, oppose_01, attr-arg0, p, attr-arg1, [r, attr-instance, racism]]]]"
2157,2157,2157,2157,2550,42078,sit-in,"Sie zeigen, dass sie Rassismus schlecht finden.",7_long,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Sie 1:=zeigen, 2:=dass 3:=sie 4:=Rassismus 5:=schlecht 6:=finden.",2,"[[0, 1], [2, 3, 4, 5, 6]]",They show that they think racism is bad.,['# ::snt They show that they think racism is bad.\n(s / show-01\n      :ARG0 (t / they)\n      :ARG1 (t2 / think-01\n            :ARG0 t\n            :ARG1 (b / bad-04\n                  :ARG1 (r / racism))))'],"[s, attr-instance, show_01, attr-arg0, [t, attr-instance, they], attr-arg1, [t2, attr-instance, think_01, attr-arg0, t, attr-arg1, [b, attr-instance, bad_04, attr-arg1, [r, attr-instance, racism]]]]"
2158,2158,2158,2158,2551,42079,sit-in,Ein Sit-in ist eine Aktion.,0_short,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Sit-in 2:=ist 3:=eine 4:=Aktion.,1,,A sit-in is an action.,['# ::snt A sit-in is an action.\n(a / act-02\n      :domain (s / sit-in-02))'],"[a, attr-instance, act_02, attr-domain, [s, attr-instance, sit_in_02]]"
2159,2159,2159,2159,2552,42080,sit-in,Man setzt sich auf den Boden.,1_short,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=setzt 2:=sich 3:=auf 4:=den 5:=Boden.,1,,You sit down on the floor.,['# ::snt You sit down on the floor.\n(s / sit-down-02\n      :ARG1 (y / you)\n      :ARG2 (f / floor))'],"[s, attr-instance, sit_down_02, attr-arg1, [y, attr-instance, you], attr-arg2, [f, attr-instance, floor]]"
2160,2160,2160,2160,2553,42081,sit-in,Und damit versperrt man die Straße.,2_short,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=damit 2:=versperrt 3:=man 4:=die 5:=Straße.,1,,And that blocks the road.,['# ::snt And that blocks the road.\n(a / and\n      :op2 (b / block-01\n            :ARG0 (t / that)\n            :ARG1 (r / road)))'],"[a, attr-instance, and, attr-op2, [b, attr-instance, block_01, attr-arg0, [t, attr-instance, that], attr-arg1, [r, attr-instance, road]]]"
2161,2161,2161,2161,2554,42082,sit-in,Mit einem Sit-in will man etwas erreichen.,3_short,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Mit 1:=einem 2:=Sit-in 3:=will 4:=man 5:=etwas 6:=erreichen.,1,,With a sit-in you want to achieve something.,['# ::snt With a sit-in you want to achieve something.\n(w / want-01\n      :ARG0 (y / you)\n      :ARG1 (a / achieve-01\n            :ARG0 y\n            :ARG1 (s / something))\n      :condition (s2 / sit-in-02\n            :ARG1 y))'],"[w, attr-instance, want_01, attr-arg0, [y, attr-instance, you], attr-arg1, [a, attr-instance, achieve_01, attr-arg0, y, attr-arg1, [s, attr-instance, something]], attr-condition, [s2, attr-instance, sit_in_02, attr-arg1, y]]"
2162,2162,2162,2162,2555,42083,sit-in,Und anderen seine Meinung zu einem Thema zeigen.,4_short,Politik,2018-05-01T06:26:34Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=anderen 2:=seine 3:=Meinung 4:=zu 5:=einem 6:=Thema 7:=zeigen.,2,"[[1, 2, 7], [4, 6]]",And show others your opinion on a topic.,['# ::snt And show others your opinion on a topic.\n(a / and\n      :op2 (s / show-01\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG1 (t / thing\n                  :ARG1-of (o / opine-01\n                        :ARG0 y\n                        :topic (t2 / topic)))\n            :ARG2 (o2 / other)))'],"[a, attr-instance, and, attr-op2, [s, attr-instance, show_01, attr-mode, imperative, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [o, attr-instance, opine_01, attr-arg0, y, attr-topic, [t2, attr-instance, topic]]], attr-arg2, [o2, attr-instance, other]]]"
2163,2163,2163,2163,2556,42084,sitar,Die Sitar ist ein Zupfinstrument.,0_long,Ohne_Kategorie,2012-12-12T07:56:56Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Sitar 2:=ist 3:=ein 4:=Zupfinstrument.,1,,The sitar is a plucked instrument.,['# ::snt The sitar is a plucked instrument.\n(ii / instrument\n      :ARG1-of (p / pluck-01)\n      :domain (s / sitar))'],"[ii, attr-instance, instrument, attr-arg1_of, [p, attr-instance, pluck_01], attr-domain, [s, attr-instance, sitar]]"
2164,2164,2164,2164,2557,42085,sitar,Auch die Gitarre ist ein Zupinstrument.,1_long,Ohne_Kategorie,2012-12-12T07:56:56Z,7b5adf57ed2178795004f4c052333f37,0:=Auch 1:=die 2:=Gitarre 3:=ist 4:=ein 5:=Zupinstrument.,1,,The guitar is also a plucked instrument.,['# ::snt The guitar is also a plucked instrument.\n(ii / instrument\n      :ARG1-of (p / pluck-01)\n      :mod (a / also)\n      :domain (g / guitar))'],"[ii, attr-instance, instrument, attr-arg1_of, [p, attr-instance, pluck_01], attr-mod, [a, attr-instance, also], attr-domain, [g, attr-instance, guitar]]"
2165,2165,2165,2165,2558,42086,sitar,Die Sitar hat 19 bis 21 Saiten.,2_long,Ohne_Kategorie,2012-12-12T07:56:56Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Sitar 2:=hat 3:=19 4:=bis 5:=21 6:=Saiten.,2,"[[3], [5]]",The sitar has 19 to 21 strings.,['# ::snt The sitar has 19 to 21 strings.\n(h / have-03\n      :ARG0 (s / sitar)\n      :ARG1 (s2 / string\n            :quant (b / between\n                  :op1 19\n                  :op2 21)))'],"[h, attr-instance, have_03, attr-arg0, [s, attr-instance, sitar], attr-arg1, [s2, attr-instance, string, attr-quant, [b, attr-instance, between, attr-op1, 19, attr-op2, 21]]]"
2166,2166,2166,2166,2559,42087,sitar,Der Körper der Sitar ist ein getrockneter Kürbis.,3_long,Ohne_Kategorie,2012-12-12T07:56:56Z,7b5adf57ed2178795004f4c052333f37,0:=Der 1:=Körper 2:=der 3:=Sitar 4:=ist 5:=ein 6:=getrockneter 7:=Kürbis.,1,,The body of the sitar is a dried gourd.,['# ::snt The body of the sitar is a dried gourd.\n(g / gourd\n      :ARG1-of (d / dry-02)\n      :domain (b / body\n            :part-of (s / sitar)))'],"[g, attr-instance, gourd, attr-arg1_of, [d, attr-instance, dry_02], attr-domain, [b, attr-instance, body, attr-part_of, [s, attr-instance, sitar]]]"
2167,2167,2167,2167,2560,42088,sitar,Vor allem in Indien ist die Sitar bekannt.,4_long,Ohne_Kategorie,2012-12-12T07:56:56Z,7b5adf57ed2178795004f4c052333f37,0:=Vor 1:=allem 2:=in 3:=Indien 4:=ist 5:=die 6:=Sitar 7:=bekannt.,1,,The sitar is especially popular in India.,"['# ::snt The sitar is especially popular in India.\n(p / popular-02\n      :ARG1 (s / sitar)\n      :location (c / country\n            :name (n / name\n                  :op1 ""India""))\n      :degree (e / especially))']","[p, attr-instance, popular_02, attr-arg1, [s, attr-instance, sitar], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]], attr-degree, [e, attr-instance, especially]]"
2168,2168,2168,2168,2562,42090,sitar,Die Sitar ist ein Musikinstrument.,0_short,Ohne_Kategorie,2012-12-12T07:56:56Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Sitar 2:=ist 3:=ein 4:=Musikinstrument.,1,,The sitar is a musical instrument.,['# ::snt The sitar is a musical instrument.\n(ii / instrument\n      :mod (m / musical)\n      :domain (s / sitar))'],"[ii, attr-instance, instrument, attr-mod, [m, attr-instance, musical], attr-domain, [s, attr-instance, sitar]]"
2169,2169,2169,2169,2563,42091,sitcom,Sitcom ist eine englische Abkürzung.,0_long,Radio_und_Fernsehen,2011-12-15T11:32:02Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Sitcom 1:=ist 2:=eine 3:=englische 4:=Abkürzung.,2,"[[3], [4]]",Sitcom is an English abbreviation.,"['# ::snt Sitcom is an English abbreviation.\n(a / abbreviation\n      :mod (c / country\n            :name (n / name\n                  :op1 ""England""))\n      :domain (s / sitcom))']","[a, attr-instance, abbreviation, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""england""]], attr-domain, [s, attr-instance, sitcom]]"
2170,2170,2170,2170,2564,42092,sitcom,Sitcom ist die Abkürzung für situation comedy.,1_long,Radio_und_Fernsehen,2011-12-15T11:32:02Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Sitcom 1:=ist 2:=die 3:=Abkürzung 4:=für 5:=situation 6:=comedy.,1,,Sitcom is the abbreviation for situation comedy.,['# ::snt Sitcom is the abbreviation for situation comedy.\n(a / abbreviation\n      :mod (c / comedy\n            :mod (s / situation))\n      :domain (s2 / sitcom))'],"[a, attr-instance, abbreviation, attr-mod, [c, attr-instance, comedy, attr-mod, [s, attr-instance, situation]], attr-domain, [s2, attr-instance, sitcom]]"
2171,2171,2171,2171,2565,42093,sitcom,Eine sehr bekannte Sitcom ist Two and a Half Men.,2_long,Radio_und_Fernsehen,2011-12-15T11:32:02Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=sehr 2:=bekannte 3:=Sitcom 4:=ist 5:=Two 6:=and 7:=a 8:=Half 9:=Men.,1,,A very well-known sitcom is Two and a Half Men.,"['# ::snt A very well-known sitcom is Two and a Half Men.\n(s / sitcom\n      :name (n / name\n            :op1 ""Two""\n            :op2 ""and""\n            :op3 ""A""\n            :op4 ""Half""\n            :op5 ""Men"")\n      :ARG1-of (k / know-02\n            :degree (w / well\n                  :degree (v / very))))']","[s, attr-instance, sitcom, attr-name, [n, attr-instance, name, attr-op1, ""two"", attr-op2, ""and"", attr-op3, ""a"", attr-op4, ""half"", attr-op5, ""men""], attr-arg1_of, [k, attr-instance, know_02, attr-degree, [w, attr-instance, well, attr-degree, [v, attr-instance, very]]]]"
2172,2172,2172,2172,2566,42094,sitcom,Das Wort Sitcom ist ein Substantiv.,3_long,Radio_und_Fernsehen,2011-12-15T11:32:02Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Sitcom 3:=ist 4:=ein 5:=Substantiv.,1,,The word sitcom is a noun.,['# ::snt The word sitcom is a noun.\n(n / noun\n      :domain (w / word\n            :mod (s / sitcom)))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [s, attr-instance, sitcom]]]"
2173,2173,2173,2173,2567,42095,sitcom,Sitcom ist ein anderes Wort für  lustige Fernsehsendung.,0_short,Radio_und_Fernsehen,2011-12-15T11:32:02Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Sitcom 1:=ist 2:=ein 3:=anderes 4:=Wort 5:=für 6:= 7:=lustige 8:=Fernsehsendung.,1,,Sitcom is another word for funny television show.,['# ::snt Sitcom is another word for funny television show.\n(w / word\n      :mod (a / another)\n      :domain (s / sitcom)\n      :purpose (s2 / show-04\n            :ARG1 (t / television)\n            :ARG1-of (f / funny-02)))'],"[w, attr-instance, word, attr-mod, [a, attr-instance, another], attr-domain, [s, attr-instance, sitcom], attr-purpose, [s2, attr-instance, show_04, attr-arg1, [t, attr-instance, television], attr-arg1_of, [f, attr-instance, funny_02]]]"
2174,2174,2174,2174,2568,42096,sitelen-pona,Das Bild-schrift-zeichen-system Sitelen Pona ist für Toki Pona gemacht.,0_long,Sprache|Seiten_mit_defekten_Dateilinks,2022-02-08T06:59:29Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Bild-schrift-zeichen-system 2:=Sitelen 3:=Pona 4:=ist 5:=für 6:=Toki 7:=Pona 8:=gemacht.,2,"[[1], [4, 5, 6, 7, 8]]",The picture-writing-character system Sitelen Pona is made for Toki Pona.,"['# ::snt The picture-writing-character system Sitelen Pona is made for Toki Pona.\n(m / make-01\n      :ARG1 (s / system\n            :name (n / name\n                  :op1 ""Sitelen""\n                  :op2 ""Pona"")\n            :mod (w / write-01\n                  :ARG1 (c / character)))\n      :ARG3 (c2 / city\n            :name (n2 / name\n                  :op1 ""Toki""\n                  :op2 ""Pona"")))']","[m, attr-instance, make_01, attr-arg1, [s, attr-instance, system, attr-name, [n, attr-instance, name, attr-op1, ""sitelen"", attr-op2, ""pona""], attr-mod, [w, attr-instance, write_01, attr-arg1, [c, attr-instance, character]]], attr-arg3, [c2, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""toki"", attr-op2, ""pona""]]]"
2175,2175,2175,2175,2570,42098,sitelen-pona,In einem Bild-schrift-zeichen-system ist jedes Zeichen ein Wort.,2_long,Sprache|Seiten_mit_defekten_Dateilinks,2022-02-08T06:59:29Z,48f66906899cc4a9477b6c9e32ff4424,0:=In 1:=einem 2:=Bild-schrift-zeichen-system 3:=ist 4:=jedes 5:=Zeichen 6:=ein 7:=Wort.,1,,"In a picture-writing system, each character is a word.","['# ::snt In a picture-writing system, each character is a word.\n(w / word\n      :domain (c / character\n            :mod (e / each))\n      :location (s / system\n            :ARG0-of (w2 / write-01\n                  :ARG1 (p / picture))))']","[w, attr-instance, word, attr-domain, [c, attr-instance, character, attr-mod, [e, attr-instance, each]], attr-location, [s, attr-instance, system, attr-arg0_of, [w2, attr-instance, write_01, attr-arg1, [p, attr-instance, picture]]]]"
2176,2176,2176,2176,2572,42100,sitelen-pona,Diese kann man leicht erlernen.,4_long,Sprache|Seiten_mit_defekten_Dateilinks,2022-02-08T06:59:29Z,48f66906899cc4a9477b6c9e32ff4424,0:=Diese 1:=kann 2:=man 3:=leicht 4:=erlernen.,1,,These are easy to learn.,['# ::snt These are easy to learn.\n(e / easy-05\n      :ARG1 (l / learn-01\n            :ARG1 (t / this)))'],"[e, attr-instance, easy_05, attr-arg1, [l, attr-instance, learn_01, attr-arg1, [t, attr-instance, this]]]"
2177,2177,2177,2177,2574,42102,sitelen-pona,Bei chinesischen Zeichen muss man mehr wissen.,6_long,Sprache|Seiten_mit_defekten_Dateilinks,2022-02-08T06:59:29Z,48f66906899cc4a9477b6c9e32ff4424,0:=Bei 1:=chinesischen 2:=Zeichen 3:=muss 4:=man 5:=mehr 6:=wissen.,1,,With Chinese characters you need to know more.,"['# ::snt With Chinese characters you need to know more.\n(n / need-01\n      :ARG0 (y / you)\n      :ARG1 (k / know-01\n            :ARG0 y\n            :ARG1 (m / more))\n      :prep-with (c / character\n            :mod (c2 / country\n                  :name (n2 / name\n                        :op1 ""China""))))']","[n, attr-instance, need_01, attr-arg0, [y, attr-instance, you], attr-arg1, [k, attr-instance, know_01, attr-arg0, y, attr-arg1, [m, attr-instance, more]], attr-prep_with, [c, attr-instance, character, attr-mod, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""china""]]]]"
2178,2178,2178,2178,2575,42103,sitelen-pona,Da muss man mindesten 1500 Zeichen kennen.,7_long,Sprache|Seiten_mit_defekten_Dateilinks,2022-02-08T06:59:29Z,48f66906899cc4a9477b6c9e32ff4424,0:=Da 1:=muss 2:=man 3:=mindesten 4:=1500 5:=Zeichen 6:=kennen.,1,,You have to know at least 1500 characters.,['# ::snt You have to know at least 1500 characters.\n(o / obligate-01\n      :ARG1 (y / you)\n      :ARG2 (k / know-04\n            :ARG0 y\n            :ARG1 (c / character\n                  :quant (a / at-least\n                        :op1 1500))))'],"[o, attr-instance, obligate_01, attr-arg1, [y, attr-instance, you], attr-arg2, [k, attr-instance, know_04, attr-arg0, y, attr-arg1, [c, attr-instance, character, attr-quant, [a, attr-instance, at_least, attr-op1, 1500]]]]"
2179,2179,2179,2179,2576,42104,sitelen-pona,Die meisten Sitelen Pona-zeichen kann man sich gut merken.,8_long,Sprache|Seiten_mit_defekten_Dateilinks,2022-02-08T06:59:29Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=meisten 2:=Sitelen 3:=Pona-zeichen 4:=kann 5:=man 6:=sich 7:=gut 8:=merken.,1,,Most Sitelen Pona characters are easy to remember.,"['# ::snt Most Sitelen Pona characters are easy to remember.\n(e / easy-05\n      :ARG1 (r / remember-01\n            :ARG1 (c / character\n                  :mod (l / local-region\n                        :name (n / name\n                              :op1 ""Sitelen""\n                              :op2 ""Pona""))\n                  :quant (m / most))))']","[e, attr-instance, easy_05, attr-arg1, [r, attr-instance, remember_01, attr-arg1, [c, attr-instance, character, attr-mod, [l, attr-instance, local_region, attr-name, [n, attr-instance, name, attr-op1, ""sitelen"", attr-op2, ""pona""]], attr-quant, [m, attr-instance, most]]]]"
2180,2180,2180,2180,2579,42107,sitelen-pona,Sitelen Pona sind Bild-schrift-zeichen vom Toki Pona.,0_short,Sprache|Seiten_mit_defekten_Dateilinks,2022-02-08T06:59:29Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sitelen 1:=Pona 2:=sind 3:=Bild-schrift-zeichen 4:=vom 5:=Toki 6:=Pona.,2,"[[3], [4, 5, 6]]",Sitelen Pona are picture-writing characters from Toki Pona.,"['# ::snt Sitelen Pona are picture-writing characters from Toki Pona.\n(c / character\n      :ARG0-of (w / write-01\n            :ARG1 (p / picture))\n      :source (c2 / city\n            :name (n / name\n                  :op1 ""Toki""\n                  :op2 ""Pona""))\n      :domain (p2 / person\n            :name (n2 / name\n                  :op1 ""Sitelen""\n                  :op2 ""Pona"")))']","[c, attr-instance, character, attr-arg0_of, [w, attr-instance, write_01, attr-arg1, [p, attr-instance, picture]], attr-source, [c2, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""toki"", attr-op2, ""pona""]], attr-domain, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""sitelen"", attr-op2, ""pona""]]]"
2181,2181,2181,2181,2580,42108,sitelen-pona,Sitelen Pona heißt: \newline Einfaches schreiben.,1_short,Sprache|Seiten_mit_defekten_Dateilinks,2022-02-08T06:59:29Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sitelen 1:=Pona 2:=heißt: 3:=\newline 4:=Einfaches 5:=schreiben.,1,,Sitelen Pona means: \newline Simple writing.,"['# ::snt Sitelen Pona means: \\newline Simple writing.\n(m / mean-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Sitelen""\n                  :op2 ""Pona""))\n      :ARG2 (w / write-01\n            :mod (l / line\n                  :mod (n2 / newline))\n            :mod (s / simple)))']","[m, attr-instance, mean_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""sitelen"", attr-op2, ""pona""]], attr-arg2, [w, attr-instance, write_01, attr-mod, [l, attr-instance, line, attr-mod, [n2, attr-instance, newline]], attr-mod, [s, attr-instance, simple]]]"
2182,2182,2182,2182,2582,42110,sitelen-sitelen,"Wenn dich die Maya-schrift neugierig macht, \newline dann kannst du mit-hilfe von Sitelen Sitelen lernen.",0_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-09T12:13:55Z,e800bebc9060331edfac65e663a55570,"0:=Wenn 1:=dich 2:=die 3:=Maya-schrift 4:=neugierig 5:=macht, 6:=\newline 7:=dann 8:=kannst 9:=du 10:=mit-hilfe 11:=von 12:=Sitelen 13:=Sitelen 14:=lernen.",3,"[[0, 1, 3, 4, 5], [7, 8, 9, 13, 14], [10, 11, 12]]","If you are curious about the Mayan script, \newline then you can learn Sitelen with the help of Sitelen.","['# ::snt If you are curious about the Mayan script, \\newline then you can learn Sitelen with the help of Sitelen.\n(p / possible-01\n      :ARG1 (l / learn-01\n            :ARG0 (y / you)\n            :ARG1 (l2 / language\n                  :name (n / name\n                        :op1 ""Sitelen""))\n            :ARG2-of (h / help-01\n                  :ARG0 (l3 / language\n                        :name (n2 / name\n                              :op1 ""Sitelen""))))\n      :condition (c / curious-01\n            :ARG0 (s / script\n                  :mod (l4 / language\n                        :name (n3 / name\n                              :op1 ""Mayan""))\n                  :ARG1-of (m / mean-01\n                        :ARG2 (l5 / language\n                              :name (n4 / name\n                                    :op1 ""National""\n                                    :op2 ""Language""))))\n            :ARG1 y))']","[p, attr-instance, possible_01, attr-arg1, [l, attr-instance, learn_01, attr-arg0, [y, attr-instance, you], attr-arg1, [l2, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""sitelen""]], attr-arg2_of, [h, attr-instance, help_01, attr-arg0, [l3, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""sitelen""]]]], attr-condition, [c, attr-instance, curious_01, attr-arg0, [s, attr-instance, script, attr-mod, [l4, attr-instance, language, attr-name, [n3, attr-instance, name, attr-op1, ""mayan""]], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [l5, attr-instance, language, attr-name, [n4, attr-instance, name, attr-op1, ""national"", attr-op2, ""language""]]]], attr-arg1, y]]"
2183,2183,2183,2183,2583,42111,sitelen-sitelen,Dieses ist ein Weg-bereiter zum Erlernen von Maya-schrift.,1_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-09T12:13:55Z,e800bebc9060331edfac65e663a55570,0:=Dieses 1:=ist 2:=ein 3:=Weg-bereiter 4:=zum 5:=Erlernen 6:=von 7:=Maya-schrift.,1,,This is a path-breaker for learning Mayan writing.,"['# ::snt This is a path-breaker for learning Mayan writing.\n(b / break-18\n      :ARG0 (t / this)\n      :ARG1 (p / path)\n      :purpose (l / learn-01\n            :ARG1 (w / write-01\n                  :ARG0 (p2 / person\n                        :name (n / name\n                              :op1 ""Mayan"")))))']","[b, attr-instance, break_18, attr-arg0, [t, attr-instance, this], attr-arg1, [p, attr-instance, path], attr-purpose, [l, attr-instance, learn_01, attr-arg1, [w, attr-instance, write_01, attr-arg0, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mayan""]]]]]"
2184,2184,2184,2184,2584,42112,sitelen-sitelen,"Wenn man die Silben-zeichen mit-einander verbindet, \newline dann bildet man damit ein Wort.",2_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-09T12:13:55Z,e800bebc9060331edfac65e663a55570,"0:=Wenn 1:=man 2:=die 3:=Silben-zeichen 4:=mit-einander 5:=verbindet, 6:=\newline 7:=dann 8:=bildet 9:=man 10:=damit 11:=ein 12:=Wort.",2,"[[0, 1, 3, 4, 5], [7, 8, 9, 10, 12]]","If you connect the syllable characters with each other, \newline then you form a word.","['# ::snt If you connect the syllable characters with each other, \\newline then you form a word.\n(f / form-01\n      :ARG0 (y / you)\n      :ARG1 (w / word)\n      :condition (c / connect-01\n            :ARG0 y\n            :ARG1 (c2 / character\n                  :ARG1-of (s / syllable-01))\n            :ARG2 (o / other\n                  :mod (e / each))\n            :instrument (s2 / string-entity\n                  :value ""\\newline"")))']","[f, attr-instance, form_01, attr-arg0, [y, attr-instance, you], attr-arg1, [w, attr-instance, word], attr-condition, [c, attr-instance, connect_01, attr-arg0, y, attr-arg1, [c2, attr-instance, character, attr-arg1_of, [s, attr-instance, syllable_01]], attr-arg2, [o, attr-instance, other, attr-mod, [e, attr-instance, each]], attr-instrument, [s2, attr-instance, string_entity, attr-value, ""\newline""]]]"
2185,2185,2185,2185,2585,42114,sitelen-sitelen,Sitelen Sitelen ist eine Hieroglyphen-schrift.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-09T12:13:55Z,e800bebc9060331edfac65e663a55570,0:=Sitelen 1:=Sitelen 2:=ist 3:=eine 4:=Hieroglyphen-schrift.,1,,Sitelen Sitelen is a hieroglyphic script.,"['# ::snt Sitelen Sitelen is a hieroglyphic script.\n(s / script\n      :mod (h / hieroglyphic)\n      :domain (p / product\n            :name (n / name\n                  :op1 ""Sitelen""\n                  :op2 ""Sitelen"")))']","[s, attr-instance, script, attr-mod, [h, attr-instance, hieroglyphic], attr-domain, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""sitelen"", attr-op2, ""sitelen""]]]"
2186,2186,2186,2186,2586,42115,sitelen-sitelen,Das Vorbild ist die Maya-schrift.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-09T12:13:55Z,e800bebc9060331edfac65e663a55570,0:=Das 1:=Vorbild 2:=ist 3:=die 4:=Maya-schrift.,1,,The model is the Mayan script.,"['# ::snt The model is the Mayan script.\n(m / model-01\n      :ARG2 (s / script\n            :mod (e / ethnic-group\n                  :name (n / name\n                        :op1 ""Mayan""))))']","[m, attr-instance, model_01, attr-arg2, [s, attr-instance, script, attr-mod, [e, attr-instance, ethnic_group, attr-name, [n, attr-instance, name, attr-op1, ""mayan""]]]]"
2187,2187,2187,2187,2587,42116,sitelen-sitelen,Und es wird in Bildern geschrieben.,2_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-09T12:13:55Z,e800bebc9060331edfac65e663a55570,0:=Und 1:=es 2:=wird 3:=in 4:=Bildern 5:=geschrieben.,1,,And it is written in pictures.,['# ::snt And it is written in pictures.\n(a / and\n      :op2 (w / write-01\n            :ARG1 (ii / it)\n            :medium (p / picture)))'],"[a, attr-instance, and, attr-op2, [w, attr-instance, write_01, attr-arg1, [ii, attr-instance, it], attr-medium, [p, attr-instance, picture]]]"
2188,2188,2188,2188,2588,42117,sitelen-sitelen,Sitelen Sitelen kann man als Silben-schrift verwenden.,3_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-09T12:13:55Z,e800bebc9060331edfac65e663a55570,0:=Sitelen 1:=Sitelen 2:=kann 3:=man 4:=als 5:=Silben-schrift 6:=verwenden.,1,,Sitelen Sitelen can be used as a syllabic script.,"['# ::snt Sitelen Sitelen can be used as a syllabic script.\n(p / possible-01\n      :ARG1 (u / use-01\n            :ARG1 (s / sitelen\n                  :mod (l / language\n                        :name (n / name\n                              :op1 ""Sitelen"")))\n            :ARG2 (s2 / script\n                  :mod (s3 / syllabic))))']","[p, attr-instance, possible_01, attr-arg1, [u, attr-instance, use_01, attr-arg1, [s, attr-instance, sitelen, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""sitelen""]]], attr-arg2, [s2, attr-instance, script, attr-mod, [s3, attr-instance, syllabic]]]]"
2189,2189,2189,2189,2590,42119,sitelen-sitelen,Sitelen Sitelen ist auf der Sprache Toki Pona aufgebaut.,5_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-09T12:13:55Z,e800bebc9060331edfac65e663a55570,0:=Sitelen 1:=Sitelen 2:=ist 3:=auf 4:=der 5:=Sprache 6:=Toki 7:=Pona 8:=aufgebaut.,1,,Sitelen Sitelen is based on the Toki Pona language.,"['# ::snt Sitelen Sitelen is based on the Toki Pona language.\n(b / base-02\n      :ARG1 (l / location\n            :name (n / name\n                  :op1 ""Sitelen""\n                  :op2 ""Sitelen""))\n      :ARG2 (l2 / language\n            :name (n2 / name\n                  :op1 ""Toki""\n                  :op2 ""Pona"")))']","[b, attr-instance, base_02, attr-arg1, [l, attr-instance, location, attr-name, [n, attr-instance, name, attr-op1, ""sitelen"", attr-op2, ""sitelen""]], attr-arg2, [l2, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""toki"", attr-op2, ""pona""]]]"
2190,2190,2190,2190,2591,42120,sitelen-sitelen,Und entwickelt von Jonathan Gabel.,6_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-09T12:13:55Z,e800bebc9060331edfac65e663a55570,0:=Und 1:=entwickelt 2:=von 3:=Jonathan 4:=Gabel.,1,,And developed by Jonathan Gabel.,"['# ::snt And developed by Jonathan Gabel.\n(a / and\n      :op2 (d / develop-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 ""Jonathan""\n                        :op2 ""Gabel""))))']","[a, attr-instance, and, attr-op2, [d, attr-instance, develop_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""jonathan"", attr-op2, ""gabel""]]]]"
2191,2191,2191,2191,2592,42121,sitzfuball,Beim Sitzfußall sitzt man auf den Boden.,0_long,Sport,2008-05-06T08:00:41Z,ba4bddd086162b3f83a1be81c78c36e0,0:=Beim 1:=Sitzfußall 2:=sitzt 3:=man 4:=auf 5:=den 6:=Boden.,1,,With the seated footall you sit on the floor.,['# ::snt With the seated footall you sit on the floor.\n(s / sit-01\n      :ARG1 (y / you)\n      :ARG2 (f / floor)\n      :condition (f2 / foot\n            :ARG1-of (s2 / seat-01)\n            :mod (a / all)))'],"[s, attr-instance, sit_01, attr-arg1, [y, attr-instance, you], attr-arg2, [f, attr-instance, floor], attr-condition, [f2, attr-instance, foot, attr-arg1_of, [s2, attr-instance, seat_01], attr-mod, [a, attr-instance, all]]]"
2192,2192,2192,2192,2593,42122,sitzfuball,Man darf nicht aufstehen.,1_long,Sport,2008-05-06T08:00:41Z,ba4bddd086162b3f83a1be81c78c36e0,0:=Man 1:=darf 2:=nicht 3:=aufstehen.,1,,You are not allowed to get up.,['# ::snt You are not allowed to get up.\n(a / allow-01\n      :polarity -\n      :ARG1 (g / get-05\n            :ARG1 (y / you)\n            :ARG2 (u / up)))'],"[a, attr-instance, allow_01, attr-polarity, negative, attr-arg1, [g, attr-instance, get_05, attr-arg1, [y, attr-instance, you], attr-arg2, [u, attr-instance, up]]]"
2193,2193,2193,2193,2594,42123,sitzfuball,Die Hände dürfen den Ball nicht berühren.,2_long,Sport,2008-05-06T08:00:41Z,ba4bddd086162b3f83a1be81c78c36e0,0:=Die 1:=Hände 2:=dürfen 3:=den 4:=Ball 5:=nicht 6:=berühren.,1,,The hands must not touch the ball.,['# ::snt The hands must not touch the ball.\n(o / obligate-01\n      :ARG2 (t / touch-01\n            :polarity -\n            :ARG0 (h / hand)\n            :ARG1 (b / ball)))'],"[o, attr-instance, obligate_01, attr-arg2, [t, attr-instance, touch_01, attr-polarity, negative, attr-arg0, [h, attr-instance, hand], attr-arg1, [b, attr-instance, ball]]]"
2194,2194,2194,2194,2595,42124,sitzfuball,Die Spieler rutschen auf dem Boden.,3_long,Sport,2008-05-06T08:00:41Z,ba4bddd086162b3f83a1be81c78c36e0,0:=Die 1:=Spieler 2:=rutschen 3:=auf 4:=dem 5:=Boden.,1,,The players slide on the floor.,['# ::snt The players slide on the floor.\n(s / slide-01\n      :ARG1 (p / person\n            :ARG0-of (p2 / play-01))\n      :ARG4 (f / floor))'],"[s, attr-instance, slide_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01]], attr-arg4, [f, attr-instance, floor]]"
2195,2195,2195,2195,2596,42125,sitzfuball,Der Torwart darf knien.,4_long,Sport,2008-05-06T08:00:41Z,ba4bddd086162b3f83a1be81c78c36e0,0:=Der 1:=Torwart 2:=darf 3:=knien.,1,,The goalkeeper may kneel.,['# ::snt The goalkeeper may kneel.\n(p / permit-01\n      :ARG1 (k / kneel-01\n            :ARG0 (g / goalkeeper)))'],"[p, attr-instance, permit_01, attr-arg1, [k, attr-instance, kneel_01, attr-arg0, [g, attr-instance, goalkeeper]]]"
2196,2196,2196,2196,2597,42126,sitzfuball,Sitzfußball ist eine Sportart.,0_short,Sport,2008-05-06T08:00:41Z,ba4bddd086162b3f83a1be81c78c36e0,0:=Sitzfußball 1:=ist 2:=eine 3:=Sportart.,1,,Sitting football is a sport.,['# ::snt Sitting football is a sport.\n(s / sport\n      :domain (s2 / sit-01\n            :ARG1 (f / football)))'],"[s, attr-instance, sport, attr-domain, [s2, attr-instance, sit_01, attr-arg1, [f, attr-instance, football]]]"
2197,2197,2197,2197,2598,42127,sitzvolleyball,Beim Sitz-volley-ball sitzen die Spieler auf dem Boden.,0_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Beim 1:=Sitz-volley-ball 2:=sitzen 3:=die 4:=Spieler 5:=auf 6:=dem 7:=Boden.,1,,"In sitting volleyball, the players sit on the floor.","['# ::snt In sitting volleyball, the players sit on the floor.\n(s / sit-01\n      :ARG1 (p / person\n            :ARG0-of (p2 / play-01))\n      :ARG2 (f / floor)\n      :condition p2\n      :ARG0 p\n      :ARG1 (v / volleyball\n            :ARG1-of (s2 / sit-01)))']","[s, attr-instance, sit_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01]], attr-arg2, [f, attr-instance, floor], attr-condition, p2, attr-arg0, p, attr-arg1, [v, attr-instance, volleyball, attr-arg1_of, [s2, attr-instance, sit_01]]]"
2198,2198,2198,2198,2599,42128,sitzvolleyball,Es gibt 2 Mannschaften.,1_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Es 1:=gibt 2:=2 3:=Mannschaften.,1,,There are 2 teams.,['# ::snt There are 2 teams.\n(t / team\n      :quant 2)'],"[t, attr-instance, team, attr-quant, 2]"
2199,2199,2199,2199,2600,42129,sitzvolleyball,Jede Mannschaft hat 6 Spieler.,2_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Jede 1:=Mannschaft 2:=hat 3:=6 4:=Spieler.,1,,Each team has 6 players.,['# ::snt Each team has 6 players.\n(h / have-03\n      :ARG0 (t / team\n            :mod (e / each))\n      :ARG1 (p / person\n            :quant 6\n            :ARG0-of (p2 / play-01)))'],"[h, attr-instance, have_03, attr-arg0, [t, attr-instance, team, attr-mod, [e, attr-instance, each]], attr-arg1, [p, attr-instance, person, attr-quant, 6, attr-arg0_of, [p2, attr-instance, play_01]]]"
2200,2200,2200,2200,2601,42130,sitzvolleyball,Es gibt ein Spiel-feld.,3_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Es 1:=gibt 2:=ein 3:=Spiel-feld.,1,,There is a playing field.,['# ::snt There is a playing field.\n(f / field\n      :location-of (p / play-01))'],"[f, attr-instance, field, attr-location_of, [p, attr-instance, play_01]]"
2201,2201,2201,2201,2602,42131,sitzvolleyball,Das Spiel-feld hat 2 Hälften.,4_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Das 1:=Spiel-feld 2:=hat 3:=2 4:=Hälften.,1,,The playing field has two halves.,['# ::snt The playing field has two halves.\n(h / have-03\n      :ARG0 (f / field\n            :location-of (p / play-01))\n      :ARG1 (h2 / half\n            :quant 2))'],"[h, attr-instance, have_03, attr-arg0, [f, attr-instance, field, attr-location_of, [p, attr-instance, play_01]], attr-arg1, [h2, attr-instance, half, attr-quant, 2]]"
2202,2202,2202,2202,2603,42132,sitzvolleyball,Jede Mannschaft bekommt eine Hälfte.,5_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Jede 1:=Mannschaft 2:=bekommt 3:=eine 4:=Hälfte.,1,,Each team gets one half.,['# ::snt Each team gets one half.\n(g / get-01\n      :ARG0 (t / team\n            :mod (e / each))\n      :ARG1 (h / half\n            :quant 1))'],"[g, attr-instance, get_01, attr-arg0, [t, attr-instance, team, attr-mod, [e, attr-instance, each]], attr-arg1, [h, attr-instance, half, attr-quant, 1]]"
2203,2203,2203,2203,2604,42133,sitzvolleyball,In der Mitte steht ein Netz.,6_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=In 1:=der 2:=Mitte 3:=steht 4:=ein 5:=Netz.,1,,There is a net in the middle.,['# ::snt There is a net in the middle.\n(n / net\n      :location (m / middle))'],"[n, attr-instance, net, attr-location, [m, attr-instance, middle]]"
2204,2204,2204,2204,2605,42134,sitzvolleyball,Der Ball muss über dieses Netz gespielt werden.,7_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Der 1:=Ball 2:=muss 3:=über 4:=dieses 5:=Netz 6:=gespielt 7:=werden.,1,,The ball must be played over this net.,['# ::snt The ball must be played over this net.\n(o / obligate-01\n      :ARG2 (p / play-01\n            :ARG2 (b / ball)\n            :location (o2 / over\n                  :op1 (n / net\n                        :mod (t / this)))))'],"[o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, play_01, attr-arg2, [b, attr-instance, ball], attr-location, [o2, attr-instance, over, attr-op1, [n, attr-instance, net, attr-mod, [t, attr-instance, this]]]]]"
2205,2205,2205,2205,2606,42135,sitzvolleyball,Dabei darf der Ball nicht den Boden berühren.,8_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Dabei 1:=darf 2:=der 3:=Ball 4:=nicht 5:=den 6:=Boden 7:=berühren.,1,,The ball must not touch the ground.,['# ::snt The ball must not touch the ground.\n(o / obligate-01\n      :ARG2 (t / touch-01\n            :polarity -\n            :ARG0 (b / ball)\n            :ARG1 (g / ground)))'],"[o, attr-instance, obligate_01, attr-arg2, [t, attr-instance, touch_01, attr-polarity, negative, attr-arg0, [b, attr-instance, ball], attr-arg1, [g, attr-instance, ground]]]"
2206,2206,2206,2206,2607,42136,sitzvolleyball,Der Ball soll immer in der Luft bleiben.,9_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Der 1:=Ball 2:=soll 3:=immer 4:=in 5:=der 6:=Luft 7:=bleiben.,1,,The ball should always stay in the air.,['# ::snt The ball should always stay in the air.\n(r / recommend-01\n      :ARG1 (s / stay-01\n            :ARG1 (b / ball)\n            :ARG3 (b2 / be-located-at-91\n                  :ARG1 b\n                  :ARG2 (a / air))\n            :time (a2 / always)))'],"[r, attr-instance, recommend_01, attr-arg1, [s, attr-instance, stay_01, attr-arg1, [b, attr-instance, ball], attr-arg3, [b2, attr-instance, be_located_at_91, attr-arg1, b, attr-arg2, [a, attr-instance, air]], attr-time, [a2, attr-instance, always]]]"
2207,2207,2207,2207,2608,42137,sitzvolleyball,Die Spieler versuchen den Ball auf den Boden der anderen Mannschaft zu schießen.,10_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Die 1:=Spieler 2:=versuchen 3:=den 4:=Ball 5:=auf 6:=den 7:=Boden 8:=der 9:=anderen 10:=Mannschaft 11:=zu 12:=schießen.,3,"[[1, 2, 4, 11, 12], [5, 7], [7, 9, 10]]",The players try to shoot the ball onto the other team’s floor.,['# ::snt The players try to shoot the ball onto the other team’s floor.\n(t / try-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / play-01))\n      :ARG1 (s / shoot-01\n            :ARG0 p\n            :ARG1 (b / ball)\n            :ARG2 (f / floor\n                  :poss (t2 / team\n                        :mod (o / other)))))'],"[t, attr-instance, try_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01]], attr-arg1, [s, attr-instance, shoot_01, attr-arg0, p, attr-arg1, [b, attr-instance, ball], attr-arg2, [f, attr-instance, floor, attr-poss, [t2, attr-instance, team, attr-mod, [o, attr-instance, other]]]]]"
2208,2208,2208,2208,2609,42138,sitzvolleyball,Der Rumpf darf den Boden beim spielen nicht berühren.,11_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Der 1:=Rumpf 2:=darf 3:=den 4:=Boden 5:=beim 6:=spielen 7:=nicht 8:=berühren.,1,,The torso must not touch the ground while playing.,['# ::snt The torso must not touch the ground while playing.\n(o / obligate-01\n      :ARG2 (t / touch-01\n            :polarity -\n            :ARG0 (t2 / torso)\n            :ARG1 (g / ground)\n            :time (p / play-01\n                  :ARG0 t2)))'],"[o, attr-instance, obligate_01, attr-arg2, [t, attr-instance, touch_01, attr-polarity, negative, attr-arg0, [t2, attr-instance, torso], attr-arg1, [g, attr-instance, ground], attr-time, [p, attr-instance, play_01, attr-arg0, t2]]]"
2209,2209,2209,2209,2610,42139,sitzvolleyball,Der Rumpf ist der Ober-körper.,12_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Der 1:=Rumpf 2:=ist 3:=der 4:=Ober-körper.,1,,The torso is the upper body.,['# ::snt The torso is the upper body.\n(b / body\n      :mod (u / upper)\n      :domain (t / torso))'],"[b, attr-instance, body, attr-mod, [u, attr-instance, upper], attr-domain, [t, attr-instance, torso]]"
2210,2210,2210,2210,2611,42140,sitzvolleyball,Das Netz ist nicht so hoch wie beim Volley-ball.,13_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Das 1:=Netz 2:=ist 3:=nicht 4:=so 5:=hoch 6:=wie 7:=beim 8:=Volley-ball.,1,,The net is not as high as in volleyball.,['# ::snt The net is not as high as in volleyball.\n(h / have-degree-91\n      :ARG1 (n / net)\n      :ARG2 (h2 / high-02\n            :polarity -\n            :ARG1 n)\n      :ARG3 (e / equal)\n      :ARG4 (v / volleyball))'],"[h, attr-instance, have_degree_91, attr-arg1, [n, attr-instance, net], attr-arg2, [h2, attr-instance, high_02, attr-polarity, negative, attr-arg1, n], attr-arg3, [e, attr-instance, equal], attr-arg4, [v, attr-instance, volleyball]]"
2211,2211,2211,2211,2612,42141,sitzvolleyball,Es gibt die gleichen Regeln wie beim Volley-ball.,14_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Es 1:=gibt 2:=die 3:=gleichen 4:=Regeln 5:=wie 6:=beim 7:=Volley-ball.,1,,There are the same rules as volleyball.,['# ::snt There are the same rules as volleyball.\n(s / same-01\n      :ARG1 (r / rule)\n      :ARG2 (v / volleyball))'],"[s, attr-instance, same_01, attr-arg1, [r, attr-instance, rule], attr-arg2, [v, attr-instance, volleyball]]"
2212,2212,2212,2212,2613,42142,sitzvolleyball,Jede Mannschaft darf den Ball 3 mal spielen.,15_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Jede 1:=Mannschaft 2:=darf 3:=den 4:=Ball 5:=3 6:=mal 7:=spielen.,1,,Each team may play the ball 3 times.,['# ::snt Each team may play the ball 3 times.\n(p / possible-01\n      :ARG1 (p2 / play-01\n            :frequency 3\n            :ARG0 (t / team\n                  :mod (e / each))\n            :ARG1 (b / ball)))'],"[p, attr-instance, possible_01, attr-arg1, [p2, attr-instance, play_01, attr-frequency, 3, attr-arg0, [t, attr-instance, team, attr-mod, [e, attr-instance, each]], attr-arg1, [b, attr-instance, ball]]]"
2213,2213,2213,2213,2614,42143,sitzvolleyball,Dann muss er über das Netz gespielt werden.,16_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Dann 1:=muss 2:=er 3:=über 4:=das 5:=Netz 6:=gespielt 7:=werden.,1,,Then it has to be played over the net.,['# ::snt Then it has to be played over the net.\n(o / obligate-01\n      :ARG2 (p / play-01\n            :ARG1 (ii / it)\n            :manner (o2 / over\n                  :op1 (n / net)))\n      :time (t / then))'],"[o, attr-instance, obligate_01, attr-arg2, [p, attr-instance, play_01, attr-arg1, [ii, attr-instance, it], attr-manner, [o2, attr-instance, over, attr-op1, [n, attr-instance, net]]], attr-time, [t, attr-instance, then]]"
2214,2214,2214,2214,2615,42145,sitzvolleyball,Beim Sitz-volley-ball gibt es mehrere Spiele.,18_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Beim 1:=Sitz-volley-ball 2:=gibt 3:=es 4:=mehrere 5:=Spiele.,1,,There are several games in sitting volleyball.,['# ::snt There are several games in sitting volleyball.\n(g / game\n      :quant (s / several)\n      :topic (v / volleyball\n            :ARG1-of (s2 / sit-01)))'],"[g, attr-instance, game, attr-quant, [s, attr-instance, several], attr-topic, [v, attr-instance, volleyball, attr-arg1_of, [s2, attr-instance, sit_01]]]"
2215,2215,2215,2215,2616,42146,sitzvolleyball,"Das sind die ""Gewinn-sätze"".",19_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,"0:=Das 1:=sind 2:=die 3:=""Gewinn-sätze"".",1,,"These are the ""winning rates"".","['# ::snt These are the ""winning rates"".\n(r / rate\n      :ARG3-of (w / win-01)\n      :domain (t / this))']","[r, attr-instance, rate, attr-arg3_of, [w, attr-instance, win_01], attr-domain, [t, attr-instance, this]]"
2216,2216,2216,2216,2617,42147,sitzvolleyball,"Einen Gewinn-satz gewinnt die Mannschaft, die zuerst 25 Punkte hat.",20_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,"0:=Einen 1:=Gewinn-satz 2:=gewinnt 3:=die 4:=Mannschaft, 5:=die 6:=zuerst 7:=25 8:=Punkte 9:=hat.",2,"[[1, 2], [5, 6, 7, 8, 9]]",The team that reaches 25 points first wins a set.,['# ::snt The team that reaches 25 points first wins a set.\n(w / win-01\n      :ARG0 (t / team\n            :ARG0-of (r / reach-01\n                  :ARG1 (p / point\n                        :quant 25)))\n      :ARG1 (s / set)\n      :ord (o / ordinal-entity\n            :value 1))'],"[w, attr-instance, win_01, attr-arg0, [t, attr-instance, team, attr-arg0_of, [r, attr-instance, reach_01, attr-arg1, [p, attr-instance, point, attr-quant, 25]]], attr-arg1, [s, attr-instance, set], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]]"
2217,2217,2217,2217,2618,42148,sitzvolleyball,Zwischen den Gewinn-sätzen gibt es immer eine Pause.,21_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Zwischen 1:=den 2:=Gewinn-sätzen 3:=gibt 4:=es 5:=immer 6:=eine 7:=Pause.,1,,There is always a break between the winning sets.,['# ::snt There is always a break between the winning sets.\n(b / break-19\n      :ARG1 (s / set\n            :ARG0-of (w / win-01))\n      :time (a / always))'],"[b, attr-instance, break_19, attr-arg1, [s, attr-instance, set, attr-arg0_of, [w, attr-instance, win_01]], attr-time, [a, attr-instance, always]]"
2218,2218,2218,2218,2619,42149,sitzvolleyball,Die Pause dauert 4 Minuten.,22_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Die 1:=Pause 2:=dauert 3:=4 4:=Minuten.,1,,The break lasts 4 minutes.,['# ::snt The break lasts 4 minutes.\n(l / last-01\n      :ARG1 (b / break-19)\n      :ARG2 (t / temporal-quantity\n            :quant 4\n            :unit (m / minute)))'],"[l, attr-instance, last_01, attr-arg1, [b, attr-instance, break_19], attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 4, attr-unit, [m, attr-instance, minute]]]"
2219,2219,2219,2219,2620,42150,sitzvolleyball,"Die Mannschaft, die zuerst 3 Gewinnsätze gewonnen hat ist Sieger.",23_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,"0:=Die 1:=Mannschaft, 2:=die 3:=zuerst 4:=3 5:=Gewinnsätze 6:=gewonnen 7:=hat 8:=ist 9:=Sieger.",2,"[[8, 9], [2, 3, 4, 5, 6, 7]]",The team that wins 3 sets first is the winner.,['# ::snt The team that wins 3 sets first is the winner.\n(w / win-01\n      :ARG0 (t / team\n            :ARG0-of (w2 / win-01\n                  :ARG1 (s / set\n                        :quant 3)\n                  :ord (o / ordinal-entity\n                        :value 1))))'],"[w, attr-instance, win_01, attr-arg0, [t, attr-instance, team, attr-arg0_of, [w2, attr-instance, win_01, attr-arg1, [s, attr-instance, set, attr-quant, 3], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]]]]"
2220,2220,2220,2220,2622,42152,sitzvolleyball,Es ist eine paralympische Sommer-sport-art.,25_long,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Es 1:=ist 2:=eine 3:=paralympische 4:=Sommer-sport-art.,2,"[[1, 2], [3]]",It is a Paralympic summer sport.,['# ::snt It is a Paralympic summer sport.\n(s / sport\n      :time (d / date-entity\n            :season (s2 / summer))\n      :domain (ii / it)\n      :mod (p / paralyze-01))'],"[s, attr-instance, sport, attr-time, [d, attr-instance, date_entity, attr-season, [s2, attr-instance, summer]], attr-domain, [ii, attr-instance, it], attr-mod, [p, attr-instance, paralyze_01]]"
2221,2221,2221,2221,2623,42153,sitzvolleyball,Sitz-volley-ball ist eine Sportart.,0_short,Sport|Paralympics,2012-01-30T18:24:13Z,d4171b2c36772be4cad75ef4078874bd,0:=Sitz-volley-ball 1:=ist 2:=eine 3:=Sportart.,1,,Sitting volleyball is a sport.,['# ::snt Sitting volleyball is a sport.\n(s / sport\n      :domain (s2 / sit-01\n            :ARG2 (v / volleyball)))'],"[s, attr-instance, sport, attr-domain, [s2, attr-instance, sit_01, attr-arg2, [v, attr-instance, volleyball]]]"
2222,2222,2222,2222,2624,42156,sixtinische-kapelle,Die Kapelle wurde zur Zeit von Papst Sixtus IV gebaut.,0_long,Ort|Seiten_mit_defekten_Dateilinks,2013-03-12T07:06:15Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Kapelle 2:=wurde 3:=zur 4:=Zeit 5:=von 6:=Papst 7:=Sixtus 8:=IV 9:=gebaut.,1,,The chapel was built during the time of Pope Sixtus IV.,"['# ::snt The chapel was built during the time of Pope Sixtus IV.\n(b / build-01\n      :ARG1 (c / chapel)\n      :time (p / person\n            :name (n / name\n                  :op1 ""Sixtus""\n                  :op2 ""IV"")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (p2 / pope))))']","[b, attr-instance, build_01, attr-arg1, [c, attr-instance, chapel], attr-time, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""sixtus"", attr-op2, ""iv""], attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [p2, attr-instance, pope]]]]"
2223,2223,2223,2223,2625,42157,sixtinische-kapelle,Von ihm hat sie ihren Namen.,1_long,Ort|Seiten_mit_defekten_Dateilinks,2013-03-12T07:06:15Z,7b5adf57ed2178795004f4c052333f37,0:=Von 1:=ihm 2:=hat 3:=sie 4:=ihren 5:=Namen.,1,,It gets its name from him.,['# ::snt It gets its name from him.\n(n / name-01\n      :ARG1 (ii / it)\n      :ARG2 (h / he))'],"[n, attr-instance, name_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [h, attr-instance, he]]"
2224,2224,2224,2224,2626,42158,sixtinische-kapelle,Die Sixtinische Kapelle wurde am 15. August 1483 eingeweiht.,2_long,Ort|Seiten_mit_defekten_Dateilinks,2013-03-12T07:06:15Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Sixtinische 2:=Kapelle 3:=wurde 4:=am 5:=15. 6:=August 7:=1483 8:=eingeweiht.,1,,"The Sistine Chapel was inaugurated on August 15, 1483.","['# ::snt The Sistine Chapel was inaugurated on August 15, 1483.\n(ii / inaugurate-01\n      :ARG1 (b / building\n            :name (n / name\n                  :op1 ""Sistine""\n                  :op2 ""Chapel""))\n      :time (d / date-entity\n            :year 1483\n            :month 8\n            :day 15))']","[ii, attr-instance, inaugurate_01, attr-arg1, [b, attr-instance, building, attr-name, [n, attr-instance, name, attr-op1, ""sistine"", attr-op2, ""chapel""]], attr-time, [d, attr-instance, date_entity, attr-year, 1483, attr-month, 8, attr-day, 15]]"
2225,2225,2225,2225,2627,42159,sixtinische-kapelle,Auf die Wände und an die Decke sind Bilder gemalt.,3_long,Ort|Seiten_mit_defekten_Dateilinks,2013-03-12T07:06:15Z,7b5adf57ed2178795004f4c052333f37,0:=Auf 1:=die 2:=Wände 3:=und 4:=an 5:=die 6:=Decke 7:=sind 8:=Bilder 9:=gemalt.,2,"[[0, 2], [5, 6]]",There are pictures painted on the walls and ceiling.,['# ::snt There are pictures painted on the walls and ceiling.\n(p / paint-02\n      :ARG1 (p2 / picture)\n      :ARG2 (a / and\n            :op1 (w / wall)\n            :op2 (c / ceiling)))'],"[p, attr-instance, paint_02, attr-arg1, [p2, attr-instance, picture], attr-arg2, [a, attr-instance, and, attr-op1, [w, attr-instance, wall], attr-op2, [c, attr-instance, ceiling]]]"
2226,2226,2226,2226,2628,42160,sixtinische-kapelle,Die Bilder sind von verschiedenen Malern.,4_long,Ort|Seiten_mit_defekten_Dateilinks,2013-03-12T07:06:15Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Bilder 2:=sind 3:=von 4:=verschiedenen 5:=Malern.,1,,The pictures are by different painters.,['# ::snt The pictures are by different painters.\n(p / picture\n      :poss (p2 / person\n            :ARG0-of (p3 / painter-01)\n            :ARG1-of (d / differ-02)))'],"[p, attr-instance, picture, attr-poss, [p2, attr-instance, person, attr-arg0_of, [p3, attr-instance, painter_01], attr-arg1_of, [d, attr-instance, differ_02]]]"
2227,2227,2227,2227,2633,42165,sixtinische-kapelle,Die Sixtinische Kapelle ist eine kleine Kirche.,0_short,Ort|Seiten_mit_defekten_Dateilinks,2013-03-12T07:06:15Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Sixtinische 2:=Kapelle 3:=ist 4:=eine 5:=kleine 6:=Kirche.,2,"[[1, 2, 3], [5]]",The Sistine Chapel is a small church.,"['# ::snt The Sistine Chapel is a small church.\n(c / church\n      :mod (s / small)\n      :domain (b / building\n            :name (n / name\n                  :op1 ""Sistine""\n                  :op2 ""Chapel"")))']","[c, attr-instance, church, attr-mod, [s, attr-instance, small], attr-domain, [b, attr-instance, building, attr-name, [n, attr-instance, name, attr-op1, ""sistine"", attr-op2, ""chapel""]]]"
2228,2228,2228,2228,2634,42166,sixtinische-kapelle,Sie ist in der Vatikanstadt.,1_short,Ort|Seiten_mit_defekten_Dateilinks,2013-03-12T07:06:15Z,7b5adf57ed2178795004f4c052333f37,0:=Sie 1:=ist 2:=in 3:=der 4:=Vatikanstadt.,1,,It is in Vatican City.,"['# ::snt It is in Vatican City.\n(ii / it\n      :location (c / city\n            :name (n / name\n                  :op1 ""Vatican""\n                  :op2 ""City"")))']","[ii, attr-instance, it, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""vatican"", attr-op2, ""city""]]]"
2229,2229,2229,2229,2635,42167,sixtinische-kapelle,In dieser Kapelle ist auch das Kon­kla­ve.,2_short,Ort|Seiten_mit_defekten_Dateilinks,2013-03-12T07:06:15Z,7b5adf57ed2178795004f4c052333f37,0:=In 1:=dieser 2:=Kapelle 3:=ist 4:=auch 5:=das 6:=Kon­kla­ve.,1,,The conclave also takes place in this chapel.,['# ::snt The conclave also takes place in this chapel.\n(c / conclave\n      :location (c2 / chapel\n            :mod (t / this))\n      :mod (a / also))'],"[c, attr-instance, conclave, attr-location, [c2, attr-instance, chapel, attr-mod, [t, attr-instance, this]], attr-mod, [a, attr-instance, also]]"
2230,2230,2230,2230,2636,42168,sixtinische-kapelle,Das heißt: \newline Hier treffen sich die Kardinäle und \newline wählen den Papst.,3_short,Ort|Seiten_mit_defekten_Dateilinks,2013-03-12T07:06:15Z,7b5adf57ed2178795004f4c052333f37,0:=Das 1:=heißt: 2:=\newline 3:=Hier 4:=treffen 5:=sich 6:=die 7:=Kardinäle 8:=und 9:=\newline 10:=wählen 11:=den 12:=Papst.,2,"[[3, 4, 5, 7], [10, 12]]",That means: \newline This is where the cardinals meet and \newline elect the Pope.,"['# ::snt That means: \\newline This is where the cardinals meet and \\newline elect the Pope.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (a / and\n            :op1 (m2 / meet-03\n                  :ARG0 (c / cardinal)\n                  :location (t2 / this))\n            :op2 (e / elect-01\n                  :ARG0 (b / broadcast-program\n                        :name (n / name\n                              :op1 ""Newline""))\n                  :ARG1 (p / person\n                        :ARG0-of (h / have-org-role-91\n                              :ARG2 (p2 / pope))))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [a, attr-instance, and, attr-op1, [m2, attr-instance, meet_03, attr-arg0, [c, attr-instance, cardinal], attr-location, [t2, attr-instance, this]], attr-op2, [e, attr-instance, elect_01, attr-arg0, [b, attr-instance, broadcast_program, attr-name, [n, attr-instance, name, attr-op1, ""newline""]], attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [p2, attr-instance, pope]]]]]]"
2231,2231,2231,2231,2641,42173,skandal,"Das Gegenteil von Skandal ist ""etwas unbedeutendes"".",4_long,Ohne_Kategorie,2013-07-23T22:12:13Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,"0:=Das 1:=Gegenteil 2:=von 3:=Skandal 4:=ist 5:=""etwas 6:=unbedeutendes"".",1,,"The opposite of scandal is ""something insignificant"".","['# ::snt The opposite of scandal is ""something insignificant"".\n(o / opposite-01\n      :ARG1 (s / scandal)\n      :ARG2 (s2 / something\n            :ARG1-of (s3 / significant-02\n                  :polarity -)))']","[o, attr-instance, opposite_01, attr-arg1, [s, attr-instance, scandal], attr-arg2, [s2, attr-instance, something, attr-arg1_of, [s3, attr-instance, significant_02, attr-polarity, negative]]]"
2232,2232,2232,2232,2642,42174,skandal,Das heißt: es interessiert niemanden \newline und ärgert auch niemanden.,5_long,Ohne_Kategorie,2013-07-23T22:12:13Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Das 1:=heißt: 2:=es 3:=interessiert 4:=niemanden 5:=\newline 6:=und 7:=ärgert 8:=auch 9:=niemanden.,2,"[[2, 3, 4], [7, 8, 9]]",That means: nobody cares about \newline and nobody is annoyed by it.,"['# ::snt That means: nobody cares about \\newline and nobody is annoyed by it.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (a / and\n            :op1 (c / care-01\n                  :ARG0 (n / nobody)\n                  :ARG1 (b / broadcast-program\n                        :name (n2 / name\n                              :op1 ""Newline"")))\n            :op2 (a2 / annoy-01\n                  :ARG0 b\n                  :ARG1 (n3 / nobody))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [a, attr-instance, and, attr-op1, [c, attr-instance, care_01, attr-arg0, [n, attr-instance, nobody], attr-arg1, [b, attr-instance, broadcast_program, attr-name, [n2, attr-instance, name, attr-op1, ""newline""]]], attr-op2, [a2, attr-instance, annoy_01, attr-arg0, b, attr-arg1, [n3, attr-instance, nobody]]]]"
2233,2233,2233,2233,2643,42175,skandal,Das Wort Skandal ist ein Substantiv.,6_long,Ohne_Kategorie,2013-07-23T22:12:13Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Das 1:=Wort 2:=Skandal 3:=ist 4:=ein 5:=Substantiv.,1,,The word scandal is a noun.,['# ::snt The word scandal is a noun.\n(n / noun\n      :domain (w / word\n            :mod (s / scandal)))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [s, attr-instance, scandal]]]"
2234,2234,2234,2234,2644,42176,skandal,Ein Skandal ist etwas das sehr viele Leute mitbekommen  \newline und das viele Leute ärgert.,0_short,Ohne_Kategorie,2013-07-23T22:12:13Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Ein 1:=Skandal 2:=ist 3:=etwas 4:=das 5:=sehr 6:=viele 7:=Leute 8:=mitbekommen 9:= 10:=\newline 11:=und 12:=das 13:=viele 14:=Leute 15:=ärgert.,2,"[[4, 5, 6, 7, 8], [12, 13, 14, 15]]",A scandal is something that a lot of people notice \newline and that annoys a lot of people.,['# ::snt A scandal is something that a lot of people notice \\newline and that annoys a lot of people.\n(a / and\n      :op1 (n / notice-01\n            :ARG0 (p / person\n                  :quant (l / lot))\n            :ARG1 (s / scandal))\n      :op2 (a2 / annoy-01\n            :ARG0 s\n            :ARG1 (p2 / person\n                  :quant (l2 / lot))))'],"[a, attr-instance, and, attr-op1, [n, attr-instance, notice_01, attr-arg0, [p, attr-instance, person, attr-quant, [l, attr-instance, lot]], attr-arg1, [s, attr-instance, scandal]], attr-op2, [a2, attr-instance, annoy_01, attr-arg0, s, attr-arg1, [p2, attr-instance, person, attr-quant, [l2, attr-instance, lot]]]]"
2235,2235,2235,2235,2645,42177,skateboard,Ein Skateüboard ist ungefähr • ein Meter lang und,0_long,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,0:=Ein 1:=Skateüboard 2:=ist 3:=ungefähr 4:=• 5:=ein 6:=Meter 7:=lang 8:=und,1,,A skateboard is approximately • one meter long and,['# ::snt A skateboard is approximately • one meter long and\n(a / and\n      :op1 (l / long-03\n            :ARG1 (s / skateboard)\n            :ARG2 (a2 / approximately\n                  :op1 (d / distance-quantity\n                        :quant 1\n                        :unit (m / meter))))\n      :op2 (h / have-purpose-91\n            :ARG2 s))'],"[a, attr-instance, and, attr-op1, [l, attr-instance, long_03, attr-arg1, [s, attr-instance, skateboard], attr-arg2, [a2, attr-instance, approximately, attr-op1, [d, attr-instance, distance_quantity, attr-quant, 1, attr-unit, [m, attr-instance, meter]]]], attr-op2, [h, attr-instance, have_purpose_91, attr-arg2, s]]"
2236,2236,2236,2236,2646,42178,skateboard,Ein Skateüboard ist ungefähr • 30 Zentimeter breit,1_long,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,0:=Ein 1:=Skateüboard 2:=ist 3:=ungefähr 4:=• 5:=30 6:=Zentimeter 7:=breit,1,,A skateboard is approximately • 30 centimeters wide,['# ::snt A skateboard is approximately • 30 centimeters wide\n(w / wide-02\n      :ARG1 (s / skateboard)\n      :ARG2 (a / approximately\n            :op1 (d / distance-quantity\n                  :quant 30\n                  :unit (c / centimeter))))'],"[w, attr-instance, wide_02, attr-arg1, [s, attr-instance, skateboard], attr-arg2, [a, attr-instance, approximately, attr-op1, [d, attr-instance, distance_quantity, attr-quant, 30, attr-unit, [c, attr-instance, centimeter]]]]"
2237,2237,2237,2237,2647,42179,skateboard,Unter dem Brett sind 4 Rollen.,2_long,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,0:=Unter 1:=dem 2:=Brett 3:=sind 4:=4 5:=Rollen.,1,,There are 4 wheels under the board.,['# ::snt There are 4 wheels under the board.\n(u / under\n      :op1 (b / board)\n      :consist-of (w / wheel\n            :quant 4))'],"[u, attr-instance, under, attr-op1, [b, attr-instance, board], attr-consist_of, [w, attr-instance, wheel, attr-quant, 4]]"
2238,2238,2238,2238,2648,42180,skateboard,Man stellt sich breit-beinig auf das Brett.,3_long,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,0:=Man 1:=stellt 2:=sich 3:=breit-beinig 4:=auf 5:=das 6:=Brett.,1,,You stand on the board with your legs wide apart.,['# ::snt You stand on the board with your legs wide apart.\n(s / stand-01\n      :ARG1 (y / you\n            :part (l / leg))\n      :ARG2 (b / board)\n      :manner (a / apart\n            :op1 l\n            :ARG1-of (w / wide-02)))'],"[s, attr-instance, stand_01, attr-arg1, [y, attr-instance, you, attr-part, [l, attr-instance, leg]], attr-arg2, [b, attr-instance, board], attr-manner, [a, attr-instance, apart, attr-op1, l, attr-arg1_of, [w, attr-instance, wide_02]]]"
2239,2239,2239,2239,2649,42181,skateboard,"Man kann während der Fahrt die Richtung ändern, wenn man das \newline Gleich-gewicht verlagert.",4_long,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,"0:=Man 1:=kann 2:=während 3:=der 4:=Fahrt 5:=die 6:=Richtung 7:=ändern, 8:=wenn 9:=man 10:=das 11:=\newline 12:=Gleich-gewicht 13:=verlagert.",3,"[[0, 1, 6, 7], [2, 4], [8, 9, 12, 13]]",You can change direction while riding by shifting your \newline balance.,['# ::snt You can change direction while riding by shifting your \\newline balance.\n(p / possible-01\n      :ARG1 (c / change-01\n            :ARG0 (y / you)\n            :ARG1 (d / direction)\n            :time (r / ride-01\n                  :ARG0 y)\n            :manner (s / shift-01\n                  :ARG0 y\n                  :ARG1 (b / balance\n                        :mod (l / line\n                              :mod (n / new))\n                        :poss y))))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, change_01, attr-arg0, [y, attr-instance, you], attr-arg1, [d, attr-instance, direction], attr-time, [r, attr-instance, ride_01, attr-arg0, y], attr-manner, [s, attr-instance, shift_01, attr-arg0, y, attr-arg1, [b, attr-instance, balance, attr-mod, [l, attr-instance, line, attr-mod, [n, attr-instance, new]], attr-poss, y]]]]"
2240,2240,2240,2240,2650,42182,skateboard,Ein Skate-board ist ein Brett mit Rollen.,0_short,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,0:=Ein 1:=Skate-board 2:=ist 3:=ein 4:=Brett 5:=mit 6:=Rollen.,2,"[[1, 2, 4], [5, 6]]",A skateboard is a board with wheels.,['# ::snt A skateboard is a board with wheels.\n(b / board\n      :ARG0-of (h / have-03\n            :ARG1 (w / wheel))\n      :domain (s / skateboard))'],"[b, attr-instance, board, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [w, attr-instance, wheel]], attr-domain, [s, attr-instance, skateboard]]"
2241,2241,2241,2241,2651,42183,skateboard,Ein Skate-board kann man von einem Ort zu einem anderen Ort fahren.,1_short,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,0:=Ein 1:=Skate-board 2:=kann 3:=man 4:=von 5:=einem 6:=Ort 7:=zu 8:=einem 9:=anderen 10:=Ort 11:=fahren.,3,"[[1, 2, 3, 11], [4, 6], [7, 9, 10]]",A skateboard can be ridden from one place to another.,['# ::snt A skateboard can be ridden from one place to another.\n(p / possible-01\n      :ARG1 (r / ride-01\n            :ARG1 (s / skateboard)\n            :source (p2 / place\n                  :mod (o / one))\n            :destination (p3 / place\n                  :mod (a / another))))'],"[p, attr-instance, possible_01, attr-arg1, [r, attr-instance, ride_01, attr-arg1, [s, attr-instance, skateboard], attr-source, [p2, attr-instance, place, attr-mod, [o, attr-instance, one]], attr-destination, [p3, attr-instance, place, attr-mod, [a, attr-instance, another]]]]"
2242,2242,2242,2242,2652,42184,skateboard,Und man kann mit dem Skate-board spielen.,2_short,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,0:=Und 1:=man 2:=kann 3:=mit 4:=dem 5:=Skate-board 6:=spielen.,1,,And you can play with the skateboard.,['# ::snt And you can play with the skateboard.\n(a / and\n      :op2 (p / possible-01\n            :ARG1 (p2 / play-01\n                  :ARG0 (y / you)\n                  :ARG2 (s / skateboard))))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, possible_01, attr-arg1, [p2, attr-instance, play_01, attr-arg0, [y, attr-instance, you], attr-arg2, [s, attr-instance, skateboard]]]]"
2243,2243,2243,2243,2653,42185,skateboard,Das Skate-board ist auch ein Sport-gerät.,3_short,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,0:=Das 1:=Skate-board 2:=ist 3:=auch 4:=ein 5:=Sport-gerät.,1,,The skateboard is also a sports equipment.,['# ::snt The skateboard is also a sports equipment.\n(e / equipment\n      :mod (s / sport)\n      :domain (s2 / skateboard)\n      :mod (a / also))'],"[e, attr-instance, equipment, attr-mod, [s, attr-instance, sport], attr-domain, [s2, attr-instance, skateboard], attr-mod, [a, attr-instance, also]]"
2244,2244,2244,2244,2654,42186,skateboard,Es gibt auch Skate-board Wett-kämpfe.,4_short,Fortbewegung|Sport,2008-09-23T17:46:59Z,be4178123f065f8d36c5093129c005dc,0:=Es 1:=gibt 2:=auch 3:=Skate-board 4:=Wett-kämpfe.,1,,There are also skateboard competitions.,['# ::snt There are also skateboard competitions.\n(c / compete-01\n      :ARG3 (s / skateboard)\n      :mod (a / also))'],"[c, attr-instance, compete_01, attr-arg3, [s, attr-instance, skateboard], attr-mod, [a, attr-instance, also]]"
2245,2245,2245,2245,2655,42187,skilanglauf,Oft werden beim Skilanglauf Loipen benutzt.,0_long,Sport,2014-02-10T11:25:18Z,d4171b2c36772be4cad75ef4078874bd,0:=Oft 1:=werden 2:=beim 3:=Skilanglauf 4:=Loipen 5:=benutzt.,1,,Cross-country skiing often involves using trails.,['# ::snt Cross-country skiing often involves using trails.\n(ii / involve-01\n      :ARG1 (u / use-01\n            :ARG1 (t / trail))\n      :ARG2 (s / ski-01\n            :mod (c / cross-country))\n      :frequency (o / often))'],"[ii, attr-instance, involve_01, attr-arg1, [u, attr-instance, use_01, attr-arg1, [t, attr-instance, trail]], attr-arg2, [s, attr-instance, ski_01, attr-mod, [c, attr-instance, cross_country]], attr-frequency, [o, attr-instance, often]]"
2246,2246,2246,2246,2656,42188,skilanglauf,Für Skilanglauf werden Ski und Stöcke gebraucht.,1_long,Sport,2014-02-10T11:25:18Z,d4171b2c36772be4cad75ef4078874bd,0:=Für 1:=Skilanglauf 2:=werden 3:=Ski 4:=und 5:=Stöcke 6:=gebraucht.,2,"[[3], [5]]",For cross-country skiing you need skis and poles.,['# ::snt For cross-country skiing you need skis and poles.\n(n / need-01\n      :ARG0 (y / you)\n      :ARG1 (a / and\n            :op1 (s / skis)\n            :op2 (p / pole))\n      :purpose (s2 / ski-01\n            :ARG0 y\n            :ARG1-of (c / cross-02\n                  :ARG0 y\n                  :ARG2 (c2 / country))))'],"[n, attr-instance, need_01, attr-arg0, [y, attr-instance, you], attr-arg1, [a, attr-instance, and, attr-op1, [s, attr-instance, skis], attr-op2, [p, attr-instance, pole]], attr-purpose, [s2, attr-instance, ski_01, attr-arg0, y, attr-arg1_of, [c, attr-instance, cross_02, attr-arg0, y, attr-arg2, [c2, attr-instance, country]]]]"
2247,2247,2247,2247,2657,42190,skilanglauf,Skilanglauf gibt es seit dem Jahr 1924 \newline bei den Olympische Winterspielen.,3_long,Sport,2014-02-10T11:25:18Z,d4171b2c36772be4cad75ef4078874bd,0:=Skilanglauf 1:=gibt 2:=es 3:=seit 4:=dem 5:=Jahr 6:=1924 7:=\newline 8:=bei 9:=den 10:=Olympische 11:=Winterspielen.,2,"[[8, 10, 11], [3, 5, 6]]",Cross-country skiing has been part of the Winter Olympics since 1924 \newline.,"['# ::snt Cross-country skiing has been part of the Winter Olympics since 1924 \\newline.\n(h / have-part-91\n      :ARG1 (g / game\n            :name (n / name\n                  :op1 "" Winter""\n                  :op2 ""Olympics""))\n      :ARG2 (s / ski-01\n            :mod (c / cross-country))\n      :time (s2 / since\n            :op1 (d / date-entity\n                  :year 1924))\n      :ARG1-of (n2 / newline-00))']","[h, attr-instance, have_part_91, attr-arg1, [g, attr-instance, game, attr-name, [n, attr-instance, name, attr-op1, "", winter"", attr-op2, ""olympics""]], attr-arg2, [s, attr-instance, ski_01, attr-mod, [c, attr-instance, cross_country]], attr-time, [s2, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-year, 1924]], attr-arg1_of, [n2, attr-instance, newline_00]]"
2248,2248,2248,2248,2658,42191,skilanglauf,Skilanglauf ist eine Sportart.,0_short,Sport,2014-02-10T11:25:18Z,d4171b2c36772be4cad75ef4078874bd,0:=Skilanglauf 1:=ist 2:=eine 3:=Sportart.,1,,Cross-country skiing is a sport.,['# ::snt Cross-country skiing is a sport.\n(s / sport\n      :domain (s2 / ski-01\n            :mod (c / cross-country)))'],"[s, attr-instance, sport, attr-domain, [s2, attr-instance, ski_01, attr-mod, [c, attr-instance, cross_country]]]"
2249,2249,2249,2249,2659,42192,skilanglauf,Skilanglauf macht man im Schnee.,1_short,Sport,2014-02-10T11:25:18Z,d4171b2c36772be4cad75ef4078874bd,0:=Skilanglauf 1:=macht 2:=man 3:=im 4:=Schnee.,1,,Cross-country skiing is done in the snow.,['# ::snt Cross-country skiing is done in the snow.\n(s / ski-01\n      :ARG1-of (c / cross-02\n            :ARG3 (c2 / country))\n      :location (s2 / snow))'],"[s, attr-instance, ski_01, attr-arg1_of, [c, attr-instance, cross_02, attr-arg3, [c2, attr-instance, country]], attr-location, [s2, attr-instance, snow]]"
2250,2250,2250,2250,2660,42193,skilanglauf,Es wird bergrunter oder bergauf gefahren.,2_short,Sport,2014-02-10T11:25:18Z,d4171b2c36772be4cad75ef4078874bd,0:=Es 1:=wird 2:=bergrunter 3:=oder 4:=bergauf 5:=gefahren.,2,"[[2], [4]]",You can drive downhill or uphill.,['# ::snt You can drive downhill or uphill.\n(p / possible-01\n      :ARG1 (d / drive-01\n            :ARG0 (y / you)\n            :ARG1 (o / or\n                  :op1 (d2 / downhill)\n                  :op2 (u / uphill))))'],"[p, attr-instance, possible_01, attr-arg1, [d, attr-instance, drive_01, attr-arg0, [y, attr-instance, you], attr-arg1, [o, attr-instance, or, attr-op1, [d2, attr-instance, downhill], attr-op2, [u, attr-instance, uphill]]]]"
2251,2251,2251,2251,2661,42194,skilanglauf,Dazu werden an den Füßen Ski angezogen.,3_short,Sport,2014-02-10T11:25:18Z,d4171b2c36772be4cad75ef4078874bd,0:=Dazu 1:=werden 2:=an 3:=den 4:=Füßen 5:=Ski 6:=angezogen.,1,,"To do this, skis are put on your feet.","['# ::snt To do this, skis are put on your feet.\n(p / put-01\n      :ARG1 (s / skis)\n      :ARG2 (f / foot\n            :part-of (y / you))\n      :purpose (d / do-02\n            :ARG1 (t / this)))']","[p, attr-instance, put_01, attr-arg1, [s, attr-instance, skis], attr-arg2, [f, attr-instance, foot, attr-part_of, [y, attr-instance, you]], attr-purpose, [d, attr-instance, do_02, attr-arg1, [t, attr-instance, this]]]"
2252,2252,2252,2252,2662,42195,skirtini,Ein Skirtini besteht aus 2 Teilen.,0_long,Kleider,2014-08-03T09:42:21Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=Skirtini 2:=besteht 3:=aus 4:=2 5:=Teilen.,1,,A skirtini consists of 2 parts.,['# ::snt A skirtini consists of 2 parts.\n(c / consist-01\n      :ARG1 (s / skirtini)\n      :ARG2 (p / part\n            :quant 2))'],"[c, attr-instance, consist_01, attr-arg1, [s, attr-instance, skirtini], attr-arg2, [p, attr-instance, part, attr-quant, 2]]"
2253,2253,2253,2253,2663,42196,skirtini,Für den Oberkörper gibt es ein Bikini Oberteil.,1_long,Kleider,2014-08-03T09:42:21Z,28d34f2e053dee2c0e9399a7924cd978,0:=Für 1:=den 2:=Oberkörper 3:=gibt 4:=es 5:=ein 6:=Bikini 7:=Oberteil.,1,,For the upper body there is a bikini top.,['# ::snt For the upper body there is a bikini top.\n(t / top\n      :mod (b / bikini)\n      :beneficiary (b2 / body\n            :mod (u / upper)))'],"[t, attr-instance, top, attr-mod, [b, attr-instance, bikini], attr-beneficiary, [b2, attr-instance, body, attr-mod, [u, attr-instance, upper]]]"
2254,2254,2254,2254,2664,42197,skirtini,Für den Unterkörper gibt es einen sehr kurzen Rock.,2_long,Kleider,2014-08-03T09:42:21Z,28d34f2e053dee2c0e9399a7924cd978,0:=Für 1:=den 2:=Unterkörper 3:=gibt 4:=es 5:=einen 6:=sehr 7:=kurzen 8:=Rock.,3,"[[0, 2], [3, 4, 8], [6, 7, 8]]",For the lower body there is a very short skirt.,['# ::snt For the lower body there is a very short skirt.\n(s / short-07\n      :ARG1 (s2 / skirt)\n      :degree (v / very)\n      :beneficiary (b / body\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (l / low-04\n                        :ARG1 b)\n                  :ARG3 (m / more))))'],"[s, attr-instance, short_07, attr-arg1, [s2, attr-instance, skirt], attr-degree, [v, attr-instance, very], attr-beneficiary, [b, attr-instance, body, attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [l, attr-instance, low_04, attr-arg1, b], attr-arg3, [m, attr-instance, more]]]]"
2255,2255,2255,2255,2665,42198,skirtini,Skirt ist das englische Wort für Rock.,3_long,Kleider,2014-08-03T09:42:21Z,28d34f2e053dee2c0e9399a7924cd978,0:=Skirt 1:=ist 2:=das 3:=englische 4:=Wort 5:=für 6:=Rock.,2,"[[3], [5, 6]]",Skirt is the English word for skirt.,"['# ::snt Skirt is the English word for skirt.\n(w / word-01\n      :ARG1 (s / skirt)\n      :ARG2 (s2 / skirt)\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English"")))']","[w, attr-instance, word_01, attr-arg1, [s, attr-instance, skirt], attr-arg2, [s2, attr-instance, skirt], attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]]]"
2256,2256,2256,2256,2666,42199,skirtini,Aus den Wörtern Skirt und Bikini wird: Skirtini.,4_long,Kleider,2014-08-03T09:42:21Z,28d34f2e053dee2c0e9399a7924cd978,0:=Aus 1:=den 2:=Wörtern 3:=Skirt 4:=und 5:=Bikini 6:=wird: 7:=Skirtini.,1,,The words skirt and bikini become: skirtini.,['# ::snt The words skirt and bikini become: skirtini.\n(b / become-01\n      :ARG1 (w / word-01\n            :ARG1 (a / and\n                  :op1 (s / skirt)\n                  :op2 (b2 / bikini)))\n      :ARG2 (s2 / skirt))'],"[b, attr-instance, become_01, attr-arg1, [w, attr-instance, word_01, attr-arg1, [a, attr-instance, and, attr-op1, [s, attr-instance, skirt], attr-op2, [b2, attr-instance, bikini]]], attr-arg2, [s2, attr-instance, skirt]]"
2257,2257,2257,2257,2667,42200,skirtini,Ein Skirtini ist ein Bade-anzug für Frauen.,0_short,Kleider,2014-08-03T09:42:21Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=Skirtini 2:=ist 3:=ein 4:=Bade-anzug 5:=für 6:=Frauen.,2,"[[4], [5, 6]]",A skirtini is a swimsuit for women.,['# ::snt A skirtini is a swimsuit for women.\n(s / swimsuit\n      :beneficiary (w / woman)\n      :domain (s2 / skirtini))'],"[s, attr-instance, swimsuit, attr-beneficiary, [w, attr-instance, woman], attr-domain, [s2, attr-instance, skirtini]]"
2258,2258,2258,2258,2668,42202,sklave,Ein Sklave ist abhängig von seinem Besitzer.,1_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Ein 1:=Sklave 2:=ist 3:=abhängig 4:=von 5:=seinem 6:=Besitzer.,1,,A slave is dependent on his owner.,['# ::snt A slave is dependent on his owner.\n(d / depend-01\n      :ARG0 (s / slave)\n      :ARG1 (p / person\n            :ARG0-of (o / own-01\n                  :ARG1 s)))'],"[d, attr-instance, depend_01, attr-arg0, [s, attr-instance, slave], attr-arg1, [p, attr-instance, person, attr-arg0_of, [o, attr-instance, own_01, attr-arg1, s]]]"
2259,2259,2259,2259,2669,42203,sklave,In der Geschichte gab es immer wieder Sklaven.,2_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=In 1:=der 2:=Geschichte 3:=gab 4:=es 5:=immer 6:=wieder 7:=Sklaven.,1,,Slaves have always existed throughout history.,['# ::snt Slaves have always existed throughout history.\n(e / exist-01\n      :ARG1 (s / slave)\n      :time (a / always)\n      :duration (h / history))'],"[e, attr-instance, exist_01, attr-arg1, [s, attr-instance, slave], attr-time, [a, attr-instance, always], attr-duration, [h, attr-instance, history]]"
2260,2260,2260,2260,2670,42204,sklave,Zum Beispiel gab es bei Kriegen Gefangene.,3_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Zum 1:=Beispiel 2:=gab 3:=es 4:=bei 5:=Kriegen 6:=Gefangene.,1,,"For example, there were prisoners in wars.","['# ::snt For example, there were prisoners in wars.\n(e / exemplify-01\n      :ARG0 (p / person\n            :ARG1-of (ii / imprison-01\n                  :location (w / war))))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, person, attr-arg1_of, [ii, attr-instance, imprison_01, attr-location, [w, attr-instance, war]]]]"
2261,2261,2261,2261,2671,42205,sklave,Die Gefangenen wurden zu Sklaven gemacht.,4_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Gefangenen 2:=wurden 3:=zu 4:=Sklaven 5:=gemacht.,1,,The prisoners were made slaves.,['# ::snt The prisoners were made slaves.\n(e / enslave-01\n      :ARG1 (p / person\n            :ARG1-of (ii / imprison-01)))'],"[e, attr-instance, enslave_01, attr-arg1, [p, attr-instance, person, attr-arg1_of, [ii, attr-instance, imprison_01]]]"
2262,2262,2262,2262,2672,42206,sklave,Die mussten dann für die Eroberer arbeiten.,5_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=mussten 2:=dann 3:=für 4:=die 5:=Eroberer 6:=arbeiten.,1,,They then had to work for the conquerors.,['# ::snt They then had to work for the conquerors.\n(o / obligate-01\n      :ARG1 (t / they)\n      :ARG2 (w / work-01\n            :ARG2 (p / person\n                  :ARG0-of (c / conquer-01)))\n      :time (t2 / then))'],"[o, attr-instance, obligate_01, attr-arg1, [t, attr-instance, they], attr-arg2, [w, attr-instance, work_01, attr-arg2, [p, attr-instance, person, attr-arg0_of, [c, attr-instance, conquer_01]]], attr-time, [t2, attr-instance, then]]"
2263,2263,2263,2263,2673,42208,sklave,Die Spanier haben über acht (8) Millionen Menschen aus Afrika entführt und \newline diese nach Nordamerika gebracht.,7_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Spanier 2:=haben 3:=über 4:=acht 5:=(8) 6:=Millionen 7:=Menschen 8:=aus 9:=Afrika 10:=entführt 11:=und 12:=\newline 13:=diese 14:=nach 15:=Nordamerika 16:=gebracht.,4,"[[1, 2, 3, 4, 6, 7, 10], [5], [7, 8, 9], [13, 14, 15, 16]]",The Spanish kidnapped over eight (8) million people from Africa and brought them to North America.,"['# ::snt The Spanish kidnapped over eight (8) million people from Africa and brought them to North America.\n(a / and\n      :op1 (k / kidnap-01\n            :ARG0 (c / country\n                  :name (n / name\n                        :op1 ""Spain""))\n            :ARG1 (p / person\n                  :quant (o / over\n                        :op1 8000000))\n            :source (c2 / continent\n                  :name (n2 / name\n                        :op1 ""Africa"")))\n      :op2 (b / bring-01\n            :ARG0 c\n            :ARG1 p\n            :ARG2 (c3 / continent\n                  :name (n3 / name\n                        :op1 ""North""\n                        :op2 ""America""))))']","[a, attr-instance, and, attr-op1, [k, attr-instance, kidnap_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""spain""]], attr-arg1, [p, attr-instance, person, attr-quant, [o, attr-instance, over, attr-op1, 8000000]], attr-source, [c2, attr-instance, continent, attr-name, [n2, attr-instance, name, attr-op1, ""africa""]]], attr-op2, [b, attr-instance, bring_01, attr-arg0, c, attr-arg1, p, attr-arg2, [c3, attr-instance, continent, attr-name, [n3, attr-instance, name, attr-op1, ""north"", attr-op2, ""america""]]]]"
2264,2264,2264,2264,2674,42209,sklave,Dort wurden sie zu Sklaven.,8_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Dort 1:=wurden 2:=sie 3:=zu 4:=Sklaven.,1,,There they became slaves.,['# ::snt There they became slaves.\n(b / become-01\n      :ARG1 (t / they)\n      :ARG2 (s / slave)\n      :location (t2 / there))'],"[b, attr-instance, become_01, attr-arg1, [t, attr-instance, they], attr-arg2, [s, attr-instance, slave], attr-location, [t2, attr-instance, there]]"
2265,2265,2265,2265,2675,42210,sklave,In den USA wurde die Sklaverei im Jahr 1865 abgeschafft.,9_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=In 1:=den 2:=USA 3:=wurde 4:=die 5:=Sklaverei 6:=im 7:=Jahr 8:=1865 9:=abgeschafft.,3,"[[0, 2], [3, 5, 9], [6, 7, 8]]",Slavery was abolished in the USA in 1865.,"['# ::snt Slavery was abolished in the USA in 1865.\n(a / abolish-01\n      :ARG1 (s / slavery)\n      :location (c / country\n            :name (n / name\n                  :op1 ""USA""))\n      :time (d / date-entity\n            :year 1865))']","[a, attr-instance, abolish_01, attr-arg1, [s, attr-instance, slavery], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""usa""]], attr-time, [d, attr-instance, date_entity, attr-year, 1865]]"
2266,2266,2266,2266,2676,42211,sklave,Das war ein Ergebnis von dem Amerikanischen Bürgerkrieg.,10_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=war 2:=ein 3:=Ergebnis 4:=von 5:=dem 6:=Amerikanischen 7:=Bürgerkrieg.,1,,This was a result of the American Civil War.,"['# ::snt This was a result of the American Civil War.\n(r / result-01\n      :ARG1 (w / war\n            :name (n / name\n                  :op1 ""American""\n                  :op2 ""Civil""\n                  :op3 ""War""))\n      :ARG2 (t / this))']","[r, attr-instance, result_01, attr-arg1, [w, attr-instance, war, attr-name, [n, attr-instance, name, attr-op1, ""american"", attr-op2, ""civil"", attr-op3, ""war""]], attr-arg2, [t, attr-instance, this]]"
2267,2267,2267,2267,2677,42212,sklave,Die Sklaven in ganz Nordamerika wurden freie Menschen.,11_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Sklaven 2:=in 3:=ganz 4:=Nordamerika 5:=wurden 6:=freie 7:=Menschen.,1,,Slaves throughout North America became free people.,"['# ::snt Slaves throughout North America became free people.\n(b / become-01\n      :ARG1 (s / slave\n            :location (t / throughout\n                  :op1 (c / continent\n                        :name (n / name\n                              :op1 ""North""\n                              :op2 ""America""))))\n      :ARG2 (p / person\n            :ARG1-of (f / free-04)))']","[b, attr-instance, become_01, attr-arg1, [s, attr-instance, slave, attr-location, [t, attr-instance, throughout, attr-op1, [c, attr-instance, continent, attr-name, [n, attr-instance, name, attr-op1, ""north"", attr-op2, ""america""]]]], attr-arg2, [p, attr-instance, person, attr-arg1_of, [f, attr-instance, free_04]]]"
2268,2268,2268,2268,2678,42213,sklave,Die Vereinte Nationen haben im Jahr 1948 einen Vertrag gemacht.,12_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Vereinte 2:=Nationen 3:=haben 4:=im 5:=Jahr 6:=1948 7:=einen 8:=Vertrag 9:=gemacht.,2,"[[1, 2, 3, 8, 9], [4, 5, 6]]",The United Nations made a treaty in 1948.,"['# ::snt The United Nations made a treaty in 1948.\n(t / treaty\n      :time (d / date-entity\n            :year 1948)\n      :poss (o / organization\n            :name (n / name\n                  :op1 ""United""\n                  :op2 ""Nations"")))']","[t, attr-instance, treaty, attr-time, [d, attr-instance, date_entity, attr-year, 1948], attr-poss, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""united"", attr-op2, ""nations""]]]"
2269,2269,2269,2269,2680,42215,sklave,Auch heute gibt es noch Sklaven.,14_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Auch 1:=heute 2:=gibt 3:=es 4:=noch 5:=Sklaven.,1,,There are still slaves today.,['# ::snt There are still slaves today.\n(s / slave\n      :time (t / today)\n      :mod (s2 / still))'],"[s, attr-instance, slave, attr-time, [t, attr-instance, today], attr-mod, [s2, attr-instance, still]]"
2270,2270,2270,2270,2681,42216,sklave,Obwohl die Vereinten Nationen das verboten haben.,15_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Obwohl 1:=die 2:=Vereinten 3:=Nationen 4:=das 5:=verboten 6:=haben.,1,,Although the United Nations has banned it.,"['# ::snt Although the United Nations has banned it.\n(h / have-concession-91\n      :ARG2 (b / ban-01\n            :ARG0 (o / organization\n                  :name (n / name\n                        :op1 ""United""\n                        :op2 ""Nations""))\n            :ARG1 (ii / it)))']","[h, attr-instance, have_concession_91, attr-arg2, [b, attr-instance, ban_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""united"", attr-op2, ""nations""]], attr-arg1, [ii, attr-instance, it]]]"
2271,2271,2271,2271,2682,42217,sklave,Zum Beispiel: \newline In dem Land Katar soll im Jahr 2022 die Fußball-Weltmeisterschaft sein.,16_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Zum 1:=Beispiel: 2:=\newline 3:=In 4:=dem 5:=Land 6:=Katar 7:=soll 8:=im 9:=Jahr 10:=2022 11:=die 12:=Fußball-Weltmeisterschaft 13:=sein.,2,"[[3, 5, 6], [8, 9, 10]]",For example: \newline The country of Qatar is scheduled to host the Football World Cup in 2022.,"['# ::snt For example: \\newline The country of Qatar is scheduled to host the Football World Cup in 2022.\n(e / exemplify-01\n      :ARG0 (s / schedule-01\n            :ARG1 (h / host-01\n                  :ARG0 (c / country\n                        :name (n / name\n                              :op1 ""Qatar""))\n                  :ARG1 (g / game\n                        :name (n2 / name\n                              :op1 ""Football""\n                              :op2 ""World""\n                              :op3 ""Cup""))\n                  :time (d / date-entity\n                        :year 2022))\n            :ARG3 c))']","[e, attr-instance, exemplify_01, attr-arg0, [s, attr-instance, schedule_01, attr-arg1, [h, attr-instance, host_01, attr-arg0, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""qatar""]], attr-arg1, [g, attr-instance, game, attr-name, [n2, attr-instance, name, attr-op1, ""football"", attr-op2, ""world"", attr-op3, ""cup""]], attr-time, [d, attr-instance, date_entity, attr-year, 2022]], attr-arg3, c]]"
2272,2272,2272,2272,2683,42218,sklave,Bis dahin sollen viele Fußball Stadien gebaut werden.,17_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Bis 1:=dahin 2:=sollen 3:=viele 4:=Fußball 5:=Stadien 6:=gebaut 7:=werden.,1,,"By then, many football stadiums will have been built.","['# ::snt By then, many football stadiums will have been built.\n(b / build-01\n      :ARG1 (s / stadium\n            :mod (f / football)\n            :quant (m / many))\n      :time (b2 / by\n            :op1 (t / then)))']","[b, attr-instance, build_01, attr-arg1, [s, attr-instance, stadium, attr-mod, [f, attr-instance, football], attr-quant, [m, attr-instance, many]], attr-time, [b2, attr-instance, by, attr-op1, [t, attr-instance, then]]]"
2273,2273,2273,2273,2684,42219,sklave,Zum Teil werden  die Stadien von Gastarbeitern gebaut.,18_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Zum 1:=Teil 2:=werden 3:= 4:=die 5:=Stadien 6:=von 7:=Gastarbeitern 8:=gebaut.,1,,Some of the stadiums are built by guest workers.,['# ::snt Some of the stadiums are built by guest workers.\n(b / build-01\n      :ARG0 (p / person\n            :ARG0-of (w / work-01)\n            :mod (g / guest))\n      :ARG1 (s / stadium\n            :ARG1-of (ii / include-91\n                  :ARG2 (s2 / stadium)\n                  :ARG3 (s3 / some))))'],"[b, attr-instance, build_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [w, attr-instance, work_01], attr-mod, [g, attr-instance, guest]], attr-arg1, [s, attr-instance, stadium, attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [s2, attr-instance, stadium], attr-arg3, [s3, attr-instance, some]]]]"
2274,2274,2274,2274,2685,42220,sklave,Das sind Arbeiter die aus dem Land Nepal kommen.,19_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=sind 2:=Arbeiter 3:=die 4:=aus 5:=dem 6:=Land 7:=Nepal 8:=kommen.,2,"[[0, 1], [3, 4, 6, 7, 8]]",These are workers who come from the country of Nepal.,"['# ::snt These are workers who come from the country of Nepal.\n(p / person\n      :ARG0-of (w / work-01)\n      :domain (t / this)\n      :ARG1-of (c / come-01\n            :ARG3 (c2 / country\n                  :name (n / name\n                        :op1 ""Nepal""))))']","[p, attr-instance, person, attr-arg0_of, [w, attr-instance, work_01], attr-domain, [t, attr-instance, this], attr-arg1_of, [c, attr-instance, come_01, attr-arg3, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""nepal""]]]]"
2275,2275,2275,2275,2686,42221,sklave,Manchen hat man den Ausweis weg genommen.,20_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Manchen 1:=hat 2:=man 3:=den 4:=Ausweis 5:=weg 6:=genommen.,1,,Some people had their ID cards taken away.,['# ::snt Some people had their ID cards taken away.\n(h / have-04\n      :ARG0 (p / person\n            :mod (s / some))\n      :ARG1 (t / take-away-05\n            :ARG1 (c / card\n                  :instrument-of (d / document-01\n                        :ARG1 (ii / identity\n                              :poss p)))))'],"[h, attr-instance, have_04, attr-arg0, [p, attr-instance, person, attr-mod, [s, attr-instance, some]], attr-arg1, [t, attr-instance, take_away_05, attr-arg1, [c, attr-instance, card, attr-instrument_of, [d, attr-instance, document_01, attr-arg1, [ii, attr-instance, identity, attr-poss, p]]]]]"
2276,2276,2276,2276,2687,42222,sklave,Und man gibt ihnen das Geld für ihre Arbeit nicht.,21_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=man 2:=gibt 3:=ihnen 4:=das 5:=Geld 6:=für 7:=ihre 8:=Arbeit 9:=nicht.,2,"[[1, 2, 3, 9], [6, 7, 8]]",And they don't get paid for their work.,"[""# ::snt And they don't get paid for their work.\n(a / and\n      :op2 (p / pay-01\n            :polarity -\n            :ARG2 (t / they)\n            :ARG3 (w / work-01\n                  :ARG0 t)))""]","[a, attr-instance, and, attr-op2, [p, attr-instance, pay_01, attr-polarity, negative, attr-arg2, [t, attr-instance, they], attr-arg3, [w, attr-instance, work_01, attr-arg0, t]]]"
2277,2277,2277,2277,2688,42223,sklave,Manche haben kein Wasser bekommen.,22_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Manche 1:=haben 2:=kein 3:=Wasser 4:=bekommen.,1,,Some did not receive any water.,['# ::snt Some did not receive any water.\n(r / receive-01\n      :polarity -\n      :ARG0 (s / some)\n      :ARG1 (w / water\n            :mod (a / any)))'],"[r, attr-instance, receive_01, attr-polarity, negative, attr-arg0, [s, attr-instance, some], attr-arg1, [w, attr-instance, water, attr-mod, [a, attr-instance, any]]]"
2278,2278,2278,2278,2689,42224,sklave,44 Arbeiter aus Nepal sind schon gestorben.,23_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=44 1:=Arbeiter 2:=aus 3:=Nepal 4:=sind 5:=schon 6:=gestorben.,2,"[[0, 4, 5, 6], [2, 3]]",44 workers from Nepal have already died.,"['# ::snt 44 workers from Nepal have already died.\n(d / die-01\n      :ARG1 (p / person\n            :quant 44\n            :ARG0-of (w / work-01)\n            :source (c / country\n                  :name (n / name\n                        :op1 ""Nepal"")))\n      :time (a / already))']","[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-quant, 44, attr-arg0_of, [w, attr-instance, work_01], attr-source, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""nepal""]]], attr-time, [a, attr-instance, already]]"
2279,2279,2279,2279,2690,42225,sklave,Es gibt  verschiedene Formen von Sklaverei.,24_long,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Es 1:=gibt 2:= 3:=verschiedene 4:=Formen 5:=von 6:=Sklaverei.,1,,There are different forms of slavery.,['# ::snt There are different forms of slavery.\n(s / slavery\n      :mod (f / form\n            :ARG1-of (d / differ-02)))'],"[s, attr-instance, slavery, attr-mod, [f, attr-instance, form, attr-arg1_of, [d, attr-instance, differ_02]]]"
2280,2280,2280,2280,2695,42230,sklave,Ein Sklave ist ein Mensch.,0_short,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Ein 1:=Sklave 2:=ist 3:=ein 4:=Mensch.,1,,A slave is a human being.,['# ::snt A slave is a human being.\n(b / being\n      :mod (h / human)\n      :domain (s / slave))'],"[b, attr-instance, being, attr-mod, [h, attr-instance, human], attr-domain, [s, attr-instance, slave]]"
2281,2281,2281,2281,2696,42231,sklave,Dieser Mensch gehört einem anderen Mensch.,1_short,Ohne_Kategorie,2013-11-26T08:07:47Z,6275ee07d0785a2da491fbb224064f23,0:=Dieser 1:=Mensch 2:=gehört 3:=einem 4:=anderen 5:=Mensch.,1,,This person belongs to another person.,['# ::snt This person belongs to another person.\n(b / belong-01\n      :ARG0 (p / person\n            :mod (t / this))\n      :ARG1 (p2 / person\n            :mod (a / another)))'],"[b, attr-instance, belong_01, attr-arg0, [p, attr-instance, person, attr-mod, [t, attr-instance, this]], attr-arg1, [p2, attr-instance, person, attr-mod, [a, attr-instance, another]]]"
2282,2282,2282,2282,2697,42232,skriptkiddie,Skriptkiddie besteht aus zwei Wörtern.,0_long,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,0:=Skriptkiddie 1:=besteht 2:=aus 3:=zwei 4:=Wörtern.,1,,Script kiddie consists of two words.,['# ::snt Script kiddie consists of two words.\n(c / consist-01\n      :ARG1 (k / kiddie\n            :mod (s / Script))\n      :ARG2 (w / word\n            :quant 2))'],"[c, attr-instance, consist_01, attr-arg1, [k, attr-instance, kiddie, attr-mod, [s, attr-instance, script]], attr-arg2, [w, attr-instance, word, attr-quant, 2]]"
2283,2283,2283,2283,2698,42233,skriptkiddie,Aus dem Wort \newline Skript und \newline Kid.,1_long,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,0:=Aus 1:=dem 2:=Wort 3:=\newline 4:=Skript 5:=und 6:=\newline 7:=Kid.,2,"[[4], [7]]",From the word \newline script and \newline kid.,"['# ::snt From the word \\newline script and \\newline kid.\n(b / be-from-91\n      :ARG2 (a / and\n            :op1 (w / word\n                  :mod (s / string-entity\n                        :value ""script""))\n            :op2 (k / kid\n                  :mod (l / language\n                        :name (n / name\n                              :op1 ""newline"")))))']","[b, attr-instance, be_from_91, attr-arg2, [a, attr-instance, and, attr-op1, [w, attr-instance, word, attr-mod, [s, attr-instance, string_entity, attr-value, ""script""]], attr-op2, [k, attr-instance, kid, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]]]]"
2284,2284,2284,2284,2699,42234,skriptkiddie,Mit Skript ist eine Textdatei gemeint.,2_long,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,0:=Mit 1:=Skript 2:=ist 3:=eine 4:=Textdatei 5:=gemeint.,1,,A script is a text file.,['# ::snt A script is a text file.\n(f / file\n      :mod (t / text)\n      :domain (s / script))'],"[f, attr-instance, file, attr-mod, [t, attr-instance, text], attr-domain, [s, attr-instance, script]]"
2285,2285,2285,2285,2700,42235,skriptkiddie,In dieser Datei stehen Computerbefehle.,3_long,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,0:=In 1:=dieser 2:=Datei 3:=stehen 4:=Computerbefehle.,1,,This file contains computer commands.,['# ::snt This file contains computer commands.\n(c / contain-01\n      :ARG0 (f / file\n            :mod (t / this))\n      :ARG1 (c2 / command-02\n            :medium (c3 / computer)))'],"[c, attr-instance, contain_01, attr-arg0, [f, attr-instance, file, attr-mod, [t, attr-instance, this]], attr-arg1, [c2, attr-instance, command_02, attr-medium, [c3, attr-instance, computer]]]"
2286,2286,2286,2286,2701,42236,skriptkiddie,"Wenn diese Datei gestartet wird, \newline arbeitet der Computer selbständig.",4_long,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Wenn 1:=diese 2:=Datei 3:=gestartet 4:=wird, 5:=\newline 6:=arbeitet 7:=der 8:=Computer 9:=selbständig.",2,"[[0, 2, 3, 4], [6, 8, 9]]","When this file is started, \newline the computer works independently.","['# ::snt When this file is started, \\newline the computer works independently.\n(w / work-09\n      :ARG1 (c / computer)\n      :ARG1-of (d / depend-01\n            :polarity -)\n      :time (s / start-01\n            :ARG1 (f / file\n                  :mod (t / this)))\n      :instrument (c2 / company\n            :name (n / name\n                  :op1 ""Newline"")))']","[w, attr-instance, work_09, attr-arg1, [c, attr-instance, computer], attr-arg1_of, [d, attr-instance, depend_01, attr-polarity, negative], attr-time, [s, attr-instance, start_01, attr-arg1, [f, attr-instance, file, attr-mod, [t, attr-instance, this]]], attr-instrument, [c2, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]]]"
2287,2287,2287,2287,2702,42237,skriptkiddie,Ein solches Skript kann ohne großes Computerwissen gestartet werden.,5_long,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=solches 2:=Skript 3:=kann 4:=ohne 5:=großes 6:=Computerwissen 7:=gestartet 8:=werden.,1,,Such a script can be started without much computer knowledge.,['# ::snt Such a script can be started without much computer knowledge.\n(p / possible-01\n      :ARG1 (s / start-01\n            :ARG1 (s2 / script\n                  :mod (s3 / such))\n            :manner (k / know-01\n                  :polarity -\n                  :ARG0 (ii / i)\n                  :ARG1 (c / computer)\n                  :quant (m / much))))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, start_01, attr-arg1, [s2, attr-instance, script, attr-mod, [s3, attr-instance, such]], attr-manner, [k, attr-instance, know_01, attr-polarity, negative, attr-arg0, [ii, attr-instance, i], attr-arg1, [c, attr-instance, computer], attr-quant, [m, attr-instance, much]]]]"
2288,2288,2288,2288,2703,42238,skriptkiddie,"Um den Text der in solch einem Skript steht zu schreiben, \newline braucht es gutes Computerwissen.",6_long,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Um 1:=den 2:=Text 3:=der 4:=in 5:=solch 6:=einem 7:=Skript 8:=steht 9:=zu 10:=schreiben, 11:=\newline 12:=braucht 13:=es 14:=gutes 15:=Computerwissen.",3,"[[0, 2, 9, 10], [2, 3, 4, 5, 7, 8], [12, 13, 14, 15]]","To write the text in such a script, \newline requires good computer knowledge.","['# ::snt To write the text in such a script, \\newline requires good computer knowledge.\n(r / require-01\n      :ARG0 (w / write-01\n            :ARG1 (t / text)\n            :manner (s / script\n                  :mod (s2 / such)))\n      :ARG1 (k / know-01\n            :ARG0 (c / computer)\n            :ARG1-of (g / good-02))\n      :condition w)']","[r, attr-instance, require_01, attr-arg0, [w, attr-instance, write_01, attr-arg1, [t, attr-instance, text], attr-manner, [s, attr-instance, script, attr-mod, [s2, attr-instance, such]]], attr-arg1, [k, attr-instance, know_01, attr-arg0, [c, attr-instance, computer], attr-arg1_of, [g, attr-instance, good_02]], attr-condition, w]"
2289,2289,2289,2289,2704,42239,skriptkiddie,Kid ist ein englisches Wort.,7_long,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,0:=Kid 1:=ist 2:=ein 3:=englisches 4:=Wort.,1,,Kid is an English word.,"['# ::snt Kid is an English word.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English""))\n      :domain (k / kid))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-domain, [k, attr-instance, kid]]"
2290,2290,2290,2290,2705,42240,skriptkiddie,Es bedeutet:  \newline Kind oder \newline junger Mensch,8_long,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,0:=Es 1:=bedeutet: 2:= 3:=\newline 4:=Kind 5:=oder 6:=\newline 7:=junger 8:=Mensch,2,"[[4], [7, 8]]",It means: \newline child or \newline young person,['# ::snt It means: \\newline child or \\newline young person\n(m / mean-01\n      :ARG1 (ii / it)\n      :ARG2 (o / or\n            :op1 (c / child\n                  :mod (l / line\n                        :mod (n / newline)))\n            :op2 (p / person\n                  :mod (y / young)\n                  :mod l)))'],"[m, attr-instance, mean_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [o, attr-instance, or, attr-op1, [c, attr-instance, child, attr-mod, [l, attr-instance, line, attr-mod, [n, attr-instance, newline]]], attr-op2, [p, attr-instance, person, attr-mod, [y, attr-instance, young], attr-mod, l]]]"
2291,2291,2291,2291,2706,42241,skriptkiddie,Ein Skriptkiddie ist eine Person.,0_short,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=Skriptkiddie 2:=ist 3:=eine 4:=Person.,1,,A script kiddie is a person.,['# ::snt A script kiddie is a person.\n(p / person\n      :domain (k / kiddie\n            :mod (s / script-01)))'],"[p, attr-instance, person, attr-domain, [k, attr-instance, kiddie, attr-mod, [s, attr-instance, script_01]]]"
2292,2292,2292,2292,2707,42242,skriptkiddie,"Damit sind Computer-benutzer gemeint, \newline die sich noch wenig mit Computern auskennen.",1_short,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Damit 1:=sind 2:=Computer-benutzer 3:=gemeint, 4:=\newline 5:=die 6:=sich 7:=noch 8:=wenig 9:=mit 10:=Computern 11:=auskennen.",2,"[[0, 1, 2, 3], [5, 6, 7, 8, 9, 10, 11]]",This refers to computer users \newline who have little knowledge of computers.,"['# ::snt This refers to computer users \\newline who have little knowledge of computers.\n(r / refer-01\n      :ARG0 (t / this)\n      :ARG1 (p / person\n            :ARG0-of (u / use-01\n                  :ARG1 (c / computer))\n            :name (n / name\n                  :op1 ""newline"")\n            :ARG0-of (k / know-01\n                  :ARG1 (c2 / computer)\n                  :degree (l / little))))']","[r, attr-instance, refer_01, attr-arg0, [t, attr-instance, this], attr-arg1, [p, attr-instance, person, attr-arg0_of, [u, attr-instance, use_01, attr-arg1, [c, attr-instance, computer]], attr-name, [n, attr-instance, name, attr-op1, ""newline""], attr-arg0_of, [k, attr-instance, know_01, attr-arg1, [c2, attr-instance, computer], attr-degree, [l, attr-instance, little]]]]"
2293,2293,2293,2293,2708,42244,skriptkiddie,Diese Benutzer wissen nicht genau wie diese Programme funktionieren.,3_short,Ohne_Kategorie,2013-02-25T08:09:05Z,28d34f2e053dee2c0e9399a7924cd978,0:=Diese 1:=Benutzer 2:=wissen 3:=nicht 4:=genau 5:=wie 6:=diese 7:=Programme 8:=funktionieren.,2,"[[1, 2, 3, 4], [5, 7, 8]]",These users do not know exactly how these programs work.,['# ::snt These users do not know exactly how these programs work.\n(k / know-01\n      :polarity -\n      :ARG0 (p / person\n            :ARG0-of (u / use-01)\n            :mod (t / this))\n      :ARG1 (t2 / thing\n            :manner-of (w / work-09\n                  :ARG1 (p2 / program\n                        :mod (t3 / this))))\n      :manner (e / exact))'],"[k, attr-instance, know_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-arg0_of, [u, attr-instance, use_01], attr-mod, [t, attr-instance, this]], attr-arg1, [t2, attr-instance, thing, attr-manner_of, [w, attr-instance, work_09, attr-arg1, [p2, attr-instance, program, attr-mod, [t3, attr-instance, this]]]], attr-manner, [e, attr-instance, exact]]"
2294,2294,2294,2294,2709,42245,skullet,Bei den Crusties ist die Skullet-Frisur sehr beliebt.,0_long,Frisur,2014-05-15T10:15:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Bei 1:=den 2:=Crusties 3:=ist 4:=die 5:=Skullet-Frisur 6:=sehr 7:=beliebt.,2,"[[0, 2], [3, 5, 6, 7]]",The skullet hairstyle is very popular among the crusties.,['# ::snt The skullet hairstyle is very popular among the crusties.\n(p / popular-02\n      :ARG1 (h / hairstyle\n            :mod (s / skullet))\n      :ARG2 (p2 / person\n            :mod (c / crusty))\n      :degree (v / very))'],"[p, attr-instance, popular_02, attr-arg1, [h, attr-instance, hairstyle, attr-mod, [s, attr-instance, skullet]], attr-arg2, [p2, attr-instance, person, attr-mod, [c, attr-instance, crusty]], attr-degree, [v, attr-instance, very]]"
2295,2295,2295,2295,2710,42246,skullet,Skullet ist ein Haar-Schnitt.,0_short,Frisur,2014-05-15T10:15:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Skullet 1:=ist 2:=ein 3:=Haar-Schnitt.,1,,Skullet is a haircut.,"['# ::snt Skullet is a haircut.\n(h / haircut\n      :domain (p / product\n            :name (n / name\n                  :op1 ""Skullet"")))']","[h, attr-instance, haircut, attr-domain, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""skullet""]]]"
2296,2296,2296,2296,2711,42247,skullet,Dabei sind die Haare hinten lang.,1_short,Frisur,2014-05-15T10:15:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Dabei 1:=sind 2:=die 3:=Haare 4:=hinten 5:=lang.,1,,The hair is long at the back.,['# ::snt The hair is long at the back.\n(l / long-03\n      :ARG1 (h / hair)\n      :location (b / back))'],"[l, attr-instance, long_03, attr-arg1, [h, attr-instance, hair], attr-location, [b, attr-instance, back]]"
2297,2297,2297,2297,2712,42248,skullet,Und oben ist eine Glatze.,2_short,Frisur,2014-05-15T10:15:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Und 1:=oben 2:=ist 3:=eine 4:=Glatze.,1,,And there's a bald head on top.,"[""# ::snt And there's a bald head on top.\n(a / and\n      :op2 (b / be-located-at-91\n            :ARG1 (h / head\n                  :mod (b2 / bald))\n            :ARG2 (t / top)))""]","[a, attr-instance, and, attr-op2, [b, attr-instance, be_located_at_91, attr-arg1, [h, attr-instance, head, attr-mod, [b2, attr-instance, bald]], attr-arg2, [t, attr-instance, top]]]"
2298,2298,2298,2298,2713,42249,skype,Skype ist ein Internet-Telefonie-Programm.,0_long,Computer,2008-04-18T19:54:06Z,e3afed0047b08059d0fada10f400c1e5,0:=Skype 1:=ist 2:=ein 3:=Internet-Telefonie-Programm.,1,,Skype is an Internet telephony program.,"['# ::snt Skype is an Internet telephony program.\n(p / program\n      :domain (b / broadcast-program\n            :name (n / name\n                  :op1 ""Skype""))\n      :mod (t / telecommunication\n            :mod (ii / internet)))']","[p, attr-instance, program, attr-domain, [b, attr-instance, broadcast_program, attr-name, [n, attr-instance, name, attr-op1, ""skype""]], attr-mod, [t, attr-instance, telecommunication, attr-mod, [ii, attr-instance, internet]]]"
2299,2299,2299,2299,2714,42250,skype,"Mit Skype kann man telefonieren, chatten und Videotelefonie machen.",1_long,Computer,2008-04-18T19:54:06Z,e3afed0047b08059d0fada10f400c1e5,"0:=Mit 1:=Skype 2:=kann 3:=man 4:=telefonieren, 5:=chatten 6:=und 7:=Videotelefonie 8:=machen.",3,"[[4], [5], [7]]","With Skype you can make phone calls, chat and video calls.","['# ::snt With Skype you can make phone calls, chat and video calls.\n(p / possible-01\n      :ARG1 (c / call-02\n            :ARG0 (y / you)\n            :medium (p2 / product\n                  :name (n / name\n                        :op1 ""Skype""))\n            :mod (p3 / phone)\n            :mod (c2 / chat-01\n                  :ARG0 y)\n            :mod (v / video)))']","[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, call_02, attr-arg0, [y, attr-instance, you], attr-medium, [p2, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""skype""]], attr-mod, [p3, attr-instance, phone], attr-mod, [c2, attr-instance, chat_01, attr-arg0, y], attr-mod, [v, attr-instance, video]]]"
2300,2300,2300,2300,2715,42251,skype,Skype ist ein Computerprogramm.,0_short,Computer,2008-04-18T19:54:06Z,e3afed0047b08059d0fada10f400c1e5,0:=Skype 1:=ist 2:=ein 3:=Computerprogramm.,1,,Skype is a computer program.,"['# ::snt Skype is a computer program.\n(p / program\n      :name (n / name\n            :op1 ""Skype"")\n      :medium (c / computer))']","[p, attr-instance, program, attr-name, [n, attr-instance, name, attr-op1, ""skype""], attr-medium, [c, attr-instance, computer]]"
2301,2301,2301,2301,2716,42252,skype,Mit diesem Computerprogramm kann man mit anderen im Internet telefonieren.,1_short,Computer,2008-04-18T19:54:06Z,e3afed0047b08059d0fada10f400c1e5,0:=Mit 1:=diesem 2:=Computerprogramm 3:=kann 4:=man 5:=mit 6:=anderen 7:=im 8:=Internet 9:=telefonieren.,1,,With this computer program you can make phone calls to others on the Internet.,['# ::snt With this computer program you can make phone calls to others on the Internet.\n(p / possible-01\n      :ARG1 (c / call-02\n            :ARG0 (y / you)\n            :ARG1 (o / other)\n            :medium (p2 / phone)\n            :location (ii / internet))\n      :instrument (p3 / program\n            :mod (c2 / computer)\n            :mod (t / this)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, call_02, attr-arg0, [y, attr-instance, you], attr-arg1, [o, attr-instance, other], attr-medium, [p2, attr-instance, phone], attr-location, [ii, attr-instance, internet]], attr-instrument, [p3, attr-instance, program, attr-mod, [c2, attr-instance, computer], attr-mod, [t, attr-instance, this]]]"
2302,2302,2302,2302,2717,42253,slackline,Beim Slackline darf man nicht herunterfallen.,0_long,Sport,2012-10-07T13:48:29Z,d4171b2c36772be4cad75ef4078874bd,0:=Beim 1:=Slackline 2:=darf 3:=man 4:=nicht 5:=herunterfallen.,1,,When slacklining you must not fall down.,['# ::snt When slacklining you must not fall down.\n(o / obligate-01\n      :ARG2 (f / fall-01\n            :polarity -\n            :ARG1 (y / you)\n            :ARG4 (d / down))\n      :time (s / slackline-01\n            :ARG0 y))'],"[o, attr-instance, obligate_01, attr-arg2, [f, attr-instance, fall_01, attr-polarity, negative, attr-arg1, [y, attr-instance, you], attr-arg4, [d, attr-instance, down]], attr-time, [s, attr-instance, slackline_01, attr-arg0, y]]"
2303,2303,2303,2303,2718,42254,slackline,"Eine Person die Slagline macht nennt man: ""Slackliner"".",1_long,Sport,2012-10-07T13:48:29Z,d4171b2c36772be4cad75ef4078874bd,"0:=Eine 1:=Person 2:=die 3:=Slagline 4:=macht 5:=nennt 6:=man: 7:=""Slackliner"".",1,,"A person who slaglines is called a ""slackliner"".","['# ::snt A person who slaglines is called a ""slackliner"".\n(c / call-01\n      :ARG1 (p / person\n            :ARG0-of (s / slagline-00))\n      :ARG2 (p2 / person\n            :ARG0-of (s2 / slackline-00)))']","[c, attr-instance, call_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [s, attr-instance, slagline_00]], attr-arg2, [p2, attr-instance, person, attr-arg0_of, [s2, attr-instance, slackline_00]]]"
2304,2304,2304,2304,2719,42255,slackline,Slagline ist ein englisches Wort.,2_long,Sport,2012-10-07T13:48:29Z,d4171b2c36772be4cad75ef4078874bd,0:=Slagline 1:=ist 2:=ein 3:=englisches 4:=Wort.,1,,Slagline is an English word.,"['# ::snt Slagline is an English word.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English""))\n      :domain (s / slur))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-domain, [s, attr-instance, slur]]"
2305,2305,2305,2305,2720,42256,slackline,Auf Deutsch heißt Slag-line : schlaffe Leine.,3_long,Sport,2012-10-07T13:48:29Z,d4171b2c36772be4cad75ef4078874bd,0:=Auf 1:=Deutsch 2:=heißt 3:=Slag-line : 4:=schlaffe 5:=Leine.,1,,"In German, slag-line means slack line.","['# ::snt In German, slag-line means slack line.\n(m / mean-01\n      :ARG1 (l / line\n            :mod (s / slack))\n      :ARG2 (l2 / line\n            :mod s)\n      :medium (l3 / language\n            :name (n / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [l, attr-instance, line, attr-mod, [s, attr-instance, slack]], attr-arg2, [l2, attr-instance, line, attr-mod, s], attr-medium, [l3, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""german""]]]"
2306,2306,2306,2306,2721,42257,slackline,Beim Slackline gibt es Tricks.,4_long,Sport,2012-10-07T13:48:29Z,d4171b2c36772be4cad75ef4078874bd,0:=Beim 1:=Slackline 2:=gibt 3:=es 4:=Tricks.,1,,There are tricks to slacklining.,['# ::snt There are tricks to slacklining.\n(t / trick-01\n      :ARG2 (s / slackline-01))'],"[t, attr-instance, trick_01, attr-arg2, [s, attr-instance, slackline_01]]"
2307,2307,2307,2307,2722,42258,slackline,"Die Tricks nennt man: ""Tricklines"".",5_long,Sport,2012-10-07T13:48:29Z,d4171b2c36772be4cad75ef4078874bd,"0:=Die 1:=Tricks 2:=nennt 3:=man: 4:=""Tricklines"".",1,,"The tricks are called ""tricklines"".","['# ::snt The tricks are called ""tricklines"".\n(c / call-01\n      :ARG1 (t / trick-01)\n      :ARG2 (t2 / trickline))']","[c, attr-instance, call_01, attr-arg1, [t, attr-instance, trick_01], attr-arg2, [t2, attr-instance, trickline]]"
2308,2308,2308,2308,2725,42262,slackline,Slackline ist eine Sportart.,0_short,Sport,2012-10-07T13:48:29Z,d4171b2c36772be4cad75ef4078874bd,0:=Slackline 1:=ist 2:=eine 3:=Sportart.,1,,Slacklining is a sport.,['# ::snt Slacklining is a sport.\n(s / sport\n      :domain (s2 / slackline-00))'],"[s, attr-instance, sport, attr-domain, [s2, attr-instance, slackline_00]]"
2309,2309,2309,2309,2726,42263,slackline,Beim Slackline läuft man über ein Band.,1_short,Sport,2012-10-07T13:48:29Z,d4171b2c36772be4cad75ef4078874bd,0:=Beim 1:=Slackline 2:=läuft 3:=man 4:=über 5:=ein 6:=Band.,1,,"When slacklining, you walk over a rope.","['# ::snt When slacklining, you walk over a rope.\n(w / walk-01\n      :ARG0 (y / you)\n      :ARG2 (o / over\n            :op1 (r / rope))\n      :time (s / slackline-01\n            :ARG0 y))']","[w, attr-instance, walk_01, attr-arg0, [y, attr-instance, you], attr-arg2, [o, attr-instance, over, attr-op1, [r, attr-instance, rope]], attr-time, [s, attr-instance, slackline_01, attr-arg0, y]]"
2310,2310,2310,2310,2727,42264,slamball,Die Trampoline sind dazu da: dass die Spieler höher springen können.,0_long,Sport,2014-08-26T12:02:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Trampoline 2:=sind 3:=dazu 4:=da: 5:=dass 6:=die 7:=Spieler 8:=höher 9:=springen 10:=können.,2,"[[1, 2, 3, 5], [5, 7, 8, 9, 10]]",The trampolines are there to allow players to jump higher.,['# ::snt The trampolines are there to allow players to jump higher.\n(h / have-purpose-91\n      :ARG1 (t / trampoline\n            :location (t2 / there))\n      :ARG2 (a / allow-01\n            :ARG0 t\n            :ARG1 (j / jump-03\n                  :ARG0 (p / person\n                        :ARG0-of (p2 / play-01))\n                  :ARG1-of (h2 / have-degree-91\n                        :ARG2 (h3 / high-02\n                              :ARG1 j)\n                        :ARG3 (m / more)))))'],"[h, attr-instance, have_purpose_91, attr-arg1, [t, attr-instance, trampoline, attr-location, [t2, attr-instance, there]], attr-arg2, [a, attr-instance, allow_01, attr-arg0, t, attr-arg1, [j, attr-instance, jump_03, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01]], attr-arg1_of, [h2, attr-instance, have_degree_91, attr-arg2, [h3, attr-instance, high_02, attr-arg1, j], attr-arg3, [m, attr-instance, more]]]]]"
2311,2311,2311,2311,2728,42265,slamball,Und damit es interessant und spannend aussieht.,1_long,Sport,2014-08-26T12:02:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Und 1:=damit 2:=es 3:=interessant 4:=und 5:=spannend 6:=aussieht.,2,"[[3], [5]]",And so that it looks interesting and exciting.,['# ::snt And so that it looks interesting and exciting.\n(a / and\n      :op2 (c / cause-01\n            :ARG1 (l / look-02\n                  :ARG0 (ii / it)\n                  :ARG1 (a2 / and\n                        :op1 (ii2 / interest-01\n                              :ARG0 ii)\n                        :op2 (e / excite-01\n                              :ARG0 ii)))))'],"[a, attr-instance, and, attr-op2, [c, attr-instance, cause_01, attr-arg1, [l, attr-instance, look_02, attr-arg0, [ii, attr-instance, it], attr-arg1, [a2, attr-instance, and, attr-op1, [ii2, attr-instance, interest_01, attr-arg0, ii], attr-op2, [e, attr-instance, excite_01, attr-arg0, ii]]]]]"
2312,2312,2312,2312,2729,42266,slamball,Besonders bei einem: Dunking.,2_long,Sport,2014-08-26T12:02:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Besonders 1:=bei 2:=einem: 3:=Dunking.,1,,Especially with one thing: dunking.,['# ::snt Especially with one thing: dunking.\n(d / dunk-01\n      :accompanier (t / thing\n            :quant 1)\n      :mod (e / especially))'],"[d, attr-instance, dunk_01, attr-accompanier, [t, attr-instance, thing, attr-quant, 1], attr-mod, [e, attr-instance, especially]]"
2313,2313,2313,2313,2730,42267,slamball,Slamball ist ein Sport.,0_short,Sport,2014-08-26T12:02:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Slamball 1:=ist 2:=ein 3:=Sport.,1,,Slamball is a sport.,['# ::snt Slamball is a sport.\n(s / sport\n      :domain (s2 / slamball))'],"[s, attr-instance, sport, attr-domain, [s2, attr-instance, slamball]]"
2314,2314,2314,2314,2731,42268,slamball,Beim Slamball muß der Ball durch einen Korb.,1_short,Sport,2014-08-26T12:02:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Beim 1:=Slamball 2:=muß 3:=der 4:=Ball 5:=durch 6:=einen 7:=Korb.,1,,In slamball the ball has to go through a basket.,['# ::snt In slamball the ball has to go through a basket.\n(o / obligate-01\n      :ARG2 (g / go-01\n            :ARG1 (b / ball)\n            :path (b2 / basket))\n      :condition (s / slamball))'],"[o, attr-instance, obligate_01, attr-arg2, [g, attr-instance, go_01, attr-arg1, [b, attr-instance, ball], attr-path, [b2, attr-instance, basket]], attr-condition, [s, attr-instance, slamball]]"
2315,2315,2315,2315,2732,42269,slamball,Genau gleich wie beim Basketball.,2_short,Sport,2014-08-26T12:02:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Genau 1:=gleich 2:=wie 3:=beim 4:=Basketball.,1,,Exactly the same as basketball.,['# ::snt Exactly the same as basketball.\n(s / same-01\n      :ARG2 (b / basketball)\n      :manner (e / exact))'],"[s, attr-instance, same_01, attr-arg2, [b, attr-instance, basketball], attr-manner, [e, attr-instance, exact]]"
2316,2316,2316,2316,2733,42270,slamball,Das besondere: beim Slamball gibt es Trampoline.,3_short,Sport,2014-08-26T12:02:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=besondere: 2:=beim 3:=Slamball 4:=gibt 5:=es 6:=Trampoline.,2,"[[1], [2, 3, 4, 5, 6]]",The special thing: Slamball has trampolines.,"['# ::snt The special thing: Slamball has trampolines.\n(t / thing\n      :ARG1-of (s / special-02)\n      :domain (h / have-03\n            :ARG0 (g / game\n                  :name (n / name\n                        :op1 ""Slamball""))\n            :ARG1 (t2 / trampoline)))']","[t, attr-instance, thing, attr-arg1_of, [s, attr-instance, special_02], attr-domain, [h, attr-instance, have_03, attr-arg0, [g, attr-instance, game, attr-name, [n, attr-instance, name, attr-op1, ""slamball""]], attr-arg1, [t2, attr-instance, trampoline]]]"
2317,2317,2317,2317,2734,42271,slamball,Damit die Spieler höher springen können.,4_short,Sport,2014-08-26T12:02:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Damit 1:=die 2:=Spieler 3:=höher 4:=springen 5:=können.,1,,So that players can jump higher.,['# ::snt So that players can jump higher.\n(c / cause-01\n      :ARG1 (p / possible-01\n            :ARG1 (j / jump-01\n                  :ARG0 (p2 / person\n                        :ARG0-of (p3 / play-01))\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (h2 / high-02\n                              :ARG1 j)\n                        :ARG3 (m / more)))))'],"[c, attr-instance, cause_01, attr-arg1, [p, attr-instance, possible_01, attr-arg1, [j, attr-instance, jump_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [p3, attr-instance, play_01]], attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [h2, attr-instance, high_02, attr-arg1, j], attr-arg3, [m, attr-instance, more]]]]]"
2318,2318,2318,2318,2735,42272,slam,Das Wort Slam kann verschiedene Bedeutungen haben.,0_short,Wörter_mit_verschiedenen_Bedeutungen,2014-08-05T19:10:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Slam 3:=kann 4:=verschiedene 5:=Bedeutungen 6:=haben.,1,,The word slam can have different meanings.,['# ::snt The word slam can have different meanings.\n(p / possible-01\n      :ARG1 (m / mean-01\n            :ARG1 (w / word\n                  :mod (s / slam))\n            :ARG2 (t / thing\n                  :ARG1-of (d / differ-02))))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, mean_01, attr-arg1, [w, attr-instance, word, attr-mod, [s, attr-instance, slam]], attr-arg2, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, differ_02]]]]"
2319,2319,2319,2319,2736,42273,slam,Slam gibt es: • beim Basketball  beim Slam-Dunking,1_short,Wörter_mit_verschiedenen_Bedeutungen,2014-08-05T19:10:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Slam 1:=gibt 2:=es: 3:=• 4:=beim 5:=Basketball 6:= 7:=beim 8:=Slam-Dunking,2,"[[4, 5], [7, 8]]",Slam is available: • in basketball during slam dunking,['# ::snt Slam is available: • in basketball during slam dunking\n(a / available-02\n      :ARG2 (s / slam-02\n            :location (b / basketball)\n            :time (d / dunk-02\n                  :manner (s2 / slam-02))))'],"[a, attr-instance, available_02, attr-arg2, [s, attr-instance, slam_02, attr-location, [b, attr-instance, basketball], attr-time, [d, attr-instance, dunk_02, attr-manner, [s2, attr-instance, slam_02]]]]"
2320,2320,2320,2320,2738,42275,slam,Slam gibt es: • beim Dichter Slam,3_short,Wörter_mit_verschiedenen_Bedeutungen,2014-08-05T19:10:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Slam 1:=gibt 2:=es: 3:=• 4:=beim 5:=Dichter 6:=Slam,1,,Slam is available: • at the Poet Slam,"['# ::snt Slam is available: • at the Poet Slam\n(a / available-02\n      :ARG2 (s / slam-02)\n      :location (e / event\n            :name (n / name\n                  :op1 ""Poet""\n                  :op2 ""Slam"")))']","[a, attr-instance, available_02, attr-arg2, [s, attr-instance, slam_02], attr-location, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""poet"", attr-op2, ""slam""]]]"
2321,2321,2321,2321,2739,42276,sledge-eishockey,Jede Mannschaft hat 6 Spieler.,0_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Jede 1:=Mannschaft 2:=hat 3:=6 4:=Spieler.,1,,Each team has 6 players.,['# ::snt Each team has 6 players.\n(h / have-03\n      :ARG0 (t / team\n            :mod (e / each))\n      :ARG1 (p / person\n            :quant 6\n            :ARG0-of (p2 / play-01)))'],"[h, attr-instance, have_03, attr-arg0, [t, attr-instance, team, attr-mod, [e, attr-instance, each]], attr-arg1, [p, attr-instance, person, attr-quant, 6, attr-arg0_of, [p2, attr-instance, play_01]]]"
2322,2322,2322,2322,2740,42277,sledge-eishockey,Davon ist einer der Torwart.,1_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Davon 1:=ist 2:=einer 3:=der 4:=Torwart.,1,,One of them is the goalkeeper.,['# ::snt One of them is the goalkeeper.\n(g / goalkeeper\n      :ARG1-of (ii / include-91\n            :ARG2 (t / they)))'],"[g, attr-instance, goalkeeper, attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [t, attr-instance, they]]]"
2323,2323,2323,2323,2741,42278,sledge-eishockey,Die Spieler benutzen einen Schlitten um auf dem Eis zu fahren.,2_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Die 1:=Spieler 2:=benutzen 3:=einen 4:=Schlitten 5:=um 6:=auf 7:=dem 8:=Eis 9:=zu 10:=fahren.,3,"[[1, 2, 4], [5, 9, 10], [6, 8]]",The players use a sled to move on the ice.,['# ::snt The players use a sled to move on the ice.\n(u / use-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / play-01))\n      :ARG1 (s / sled)\n      :ARG2 (m / move-01\n            :ARG0 p\n            :ARG2 (ii / ice)))'],"[u, attr-instance, use_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01]], attr-arg1, [s, attr-instance, sled], attr-arg2, [m, attr-instance, move_01, attr-arg0, p, attr-arg2, [ii, attr-instance, ice]]]"
2324,2324,2324,2324,2742,42279,sledge-eishockey,Damit sie auf dem Eis fahren können haben sie zwei Schläger.,3_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Damit 1:=sie 2:=auf 3:=dem 4:=Eis 5:=fahren 6:=können 7:=haben 8:=sie 9:=zwei 10:=Schläger.,3,"[[0, 1, 5, 6], [2, 4], [7, 8, 9, 10]]",So that they can skate on the ice they have two sticks.,['# ::snt So that they can skate on the ice they have two sticks.\n(h / have-03\n      :ARG0 (t / they)\n      :ARG1 (s / stick\n            :quant 2)\n      :purpose (p / possible-01\n            :ARG1 (s2 / skate-01\n                  :ARG0 t\n                  :location (ii / ice))))'],"[h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [s, attr-instance, stick, attr-quant, 2], attr-purpose, [p, attr-instance, possible_01, attr-arg1, [s2, attr-instance, skate_01, attr-arg0, t, attr-location, [ii, attr-instance, ice]]]]"
2325,2325,2325,2325,2743,42280,sledge-eishockey,Mit diesen Schlägern können sie sich abstoßen.,4_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Mit 1:=diesen 2:=Schlägern 3:=können 4:=sie 5:=sich 6:=abstoßen.,1,,They can use these clubs to push themselves off.,['# ::snt They can use these clubs to push themselves off.\n(p / possible-01\n      :ARG1 (u / use-01\n            :ARG0 (t / they)\n            :ARG1 (c / club\n                  :mod (t2 / this))\n            :ARG2 (p2 / push-off-04\n                  :ARG0 t\n                  :ARG1 t)))'],"[p, attr-instance, possible_01, attr-arg1, [u, attr-instance, use_01, attr-arg0, [t, attr-instance, they], attr-arg1, [c, attr-instance, club, attr-mod, [t2, attr-instance, this]], attr-arg2, [p2, attr-instance, push_off_04, attr-arg0, t, attr-arg1, t]]]"
2326,2326,2326,2326,2744,42281,sledge-eishockey,Mit diesem Schläger schlagen sie auch den Puck.,5_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Mit 1:=diesem 2:=Schläger 3:=schlagen 4:=sie 5:=auch 6:=den 7:=Puck.,1,,They also use this stick to hit the puck.,['# ::snt They also use this stick to hit the puck.\n(u / use-01\n      :ARG0 (t / they)\n      :ARG1 (s / stick\n            :mod (t2 / this))\n      :ARG2 (h / hit-01\n            :ARG0 t\n            :ARG1 (p / puck))\n      :mod (a / also))'],"[u, attr-instance, use_01, attr-arg0, [t, attr-instance, they], attr-arg1, [s, attr-instance, stick, attr-mod, [t2, attr-instance, this]], attr-arg2, [h, attr-instance, hit_01, attr-arg0, t, attr-arg1, [p, attr-instance, puck]], attr-mod, [a, attr-instance, also]]"
2327,2327,2327,2327,2745,42282,sledge-eishockey,Ein Puck ist eine Gummischeibe.,6_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Ein 1:=Puck 2:=ist 3:=eine 4:=Gummischeibe.,1,,A puck is a rubber disc.,['# ::snt A puck is a rubber disc.\n(d / disc\n      :consist-of (r / rubber)\n      :domain (p / puck))'],"[d, attr-instance, disc, attr-consist_of, [r, attr-instance, rubber], attr-domain, [p, attr-instance, puck]]"
2328,2328,2328,2328,2746,42283,sledge-eishockey,Auf jeder Seite des Spielfeldes steht ein Tor.,7_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Auf 1:=jeder 2:=Seite 3:=des 4:=Spielfeldes 5:=steht 6:=ein 7:=Tor.,1,,There is a goal on each side of the field.,['# ::snt There is a goal on each side of the field.\n(g / goal\n      :location (s / side\n            :mod (e / each)\n            :part-of (f / field)))'],"[g, attr-instance, goal, attr-location, [s, attr-instance, side, attr-mod, [e, attr-instance, each], attr-part_of, [f, attr-instance, field]]]"
2329,2329,2329,2329,2747,42284,sledge-eishockey,Der Puck muss in das Tor der anderen Manschaft.,8_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Der 1:=Puck 2:=muss 3:=in 4:=das 5:=Tor 6:=der 7:=anderen 8:=Manschaft.,2,"[[1, 2, 3], [6, 7, 8]]",The puck must go into the other team’s goal.,['# ::snt The puck must go into the other team’s goal.\n(o / obligate-01\n      :ARG2 (g / go-01\n            :ARG1 (p / puck)\n            :ARG4 (g2 / goal\n                  :poss (t / team\n                        :mod (o2 / other)))))'],"[o, attr-instance, obligate_01, attr-arg2, [g, attr-instance, go_01, attr-arg1, [p, attr-instance, puck], attr-arg4, [g2, attr-instance, goal, attr-poss, [t, attr-instance, team, attr-mod, [o2, attr-instance, other]]]]]"
2330,2330,2330,2330,2748,42285,sledge-eishockey,Dafür gibt es einen Punkt.,9_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Dafür 1:=gibt 2:=es 3:=einen 4:=Punkt.,1,,There is a point for that.,['# ::snt There is a point for that.\n(p / point-03\n      :ARG1 (t / that))'],"[p, attr-instance, point_03, attr-arg1, [t, attr-instance, that]]"
2331,2331,2331,2331,2749,42286,sledge-eishockey,Wer die meisten Punkte hat gewinnt das Spiel.,10_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Wer 1:=die 2:=meisten 3:=Punkte 4:=hat 5:=gewinnt 6:=das 7:=Spiel.,1,,Whoever has the most points wins the game.,['# ::snt Whoever has the most points wins the game.\n(w / win-01\n      :ARG0 (w2 / whoever\n            :ARG0-of (h / have-03\n                  :ARG1 (p / point\n                        :ARG1-of (h2 / have-quant-91\n                              :ARG3 (m / most)))))\n      :ARG1 (g / game))'],"[w, attr-instance, win_01, attr-arg0, [w2, attr-instance, whoever, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [p, attr-instance, point, attr-arg1_of, [h2, attr-instance, have_quant_91, attr-arg3, [m, attr-instance, most]]]]], attr-arg1, [g, attr-instance, game]]"
2332,2332,2332,2332,2750,42287,sledge-eishockey,Ein Spiel dauert 3 mal 15 Minuten (45 Minuten).,11_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Ein 1:=Spiel 2:=dauert 3:=3 4:=mal 5:=15 6:=Minuten 7:=(45 8:=Minuten).,2,"[[1, 2, 3, 4, 5, 6], [7, 8]]",A game lasts 3 times 15 minutes (45 minutes).,['# ::snt A game lasts 3 times 15 minutes (45 minutes).\n(l / last-01\n      :ARG1 (g / game)\n      :ARG2 (p / product-of\n            :op1 3\n            :op2 (t / temporal-quantity\n                  :quant 15\n                  :unit (m / minute))))'],"[l, attr-instance, last_01, attr-arg1, [g, attr-instance, game], attr-arg2, [p, attr-instance, product_of, attr-op1, 3, attr-op2, [t, attr-instance, temporal_quantity, attr-quant, 15, attr-unit, [m, attr-instance, minute]]]]"
2333,2333,2333,2333,2751,42288,sledge-eishockey,Bei einem Foul wird die Zeit angehalten.,12_long,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Bei 1:=einem 2:=Foul 3:=wird 4:=die 5:=Zeit 6:=angehalten.,1,,"If a foul occurs, time is stopped.","['# ::snt If a foul occurs, time is stopped.\n(s / stop-01\n      :ARG1 (t / time)\n      :condition (f / foul-01))']","[s, attr-instance, stop_01, attr-arg1, [t, attr-instance, time], attr-condition, [f, attr-instance, foul_01]]"
2334,2334,2334,2334,2753,42291,sledge-eishockey,Sledge-Eishockey ist eine Sportart.,0_short,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Sledge-Eishockey 1:=ist 2:=eine 3:=Sportart.,1,,Sledge hockey is a sport.,['# ::snt Sledge hockey is a sport.\n(s / sport\n      :domain (h / hockey\n            :mod (l / ledge)))'],"[s, attr-instance, sport, attr-domain, [h, attr-instance, hockey, attr-mod, [l, attr-instance, ledge]]]"
2335,2335,2335,2335,2754,42292,sledge-eishockey,Sledge-Eishockey wird auf dem Eis gespielt.,1_short,Sport|Paralympics,2012-01-07T18:34:17Z,d4171b2c36772be4cad75ef4078874bd,0:=Sledge-Eishockey 1:=wird 2:=auf 3:=dem 4:=Eis 5:=gespielt.,1,,Sledge hockey is played on ice.,['# ::snt Sledge hockey is played on ice.\n(p / play-01\n      :ARG1 (h / hockey\n            :mod (s / sand))\n      :location (ii / ice))'],"[p, attr-instance, play_01, attr-arg1, [h, attr-instance, hockey, attr-mod, [s, attr-instance, sand]], attr-location, [ii, attr-instance, ice]]"
2336,2336,2336,2336,2756,42294,slogan,Slogans werden oft in der Werbung benutzt.,0_long,Sprache,2014-06-14T07:48:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Slogans 1:=werden 2:=oft 3:=in 4:=der 5:=Werbung 6:=benutzt.,1,,Slogans are often used in advertising.,['# ::snt Slogans are often used in advertising.\n(u / use-01\n      :ARG1 (s / slogan)\n      :ARG2 (a / advertise-01)\n      :frequency (o / often))'],"[u, attr-instance, use_01, attr-arg1, [s, attr-instance, slogan], attr-arg2, [a, attr-instance, advertise_01], attr-frequency, [o, attr-instance, often]]"
2337,2337,2337,2337,2758,42296,slogan,Das Wort Slogan ist ein Substantiv.,2_long,Sprache,2014-06-14T07:48:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Slogan 3:=ist 4:=ein 5:=Substantiv.,1,,The word slogan is a noun.,['# ::snt The word slogan is a noun.\n(n / noun\n      :domain (w / word\n            :mod (s / slogan)))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [s, attr-instance, slogan]]]"
2338,2338,2338,2338,2759,42297,slogan,Ein Slogan ist ein Spruch.,0_short,Sprache,2014-06-14T07:48:37Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Slogan 2:=ist 3:=ein 4:=Spruch.,1,,A slogan is a saying.,['# ::snt A slogan is a saying.\n(s / slogan\n      :ARG1-of (s2 / say-01))'],"[s, attr-instance, slogan, attr-arg1_of, [s2, attr-instance, say_01]]"
2339,2339,2339,2339,2761,42300,smalltalk,Viele Menschen benutzen einen Smalltalk zum Kennenlernen.,0_long,Sprache,2014-01-23T10:58:39Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Viele 1:=Menschen 2:=benutzen 3:=einen 4:=Smalltalk 5:=zum 6:=Kennenlernen.,2,"[[0, 1, 2, 4], [5, 6]]",Many people use small talk to get to know each other.,['# ::snt Many people use small talk to get to know each other.\n(u / use-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (t / talk-01\n            :mod (s / small))\n      :ARG2 (g / get-03\n            :ARG0 p\n            :ARG1 (k / know-02\n                  :ARG0 p\n                  :ARG1 p)))'],"[u, attr-instance, use_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [t, attr-instance, talk_01, attr-mod, [s, attr-instance, small]], attr-arg2, [g, attr-instance, get_03, attr-arg0, p, attr-arg1, [k, attr-instance, know_02, attr-arg0, p, attr-arg1, p]]]"
2340,2340,2340,2340,2762,42301,smalltalk,Oder damit es kein Schweigen gibt.,1_long,Sprache,2014-01-23T10:58:39Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Oder 1:=damit 2:=es 3:=kein 4:=Schweigen 5:=gibt.,1,,Or so that there is no silence.,['# ::snt Or so that there is no silence.\n(o / or\n      :op2 (c / cause-01\n            :ARG1 (s / silence-01\n                  :polarity -)))'],"[o, attr-instance, or, attr-op2, [c, attr-instance, cause_01, attr-arg1, [s, attr-instance, silence_01, attr-polarity, negative]]]"
2341,2341,2341,2341,2763,42302,smalltalk,Smalltalk hat zwei englische Wörter: • Small (heißt: klein),2_long,Sprache,2014-01-23T10:58:39Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Smalltalk 1:=hat 2:=zwei 3:=englische 4:=Wörter: 5:=• 6:=Small 7:=(heißt: 8:=klein),2,"[[0, 1, 2, 3, 4, 6], [7, 8]]",Small talk has two English words: • Small (means: small),"['# ::snt Small talk has two English words: • Small (means: small)\n(h / have-03\n      :ARG0 (t / talk-01\n            :mod (s / small))\n      :ARG1 (w / word-01\n            :quant 2\n            :ARG1 (s2 / small\n                  :ARG1-of (m / mean-01\n                        :ARG2 (s3 / small)))\n            :mod (l / language\n                  :name (n / name\n                        :op1 ""English""))))']","[h, attr-instance, have_03, attr-arg0, [t, attr-instance, talk_01, attr-mod, [s, attr-instance, small]], attr-arg1, [w, attr-instance, word_01, attr-quant, 2, attr-arg1, [s2, attr-instance, small, attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [s3, attr-instance, small]]], attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]]]]"
2342,2342,2342,2342,2764,42303,smalltalk,Smalltalk hat zwei englische Wörter: • Talk (heißt: sich unterhalten),3_long,Sprache,2014-01-23T10:58:39Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Smalltalk 1:=hat 2:=zwei 3:=englische 4:=Wörter: 5:=• 6:=Talk 7:=(heißt: 8:=sich 9:=unterhalten),2,"[[0, 1, 2, 3, 4, 6], [7, 8, 9]]",Small talk has two English words: • Talk (means: to have a conversation),"['# ::snt Small talk has two English words: • Talk (means: to have a conversation)\n(h / have-03\n      :ARG0 (t / talk-01\n            :mod (s / small))\n      :ARG1 (w / word\n            :quant 2\n            :mod (l / language\n                  :name (n / name\n                        :op1 ""English""))\n            :consist-of (t2 / talk-01\n                  :ARG1-of (m / mean-01\n                        :ARG2 (h2 / have-06\n                              :ARG1 (c / converse-01))))))']","[h, attr-instance, have_03, attr-arg0, [t, attr-instance, talk_01, attr-mod, [s, attr-instance, small]], attr-arg1, [w, attr-instance, word, attr-quant, 2, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-consist_of, [t2, attr-instance, talk_01, attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [h2, attr-instance, have_06, attr-arg1, [c, attr-instance, converse_01]]]]]]"
2343,2343,2343,2343,2765,42304,smalltalk,Das Wort Smalltalk ist ein Substantiv.,4_long,Sprache,2014-01-23T10:58:39Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=Wort 2:=Smalltalk 3:=ist 4:=ein 5:=Substantiv.,1,,The word small talk is a noun.,['# ::snt The word small talk is a noun.\n(n / noun\n      :domain (w / word\n            :mod (t / talk-01\n                  :mod (s / small))))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [t, attr-instance, talk_01, attr-mod, [s, attr-instance, small]]]]"
2344,2344,2344,2344,2766,42305,smalltalk,Ein Smalltalk ist ein (kurzes) Gespräch.,0_short,Sprache,2014-01-23T10:58:39Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Smalltalk 2:=ist 3:=ein 4:=(kurzes) 5:=Gespräch.,2,"[[1, 2, 5], [4]]",Small talk is a (short) conversation.,['# ::snt Small talk is a (short) conversation.\n(c / converse-01\n      :mod (s / small)\n      :ARG1-of (s2 / short-07))'],"[c, attr-instance, converse_01, attr-mod, [s, attr-instance, small], attr-arg1_of, [s2, attr-instance, short_07]]"
2345,2345,2345,2345,2767,42306,smalltalk,Ein Gespräch über Dinge die nicht (sehr) wichtig sind.,1_short,Sprache,2014-01-23T10:58:39Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Gespräch 2:=über 3:=Dinge 4:=die 5:=nicht 6:=(sehr) 7:=wichtig 8:=sind.,3,"[[1, 2, 3], [4, 5, 7, 8], [6]]",A conversation about things that are not (very) important.,['# ::snt A conversation about things that are not (very) important.\n(c / converse-01\n      :ARG1 (t / thing\n            :ARG1-of (ii / important-01\n                  :polarity -\n                  :degree (v / very))))'],"[c, attr-instance, converse_01, attr-arg1, [t, attr-instance, thing, attr-arg1_of, [ii, attr-instance, important_01, attr-polarity, negative, attr-degree, [v, attr-instance, very]]]]"
2346,2346,2346,2346,2768,42307,smalltalk,Zum Beispiel ein Gespräch über das Wetter.,2_short,Sprache,2014-01-23T10:58:39Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel 2:=ein 3:=Gespräch 4:=über 5:=das 6:=Wetter.,1,,"For example, a conversation about the weather.","['# ::snt For example, a conversation about the weather.\n(e / exemplify-01\n      :ARG0 (c / converse-01\n            :ARG1 (w / weather)))']","[e, attr-instance, exemplify_01, attr-arg0, [c, attr-instance, converse_01, attr-arg1, [w, attr-instance, weather]]]"
2347,2347,2347,2347,2770,42311,smartlet,Ein Smartlet ist ein sehr großes Handy.,0_short,Computer,2013-04-02T10:52:11Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Ein 1:=Smartlet 2:=ist 3:=ein 4:=sehr 5:=großes 6:=Handy.,1,,A smartlet is a very large mobile phone.,['# ::snt A smartlet is a very large mobile phone.\n(p / phone\n      :ARG1-of (m / mobile-02)\n      :mod (l / large\n            :degree (v / very))\n      :domain (s / smartlet))'],"[p, attr-instance, phone, attr-arg1_of, [m, attr-instance, mobile_02], attr-mod, [l, attr-instance, large, attr-degree, [v, attr-instance, very]], attr-domain, [s, attr-instance, smartlet]]"
2348,2348,2348,2348,2771,42312,smartlet,Ein Smartlet hat eine Zwischen-Größe.,1_short,Computer,2013-04-02T10:52:11Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Ein 1:=Smartlet 2:=hat 3:=eine 4:=Zwischen-Größe.,1,,A smartlet has an intermediate size.,['# ::snt A smartlet has an intermediate size.\n(h / have-03\n      :ARG0 (s / smartlet)\n      :ARG1 (s2 / size\n            :mod (ii / intermediate)))'],"[h, attr-instance, have_03, attr-arg0, [s, attr-instance, smartlet], attr-arg1, [s2, attr-instance, size, attr-mod, [ii, attr-instance, intermediate]]]"
2349,2349,2349,2349,2775,42316,smartphone,Smartphone ist ein englisches Wort.,0_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Smartphone 1:=ist 2:=ein 3:=englisches 4:=Wort.,1,,Smartphone is an English word.,"['# ::snt Smartphone is an English word.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English""))\n      :domain (s / smart-phones))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-domain, [s, attr-instance, smart_phones]]"
2350,2350,2350,2350,2776,42317,smartphone,Auf deutsch heißt Smartphone: Schlaues Telefon.,1_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Auf 1:=deutsch 2:=heißt 3:=Smartphone: 4:=Schlaues 5:=Telefon.,1,,"In German, smartphone means: smart phone.","['# ::snt In German, smartphone means: smart phone.\n(m / mean-01\n      :ARG1 (s / smartphone)\n      :ARG2 (p / phone\n            :ARG1-of (s2 / smart-06))\n      :ARG3 (l / language\n            :name (n / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [s, attr-instance, smartphone], attr-arg2, [p, attr-instance, phone, attr-arg1_of, [s2, attr-instance, smart_06]], attr-arg3, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""german""]]]"
2351,2351,2351,2351,2777,42318,smartphone,"Smartphone wird so gesprochen: ""Smart-fon"".",2_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,"0:=Smartphone 1:=wird 2:=so 3:=gesprochen: 4:=""Smart-fon"".",1,,"Smartphone is pronounced as: ""Smart-fon"".","['# ::snt Smartphone is pronounced as: ""Smart-fon"".\n(p / pronounce-01\n      :ARG1 (s / smart-phone)\n      :ARG2 (s2 / string-entity\n            :value ""Smart-fon""))']","[p, attr-instance, pronounce_01, attr-arg1, [s, attr-instance, smart_phone], attr-arg2, [s2, attr-instance, string_entity, attr-value, ""smart_fon""]]"
2352,2352,2352,2352,2778,42319,smartphone,Es ist ein Telefon zum Mitnehmen.,3_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Es 1:=ist 2:=ein 3:=Telefon 4:=zum 5:=Mitnehmen.,2,"[[0, 1], [4, 5]]",It's a phone you can take with you.,"[""# ::snt It's a phone you can take with you.\n(p / phone\n      :domain (ii / it)\n      :ARG1-of (t / take-01\n            :ARG0 (y / you)\n            :ARG1-of (p2 / possible-01)\n            :accompanier y))""]","[p, attr-instance, phone, attr-domain, [ii, attr-instance, it], attr-arg1_of, [t, attr-instance, take_01, attr-arg0, [y, attr-instance, you], attr-arg1_of, [p2, attr-instance, possible_01], attr-accompanier, y]]"
2353,2353,2353,2353,2779,42320,smartphone,Ein Akku gibt dem Smartphone Energie.,4_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Ein 1:=Akku 2:=gibt 3:=dem 4:=Smartphone 5:=Energie.,1,,A battery gives the smartphone energy.,['# ::snt A battery gives the smartphone energy.\n(g / give-01\n      :ARG0 (b / battery)\n      :ARG1 (e / energy)\n      :ARG2 (s / smartphone))'],"[g, attr-instance, give_01, attr-arg0, [b, attr-instance, battery], attr-arg1, [e, attr-instance, energy], attr-arg2, [s, attr-instance, smartphone]]"
2354,2354,2354,2354,2780,42321,smartphone,Ein Smartphone hat meistens einen Touchscreen.,5_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Ein 1:=Smartphone 2:=hat 3:=meistens 4:=einen 5:=Touchscreen.,1,,A smartphone usually has a touchscreen.,['# ::snt A smartphone usually has a touchscreen.\n(h / have-03\n      :ARG0 (s / smartphone)\n      :ARG1 (t / touchscreen)\n      :mod (u / usual))'],"[h, attr-instance, have_03, attr-arg0, [s, attr-instance, smartphone], attr-arg1, [t, attr-instance, touchscreen], attr-mod, [u, attr-instance, usual]]"
2355,2355,2355,2355,2781,42322,smartphone,Das Wort Touchscreen ist Englisch.,6_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Das 1:=Wort 2:=Touchscreen 3:=ist 4:=Englisch.,1,,The word touchscreen is English.,"['# ::snt The word touchscreen is English.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English""))\n      :domain (t / touchscreen))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-domain, [t, attr-instance, touchscreen]]"
2356,2356,2356,2356,2782,42323,smartphone,Touchscreen bedeutet: ein Bildschirm zum anfassen.,7_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Touchscreen 1:=bedeutet: 2:=ein 3:=Bildschirm 4:=zum 5:=anfassen.,1,,Touchscreen means: a screen you can touch.,['# ::snt Touchscreen means: a screen you can touch.\n(m / mean-01\n      :ARG1 (s / screen\n            :ARG0-of (t / touch-01\n                  :ARG1 (y / you)))\n      :ARG2 (s2 / screen\n            :ARG1-of (t2 / touch-01\n                  :ARG0 y\n                  :ARG1-of (p / possible-01))))'],"[m, attr-instance, mean_01, attr-arg1, [s, attr-instance, screen, attr-arg0_of, [t, attr-instance, touch_01, attr-arg1, [y, attr-instance, you]]], attr-arg2, [s2, attr-instance, screen, attr-arg1_of, [t2, attr-instance, touch_01, attr-arg0, y, attr-arg1_of, [p, attr-instance, possible_01]]]]"
2357,2357,2357,2357,2783,42324,smartphone,Der Touchscreen reagiert sofort wenn man drauf drückt.,8_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Der 1:=Touchscreen 2:=reagiert 3:=sofort 4:=wenn 5:=man 6:=drauf 7:=drückt.,2,"[[1, 2, 3], [4, 5, 6, 7]]",The touchscreen responds immediately when you press it.,['# ::snt The touchscreen responds immediately when you press it.\n(r / respond-01\n      :ARG0 (t / touchscreen)\n      :time (p / press-01\n            :ARG0 (y / you)\n            :ARG1 t)\n      :time (ii / immediate))'],"[r, attr-instance, respond_01, attr-arg0, [t, attr-instance, touchscreen], attr-time, [p, attr-instance, press_01, attr-arg0, [y, attr-instance, you], attr-arg1, t], attr-time, [ii, attr-instance, immediate]]"
2358,2358,2358,2358,2784,42325,smartphone,Man kann verschiedene Software installieren.,9_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Man 1:=kann 2:=verschiedene 3:=Software 4:=installieren.,1,,You can install different software.,['# ::snt You can install different software.\n(p / possible-01\n      :ARG1 (ii / install-01\n            :ARG0 (y / you)\n            :ARG1 (s / software\n                  :ARG1-of (d / differ-02))))'],"[p, attr-instance, possible_01, attr-arg1, [ii, attr-instance, install_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, software, attr-arg1_of, [d, attr-instance, differ_02]]]]"
2359,2359,2359,2359,2785,42326,smartphone,Viele sagen zu der Software: App.,10_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Viele 1:=sagen 2:=zu 3:=der 4:=Software: 5:=App.,1,,Many people call the software: App.,"['# ::snt Many people call the software: App.\n(c / call-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (s / software\n            :name (n / name\n                  :op1 ""App"")))']","[c, attr-instance, call_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [s, attr-instance, software, attr-name, [n, attr-instance, name, attr-op1, ""app""]]]"
2360,2360,2360,2360,2786,42327,smartphone,Die Software ist ein Programm.,11_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Die 1:=Software 2:=ist 3:=ein 4:=Programm.,1,,The software is a program.,['# ::snt The software is a program.\n(p / program\n      :domain (s / software))'],"[p, attr-instance, program, attr-domain, [s, attr-instance, software]]"
2361,2361,2361,2361,2787,42328,smartphone,In dem Programm kann man viele Sachen machen.,12_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=In 1:=dem 2:=Programm 3:=kann 4:=man 5:=viele 6:=Sachen 7:=machen.,1,,You can do a lot of things in the program.,['# ::snt You can do a lot of things in the program.\n(p / possible-01\n      :ARG1 (d / do-02\n            :ARG0 (y / you)\n            :ARG1 (t / thing\n                  :quant (l / lot))\n            :location (p2 / program)))'],"[p, attr-instance, possible_01, attr-arg1, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-quant, [l, attr-instance, lot]], attr-location, [p2, attr-instance, program]]]"
2362,2362,2362,2362,2788,42329,smartphone,"App wird so gesprochen: ""Äp"".",13_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,"0:=App 1:=wird 2:=so 3:=gesprochen: 4:=""Äp"".",1,,"App is pronounced like this: ""Äp"".","['# ::snt App is pronounced like this: ""Äp"".\n(p / pronounce-01\n      :ARG1 (s / string-entity\n            :value ""App"")\n      :ARG2 (s2 / string-entity\n            :value ""Äp""))']","[p, attr-instance, pronounce_01, attr-arg1, [s, attr-instance, string_entity, attr-value, ""app""], attr-arg2, [s2, attr-instance, string_entity, attr-value, ""äp""]]"
2363,2363,2363,2363,2789,42330,smartphone,Für Smartphones gibt es verschiedene Betriebs-systeme.,14_long,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Für 1:=Smartphones 2:=gibt 3:=es 4:=verschiedene 5:=Betriebs-systeme.,1,,There are different operating systems for smartphones.,['# ::snt There are different operating systems for smartphones.\n(s / system\n      :instrument-of (o / operate-01)\n      :ARG1-of (d / differ-02)\n      :purpose (s2 / smartphone))'],"[s, attr-instance, system, attr-instrument_of, [o, attr-instance, operate_01], attr-arg1_of, [d, attr-instance, differ_02], attr-purpose, [s2, attr-instance, smartphone]]"
2364,2364,2364,2364,2799,42340,smartphone,Ein Smartphone ist eine bestimmte Art von Handy.,0_short,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Ein 1:=Smartphone 2:=ist 3:=eine 4:=bestimmte 5:=Art 6:=von 7:=Handy.,1,,A smartphone is a specific type of mobile phone.,['# ::snt A smartphone is a specific type of mobile phone.\n(t / type\n      :mod (m / mobile-02)\n      :domain (s / smartphone)\n      :ARG1-of (s2 / specific-02)\n      :mod (p / phone\n            :mod (m2 / mobile)))'],"[t, attr-instance, type, attr-mod, [m, attr-instance, mobile_02], attr-domain, [s, attr-instance, smartphone], attr-arg1_of, [s2, attr-instance, specific_02], attr-mod, [p, attr-instance, phone, attr-mod, [m2, attr-instance, mobile]]]"
2365,2365,2365,2365,2800,42341,smartphone,Es kann mehr als ein Handy.,1_short,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Es 1:=kann 2:=mehr 3:=als 4:=ein 5:=Handy.,1,,It can do more than a cell phone.,['# ::snt It can do more than a cell phone.\n(p / possible-01\n      :ARG1 (d / do-02\n            :ARG0 (ii / it)\n            :ARG1 (m / more-than\n                  :op1 (p2 / phone\n                        :mod (c / cell)))))'],"[p, attr-instance, possible_01, attr-arg1, [d, attr-instance, do_02, attr-arg0, [ii, attr-instance, it], attr-arg1, [m, attr-instance, more_than, attr-op1, [p2, attr-instance, phone, attr-mod, [c, attr-instance, cell]]]]]"
2366,2366,2366,2366,2801,42342,smartphone,Zum Beispiel:  \newline Es hat es einen großen Bildschirm.,2_short,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Zum 1:=Beispiel: 2:= 3:=\newline 4:=Es 5:=hat 6:=es 7:=einen 8:=großen 9:=Bildschirm.,1,,For example: \newline It has a large screen.,['# ::snt For example: \\newline It has a large screen.\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (ii / it)\n            :ARG1 (s / screen\n                  :mod (l / large))))'],"[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [ii, attr-instance, it], attr-arg1, [s, attr-instance, screen, attr-mod, [l, attr-instance, large]]]]"
2367,2367,2367,2367,2802,42343,smartphone,Man kann Software darauf installieren.,3_short,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Man 1:=kann 2:=Software 3:=darauf 4:=installieren.,1,,You can install software on it.,['# ::snt You can install software on it.\n(p / possible-01\n      :ARG1 (ii / install-01\n            :ARG0 (y / you)\n            :ARG1 (s / software)\n            :ARG2 (ii2 / it)))'],"[p, attr-instance, possible_01, attr-arg1, [ii, attr-instance, install_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, software], attr-arg2, [ii2, attr-instance, it]]]"
2368,2368,2368,2368,2803,42344,smartphone,Man kann damit im Internet surfen.,4_short,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Man 1:=kann 2:=damit 3:=im 4:=Internet 5:=surfen.,1,,You can use it to surf the Internet.,['# ::snt You can use it to surf the Internet.\n(p / possible-01\n      :ARG1 (u / use-01\n            :ARG0 (y / you)\n            :ARG1 (ii / it)\n            :ARG2 (s / surf-01\n                  :ARG0 y\n                  :ARG1 (ii2 / internet))))'],"[p, attr-instance, possible_01, attr-arg1, [u, attr-instance, use_01, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, it], attr-arg2, [s, attr-instance, surf_01, attr-arg0, y, attr-arg1, [ii2, attr-instance, internet]]]]"
2369,2369,2369,2369,2804,42345,smartphone,Es ist ähnlich wie ein Mini-Computer für die Hosentasche.,5_short,Computer|Internet,2012-08-24T08:57:32Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Es 1:=ist 2:=ähnlich 3:=wie 4:=ein 5:=Mini-Computer 6:=für 7:=die 8:=Hosentasche.,2,"[[2, 3, 5], [6, 8]]",It is similar to a mini computer for your pocket.,['# ::snt It is similar to a mini computer for your pocket.\n(r / resemble-01\n      :ARG1 (ii / it)\n      :ARG2 (c / computer\n            :mod (m / mini)\n            :purpose (p / pocket\n                  :poss (y / you))))'],"[r, attr-instance, resemble_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [c, attr-instance, computer, attr-mod, [m, attr-instance, mini], attr-purpose, [p, attr-instance, pocket, attr-poss, [y, attr-instance, you]]]]"
2370,2370,2370,2370,2805,42346,smartwatch,Eine Smart-uhr ist ungefähr so groß wie eine Armbanduhr.,0_long,Zeit|Technik|Computer|Internet,2014-01-03T14:38:26Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Eine 1:=Smart-uhr 2:=ist 3:=ungefähr 4:=so 5:=groß 6:=wie 7:=eine 8:=Armbanduhr.,1,,A smart watch is about the size of a wristwatch.,['# ::snt A smart watch is about the size of a wristwatch.\n(s / size-01\n      :ARG1 (w / watch\n            :ARG1-of (s2 / smart-06))\n      :ARG2 (w2 / wristwatch)\n      :ARG3 (a / about))'],"[s, attr-instance, size_01, attr-arg1, [w, attr-instance, watch, attr-arg1_of, [s2, attr-instance, smart_06]], attr-arg2, [w2, attr-instance, wristwatch], attr-arg3, [a, attr-instance, about]]"
2371,2371,2371,2371,2806,42347,smartwatch,Eine Smart-watch ist eine Computer-Uhr.,0_short,Zeit|Technik|Computer|Internet,2014-01-03T14:38:26Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Eine 1:=Smart-watch 2:=ist 3:=eine 4:=Computer-Uhr.,1,,A smart watch is a computer watch.,['# ::snt A smart watch is a computer watch.\n(w / watch\n      :mod (c / computer)\n      :domain (w2 / watch\n            :ARG1-of (s / smart-06)))'],"[w, attr-instance, watch, attr-mod, [c, attr-instance, computer], attr-domain, [w2, attr-instance, watch, attr-arg1_of, [s, attr-instance, smart_06]]]"
2372,2372,2372,2372,2807,42348,smartwatch,Die Smart-watch kann sich mit dem Internet verbinden.,1_short,Zeit|Technik|Computer|Internet,2014-01-03T14:38:26Z,ac95c75a4819ddeb76a125281a8c84d9,0:=Die 1:=Smart-watch 2:=kann 3:=sich 4:=mit 5:=dem 6:=Internet 7:=verbinden.,1,,The smart watch can connect to the Internet.,['# ::snt The smart watch can connect to the Internet.\n(p / possible-01\n      :ARG1 (c / connect-01\n            :ARG1 (w / watch\n                  :ARG1-of (s / smart-06))\n            :ARG2 (ii / internet)))'],"[p, attr-instance, possible_01, attr-arg1, [c, attr-instance, connect_01, attr-arg1, [w, attr-instance, watch, attr-arg1_of, [s, attr-instance, smart_06]], attr-arg2, [ii, attr-instance, internet]]]"
2373,2373,2373,2373,2808,42349,sms,Mit dem Handy kann man eine SMS schreiben.,0_long,Computer,2008-04-16T18:56:55Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Mit 1:=dem 2:=Handy 3:=kann 4:=man 5:=eine 6:=SMS 7:=schreiben.,1,,You can write an SMS with your mobile phone.,['# ::snt You can write an SMS with your mobile phone.\n(p / possible-01\n      :ARG1 (w / write-01\n            :ARG0 (y / you)\n            :ARG1 (t / text-01\n                  :ARG2 y\n                  :ARG1-of (p2 / private-02))\n            :instrument (p3 / phone\n                  :ARG1-of (m / mobile-02)\n                  :poss y)))'],"[p, attr-instance, possible_01, attr-arg1, [w, attr-instance, write_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, text_01, attr-arg2, y, attr-arg1_of, [p2, attr-instance, private_02]], attr-instrument, [p3, attr-instance, phone, attr-arg1_of, [m, attr-instance, mobile_02], attr-poss, y]]]"
2374,2374,2374,2374,2809,42350,sms,Die Nachricht kann man dann an ein anderes Handy schicken.,1_long,Computer,2008-04-16T18:56:55Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Die 1:=Nachricht 2:=kann 3:=man 4:=dann 5:=an 6:=ein 7:=anderes 8:=Handy 9:=schicken.,1,,The message can then be sent to another cell phone.,['# ::snt The message can then be sent to another cell phone.\n(p / possible-01\n      :ARG1 (s / send-01\n            :ARG1 (m / message)\n            :ARG2 (p2 / phone\n                  :mod (c / cell)\n                  :mod (a / another))\n            :time (t / then)))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, send_01, attr-arg1, [m, attr-instance, message], attr-arg2, [p2, attr-instance, phone, attr-mod, [c, attr-instance, cell], attr-mod, [a, attr-instance, another]], attr-time, [t, attr-instance, then]]]"
2375,2375,2375,2375,2810,42351,sms,SMS  ist eine englische Akürzung.,0_short,Computer,2008-04-16T18:56:55Z,1165823e29d5567f66ef3bbbcbfabcad,0:=SMS 1:= 2:=ist 3:=eine 4:=englische 5:=Akürzung.,1,,SMS is an English abbreviation.,"['# ::snt SMS is an English abbreviation.\n(a / abbreviation\n      :mod (c / country\n            :name (n / name\n                  :op1 ""England""))\n      :domain (p / product\n            :name (n2 / name\n                  :op1 ""SMS"")))']","[a, attr-instance, abbreviation, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""england""]], attr-domain, [p, attr-instance, product, attr-name, [n2, attr-instance, name, attr-op1, ""sms""]]]"
2376,2376,2376,2376,2811,42352,sms,"""Short Message Service"" heißt auf deutsch: ""Kurznachricht""",1_short,Computer,2008-04-16T18:56:55Z,1165823e29d5567f66ef3bbbcbfabcad,"0:=""Short 1:=Message 2:=Service"" 3:=heißt 4:=auf 5:=deutsch: 6:=""Kurznachricht""",1,,"""Short Message Service"" means in German: ""short message""","['# ::snt ""Short Message Service"" means in German: ""short message""\n(m / mean-01\n      :ARG1 (s / service\n            :mod (m2 / message-01\n                  :ARG1-of (s2 / short-07)))\n      :ARG2 (m3 / message-01\n            :ARG1-of s2)\n      :medium (l / language\n            :name (n / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [s, attr-instance, service, attr-mod, [m2, attr-instance, message_01, attr-arg1_of, [s2, attr-instance, short_07]]], attr-arg2, [m3, attr-instance, message_01, attr-arg1_of, s2], attr-medium, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""german""]]]"
2377,2377,2377,2377,2812,42353,sneak-preview,Ein Sneak Preview Film ist ein sehr neuer Film.,0_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Sneak 2:=Preview 3:=Film 4:=ist 5:=ein 6:=sehr 7:=neuer 8:=Film.,1,,A sneak preview film is a very new film.,['# ::snt A sneak preview film is a very new film.\n(f / film\n      :ARG1-of (n / new-01\n            :degree (v / very))\n      :domain (f2 / film\n            :ARG1-of (p / preview-01\n                  :ARG1-of (s / sneak-01))))'],"[f, attr-instance, film, attr-arg1_of, [n, attr-instance, new_01, attr-degree, [v, attr-instance, very]], attr-domain, [f2, attr-instance, film, attr-arg1_of, [p, attr-instance, preview_01, attr-arg1_of, [s, attr-instance, sneak_01]]]]"
2378,2378,2378,2378,2813,42355,sneak-preview,Der Film wird beim Sneak Preview zum ersten mal gezeigt.,2_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Film 2:=wird 3:=beim 4:=Sneak 5:=Preview 6:=zum 7:=ersten 8:=mal 9:=gezeigt.,1,,The film will be shown for the first time at the sneak preview.,['# ::snt The film will be shown for the first time at the sneak preview.\n(s / show-01\n      :ARG1 (f / film)\n      :ord (o / ordinal-entity\n            :value 1)\n      :time (p / preview-01\n            :ARG1-of (s2 / sneak-01)))'],"[s, attr-instance, show_01, attr-arg1, [f, attr-instance, film], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1], attr-time, [p, attr-instance, preview_01, attr-arg1_of, [s2, attr-instance, sneak_01]]]"
2379,2379,2379,2379,2814,42356,sneak-preview,Erst später kann man ihn öfters und in vielen Kinos anschauen.,3_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Erst 1:=später 2:=kann 3:=man 4:=ihn 5:=öfters 6:=und 7:=in 8:=vielen 9:=Kinos 10:=anschauen.,2,"[[5], [7, 8, 9]]",Only later can you watch it more often and in many cinemas.,['# ::snt Only later can you watch it more often and in many cinemas.\n(p / possible-01\n      :ARG1 (w / watch-01\n            :ARG0 (y / you)\n            :ARG1 (ii / it)\n            :time (a / after\n                  :mod (o / only))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (o2 / often)\n                  :ARG3 (m / more))\n            :location (c / cinema\n                  :quant (m2 / many))))'],"[p, attr-instance, possible_01, attr-arg1, [w, attr-instance, watch_01, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, it], attr-time, [a, attr-instance, after, attr-mod, [o, attr-instance, only]], attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [o2, attr-instance, often], attr-arg3, [m, attr-instance, more]], attr-location, [c, attr-instance, cinema, attr-quant, [m2, attr-instance, many]]]]"
2380,2380,2380,2380,2815,42357,sneak-preview,Meistens sind Sneak Preview Filme keine Hollywood-Filme.,4_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Meistens 1:=sind 2:=Sneak 3:=Preview 4:=Filme 5:=keine 6:=Hollywood-Filme.,1,,"Most of the time, sneak preview films are not Hollywood films.","['# ::snt Most of the time, sneak preview films are not Hollywood films.\n(f / film\n      :polarity -\n      :mod (m / market-sector\n            :name (n / name\n                  :op1 ""Hollywood""))\n      :domain (f2 / film\n            :ARG1-of (p / preview-01\n                  :manner (s / sneak-01)))\n      :frequency (t / time\n            :quant (m2 / most)))']","[f, attr-instance, film, attr-polarity, negative, attr-mod, [m, attr-instance, market_sector, attr-name, [n, attr-instance, name, attr-op1, ""hollywood""]], attr-domain, [f2, attr-instance, film, attr-arg1_of, [p, attr-instance, preview_01, attr-manner, [s, attr-instance, sneak_01]]], attr-frequency, [t, attr-instance, time, attr-quant, [m2, attr-instance, most]]]"
2381,2381,2381,2381,2816,42358,sneak-preview,Sneak Preview Filme gibt es seit den 1930er Jahren.,5_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sneak 1:=Preview 2:=Filme 3:=gibt 4:=es 5:=seit 6:=den 7:=1930er 8:=Jahren.,1,,Sneak preview films have been around since the 1930s.,['# ::snt Sneak preview films have been around since the 1930s.\n(e / exist-01\n      :ARG1 (f / film\n            :ARG0-of (p / preview-01\n                  :ARG1 (s / snak)))\n      :time (s2 / since\n            :op1 (d / date-entity\n                  :decade 1930)))'],"[e, attr-instance, exist_01, attr-arg1, [f, attr-instance, film, attr-arg0_of, [p, attr-instance, preview_01, attr-arg1, [s, attr-instance, snak]]], attr-time, [s2, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-decade, 1930]]]"
2382,2382,2382,2382,2817,42359,sneak-preview,Manche Sneak Preview Filme sind kostenlos.,6_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Manche 1:=Sneak 2:=Preview 3:=Filme 4:=sind 5:=kostenlos.,1,,Some sneak preview films are free.,['# ::snt Some sneak preview films are free.\n(f / free-03\n      :ARG1 (f2 / film\n            :ARG1-of (p / preview-01\n                  :ARG1-of (s / sneak-01))\n            :quant (s2 / some)))'],"[f, attr-instance, free_03, attr-arg1, [f2, attr-instance, film, attr-arg1_of, [p, attr-instance, preview_01, attr-arg1_of, [s, attr-instance, sneak_01]], attr-quant, [s2, attr-instance, some]]]"
2383,2383,2383,2383,2818,42360,sneak-preview,"Es sind ""Pay After"" Filme.",7_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Es 1:=sind 2:=""Pay 3:=After"" 4:=Filme.",1,,"They are ""pay after"" films.","['# ::snt They are ""pay after"" films.\n(f / film\n      :ARG3-of (p / pay-01\n            :time (a / after))\n      :domain (t / they))']","[f, attr-instance, film, attr-arg3_of, [p, attr-instance, pay_01, attr-time, [a, attr-instance, after]], attr-domain, [t, attr-instance, they]]"
2384,2384,2384,2384,2819,42361,sneak-preview,Man bezahlt nach dem Film nur wenn man möchte.,8_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=bezahlt 2:=nach 3:=dem 4:=Film 5:=nur 6:=wenn 7:=man 8:=möchte.,2,"[[2, 4], [5, 6, 7, 8]]",You only pay after the film if you want to.,['# ::snt You only pay after the film if you want to.\n(p / pay-01\n      :ARG0 (y / you)\n      :mod (o / only)\n      :time (a / after\n            :op1 (f / film))\n      :condition (w / want-01\n            :ARG0 y\n            :ARG1 p))'],"[p, attr-instance, pay_01, attr-arg0, [y, attr-instance, you], attr-mod, [o, attr-instance, only], attr-time, [a, attr-instance, after, attr-op1, [f, attr-instance, film]], attr-condition, [w, attr-instance, want_01, attr-arg0, y, attr-arg1, p]]"
2385,2385,2385,2385,2820,42362,sneak-preview,Zum Beispiel wenn man den Film gut gefunden hat.,9_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=wenn 3:=man 4:=den 5:=Film 6:=gut 7:=gefunden 8:=hat.,1,,"For example, if you liked the film.","['# ::snt For example, if you liked the film.\n(e / exemplify-01\n      :ARG0 (h / have-condition-91\n            :ARG2 (l / like-01\n                  :ARG0 (y / you)\n                  :ARG1 (f / film))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_condition_91, attr-arg2, [l, attr-instance, like_01, attr-arg0, [y, attr-instance, you], attr-arg1, [f, attr-instance, film]]]]"
2386,2386,2386,2386,2821,42363,sneak-preview,Sneak Preview Filme werden sehr oft im Kino besprochen.,10_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sneak 1:=Preview 2:=Filme 3:=werden 4:=sehr 5:=oft 6:=im 7:=Kino 8:=besprochen.,1,,Sneak preview films are often discussed in the cinema.,"['# ::snt Sneak preview films are often discussed in the cinema.\n(d / discuss-01\n      :ARG1 (f / film\n            :ARG1-of (p / preview-01\n                  :ARG0 (n / newspaper\n                        :name (n2 / name\n                              :op1 ""Sneak""))))\n      :frequency (o / often)\n      :location (c / cinema))']","[d, attr-instance, discuss_01, attr-arg1, [f, attr-instance, film, attr-arg1_of, [p, attr-instance, preview_01, attr-arg0, [n, attr-instance, newspaper, attr-name, [n2, attr-instance, name, attr-op1, ""sneak""]]]], attr-frequency, [o, attr-instance, often], attr-location, [c, attr-instance, cinema]]"
2387,2387,2387,2387,2822,42364,sneak-preview,Vor dem Film oder nach dem Film.,11_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Vor 1:=dem 2:=Film 3:=oder 4:=nach 5:=dem 6:=Film.,2,"[[0, 2], [4, 6]]",Before the film or after the film.,['# ::snt Before the film or after the film.\n(o / or\n      :op1 (b / before\n            :op1 (f / film))\n      :op2 (a / after\n            :op1 f))'],"[o, attr-instance, or, attr-op1, [b, attr-instance, before, attr-op1, [f, attr-instance, film]], attr-op2, [a, attr-instance, after, attr-op1, f]]"
2388,2388,2388,2388,2823,42365,sneak-preview,Cineasten schauen sich sehr gerne Sneak Preview Filme an.,12_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Cineasten 1:=schauen 2:=sich 3:=sehr 4:=gerne 5:=Sneak 6:=Preview 7:=Filme 8:=an.,1,,Cinephiles love watching sneak preview films.,['# ::snt Cinephiles love watching sneak preview films.\n(l / love-01\n      :ARG0 (p / person\n            :mod (c / cinema))\n      :ARG1 (w / watch-01\n            :ARG0 p\n            :ARG1 (f / film\n                  :ARG1-of (p2 / preview-01\n                        :mod (s / sneak)))))'],"[l, attr-instance, love_01, attr-arg0, [p, attr-instance, person, attr-mod, [c, attr-instance, cinema]], attr-arg1, [w, attr-instance, watch_01, attr-arg0, p, attr-arg1, [f, attr-instance, film, attr-arg1_of, [p2, attr-instance, preview_01, attr-mod, [s, attr-instance, sneak]]]]]"
2389,2389,2389,2389,2824,42366,sneak-preview,Weil es meistens keine Hollywood-Filme sind.,13_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Weil 1:=es 2:=meistens 3:=keine 4:=Hollywood-Filme 5:=sind.,1,,Because most of the time they are not Hollywood movies.,"['# ::snt Because most of the time they are not Hollywood movies.\n(c / cause-01\n      :ARG0 (m / movie\n            :polarity -\n            :mod (m2 / market-sector\n                  :name (n / name\n                        :op1 ""Hollywood""))\n            :domain (t / they)\n            :frequency (t2 / time\n                  :quant (m3 / most))))']","[c, attr-instance, cause_01, attr-arg0, [m, attr-instance, movie, attr-polarity, negative, attr-mod, [m2, attr-instance, market_sector, attr-name, [n, attr-instance, name, attr-op1, ""hollywood""]], attr-domain, [t, attr-instance, they], attr-frequency, [t2, attr-instance, time, attr-quant, [m3, attr-instance, most]]]]"
2390,2390,2390,2390,2825,42367,sneak-preview,Und weil Sneak Preview Filme erst später in die Kinos kommen.,14_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=weil 2:=Sneak 3:=Preview 4:=Filme 5:=erst 6:=später 7:=in 8:=die 9:=Kinos 10:=kommen.,1,,And because sneak preview films only come to cinemas later.,['# ::snt And because sneak preview films only come to cinemas later.\n(a / and\n      :op2 (c / cause-01\n            :ARG0 (c2 / come-01\n                  :ARG1 (f / film\n                        :ARG1-of (p / preview-01\n                              :manner (s / sneak-01)))\n                  :ARG4 (c3 / cinema)\n                  :time (a2 / after)\n                  :mod (o / only))))'],"[a, attr-instance, and, attr-op2, [c, attr-instance, cause_01, attr-arg0, [c2, attr-instance, come_01, attr-arg1, [f, attr-instance, film, attr-arg1_of, [p, attr-instance, preview_01, attr-manner, [s, attr-instance, sneak_01]]], attr-arg4, [c3, attr-instance, cinema], attr-time, [a2, attr-instance, after], attr-mod, [o, attr-instance, only]]]]"
2391,2391,2391,2391,2826,42368,sneak-preview,Beim Sneak Preview ist man der erste der den Film sieht.,15_long,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Beim 1:=Sneak 2:=Preview 3:=ist 4:=man 5:=der 6:=erste 7:=der 8:=den 9:=Film 10:=sieht.,2,"[[0, 1, 2, 3, 4, 6], [7, 9, 10]]",At the sneak preview you are the first to see the film.,['# ::snt At the sneak preview you are the first to see the film.\n(s / see-01\n      :ARG0 (y / you\n            :ord (o / ordinal-entity\n                  :value 1))\n      :ARG1 (f / film)\n      :location (p / preview-01\n            :ARG1-of (s2 / sneak-01)))'],"[s, attr-instance, see_01, attr-arg0, [y, attr-instance, you, attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]], attr-arg1, [f, attr-instance, film], attr-location, [p, attr-instance, preview_01, attr-arg1_of, [s2, attr-instance, sneak_01]]]"
2392,2392,2392,2392,2827,42369,sneak-preview,Ein Sneak Preview ist ein Überraschungs-film.,0_short,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Sneak 2:=Preview 3:=ist 4:=ein 5:=Überraschungs-film.,1,,A sneak preview is a surprise film.,['# ::snt A sneak preview is a surprise film.\n(f / film\n      :ARG0-of (s / surprise-01)\n      :domain (p / preview-01\n            :ARG1-of (s2 / sneak-01)))'],"[f, attr-instance, film, attr-arg0_of, [s, attr-instance, surprise_01], attr-domain, [p, attr-instance, preview_01, attr-arg1_of, [s2, attr-instance, sneak_01]]]"
2393,2393,2393,2393,2828,42370,sneak-preview,Bei einem Sneak Preview weiss man vorher nicht was für ein Film man anschaut.,1_short,Film_und_Kino|Seiten_mit_defekten_Dateilinks,2017-10-23T06:43:33Z,48f66906899cc4a9477b6c9e32ff4424,0:=Bei 1:=einem 2:=Sneak 3:=Preview 4:=weiss 5:=man 6:=vorher 7:=nicht 8:=was 9:=für 10:=ein 11:=Film 12:=man 13:=anschaut.,2,"[[0, 2, 3, 4, 5, 6, 7], [8, 9, 11, 12, 13]]",With a sneak preview you don't know in advance what kind of film you are watching.,"[""# ::snt With a sneak preview you don't know in advance what kind of film you are watching.\n(k / know-01\n      :polarity -\n      :ARG0 (y / you)\n      :ARG1 (k2 / kind\n            :mod (f / film\n                  :ARG1-of (w / watch-01\n                        :ARG0 y)))\n      :ARG1-of (ii / in-advance-04)\n      :condition (p / preview-01\n            :ARG1-of (s / sneak-01)))""]","[k, attr-instance, know_01, attr-polarity, negative, attr-arg0, [y, attr-instance, you], attr-arg1, [k2, attr-instance, kind, attr-mod, [f, attr-instance, film, attr-arg1_of, [w, attr-instance, watch_01, attr-arg0, y]]], attr-arg1_of, [ii, attr-instance, in_advance_04], attr-condition, [p, attr-instance, preview_01, attr-arg1_of, [s, attr-instance, sneak_01]]]"
2394,2394,2394,2394,2829,42376,snooker,Das ist Französisch und heißt: Stock.,5_long,Sport,2012-04-22T08:50:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Das 1:=ist 2:=Französisch 3:=und 4:=heißt: 5:=Stock.,2,"[[1, 2], [4, 5]]",This is French and means: stock.,"['# ::snt This is French and means: stock.\n(a / and\n      :op1 (l / language\n            :name (n / name\n                  :op1 ""French"")\n            :domain (t / this))\n      :op2 (m / mean-01\n            :ARG1 t\n            :ARG2 (s / stock)))']","[a, attr-instance, and, attr-op1, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""french""], attr-domain, [t, attr-instance, this]], attr-op2, [m, attr-instance, mean_01, attr-arg1, t, attr-arg2, [s, attr-instance, stock]]]"
2395,2395,2395,2395,2830,42380,snooker,Der Spieler zielen mit der Stock-Spitze auf eine Kugel.,9_long,Sport,2012-04-22T08:50:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Der 1:=Spieler 2:=zielen 3:=mit 4:=der 5:=Stock-Spitze 6:=auf 7:=eine 8:=Kugel.,2,"[[3, 5], [6, 8]]",The player aims at a ball with the tip of the stick.,['# ::snt The player aims at a ball with the tip of the stick.\n(a / aim-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / play-01))\n      :ARG1 (b / ball)\n      :instrument (t / tip\n            :part-of (s / stick)))'],"[a, attr-instance, aim_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01]], attr-arg1, [b, attr-instance, ball], attr-instrument, [t, attr-instance, tip, attr-part_of, [s, attr-instance, stick]]]"
2396,2396,2396,2396,2831,42381,snooker,"Dann stoßen sie zu, \newline als wollten sie die Kugel aufspießen.",10_long,Sport,2012-04-22T08:50:38Z,e3afed0047b08059d0fada10f400c1e5,"0:=Dann 1:=stoßen 2:=sie 3:=zu, 4:=\newline 5:=als 6:=wollten 7:=sie 8:=die 9:=Kugel 10:=aufspießen.",2,"[[0, 1, 2, 3], [5, 6, 7, 9, 10]]","Then they strike, \newline as if they wanted to impale the ball.","['# ::snt Then they strike, \\newline as if they wanted to impale the ball.\n(s / strike-02\n      :ARG0 (t / they)\n      :time (t2 / then)\n      :manner (r / resemble-01\n            :ARG2 (w / want-01\n                  :ARG0 t\n                  :ARG1 (ii / impale-01\n                        :ARG0 t\n                        :ARG1 (b / ball))))\n      :ARG1-of (n / newline-00))']","[s, attr-instance, strike_02, attr-arg0, [t, attr-instance, they], attr-time, [t2, attr-instance, then], attr-manner, [r, attr-instance, resemble_01, attr-arg2, [w, attr-instance, want_01, attr-arg0, t, attr-arg1, [ii, attr-instance, impale_01, attr-arg0, t, attr-arg1, [b, attr-instance, ball]]]], attr-arg1_of, [n, attr-instance, newline_00]]"
2397,2397,2397,2397,2832,42383,snooker,Es gibt 7 verschiedene Kugeln.,12_long,Sport,2012-04-22T08:50:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Es 1:=gibt 2:=7 3:=verschiedene 4:=Kugeln.,1,,There are 7 different balls.,['# ::snt There are 7 different balls.\n(b / ball\n      :quant 7\n      :ARG1-of (d / differ-02))'],"[b, attr-instance, ball, attr-quant, 7, attr-arg1_of, [d, attr-instance, differ_02]]"
2398,2398,2398,2398,2833,42384,snooker,Jede Kugel hat eine andere Farbe.,13_long,Sport,2012-04-22T08:50:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Jede 1:=Kugel 2:=hat 3:=eine 4:=andere 5:=Farbe.,1,,Each ball has a different color.,['# ::snt Each ball has a different color.\n(c / color-01\n      :ARG1 (b / ball\n            :mod (e / each))\n      :ARG2 (d / differ-02))'],"[c, attr-instance, color_01, attr-arg1, [b, attr-instance, ball, attr-mod, [e, attr-instance, each]], attr-arg2, [d, attr-instance, differ_02]]"
2399,2399,2399,2399,2834,42385,snooker,"Und es gibt verschiedene Punkte, \newline wenn die Kugel in das Loch gespielt wird.",14_long,Sport,2012-04-22T08:50:38Z,e3afed0047b08059d0fada10f400c1e5,"0:=Und 1:=es 2:=gibt 3:=verschiedene 4:=Punkte, 5:=\newline 6:=wenn 7:=die 8:=Kugel 9:=in 10:=das 11:=Loch 12:=gespielt 13:=wird.",3,"[[1, 2, 3, 4], [6, 8, 12, 13], [9, 11]]","And there are different points, \newline when the ball is played into the hole.","['# ::snt And there are different points, \\newline when the ball is played into the hole.\n(a / and\n      :op2 (p / point-04\n            :ARG1-of (d / differ-02)\n            :mod (l / line)\n            :time (p2 / play-01\n                  :ARG1 (b / ball)\n                  :destination (h / hole))))']","[a, attr-instance, and, attr-op2, [p, attr-instance, point_04, attr-arg1_of, [d, attr-instance, differ_02], attr-mod, [l, attr-instance, line], attr-time, [p2, attr-instance, play_01, attr-arg1, [b, attr-instance, ball], attr-destination, [h, attr-instance, hole]]]]"
2400,2400,2400,2400,2836,42387,snooker,"Das heißt, \newline erst muss man eine rote Kugel ins Loch spielen, \newline dann eine schwarze.",16_long,Sport,2012-04-22T08:50:38Z,e3afed0047b08059d0fada10f400c1e5,"0:=Das 1:=heißt, 2:=\newline 3:=erst 4:=muss 5:=man 6:=eine 7:=rote 8:=Kugel 9:=ins 10:=Loch 11:=spielen, 12:=\newline 13:=dann 14:=eine 15:=schwarze.",2,"[[3, 4, 5, 7, 8, 9, 10, 11], [13, 15]]","This means that \newline first you have to play a red ball into the hole, \newline then a black one.","['# ::snt This means that \\newline first you have to play a red ball into the hole, \\newline then a black one.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (a / and\n            :op1 (o / obligate-01\n                  :ARG1 (y / you)\n                  :ARG2 (p / play-01\n                        :ARG0 y\n                        :ARG1 (b / ball\n                              :ARG1-of (r / red-02))\n                        :ARG2 (h / hole))\n                  :ord (o2 / ordinal-entity\n                        :value 1))\n            :op2 p\n            :ARG0 y\n            :ARG1 (b2 / ball\n                  :ARG1-of (b3 / black-04))\n            :time (t2 / then)))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [a, attr-instance, and, attr-op1, [o, attr-instance, obligate_01, attr-arg1, [y, attr-instance, you], attr-arg2, [p, attr-instance, play_01, attr-arg0, y, attr-arg1, [b, attr-instance, ball, attr-arg1_of, [r, attr-instance, red_02]], attr-arg2, [h, attr-instance, hole]], attr-ord, [o2, attr-instance, ordinal_entity, attr-value, 1]], attr-op2, p, attr-arg0, y, attr-arg1, [b2, attr-instance, ball, attr-arg1_of, [b3, attr-instance, black_04]], attr-time, [t2, attr-instance, then]]]"
2401,2401,2401,2401,2837,42388,snooker,Snooker ist eine Sport-Art.,0_short,Sport,2012-04-22T08:50:38Z,e3afed0047b08059d0fada10f400c1e5,0:=Snooker 1:=ist 2:=eine 3:=Sport-Art.,1,,Snooker is a sport.,['# ::snt Snooker is a sport.\n(s / sport\n      :domain (s2 / snooker))'],"[s, attr-instance, sport, attr-domain, [s2, attr-instance, snooker]]"
2402,2402,2402,2402,2839,42390,social-bot,Der Social Bot verhält sich wie ein Mensch.,0_long,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Social 2:=Bot 3:=verhält 4:=sich 5:=wie 6:=ein 7:=Mensch.,1,,The social bot behaves like a human.,['# ::snt The social bot behaves like a human.\n(b / behave-01\n      :ARG0 (b2 / bot\n            :mod (s / social))\n      :ARG1 (h / human))'],"[b, attr-instance, behave_01, attr-arg0, [b2, attr-instance, bot, attr-mod, [s, attr-instance, social]], attr-arg1, [h, attr-instance, human]]"
2403,2403,2403,2403,2840,42391,social-bot,"Alle sollen glauben, \newline der Social Bot ist ein Mensch.",1_long,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Alle 1:=sollen 2:=glauben, 3:=\newline 4:=der 5:=Social 6:=Bot 7:=ist 8:=ein 9:=Mensch.",2,"[[0, 1, 2], [5, 6, 7, 9]]",Everyone should believe that \newline the social bot is a human.,['# ::snt Everyone should believe that \\newline the social bot is a human.\n(r / recommend-01\n      :ARG1 (b / believe-01\n            :ARG0 (e / everyone)\n            :ARG1 (h / human\n                  :domain (b2 / bot\n                        :mod (s / social)))))'],"[r, attr-instance, recommend_01, attr-arg1, [b, attr-instance, believe_01, attr-arg0, [e, attr-instance, everyone], attr-arg1, [h, attr-instance, human, attr-domain, [b2, attr-instance, bot, attr-mod, [s, attr-instance, social]]]]]"
2404,2404,2404,2404,2841,42392,social-bot,Jemand hat ihn so programmiert.,2_long,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Jemand 1:=hat 2:=ihn 3:=so 4:=programmiert.,1,,Someone programmed it that way.,['# ::snt Someone programmed it that way.\n(p / program-01\n      :ARG0 (s / someone)\n      :ARG1 (ii / it)\n      :manner (w / way\n            :mod (t / that)))'],"[p, attr-instance, program_01, attr-arg0, [s, attr-instance, someone], attr-arg1, [ii, attr-instance, it], attr-manner, [w, attr-instance, way, attr-mod, [t, attr-instance, that]]]"
2405,2405,2405,2405,2842,42393,social-bot,Den Social Bot gibt es in Sozialen Netz-werken.,3_long,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Den 1:=Social 2:=Bot 3:=gibt 4:=es 5:=in 6:=Sozialen 7:=Netz-werken.,1,,The social bot is available in social networks.,['# ::snt The social bot is available in social networks.\n(a / available-02\n      :ARG2 (b / bot\n            :mod (s / social))\n      :location (n / network\n            :mod s))'],"[a, attr-instance, available_02, attr-arg2, [b, attr-instance, bot, attr-mod, [s, attr-instance, social]], attr-location, [n, attr-instance, network, attr-mod, s]]"
2406,2406,2406,2406,2843,42394,social-bot,Der Social Bot erkennt bestimmte Wörter.,4_long,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Social 2:=Bot 3:=erkennt 4:=bestimmte 5:=Wörter.,1,,The social bot recognizes certain words.,['# ::snt The social bot recognizes certain words.\n(r / recognize-02\n      :ARG0 (b / bot\n            :mod (s / social))\n      :ARG1 (w / word\n            :mod (c / certain)))'],"[r, attr-instance, recognize_02, attr-arg0, [b, attr-instance, bot, attr-mod, [s, attr-instance, social]], attr-arg1, [w, attr-instance, word, attr-mod, [c, attr-instance, certain]]]"
2407,2407,2407,2407,2844,42395,social-bot,"Liest er das Wort, \newline antwortet er automatisch.",5_long,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Liest 1:=er 2:=das 3:=Wort, 4:=\newline 5:=antwortet 6:=er 7:=automatisch.",2,"[[0, 1, 3], [5, 6, 7]]",If he reads the word \newline he answers automatically.,"['# ::snt If he reads the word \\newline he answers automatically.\n(a / answer-01\n      :ARG0 (h / he)\n      :manner (a2 / automatic)\n      :condition (r / read-01\n            :ARG0 h\n            :ARG1 (s / string-entity\n                  :value ""newline"")))']","[a, attr-instance, answer_01, attr-arg0, [h, attr-instance, he], attr-manner, [a2, attr-instance, automatic], attr-condition, [r, attr-instance, read_01, attr-arg0, h, attr-arg1, [s, attr-instance, string_entity, attr-value, ""newline""]]]"
2408,2408,2408,2408,2845,42396,social-bot,Der Social Bot macht Werbung.,6_long,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Social 2:=Bot 3:=macht 4:=Werbung.,1,,The social bot advertises.,['# ::snt The social bot advertises.\n(a / advertise-01\n      :ARG0 (b / bot\n            :mod (s / social)))'],"[a, attr-instance, advertise_01, attr-arg0, [b, attr-instance, bot, attr-mod, [s, attr-instance, social]]]"
2409,2409,2409,2409,2850,42401,social-bot,Es gibt auch noch andere Bots.,11_long,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Es 1:=gibt 2:=auch 3:=noch 4:=andere 5:=Bots.,1,,There are other bots too.,['# ::snt There are other bots too.\n(b / bot\n      :mod (o / other)\n      :mod (t / too))'],"[b, attr-instance, bot, attr-mod, [o, attr-instance, other], attr-mod, [t, attr-instance, too]]"
2410,2410,2410,2410,2851,42402,social-bot,Sie haben andere Aufgaben.,12_long,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Sie 1:=haben 2:=andere 3:=Aufgaben.,1,,They have other tasks.,['# ::snt They have other tasks.\n(h / have-03\n      :ARG0 (t / they)\n      :ARG1 (t2 / task\n            :mod (o / other)))'],"[h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [t2, attr-instance, task, attr-mod, [o, attr-instance, other]]]"
2411,2411,2411,2411,2852,42403,social-bot,Ein Social Bot ist ein Computer-programm.,0_short,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=Social 2:=Bot 3:=ist 4:=ein 5:=Computer-programm.,1,,A social bot is a computer program.,['# ::snt A social bot is a computer program.\n(p / program\n      :mod (c / computer)\n      :domain (b / bot\n            :mod (s / social)))'],"[p, attr-instance, program, attr-mod, [c, attr-instance, computer], attr-domain, [b, attr-instance, bot, attr-mod, [s, attr-instance, social]]]"
2412,2412,2412,2412,2853,42404,social-bot,Den Social Bot gibt es in Sozialen Netz-werken.,1_short,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Den 1:=Social 2:=Bot 3:=gibt 4:=es 5:=in 6:=Sozialen 7:=Netz-werken.,1,,The social bot is available in social networks.,['# ::snt The social bot is available in social networks.\n(a / available-02\n      :ARG2 (b / bot\n            :mod (s / social))\n      :location (n / network\n            :mod s))'],"[a, attr-instance, available_02, attr-arg2, [b, attr-instance, bot, attr-mod, [s, attr-instance, social]], attr-location, [n, attr-instance, network, attr-mod, s]]"
2413,2413,2413,2413,2854,42405,social-bot,Der Social Bot sagt: Ich bin ein Mensch.,2_short,Internet|Seiten_mit_defekten_Dateilinks,2017-08-13T08:57:11Z,28d34f2e053dee2c0e9399a7924cd978,0:=Der 1:=Social 2:=Bot 3:=sagt: 4:=Ich 5:=bin 6:=ein 7:=Mensch.,2,"[[1, 2, 3], [4, 5, 7]]",The social bot says: I am a human.,['# ::snt The social bot says: I am a human.\n(s / say-01\n      :ARG0 (b / bot\n            :mod (s2 / social))\n      :ARG1 (h / human\n            :domain b))'],"[s, attr-instance, say_01, attr-arg0, [b, attr-instance, bot, attr-mod, [s2, attr-instance, social]], attr-arg1, [h, attr-instance, human, attr-domain, b]]"
2414,2414,2414,2414,2855,42406,social-media,Social Media sind Digitale Medien.,0_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Social 1:=Media 2:=sind 3:=Digitale 4:=Medien.,1,,Social media is digital media.,['# ::snt Social media is digital media.\n(m / media\n      :mod (d / digital)\n      :domain (m2 / media\n            :mod (s / social)))'],"[m, attr-instance, media, attr-mod, [d, attr-instance, digital], attr-domain, [m2, attr-instance, media, attr-mod, [s, attr-instance, social]]]"
2415,2415,2415,2415,2856,42407,social-media,Damit kann man etwas alleine machen.,1_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Damit 1:=kann 2:=man 3:=etwas 4:=alleine 5:=machen.,1,,This allows you to do something on your own.,['# ::snt This allows you to do something on your own.\n(a / allow-01\n      :ARG0 (t / this)\n      :ARG1 (d / do-02\n            :ARG0 (y / you)\n            :ARG1 (s / something)\n            :mod (b / by-oneself)))'],"[a, attr-instance, allow_01, attr-arg0, [t, attr-instance, this], attr-arg1, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-mod, [b, attr-instance, by_oneself]]]"
2416,2416,2416,2416,2857,42408,social-media,Zum Beispiel eine Bewertung über ein Restaurant schreiben.,2_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=eine 3:=Bewertung 4:=über 5:=ein 6:=Restaurant 7:=schreiben.,2,"[[3, 7], [4, 6]]","For example, writing a review about a restaurant.","['# ::snt For example, writing a review about a restaurant.\n(e / exemplify-01\n      :ARG0 (w / write-01\n            :ARG1 (r / review-01\n                  :ARG1 (r2 / restaurant))))']","[e, attr-instance, exemplify_01, attr-arg0, [w, attr-instance, write_01, attr-arg1, [r, attr-instance, review_01, attr-arg1, [r2, attr-instance, restaurant]]]]"
2417,2417,2417,2417,2858,42409,social-media,Oder man kann etwas gemeinsam machen.,3_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=man 2:=kann 3:=etwas 4:=gemeinsam 5:=machen.,1,,Or you can do something together.,['# ::snt Or you can do something together.\n(o / or\n      :op2 (p / possible-01\n            :ARG1 (d / do-02\n                  :ARG0 (y / you)\n                  :ARG1 (s / something)\n                  :manner (t / together))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, possible_01, attr-arg1, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, something], attr-manner, [t, attr-instance, together]]]]"
2418,2418,2418,2418,2859,42410,social-media,Zum Beispiel in einem sozialen Netzwerk Bilder zeigen.,4_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=in 3:=einem 4:=sozialen 5:=Netzwerk 6:=Bilder 7:=zeigen.,2,"[[2, 4, 5], [6, 7]]","For example, showing pictures on a social network.","['# ::snt For example, showing pictures on a social network.\n(s / show-01\n      :ARG1 (p / picture)\n      :location (n / network\n            :mod (s2 / social))\n      :ARG0-of (e / exemplify-01))']","[s, attr-instance, show_01, attr-arg1, [p, attr-instance, picture], attr-location, [n, attr-instance, network, attr-mod, [s2, attr-instance, social]], attr-arg0_of, [e, attr-instance, exemplify_01]]"
2419,2419,2419,2419,2860,42411,social-media,Mit Social Media kann man Wissen und Informationen teilen.,5_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Mit 1:=Social 2:=Media 3:=kann 4:=man 5:=Wissen 6:=und 7:=Informationen 8:=teilen.,2,"[[5], [7]]",Social media allows you to share knowledge and information.,['# ::snt Social media allows you to share knowledge and information.\n(a / allow-01\n      :ARG0 (m / media\n            :mod (s / social))\n      :ARG1 (s2 / share-01\n            :ARG0 (y / you)\n            :ARG1 (a2 / and\n                  :op1 (k / knowledge)\n                  :op2 (ii / information))))'],"[a, attr-instance, allow_01, attr-arg0, [m, attr-instance, media, attr-mod, [s, attr-instance, social]], attr-arg1, [s2, attr-instance, share_01, attr-arg0, [y, attr-instance, you], attr-arg1, [a2, attr-instance, and, attr-op1, [k, attr-instance, knowledge], attr-op2, [ii, attr-instance, information]]]]"
2420,2420,2420,2420,2861,42412,social-media,Das kann jeder machen.,6_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=kann 2:=jeder 3:=machen.,1,,Anyone can do that.,['# ::snt Anyone can do that.\n(p / possible-01\n      :ARG1 (d / do-02\n            :ARG0 (a / anyone)\n            :ARG1 (t / that)))'],"[p, attr-instance, possible_01, attr-arg1, [d, attr-instance, do_02, attr-arg0, [a, attr-instance, anyone], attr-arg1, [t, attr-instance, that]]]"
2421,2421,2421,2421,2862,42413,social-media,Man kann sich mit anderen Social Media Benutzer austauschen.,7_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=kann 2:=sich 3:=mit 4:=anderen 5:=Social 6:=Media 7:=Benutzer 8:=austauschen.,1,,You can exchange ideas with other social media users.,['# ::snt You can exchange ideas with other social media users.\n(p / possible-01\n      :ARG1 (e / exchange-01\n            :ARG0 (y / you)\n            :ARG1 (ii / idea)\n            :ARG2 (p2 / person\n                  :ARG0-of (u / use-01\n                        :ARG1 (s / social-media))\n                  :mod (o / other))))'],"[p, attr-instance, possible_01, attr-arg1, [e, attr-instance, exchange_01, attr-arg0, [y, attr-instance, you], attr-arg1, [ii, attr-instance, idea], attr-arg2, [p2, attr-instance, person, attr-arg0_of, [u, attr-instance, use_01, attr-arg1, [s, attr-instance, social_media]], attr-mod, [o, attr-instance, other]]]]"
2422,2422,2422,2422,2863,42414,social-media,"Man kann Meinungen, Eindrücken und Erfahrungen austauschen.",8_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Man 1:=kann 2:=Meinungen, 3:=Eindrücken 4:=und 5:=Erfahrungen 6:=austauschen.",3,"[[2], [3], [5]]","You can exchange opinions, impressions and experiences.","['# ::snt You can exchange opinions, impressions and experiences.\n(p / possible-01\n      :ARG1 (e / exchange-01\n            :ARG0 (y / you)\n            :ARG1 (a / and\n                  :op1 (o / opine-01\n                        :ARG0 y)\n                  :op2 (ii / impression-03\n                        :ARG0 y)\n                  :op3 (e2 / experience-01\n                        :ARG0 y))))']","[p, attr-instance, possible_01, attr-arg1, [e, attr-instance, exchange_01, attr-arg0, [y, attr-instance, you], attr-arg1, [a, attr-instance, and, attr-op1, [o, attr-instance, opine_01, attr-arg0, y], attr-op2, [ii, attr-instance, impression_03, attr-arg0, y], attr-op3, [e2, attr-instance, experience_01, attr-arg0, y]]]]"
2423,2423,2423,2423,2864,42415,social-media,"Und man kann Texte, Bilder, Audio oder Video weitergeben.",9_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Und 1:=man 2:=kann 3:=Texte, 4:=Bilder, 5:=Audio 6:=oder 7:=Video 8:=weitergeben.",4,"[[3], [4], [5], [7]]","And you can share text, images, audio or video.","['# ::snt And you can share text, images, audio or video.\n(a / and\n      :op2 (p / possible-01\n            :ARG1 (s / share-01\n                  :ARG0 (y / you)\n                  :ARG1 (o / or\n                        :op1 (t / text)\n                        :op2 (ii / image)\n                        :op3 (a2 / audio)\n                        :op4 (v / video)))))']","[a, attr-instance, and, attr-op2, [p, attr-instance, possible_01, attr-arg1, [s, attr-instance, share_01, attr-arg0, [y, attr-instance, you], attr-arg1, [o, attr-instance, or, attr-op1, [t, attr-instance, text], attr-op2, [ii, attr-instance, image], attr-op3, [a2, attr-instance, audio], attr-op4, [v, attr-instance, video]]]]]"
2424,2424,2424,2424,2865,42416,social-media,Es gibt viele Social Media Angebote.,10_long,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=gibt 2:=viele 3:=Social 4:=Media 5:=Angebote.,1,,There are many social media offerings.,['# ::snt There are many social media offerings.\n(o / offer-01\n      :ARG1 (m / media\n            :mod (s / social))\n      :quant (m2 / many))'],"[o, attr-instance, offer_01, attr-arg1, [m, attr-instance, media, attr-mod, [s, attr-instance, social]], attr-quant, [m2, attr-instance, many]]"
2425,2425,2425,2425,2869,42420,social-media,Social Media sind Angebote im Internet.,0_short,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Social 1:=Media 2:=sind 3:=Angebote 4:=im 5:=Internet.,1,,Social media are offerings on the Internet.,['# ::snt Social media are offerings on the Internet.\n(o / offer-01\n      :ARG1 (m / media\n            :mod (s / social))\n      :location (ii / internet))'],"[o, attr-instance, offer_01, attr-arg1, [m, attr-instance, media, attr-mod, [s, attr-instance, social]], attr-location, [ii, attr-instance, internet]]"
2426,2426,2426,2426,2871,42423,social-media,Mit Social Media kann man sich austauschen.,3_short,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Mit 1:=Social 2:=Media 3:=kann 4:=man 5:=sich 6:=austauschen.,1,,Social media allows you to communicate.,['# ::snt Social media allows you to communicate.\n(a / allow-01\n      :ARG0 (m / media\n            :mod (s / social))\n      :ARG1 (c / communicate-01\n            :ARG0 (y / you)))'],"[a, attr-instance, allow_01, attr-arg0, [m, attr-instance, media, attr-mod, [s, attr-instance, social]], attr-arg1, [c, attr-instance, communicate_01, attr-arg0, [y, attr-instance, you]]]"
2427,2427,2427,2427,2872,42424,social-media,Und man kann gemeinsam mit anderen Benutzer Sachen machen.,4_short,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=man 2:=kann 3:=gemeinsam 4:=mit 5:=anderen 6:=Benutzer 7:=Sachen 8:=machen.,1,,And you can do things together with other users.,['# ::snt And you can do things together with other users.\n(a / and\n      :op2 (p / possible-01\n            :ARG1 (d / do-02\n                  :ARG0 (y / you)\n                  :ARG1 (t / thing)\n                  :accompanier (p2 / person\n                        :ARG0-of (u / use-01)\n                        :mod (o / other)))))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, possible_01, attr-arg1, [d, attr-instance, do_02, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing], attr-accompanier, [p2, attr-instance, person, attr-arg0_of, [u, attr-instance, use_01], attr-mod, [o, attr-instance, other]]]]]"
2428,2428,2428,2428,2873,42425,social-media,Zum Beispiel gemeinsam auf einer Internet-seite schreiben.,5_short,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zum 1:=Beispiel 2:=gemeinsam 3:=auf 4:=einer 5:=Internet-seite 6:=schreiben.,1,,"For example, writing together on a website.","['# ::snt For example, writing together on a website.\n(e / exemplify-01\n      :ARG0 (w / write-01\n            :manner (t / together)\n            :medium (w2 / website)))']","[e, attr-instance, exemplify_01, attr-arg0, [w, attr-instance, write_01, attr-manner, [t, attr-instance, together], attr-medium, [w2, attr-instance, website]]]"
2429,2429,2429,2429,2874,42426,social-media,Oder gemeinsam eine Demonstration planen.,6_short,Internet|Seiten_mit_defekten_Dateilinks,2017-04-06T06:33:10Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=gemeinsam 2:=eine 3:=Demonstration planen.,1,,Or plan a demonstration together.,['# ::snt Or plan a demonstration together.\n(o / or\n      :op2 (p / plan-01\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG1 (d / demonstrate-01\n                  :manner (t / together))))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, plan_01, attr-mode, imperative, attr-arg0, [y, attr-instance, you], attr-arg1, [d, attr-instance, demonstrate_01, attr-manner, [t, attr-instance, together]]]]"
2430,2430,2430,2430,2875,42427,sockenhalter,Socken-halter gibt es für Frauen.,0_long,Kleider|Seiten_mit_defekten_Dateilinks,2017-01-21T07:54:59Z,48f66906899cc4a9477b6c9e32ff4424,0:=Socken-halter 1:=gibt 2:=es 3:=für 4:=Frauen.,1,,Sock holders are available for women.,['# ::snt Sock holders are available for women.\n(a / available-02\n      :ARG1 (w / woman)\n      :ARG2 (h / hold-01\n            :ARG1 (s / sock)))'],"[a, attr-instance, available_02, attr-arg1, [w, attr-instance, woman], attr-arg2, [h, attr-instance, hold_01, attr-arg1, [s, attr-instance, sock]]]"
2431,2431,2431,2431,2876,42428,sockenhalter,Und es gibt sie für Männer.,1_long,Kleider|Seiten_mit_defekten_Dateilinks,2017-01-21T07:54:59Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=es 2:=gibt 3:=sie 4:=für 5:=Männer.,1,,And they are available for men.,['# ::snt And they are available for men.\n(a / and\n      :op2 (a2 / available-02\n            :ARG1 (m / man)\n            :ARG2 (t / they)))'],"[a, attr-instance, and, attr-op2, [a2, attr-instance, available_02, attr-arg1, [m, attr-instance, man], attr-arg2, [t, attr-instance, they]]]"
2432,2432,2432,2432,2877,42430,sockenhalter,Ein Socken-halter ist eine Hilfe.,3_long,Kleider|Seiten_mit_defekten_Dateilinks,2017-01-21T07:54:59Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Socken-halter 2:=ist 3:=eine 4:=Hilfe.,1,,A sock holder is a help.,['# ::snt A sock holder is a help.\n(h / help-01\n      :ARG0 (t / thing\n            :ARG0-of (h2 / hold-01\n                  :ARG1 (s / sock))))'],"[h, attr-instance, help_01, attr-arg0, [t, attr-instance, thing, attr-arg0_of, [h2, attr-instance, hold_01, attr-arg1, [s, attr-instance, sock]]]]"
2433,2433,2433,2433,2878,42431,sockenhalter,Socken-halter helfen gegen Hinunter-rutschen von Socken.,4_long,Kleider|Seiten_mit_defekten_Dateilinks,2017-01-21T07:54:59Z,48f66906899cc4a9477b6c9e32ff4424,0:=Socken-halter 1:=helfen 2:=gegen 3:=Hinunter-rutschen 4:=von 5:=Socken.,2,"[[0, 1, 2, 3], [4, 5]]",Sock holders help prevent socks from slipping down.,['# ::snt Sock holders help prevent socks from slipping down.\n(h / help-01\n      :ARG0 (p / person\n            :ARG0-of (h2 / hold-01\n                  :ARG1 (s / sock)))\n      :ARG1 (p2 / prevent-01\n            :ARG0 p\n            :ARG1 (s2 / slip-01\n                  :ARG1 (s3 / sock)\n                  :direction (d / down))))'],"[h, attr-instance, help_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, hold_01, attr-arg1, [s, attr-instance, sock]]], attr-arg1, [p2, attr-instance, prevent_01, attr-arg0, p, attr-arg1, [s2, attr-instance, slip_01, attr-arg1, [s3, attr-instance, sock], attr-direction, [d, attr-instance, down]]]]"
2434,2434,2434,2434,2879,42432,sockenhalter,Sie sind meistens aus Gummi.,5_long,Kleider|Seiten_mit_defekten_Dateilinks,2017-01-21T07:54:59Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=sind 2:=meistens 3:=aus 4:=Gummi.,1,,They are mostly made of rubber.,['# ::snt They are mostly made of rubber.\n(m / make-01\n      :ARG1 (t / they)\n      :ARG2 (r / rubber)\n      :mod (m2 / most))'],"[m, attr-instance, make_01, attr-arg1, [t, attr-instance, they], attr-arg2, [r, attr-instance, rubber], attr-mod, [m2, attr-instance, most]]"
2435,2435,2435,2435,2880,42433,sockenhalter,Zu den Socken-halter gehören auch Strapse.,6_long,Kleider|Seiten_mit_defekten_Dateilinks,2017-01-21T07:54:59Z,48f66906899cc4a9477b6c9e32ff4424,0:=Zu 1:=den 2:=Socken-halter 3:=gehören 4:=auch 5:=Strapse.,1,,The sock holders also include suspenders.,['# ::snt The sock holders also include suspenders.\n(ii / include-01\n      :ARG1 (s / suspender)\n      :ARG2 (p / person\n            :ARG0-of (h / hold-01\n                  :ARG1 (s2 / sock)))\n      :mod (a / also))'],"[ii, attr-instance, include_01, attr-arg1, [s, attr-instance, suspender], attr-arg2, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, hold_01, attr-arg1, [s2, attr-instance, sock]]], attr-mod, [a, attr-instance, also]]"
2436,2436,2436,2436,2881,42435,sockenhalter,An einem Sockenhalter kann man Strumpf fest-machen.,0_short,Kleider|Seiten_mit_defekten_Dateilinks,2017-01-21T07:54:59Z,48f66906899cc4a9477b6c9e32ff4424,0:=An 1:=einem 2:=Sockenhalter 3:=kann 4:=man 5:=Strumpf 6:=fest-machen.,1,,You can attach socks to a sock holder.,['# ::snt You can attach socks to a sock holder.\n(p / possible-01\n      :ARG1 (a / attach-01\n            :ARG0 (y / you)\n            :ARG1 (s / sock)\n            :ARG2 (t / thing\n                  :ARG0-of (h / hold-01\n                        :ARG1 (s2 / sock)))))'],"[p, attr-instance, possible_01, attr-arg1, [a, attr-instance, attach_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, sock], attr-arg2, [t, attr-instance, thing, attr-arg0_of, [h, attr-instance, hold_01, attr-arg1, [s2, attr-instance, sock]]]]]"
2437,2437,2437,2437,2882,42436,sockenhalter,"Ein Socken-halter ist dafür da, \newline damit die Socken nicht runter-rutschen.",1_short,Kleider|Seiten_mit_defekten_Dateilinks,2017-01-21T07:54:59Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Ein 1:=Socken-halter 2:=ist 3:=dafür 4:=da, 5:=\newline 6:=damit 7:=die 8:=Socken 9:=nicht 10:=runter-rutschen.",2,"[[1, 2, 3, 4], [6, 8, 9, 10]]",A sock holder is there to prevent the socks from slipping down.,['# ::snt A sock holder is there to prevent the socks from slipping down.\n(h / have-purpose-91\n      :ARG1 (b / be-located-at-91\n            :ARG1 (h2 / holder\n                  :mod (s / sock))\n            :ARG2 (t / there))\n      :ARG2 (p / prevent-01\n            :ARG0 h2\n            :ARG1 (s2 / slip-01\n                  :ARG1 (s3 / sock)\n                  :direction (d / down))))'],"[h, attr-instance, have_purpose_91, attr-arg1, [b, attr-instance, be_located_at_91, attr-arg1, [h2, attr-instance, holder, attr-mod, [s, attr-instance, sock]], attr-arg2, [t, attr-instance, there]], attr-arg2, [p, attr-instance, prevent_01, attr-arg0, h2, attr-arg1, [s2, attr-instance, slip_01, attr-arg1, [s3, attr-instance, sock], attr-direction, [d, attr-instance, down]]]]"
2438,2438,2438,2438,2883,42437,sockenklammer,Ein Socken-paar besteht aus 2 Socken.,0_long,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Socken-paar 2:=besteht 3:=aus 4:=2 5:=Socken.,1,,A pair of socks consists of 2 socks.,['# ::snt A pair of socks consists of 2 socks.\n(c / consist-01\n      :ARG1 (p / pair\n            :quant-of (s / sock))\n      :ARG2 (s2 / sock\n            :quant 2))'],"[c, attr-instance, consist_01, attr-arg1, [p, attr-instance, pair, attr-quant_of, [s, attr-instance, sock]], attr-arg2, [s2, attr-instance, sock, attr-quant, 2]]"
2439,2439,2439,2439,2884,42438,sockenklammer,Nach dem Waschen ist es schwierig die 2 Socken zu finden.,1_long,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Nach 1:=dem 2:=Waschen 3:=ist 4:=es 5:=schwierig 6:=die 7:=2 8:=Socken 9:=zu 10:=finden.,3,"[[0, 2], [3, 4, 5], [7, 8, 9, 10]]",After washing it is difficult to find the 2 socks.,['# ::snt After washing it is difficult to find the 2 socks.\n(d / difficult\n      :domain (f / find-01\n            :ARG1 (s / sock\n                  :quant 2))\n      :time (a / after\n            :op1 (w / wash-01)))'],"[d, attr-instance, difficult, attr-domain, [f, attr-instance, find_01, attr-arg1, [s, attr-instance, sock, attr-quant, 2]], attr-time, [a, attr-instance, after, attr-op1, [w, attr-instance, wash_01]]]"
2440,2440,2440,2440,2885,42439,sockenklammer,Und die 2 Socken zusammen zu machen.,2_long,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=die 2:=2 3:=Socken 4:=zusammen 5:=zu 6:=machen.,1,,And to make the 2 socks together.,['# ::snt And to make the 2 socks together.\n(a / and\n      :op2 (m / make-01\n            :ARG1 (s / sock\n                  :quant 2)\n            :manner (t / together)))'],"[a, attr-instance, and, attr-op2, [m, attr-instance, make_01, attr-arg1, [s, attr-instance, sock, attr-quant, 2], attr-manner, [t, attr-instance, together]]]"
2441,2441,2441,2441,2886,42440,sockenklammer,Mit einer Socken-klammer ist es leichter.,3_long,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Mit 1:=einer 2:=Socken-klammer 3:=ist 4:=es 5:=leichter.,1,,It's easier with a sock clip.,"[""# ::snt It's easier with a sock clip.\n(h / have-degree-91\n      :ARG1 (ii / it)\n      :ARG2 (e / easy-05)\n      :ARG3 (m / more)\n      :ARG4 (c / clip-01\n            :ARG1 (s / sock)))""]","[h, attr-instance, have_degree_91, attr-arg1, [ii, attr-instance, it], attr-arg2, [e, attr-instance, easy_05], attr-arg3, [m, attr-instance, more], attr-arg4, [c, attr-instance, clip_01, attr-arg1, [s, attr-instance, sock]]]"
2442,2442,2442,2442,2887,42441,sockenklammer,Die Socken-klammer hält 2 Socken zusammen.,4_long,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Die 1:=Socken-klammer 2:=hält 3:=2 4:=Socken 5:=zusammen.,1,,The sock clip holds 2 socks together.,['# ::snt The sock clip holds 2 socks together.\n(h / hold-01\n      :ARG0 (c / clip\n            :mod (s / sock))\n      :ARG1 (s2 / sock\n            :quant 2)\n      :mod (t / together))'],"[h, attr-instance, hold_01, attr-arg0, [c, attr-instance, clip, attr-mod, [s, attr-instance, sock]], attr-arg1, [s2, attr-instance, sock, attr-quant, 2], attr-mod, [t, attr-instance, together]]"
2443,2443,2443,2443,2888,42443,sockenklammer,Oder die Socken zusammen in den Trockner machen.,6_long,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Oder 1:=die 2:=Socken 3:=zusammen 4:=in 5:=den 6:=Trockner 7:=machen.,1,,Or put the socks in the dryer together.,['# ::snt Or put the socks in the dryer together.\n(o / or\n      :op2 (p / put-01\n            :ARG1 (s / sock)\n            :ARG2 (d / dryer)\n            :mod (t / together)))'],"[o, attr-instance, or, attr-op2, [p, attr-instance, put_01, attr-arg1, [s, attr-instance, sock], attr-arg2, [d, attr-instance, dryer], attr-mod, [t, attr-instance, together]]]"
2444,2444,2444,2444,2889,42444,sockenklammer,Ohne die 2 passenden Socken zu suchen.,7_long,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ohne 1:=die 2:=2 3:=passenden 4:=Socken 5:=zu 6:=suchen.,1,,Without having to look for the two matching socks.,['# ::snt Without having to look for the two matching socks.\n(o / obligate-01\n      :polarity -\n      :ARG2 (l / look-01\n            :ARG1 (s / sock\n                  :quant 2\n                  :ARG1-of (m / match-01))))'],"[o, attr-instance, obligate_01, attr-polarity, negative, attr-arg2, [l, attr-instance, look_01, attr-arg1, [s, attr-instance, sock, attr-quant, 2, attr-arg1_of, [m, attr-instance, match_01]]]]"
2445,2445,2445,2445,2890,42445,sockenklammer,Socken-klammern sind meistens aus Kunst-stoff.,8_long,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Socken-klammern 1:=sind 2:=meistens 3:=aus 4:=Kunst-stoff.,1,,Sock clips are usually made of plastic.,['# ::snt Sock clips are usually made of plastic.\n(m / make-01\n      :ARG1 (c / clip\n            :mod (s / sock))\n      :ARG2 (p / plastic)\n      :frequency (u / usual))'],"[m, attr-instance, make_01, attr-arg1, [c, attr-instance, clip, attr-mod, [s, attr-instance, sock]], attr-arg2, [p, attr-instance, plastic], attr-frequency, [u, attr-instance, usual]]"
2446,2446,2446,2446,2891,42446,sockenklammer,Eine Sockenklammer ist ein Hilfs-mittel.,0_short,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Sockenklammer 2:=ist 3:=ein 4:=Hilfs-mittel.,1,,A sock clip is an aid.,['# ::snt A sock clip is an aid.\n(a / aid-01\n      :ARG0 (c / clip\n            :mod (s / sock)))'],"[a, attr-instance, aid_01, attr-arg0, [c, attr-instance, clip, attr-mod, [s, attr-instance, sock]]]"
2447,2447,2447,2447,2892,42447,sockenklammer,Man kann damit Socken leichter sortieren.,1_short,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Man 1:=kann 2:=damit 3:=Socken 4:=leichter 5:=sortieren.,1,,It makes it easier to sort socks.,['# ::snt It makes it easier to sort socks.\n(m / make-02\n      :ARG0 (ii / it)\n      :ARG1 (h / have-degree-91\n            :ARG1 (s / sort-01\n                  :ARG1 (s2 / sock))\n            :ARG2 (e / easy-05\n                  :ARG1 s)\n            :ARG3 (m2 / more)))'],"[m, attr-instance, make_02, attr-arg0, [ii, attr-instance, it], attr-arg1, [h, attr-instance, have_degree_91, attr-arg1, [s, attr-instance, sort_01, attr-arg1, [s2, attr-instance, sock]], attr-arg2, [e, attr-instance, easy_05, attr-arg1, s], attr-arg3, [m2, attr-instance, more]]]"
2448,2448,2448,2448,2893,42448,sockenklammer,Und nach dem Waschen finden man leichter beide Socken.,2_short,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=nach 2:=dem 3:=Waschen 4:=finden 5:=man 6:=leichter 7:=beide 8:=Socken.,1,,"And after washing, it is easier to find both socks.","['# ::snt And after washing, it is easier to find both socks.\n(a / and\n      :op2 (h / have-degree-91\n            :ARG1 (f / find-01\n                  :ARG1 (s / sock\n                        :mod (b / both)))\n            :ARG2 (e / easy-05\n                  :ARG1 f)\n            :ARG3 (m / more)\n            :time (a2 / after\n                  :op1 (w / wash-01))))']","[a, attr-instance, and, attr-op2, [h, attr-instance, have_degree_91, attr-arg1, [f, attr-instance, find_01, attr-arg1, [s, attr-instance, sock, attr-mod, [b, attr-instance, both]]], attr-arg2, [e, attr-instance, easy_05, attr-arg1, f], attr-arg3, [m, attr-instance, more], attr-time, [a2, attr-instance, after, attr-op1, [w, attr-instance, wash_01]]]]"
2449,2449,2449,2449,2894,42449,sockenklammer,Eine Socken-klammer hält 2 Socken zusammen.,3_short,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=Socken-klammer 2:=hält 3:=2 4:=Socken 5:=zusammen.,1,,A sock clip holds two socks together.,['# ::snt A sock clip holds two socks together.\n(h / hold-01\n      :ARG0 (c / clip\n            :mod (s / sock))\n      :ARG1 (s2 / sock\n            :quant 2)\n      :ARG3 (t / together))'],"[h, attr-instance, hold_01, attr-arg0, [c, attr-instance, clip, attr-mod, [s, attr-instance, sock]], attr-arg1, [s2, attr-instance, sock, attr-quant, 2], attr-arg3, [t, attr-instance, together]]"
2450,2450,2450,2450,2895,42450,sockenklammer,Und sie hilft das man Socken schnell zusammen hat.,4_short,Kleider,2018-04-12T06:31:04Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=hilft 3:=das 4:=man 5:=Socken 6:=schnell 7:=zusammen 8:=hat.,1,,And it helps you put socks together quickly.,['# ::snt And it helps you put socks together quickly.\n(a / and\n      :op2 (h / help-01\n            :ARG0 (ii / it)\n            :ARG1 (p / put-01\n                  :ARG0 (y / you)\n                  :ARG1 (s / sock)\n                  :ARG2 (t / together)\n                  :ARG1-of (q / quick-02))\n            :ARG2 y))'],"[a, attr-instance, and, attr-op2, [h, attr-instance, help_01, attr-arg0, [ii, attr-instance, it], attr-arg1, [p, attr-instance, put_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, sock], attr-arg2, [t, attr-instance, together], attr-arg1_of, [q, attr-instance, quick_02]], attr-arg2, y]]"
2451,2451,2451,2451,2896,42451,sodbrennen,Der Arzt hat ein langes Fremdwort \newline für Sodbrennen: Reflux-ösophag-itis.,0_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,0:=Der 1:=Arzt 2:=hat 3:=ein 4:=langes 5:=Fremdwort 6:=\newline 7:=für 8:=Sodbrennen: 9:=Reflux-ösophag-itis.,3,"[[1, 2, 4, 5], [5, 7, 8], [9]]",The doctor has a long foreign word \newline for heartburn: reflux-esophag-itis.,"['# ::snt The doctor has a long foreign word \\newline for heartburn: reflux-esophag-itis.\n(h / have-03\n      :ARG0 (d / doctor)\n      :ARG1 (w / word\n            :mod (f / foreign)\n            :ARG1-of (l / long-03)\n            :topic (d2 / disease\n                  :name (n / name\n                        :op1 ""Reflux-esophag-itis""))\n            :ARG1-of (r / refer-01\n                  :ARG2 (h2 / heartburn))))']","[h, attr-instance, have_03, attr-arg0, [d, attr-instance, doctor], attr-arg1, [w, attr-instance, word, attr-mod, [f, attr-instance, foreign], attr-arg1_of, [l, attr-instance, long_03], attr-topic, [d2, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""reflux_esophag_itis""]], attr-arg1_of, [r, attr-instance, refer_01, attr-arg2, [h2, attr-instance, heartburn]]]]"
2452,2452,2452,2452,2897,42452,sodbrennen,Was heißt das?,1_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,0:=Was 1:=heißt 2:=das?,1,,What does that mean?,['# ::snt What does that mean?\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (a / amr-unknown))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [a, attr-instance, amr_unknown]]"
2453,2453,2453,2453,2898,42453,sodbrennen,"Reflux heißt, es fließt etwas zurück.",2_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,"0:=Reflux 1:=heißt, 2:=es 3:=fließt 4:=etwas 5:=zurück.",1,,Reflux means that something flows back.,['# ::snt Reflux means that something flows back.\n(m / mean-01\n      :ARG1 (l / lux)\n      :ARG2 (f / flow-01\n            :ARG1 (s / something)\n            :direction (b / back)))'],"[m, attr-instance, mean_01, attr-arg1, [l, attr-instance, lux], attr-arg2, [f, attr-instance, flow_01, attr-arg1, [s, attr-instance, something], attr-direction, [b, attr-instance, back]]]"
2454,2454,2454,2454,2899,42454,sodbrennen,Ösophagus ist die Speise-Röhre im Hals.,3_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,0:=Ösophagus 1:=ist 2:=die 3:=Speise-Röhre 4:=im 5:=Hals.,2,"[[3], [4, 5]]",Esophagus is the food tube in the throat.,['# ::snt Esophagus is the food tube in the throat.\n(t / tube\n      :mod (f / food)\n      :location (t2 / throat)\n      :domain (e / esophagus))'],"[t, attr-instance, tube, attr-mod, [f, attr-instance, food], attr-location, [t2, attr-instance, throat], attr-domain, [e, attr-instance, esophagus]]"
2455,2455,2455,2455,2900,42455,sodbrennen,Itis heißt Entzündung.,4_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,0:=Itis 1:=heißt 2:=Entzündung.,1,,Itis means inflammation.,['# ::snt Itis means inflammation.\n(m / mean-01\n      :ARG1 (ii / itis)\n      :ARG2 (ii2 / inflame-01))'],"[m, attr-instance, mean_01, attr-arg1, [ii, attr-instance, itis], attr-arg2, [ii2, attr-instance, inflame_01]]"
2456,2456,2456,2456,2901,42457,sodbrennen,Jeder Mensch hat Säure im Magen.,6_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,0:=Jeder 1:=Mensch 2:=hat 3:=Säure 4:=im 5:=Magen.,1,,Everyone has acid in their stomach.,['# ::snt Everyone has acid in their stomach.\n(h / have-03\n      :ARG0 (e / everyone)\n      :ARG1 (a / acid)\n      :location (s / stomach\n            :part-of e))'],"[h, attr-instance, have_03, attr-arg0, [e, attr-instance, everyone], attr-arg1, [a, attr-instance, acid], attr-location, [s, attr-instance, stomach, attr-part_of, e]]"
2457,2457,2457,2457,2902,42459,sodbrennen,"Damit macht der Magen das Essen klein, \newline damit der Darm es besser verdauen kann.",8_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,"0:=Damit 1:=macht 2:=der 3:=Magen 4:=das 5:=Essen 6:=klein, 7:=\newline 8:=damit 9:=der 10:=Darm 11:=es 12:=besser 13:=verdauen 14:=kann.",2,"[[0, 1, 3, 5, 6], [8, 10, 11, 12, 13, 14]]",This allows the stomach to break down the food into small pieces so that the intestines can digest it better.,['# ::snt This allows the stomach to break down the food into small pieces so that the intestines can digest it better.\n(a / allow-01\n      :ARG0 (t / this)\n      :ARG1 (b / break-down-27\n            :ARG0 (s / stomach)\n            :ARG1 (f / food)\n            :ARG2 (p / piece\n                  :mod (s2 / small))\n            :purpose (p2 / possible-01\n                  :ARG1 (d / digest-01\n                        :ARG0 (ii / intestine)\n                        :ARG1 f\n                        :ARG1-of (h / have-degree-91\n                              :ARG2 (g / good-02\n                                    :ARG1 d)\n                              :ARG3 (m / more))))))'],"[a, attr-instance, allow_01, attr-arg0, [t, attr-instance, this], attr-arg1, [b, attr-instance, break_down_27, attr-arg0, [s, attr-instance, stomach], attr-arg1, [f, attr-instance, food], attr-arg2, [p, attr-instance, piece, attr-mod, [s2, attr-instance, small]], attr-purpose, [p2, attr-instance, possible_01, attr-arg1, [d, attr-instance, digest_01, attr-arg0, [ii, attr-instance, intestine], attr-arg1, f, attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [g, attr-instance, good_02, attr-arg1, d], attr-arg3, [m, attr-instance, more]]]]]]"
2458,2458,2458,2458,2903,42460,sodbrennen,"Die Salzsäure soll im Magen bleiben, \newline denn nur der Magen hält das aus.",9_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,"0:=Die 1:=Salzsäure 2:=soll 3:=im 4:=Magen 5:=bleiben, 6:=\newline 7:=denn 8:=nur 9:=der 10:=Magen 11:=hält 12:=das 13:=aus.",2,"[[1, 2, 3, 4, 5], [7, 8, 10, 11, 12, 13]]","The hydrochloric acid should stay in the stomach, \newline because only the stomach can withstand it.","['# ::snt The hydrochloric acid should stay in the stomach, \\newline because only the stomach can withstand it.\n(r / recommend-01\n      :ARG1 (s / stay-01\n            :ARG1 (a / acid\n                  :mod (h / hydrochloric))\n            :location (s2 / stomach))\n      :ARG1-of (c / cause-01\n            :ARG0 (p / possible-01\n                  :ARG1 (w / withstand-01\n                        :ARG0 s2\n                        :ARG1 a\n                        :mod (o / only)))))']","[r, attr-instance, recommend_01, attr-arg1, [s, attr-instance, stay_01, attr-arg1, [a, attr-instance, acid, attr-mod, [h, attr-instance, hydrochloric]], attr-location, [s2, attr-instance, stomach]], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [w, attr-instance, withstand_01, attr-arg0, s2, attr-arg1, a, attr-mod, [o, attr-instance, only]]]]]"
2459,2459,2459,2459,2904,42461,sodbrennen,Aber manchmal kommt die Säure doch raus.,10_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,0:=Aber 1:=manchmal 2:=kommt 3:=die 4:=Säure 5:=doch 6:=raus.,1,,But sometimes the acid comes out.,['# ::snt But sometimes the acid comes out.\n(c / contrast-01\n      :ARG2 (c2 / come-out-09\n            :ARG1 (a / acid)\n            :frequency (s / sometimes)))'],"[c, attr-instance, contrast_01, attr-arg2, [c2, attr-instance, come_out_09, attr-arg1, [a, attr-instance, acid], attr-frequency, [s, attr-instance, sometimes]]]"
2460,2460,2460,2460,2906,42463,sodbrennen,"Zum Beispiel Weil man zuviel gegessen hat, \newline oder zuviel getrunken, \newline oder zuviel geraucht.",12_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,"0:=Zum 1:=Beispiel 2:=Weil 3:=man 4:=zuviel 5:=gegessen 6:=hat, 7:=\newline 8:=oder 9:=zuviel 10:=getrunken, 11:=\newline 12:=oder 13:=zuviel 14:=geraucht.",3,"[[4, 5], [9, 10], [13, 14]]","For example, because you ate too much, \newline or drank too much, \newline or smoked too much.","['# ::snt For example, because you ate too much, \\newline or drank too much, \\newline or smoked too much.\n(e / exemplify-01\n      :ARG0 (o / or\n            :op1 (e2 / eat-01\n                  :ARG0 (y / you)\n                  :ARG1-of (h / have-quant-91\n                        :ARG2 (m / much)\n                        :ARG3 (t / too)))\n            :op2 (d / drink-01\n                  :ARG0 y\n                  :ARG1 (t2 / thing\n                        :ARG1-of (h2 / have-quant-91\n                              :ARG2 (m2 / much)\n                              :ARG3 (t3 / too))))\n            :op3 (s / smoke-02\n                  :ARG0 y\n                  :ARG1-of (h3 / have-quant-91\n                        :ARG2 (m3 / much)\n                        :ARG3 (t4 / too)))\n            :op4 (q / quit-01\n                  :ARG0 y\n                  :ARG1 t2)))']","[e, attr-instance, exemplify_01, attr-arg0, [o, attr-instance, or, attr-op1, [e2, attr-instance, eat_01, attr-arg0, [y, attr-instance, you], attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg2, [m, attr-instance, much], attr-arg3, [t, attr-instance, too]]], attr-op2, [d, attr-instance, drink_01, attr-arg0, y, attr-arg1, [t2, attr-instance, thing, attr-arg1_of, [h2, attr-instance, have_quant_91, attr-arg2, [m2, attr-instance, much], attr-arg3, [t3, attr-instance, too]]]], attr-op3, [s, attr-instance, smoke_02, attr-arg0, y, attr-arg1_of, [h3, attr-instance, have_quant_91, attr-arg2, [m3, attr-instance, much], attr-arg3, [t4, attr-instance, too]]], attr-op4, [q, attr-instance, quit_01, attr-arg0, y, attr-arg1, t2]]]"
2461,2461,2461,2461,2907,42464,sodbrennen,"Manchmal aber auch, weil man krank ist.",13_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,"0:=Manchmal 1:=aber 2:=auch, 3:=weil 4:=man 5:=krank 6:=ist.",1,,But sometimes it's because you're sick.,"[""# ::snt But sometimes it's because you're sick.\n(c / contrast-01\n      :ARG2 (c2 / cause-01\n            :ARG0 (s / sick-05\n                  :ARG1 (y / you))\n            :ARG1 (ii / it)\n            :frequency (s2 / sometimes)))""]","[c, attr-instance, contrast_01, attr-arg2, [c2, attr-instance, cause_01, attr-arg0, [s, attr-instance, sick_05, attr-arg1, [y, attr-instance, you]], attr-arg1, [ii, attr-instance, it], attr-frequency, [s2, attr-instance, sometimes]]]"
2462,2462,2462,2462,2908,42465,sodbrennen,"Zum Beispiel wenn der Magen zuviel Säure macht, \newline oder wenn das Herz krank ist.",14_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,"0:=Zum 1:=Beispiel 2:=wenn 3:=der 4:=Magen 5:=zuviel 6:=Säure 7:=macht, 8:=\newline 9:=oder 10:=wenn 11:=das 12:=Herz 13:=krank 14:=ist.",2,"[[2, 4, 5, 6, 7], [10, 12, 13, 14]]","For example, if the stomach produces too much acid, \newline or if the heart is sick.","['# ::snt For example, if the stomach produces too much acid, \\newline or if the heart is sick.\n(e / exemplify-01\n      :ARG0 (o / or\n            :op1 (p / produce-01\n                  :ARG0 (s / stomach)\n                  :ARG1 (a / acid\n                        :ARG1-of (h / have-quant-91\n                              :ARG2 (m / much)\n                              :ARG3 (t / too))))\n            :op2 (p2 / produce-01\n                  :ARG0 s\n                  :ARG1 a)\n            :condition (s2 / sick-05\n                  :ARG1 (h2 / heart))))']","[e, attr-instance, exemplify_01, attr-arg0, [o, attr-instance, or, attr-op1, [p, attr-instance, produce_01, attr-arg0, [s, attr-instance, stomach], attr-arg1, [a, attr-instance, acid, attr-arg1_of, [h, attr-instance, have_quant_91, attr-arg2, [m, attr-instance, much], attr-arg3, [t, attr-instance, too]]]], attr-op2, [p2, attr-instance, produce_01, attr-arg0, s, attr-arg1, a], attr-condition, [s2, attr-instance, sick_05, attr-arg1, [h2, attr-instance, heart]]]]"
2463,2463,2463,2463,2910,42468,sodbrennen,"Der Arzt überlegt dann,  \newline warum man Sodbrennen hat, \newline und wird eine Medizin verschreiben (Rezept).",17_long,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,"0:=Der 1:=Arzt 2:=überlegt 3:=dann, 4:= 5:=\newline 6:=warum 7:=man 8:=Sodbrennen 9:=hat, 10:=\newline 11:=und 12:=wird 13:=eine 14:=Medizin 15:=verschreiben 16:=(Rezept).",4,"[[1, 2, 3], [6, 7, 8, 9], [12, 14, 15], [16]]",The doctor will then consider why you have heartburn and will prescribe medicine (prescription).,['# ::snt The doctor will then consider why you have heartburn and will prescribe medicine (prescription).\n(a / and\n      :op1 (c / consider-02\n            :ARG0 (d / doctor)\n            :ARG1 (t / thing\n                  :ARG0-of (c2 / cause-01\n                        :ARG1 (h / have-06\n                              :ARG0 (y / you)\n                              :ARG1 (h2 / heartburn)))))\n      :op2 (p / prescribe-02\n            :ARG0 d\n            :ARG1 (m / medicine)\n            :ARG1 m)\n      :time (t2 / then))'],"[a, attr-instance, and, attr-op1, [c, attr-instance, consider_02, attr-arg0, [d, attr-instance, doctor], attr-arg1, [t, attr-instance, thing, attr-arg0_of, [c2, attr-instance, cause_01, attr-arg1, [h, attr-instance, have_06, attr-arg0, [y, attr-instance, you], attr-arg1, [h2, attr-instance, heartburn]]]]], attr-op2, [p, attr-instance, prescribe_02, attr-arg0, d, attr-arg1, [m, attr-instance, medicine], attr-arg1, m], attr-time, [t2, attr-instance, then]]"
2464,2464,2464,2464,2911,42469,sodbrennen,"Sodbrennen ist, wenn Magensäure die Speise-Röhre hoch kommt.",0_short,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,"0:=Sodbrennen 1:=ist, 2:=wenn 3:=Magensäure 4:=die 5:=Speise-Röhre 6:=hoch 7:=kommt.",3,"[[0, 1], [2, 3, 5, 7], [6]]",Heartburn is when stomach acid comes up into the esophagus.,['# ::snt Heartburn is when stomach acid comes up into the esophagus.\n(h / heartburn\n      :time-of (c / come-up-13\n            :ARG1 (a / acid\n                  :mod (s / stomach))\n            :ARG2 (e / esophagus)))'],"[h, attr-instance, heartburn, attr-time_of, [c, attr-instance, come_up_13, attr-arg1, [a, attr-instance, acid, attr-mod, [s, attr-instance, stomach]], attr-arg2, [e, attr-instance, esophagus]]]"
2465,2465,2465,2465,2912,42470,sodbrennen,Das macht meistens Schmerzen.,1_short,Gesundheit,2009-07-13T17:40:11Z,4a7c0bf975893985e2e36604fef9654f,0:=Das 1:=macht 2:=meistens 3:=Schmerzen.,1,,This usually causes pain.,['# ::snt This usually causes pain.\n(c / cause-01\n      :ARG0 (t / this)\n      :ARG1 (p / pain-01)\n      :mod (u / usual))'],"[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, this], attr-arg1, [p, attr-instance, pain_01], attr-mod, [u, attr-instance, usual]]"
2466,2466,2466,2466,2913,42471,software,Software  macht verschiedene Sachen auf einem Gerät.,0_short,Computer|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2012-09-13T07:56:43Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Software 1:= 2:=macht 3:=verschiedene 4:=Sachen 5:=auf 6:=einem 7:=Gerät.,1,,Software does different things on a device.,['# ::snt Software does different things on a device.\n(d / do-02\n      :ARG0 (s / software)\n      :ARG1 (t / thing\n            :ARG1-of (d2 / differ-02))\n      :location (d3 / device))'],"[d, attr-instance, do_02, attr-arg0, [s, attr-instance, software], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [d2, attr-instance, differ_02]], attr-location, [d3, attr-instance, device]]"
2467,2467,2467,2467,2915,42473,software,Software sagt dem Gerät was es machen muss.,2_short,Computer|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2012-09-13T07:56:43Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Software 1:=sagt 2:=dem 3:=Gerät 4:=was 5:=es 6:=machen 7:=muss.,2,"[[0, 1, 3], [4, 5, 6, 7]]",Software tells the device what to do.,['# ::snt Software tells the device what to do.\n(t / tell-01\n      :ARG0 (s / software)\n      :ARG1 (d / do-02\n            :ARG0 (d2 / device)\n            :ARG1 (t2 / thing))\n      :ARG2 d2)'],"[t, attr-instance, tell_01, attr-arg0, [s, attr-instance, software], attr-arg1, [d, attr-instance, do_02, attr-arg0, [d2, attr-instance, device], attr-arg1, [t2, attr-instance, thing]], attr-arg2, d2]"
2468,2468,2468,2468,2916,42474,software,Zum Beispiel ein Bild speichern oder etwas ausrechnen.,3_short,Computer|Hurraki:Überarbeiten|Seiten_mit_defekten_Dateilinks,2012-09-13T07:56:43Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Zum 1:=Beispiel 2:=ein 3:=Bild 4:=speichern 5:=oder 6:=etwas 7:=ausrechnen.,2,"[[3, 4], [6, 7]]","For example, saving an image or calculating something.","['# ::snt For example, saving an image or calculating something.\n(e / exemplify-01\n      :ARG0 (o / or\n            :op1 (s / save-02\n                  :ARG1 (ii / image))\n            :op2 (c / calculate-01\n                  :ARG1 (s2 / something))))']","[e, attr-instance, exemplify_01, attr-arg0, [o, attr-instance, or, attr-op1, [s, attr-instance, save_02, attr-arg1, [ii, attr-instance, image]], attr-op2, [c, attr-instance, calculate_01, attr-arg1, [s2, attr-instance, something]]]]"
2469,2469,2469,2469,2917,42475,solander-box,Eine Solander-Box ist aus Holz oder Pappe.,0_long,Ohne_Kategorie,2014-05-06T15:05:38Z,af28a20dfb151690981ee13d72ce655c,0:=Eine 1:=Solander-Box 2:=ist 3:=aus 4:=Holz 5:=oder 6:=Pappe.,2,"[[4], [5]]",A Solander box is made of wood or cardboard.,"['# ::snt A Solander box is made of wood or cardboard.\n(m / make-01\n      :ARG1 (b / box\n            :mod (c / company\n                  :name (n / name\n                        :op1 ""Solander"")))\n      :ARG2 (o / or\n            :op1 (w / wood)\n            :op2 (c2 / cardboard)))']","[m, attr-instance, make_01, attr-arg1, [b, attr-instance, box, attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""solander""]]], attr-arg2, [o, attr-instance, or, attr-op1, [w, attr-instance, wood], attr-op2, [c2, attr-instance, cardboard]]]"
2470,2470,2470,2470,2918,42476,solander-box,Sie wird oft in Büchereien oder Museen benutzt.,1_long,Ohne_Kategorie,2014-05-06T15:05:38Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=wird 2:=oft 3:=in 4:=Büchereien 5:=oder 6:=Museen 7:=benutzt.,2,"[[4], [6]]",It is often used in libraries or museums.,['# ::snt It is often used in libraries or museums.\n(u / use-01\n      :ARG1 (ii / it)\n      :location (o / or\n            :op1 (l / library)\n            :op2 (m / museum))\n      :frequency (o2 / often))'],"[u, attr-instance, use_01, attr-arg1, [ii, attr-instance, it], attr-location, [o, attr-instance, or, attr-op1, [l, attr-instance, library], attr-op2, [m, attr-instance, museum]], attr-frequency, [o2, attr-instance, often]]"
2471,2471,2471,2471,2919,42477,solander-box,Mit einer Solander-Box werden Sachen sortiert und auf-bewahrt.,2_long,Ohne_Kategorie,2014-05-06T15:05:38Z,af28a20dfb151690981ee13d72ce655c,0:=Mit 1:=einer 2:=Solander-Box 3:=werden 4:=Sachen 5:=sortiert 6:=und 7:=auf-bewahrt.,2,"[[5], [7]]",A Solander box is used to sort and store things.,"['# ::snt A Solander box is used to sort and store things.\n(u / use-01\n      :ARG1 (b / box\n            :mod (c / company\n                  :name (n / name\n                        :op1 ""Solander"")))\n      :ARG2 (a / and\n            :op1 (s / sort-01\n                  :ARG1 (t / thing))\n            :op2 (s2 / store-01\n                  :ARG1 t)))']","[u, attr-instance, use_01, attr-arg1, [b, attr-instance, box, attr-mod, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""solander""]]], attr-arg2, [a, attr-instance, and, attr-op1, [s, attr-instance, sort_01, attr-arg1, [t, attr-instance, thing]], attr-op2, [s2, attr-instance, store_01, attr-arg1, t]]]"
2472,2472,2472,2472,2920,42478,solander-box,Damit man sie später besser findet.,3_long,Ohne_Kategorie,2014-05-06T15:05:38Z,af28a20dfb151690981ee13d72ce655c,0:=Damit 1:=man 2:=sie 3:=später 4:=besser 5:=findet.,1,,So that you can find them more easily later.,['# ::snt So that you can find them more easily later.\n(c / cause-01\n      :ARG1 (p / possible-01\n            :ARG1 (f / find-01\n                  :ARG0 (y / you)\n                  :ARG1 (t / they)\n                  :time (a / after)\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (e / easy-05\n                              :ARG1 f)\n                        :ARG3 (m / more)))))'],"[c, attr-instance, cause_01, attr-arg1, [p, attr-instance, possible_01, attr-arg1, [f, attr-instance, find_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, they], attr-time, [a, attr-instance, after], attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [e, attr-instance, easy_05, attr-arg1, f], attr-arg3, [m, attr-instance, more]]]]]"
2473,2473,2473,2473,2921,42479,solander-box,Erfunden wurde die Solander-Box von: • Daniel Solander,4_long,Ohne_Kategorie,2014-05-06T15:05:38Z,af28a20dfb151690981ee13d72ce655c,0:=Erfunden 1:=wurde 2:=die 3:=Solander-Box 4:=von: 5:=• 6:=Daniel 7:=Solander,1,,The Solander Box was invented by: • Daniel Solander,"['# ::snt The Solander Box was invented by: • Daniel Solander\n(ii / invent-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Daniel""\n                  :op2 ""Solander""))\n      :ARG1 (b / box\n            :name (n2 / name\n                  :op1 ""Solander"")))']","[ii, attr-instance, invent_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""daniel"", attr-op2, ""solander""]], attr-arg1, [b, attr-instance, box, attr-name, [n2, attr-instance, name, attr-op1, ""solander""]]]"
2474,2474,2474,2474,2922,42480,solander-box,Eine Solander-Box ist eine Schachtel.,0_short,Ohne_Kategorie,2014-05-06T15:05:38Z,af28a20dfb151690981ee13d72ce655c,0:=Eine 1:=Solander-Box 2:=ist 3:=eine 4:=Schachtel.,1,,A Solander box is a box.,"['# ::snt A Solander box is a box.\n(b / box\n      :domain (b2 / box\n            :poss (c / company\n                  :name (n / name\n                        :op1 ""Solander""))))']","[b, attr-instance, box, attr-domain, [b2, attr-instance, box, attr-poss, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""solander""]]]]"
2475,2475,2475,2475,2923,42482,soldat-auf-zeit,"Ein Soldat, der immer bei der Armee bleiben will ist ein Berufssoldat.",0_long,Beruf|Militär,2014-01-31T06:51:10Z,6275ee07d0785a2da491fbb224064f23,"0:=Ein 1:=Soldat, 2:=der 3:=immer 4:=bei 5:=der 6:=Armee 7:=bleiben 8:=will 9:=ist 10:=ein 11:=Berufssoldat.",2,"[[1, 9, 11], [2, 3, 4, 6, 7, 8]]",A soldier who always wants to stay in the army is a professional soldier.,['# ::snt A soldier who always wants to stay in the army is a professional soldier.\n(s / soldier\n      :mod (p / professional)\n      :domain (s2 / soldier\n            :ARG0-of (w / want-01\n                  :ARG1 (s3 / stay-01\n                        :ARG1 s2\n                        :ARG3 (h / have-org-role-91\n                              :ARG0 s2\n                              :ARG1 (a / army)))\n                  :time (a2 / always))))'],"[s, attr-instance, soldier, attr-mod, [p, attr-instance, professional], attr-domain, [s2, attr-instance, soldier, attr-arg0_of, [w, attr-instance, want_01, attr-arg1, [s3, attr-instance, stay_01, attr-arg1, s2, attr-arg3, [h, attr-instance, have_org_role_91, attr-arg0, s2, attr-arg1, [a, attr-instance, army]]], attr-time, [a2, attr-instance, always]]]]"
2476,2476,2476,2476,2924,42483,soldat-auf-zeit,"Ein Soldat auf Zeit ist ein Soldat, \newline der für eine bestimmte Zeit bei der Armee bleiben will.",0_short,Beruf|Militär,2014-01-31T06:51:10Z,6275ee07d0785a2da491fbb224064f23,"0:=Ein 1:=Soldat 2:=auf 3:=Zeit 4:=ist 5:=ein 6:=Soldat, 7:=\newline 8:=der 9:=für 10:=eine 11:=bestimmte 12:=Zeit 13:=bei 14:=der 15:=Armee 16:=bleiben 17:=will.",3,"[[1, 2, 3, 4, 6], [8, 13, 15, 16, 17], [9, 11, 12]]",A temporary soldier is a soldier who wishes to remain in the army for a specific period of time.,"['# ::snt A temporary soldier is a soldier who wishes to remain in the army for a specific period of time.\n(s / soldier\n      :domain (s2 / soldier\n            :duration (t / temporary))\n      :ARG0-of (w / wish-01\n            :ARG1 (r / remain-01\n                  :ARG1 s2\n                  :ARG3 (m / military\n                        :name (n / name\n                              :op1 ""Army""))\n                  :duration (p / period\n                        :ARG1-of (s3 / specific-02)\n                        :mod (t2 / time)))))']","[s, attr-instance, soldier, attr-domain, [s2, attr-instance, soldier, attr-duration, [t, attr-instance, temporary]], attr-arg0_of, [w, attr-instance, wish_01, attr-arg1, [r, attr-instance, remain_01, attr-arg1, s2, attr-arg3, [m, attr-instance, military, attr-name, [n, attr-instance, name, attr-op1, ""army""]], attr-duration, [p, attr-instance, period, attr-arg1_of, [s3, attr-instance, specific_02], attr-mod, [t2, attr-instance, time]]]]]"
2477,2477,2477,2477,2926,42485,soldat,Ein Soldat kann ein Mann oder eine Frau sein.,0_long,Hurraki:Überarbeiten|Personen|Beruf|Bundeswehr,2010-03-12T11:26:02Z,f9b0bd285ddc0c9ffae07d47947d7844,0:=Ein 1:=Soldat 2:=kann 3:=ein 4:=Mann 5:=oder 6:=eine 7:=Frau 8:=sein.,2,"[[4], [7]]",A soldier can be a man or a woman.,['# ::snt A soldier can be a man or a woman.\n(p / possible-01\n      :ARG1 (o / or\n            :op1 (m / man)\n            :op2 (w / woman)\n            :domain (s / soldier)))'],"[p, attr-instance, possible_01, attr-arg1, [o, attr-instance, or, attr-op1, [m, attr-instance, man], attr-op2, [w, attr-instance, woman], attr-domain, [s, attr-instance, soldier]]]"
2478,2478,2478,2478,2927,42486,soldat,Frauen werden Soldatin genannt.,1_long,Hurraki:Überarbeiten|Personen|Beruf|Bundeswehr,2010-03-12T11:26:02Z,f9b0bd285ddc0c9ffae07d47947d7844,0:=Frauen 1:=werden 2:=Soldatin 3:=genannt.,1,,Women are called soldiers.,['# ::snt Women are called soldiers.\n(c / call-01\n      :ARG1 (w / woman)\n      :ARG2 (s / soldier))'],"[c, attr-instance, call_01, attr-arg1, [w, attr-instance, woman], attr-arg2, [s, attr-instance, soldier]]"
2479,2479,2479,2479,2928,42487,soldat,Soldaten beschützen die Menschen in ihrem Land.,2_long,Hurraki:Überarbeiten|Personen|Beruf|Bundeswehr,2010-03-12T11:26:02Z,f9b0bd285ddc0c9ffae07d47947d7844,0:=Soldaten 1:=beschützen 2:=die 3:=Menschen 4:=in 5:=ihrem 6:=Land.,2,"[[0, 1, 3], [4, 5, 6]]",Soldiers protect the people in their country.,['# ::snt Soldiers protect the people in their country.\n(p / protect-01\n      :ARG0 (s / soldier)\n      :ARG1 (p2 / person\n            :location (c / country\n                  :poss s)))'],"[p, attr-instance, protect_01, attr-arg0, [s, attr-instance, soldier], attr-arg1, [p2, attr-instance, person, attr-location, [c, attr-instance, country, attr-poss, s]]]"
2480,2480,2480,2480,2929,42488,soldat,Soldaten dürfen Waffen benutzen.,3_long,Hurraki:Überarbeiten|Personen|Beruf|Bundeswehr,2010-03-12T11:26:02Z,f9b0bd285ddc0c9ffae07d47947d7844,0:=Soldaten 1:=dürfen 2:=Waffen 3:=benutzen.,1,,Soldiers are allowed to use weapons.,['# ::snt Soldiers are allowed to use weapons.\n(a / allow-01\n      :ARG1 (u / use-01\n            :ARG0 (s / soldier)\n            :ARG1 (w / weapon)))'],"[a, attr-instance, allow_01, attr-arg1, [u, attr-instance, use_01, attr-arg0, [s, attr-instance, soldier], attr-arg1, [w, attr-instance, weapon]]]"
2481,2481,2481,2481,2930,42489,soldat,Deutsche Soldaten müssen auch im Ausland kämpfen.,4_long,Hurraki:Überarbeiten|Personen|Beruf|Bundeswehr,2010-03-12T11:26:02Z,f9b0bd285ddc0c9ffae07d47947d7844,0:=Deutsche 1:=Soldaten 2:=müssen 3:=auch 4:=im 5:=Ausland 6:=kämpfen.,1,,German soldiers also have to fight abroad.,"['# ::snt German soldiers also have to fight abroad.\n(o / obligate-01\n      :ARG2 (f / fight-01\n            :ARG0 (s / soldier\n                  :mod (c / country\n                        :name (n / name\n                              :op1 ""Germany"")))\n            :location (a / abroad))\n      :mod (a2 / also))']","[o, attr-instance, obligate_01, attr-arg2, [f, attr-instance, fight_01, attr-arg0, [s, attr-instance, soldier, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]], attr-location, [a, attr-instance, abroad]], attr-mod, [a2, attr-instance, also]]"
2482,2482,2482,2482,2931,42490,soldat,Ein Soldat ist eine Person.,0_short,Hurraki:Überarbeiten|Personen|Beruf|Bundeswehr,2010-03-12T11:26:02Z,f9b0bd285ddc0c9ffae07d47947d7844,0:=Ein 1:=Soldat 2:=ist 3:=eine 4:=Person.,1,,A soldier is a person.,['# ::snt A soldier is a person.\n(p / person\n      :domain (s / soldier))'],"[p, attr-instance, person, attr-domain, [s, attr-instance, soldier]]"
2483,2483,2483,2483,2932,42491,soldat,"Ein Soldat arbeitet für eine Armee,  \newline oder für das Militär",1_short,Hurraki:Überarbeiten|Personen|Beruf|Bundeswehr,2010-03-12T11:26:02Z,f9b0bd285ddc0c9ffae07d47947d7844,"0:=Ein 1:=Soldat 2:=arbeitet 3:=für 4:=eine 5:=Armee, 6:= 7:=\newline 8:=oder 9:=für 10:=das 11:=Militär",2,"[[3, 5], [9, 11]]","A soldier works for an army, \newline or for the military","['# ::snt A soldier works for an army, \\newline or for the military\n(w / work-01\n      :ARG0 (s / soldier)\n      :ARG2 (o / or\n            :op1 (a / army)\n            :op2 (l / line\n                  :mod (n / newline))\n            :op3 (m / military)))']","[w, attr-instance, work_01, attr-arg0, [s, attr-instance, soldier], attr-arg2, [o, attr-instance, or, attr-op1, [a, attr-instance, army], attr-op2, [l, attr-instance, line, attr-mod, [n, attr-instance, newline]], attr-op3, [m, attr-instance, military]]]"
2484,2484,2484,2484,2933,42492,soldner,Der Chef von einer Söldner-gruppe ist der Söldner-führer.,0_long,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Der 1:=Chef 2:=von 3:=einer 4:=Söldner-gruppe 5:=ist 6:=der 7:=Söldner-führer.,1,,The boss of a mercenary group is the mercenary leader.,['# ::snt The boss of a mercenary group is the mercenary leader.\n(p / person\n      :ARG0-of (l / lead-02\n            :ARG1 (m / mercenary))\n      :domain (p2 / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (g / group\n                        :mod (m2 / mercenary))\n                  :ARG2 (b / boss))))'],"[p, attr-instance, person, attr-arg0_of, [l, attr-instance, lead_02, attr-arg1, [m, attr-instance, mercenary]], attr-domain, [p2, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg1, [g, attr-instance, group, attr-mod, [m2, attr-instance, mercenary]], attr-arg2, [b, attr-instance, boss]]]]"
2485,2485,2485,2485,2934,42493,soldner,Söldner kämpfen für fremde Länder.,1_long,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Söldner 1:=kämpfen 2:=für 3:=fremde 4:=Länder.,1,,Mercenaries fight for foreign countries.,['# ::snt Mercenaries fight for foreign countries.\n(f / fight-01\n      :ARG0 (m / mercenary)\n      :ARG2 (c / country\n            :mod (f2 / foreign)))'],"[f, attr-instance, fight_01, attr-arg0, [m, attr-instance, mercenary], attr-arg2, [c, attr-instance, country, attr-mod, [f2, attr-instance, foreign]]]"
2486,2486,2486,2486,2935,42494,soldner,Sie kämpfen für Geld.,2_long,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=kämpfen 2:=für 3:=Geld.,1,,They fight for money.,['# ::snt They fight for money.\n(f / fight-01\n      :ARG0 (t / they)\n      :ARG2 (m / money))'],"[f, attr-instance, fight_01, attr-arg0, [t, attr-instance, they], attr-arg2, [m, attr-instance, money]]"
2487,2487,2487,2487,2936,42495,soldner,Geld ist sehr wichtig für Söldner.,3_long,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Geld 1:=ist 2:=sehr 3:=wichtig 4:=für 5:=Söldner.,1,,Money is very important for mercenaries.,['# ::snt Money is very important for mercenaries.\n(ii / important-01\n      :ARG1 (m / money)\n      :ARG2 (m2 / mercenary)\n      :degree (v / very))'],"[ii, attr-instance, important_01, attr-arg1, [m, attr-instance, money], attr-arg2, [m2, attr-instance, mercenary], attr-degree, [v, attr-instance, very]]"
2488,2488,2488,2488,2937,42496,soldner,Sie arbeiten nicht bei einer Streit-kraft.,4_long,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Sie 1:=arbeiten 2:=nicht 3:=bei 4:=einer 5:=Streit-kraft.,1,,You do not work for an armed force.,['# ::snt You do not work for an armed force.\n(w / work-01\n      :polarity -\n      :ARG0 (y / you)\n      :ARG2 (f / force\n            :ARG1-of (a / arm-01)))'],"[w, attr-instance, work_01, attr-polarity, negative, attr-arg0, [y, attr-instance, you], attr-arg2, [f, attr-instance, force, attr-arg1_of, [a, attr-instance, arm_01]]]"
2489,2489,2489,2489,2938,42497,soldner,"Sie arbeiten für jeden, der sie be-zahlt.",5_long,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Sie 1:=arbeiten 2:=für 3:=jeden, 4:=der 5:=sie 6:=be-zahlt.",2,"[[0, 1, 2, 3], [4, 5, 6]]",They work for anyone who pays them.,['# ::snt They work for anyone who pays them.\n(w / work-01\n      :ARG0 (t / they)\n      :ARG2 (a / anyone\n            :ARG0-of (p / pay-01\n                  :ARG2 t)))'],"[w, attr-instance, work_01, attr-arg0, [t, attr-instance, they], attr-arg2, [a, attr-instance, anyone, attr-arg0_of, [p, attr-instance, pay_01, attr-arg2, t]]]"
2490,2490,2490,2490,2939,42498,soldner,Söldner sind nicht völkerrechtlich geschützt.,6_long,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Söldner 1:=sind 2:=nicht 3:=völkerrechtlich 4:=geschützt.,2,"[[0, 1, 2, 4], [3]]",Mercenaries are not protected under international law.,['# ::snt Mercenaries are not protected under international law.\n(p / protect-01\n      :polarity -\n      :ARG0 (l / law\n            :mod (ii / international))\n      :ARG1 (m / mercenary))'],"[p, attr-instance, protect_01, attr-polarity, negative, attr-arg0, [l, attr-instance, law, attr-mod, [ii, attr-instance, international]], attr-arg1, [m, attr-instance, mercenary]]"
2491,2491,2491,2491,2940,42499,soldner,Ein Söldner ist ein Soldat.,0_short,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Söldner 2:=ist 3:=ein 4:=Soldat.,1,,A mercenary is a soldier.,['# ::snt A mercenary is a soldier.\n(s / soldier\n      :domain (m / mercenary))'],"[s, attr-instance, soldier, attr-domain, [m, attr-instance, mercenary]]"
2492,2492,2492,2492,2941,42500,soldner,Söldner kämpfen in einem fremden Land.,1_short,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Söldner 1:=kämpfen 2:=in 3:=einem 4:=fremden 5:=Land.,1,,Mercenaries fight in a foreign land.,['# ::snt Mercenaries fight in a foreign land.\n(f / fight-01\n      :ARG0 (m / mercenary)\n      :location (l / land\n            :mod (f2 / foreign)))'],"[f, attr-instance, fight_01, attr-arg0, [m, attr-instance, mercenary], attr-location, [l, attr-instance, land, attr-mod, [f2, attr-instance, foreign]]]"
2493,2493,2493,2493,2942,42501,soldner,Weil sie dafür be-zahlt werden.,2_short,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Weil 1:=sie 2:=dafür 3:=be-zahlt 4:=werden.,1,,Because they get paid for it.,['# ::snt Because they get paid for it.\n(c / cause-01\n      :ARG0 (p / pay-01\n            :ARG2 (t / they)\n            :ARG3 (ii / it)))'],"[c, attr-instance, cause_01, attr-arg0, [p, attr-instance, pay_01, attr-arg2, [t, attr-instance, they], attr-arg3, [ii, attr-instance, it]]]"
2494,2494,2494,2494,2943,42503,soldner,Söldner machen es wegen dem Geld.,4_short,Beruf|Seiten_mit_defekten_Dateilinks,2023-07-13T06:01:47Z,48f66906899cc4a9477b6c9e32ff4424,0:=Söldner 1:=machen 2:=es 3:=wegen 4:=dem 5:=Geld.,1,,Mercenaries do it for the money.,['# ::snt Mercenaries do it for the money.\n(d / do-02\n      :ARG0 (m / mercenary)\n      :ARG1 (ii / it)\n      :ARG2 (m2 / money))'],"[d, attr-instance, do_02, attr-arg0, [m, attr-instance, mercenary], attr-arg1, [ii, attr-instance, it], attr-arg2, [m2, attr-instance, money]]"
2495,2495,2495,2495,2944,5035,berlin-blockade,Diese Flugzeuge transportierten Nahrung und Brenn-material.,21_long,Politik|Seiten_mit_defekten_Dateilinks,2016-01-24T11:51:34Z,a87abd4ebcc677b326b5b117860e863b,0:=Diese 1:=Flugzeuge 2:=transportierten 3:=Nahrung 4:=und 5:=Brenn-material.,2,"[[3],[5]]",These planes transported food and fuel.,['# ::snt These planes transported food and fuel.\n(t / transport-01\n      :ARG0 (p / plane\n            :mod (t2 / this))\n      :ARG1 (a / and\n            :op1 (f / food)\n            :op2 (f2 / fuel)))'],"[t, attr-instance, transport_01, attr-arg0, [p, attr-instance, plane, attr-mod, [t2, attr-instance, this]], attr-arg1, [a, attr-instance, and, attr-op1, [f, attr-instance, food], attr-op2, [f2, attr-instance, fuel]]]"
2496,2496,2496,2496,2945,5064,berliner-fernsehturm,Man kann mit einem Fahr-stuhl nach oben fahren.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-07-15T18:02:33Z,af7adc773949650e35f6f40ea06c535c,0:=Man 1:=kann 2:=mit 3:=einem 4:=Fahr-stuhl 5:=nach 6:=oben 7:=fahren.,2,"[[2,4],[5,6]] ",You can go up in an elevator.,['# ::snt You can go up in an elevator.\n(p / possible-01\n      :ARG1 (g / go-02\n            :ARG0 (y / you)\n            :ARG4 (u / up)\n            :location (e / elevator)))'],"[p, attr-instance, possible_01, attr-arg1, [g, attr-instance, go_02, attr-arg0, [y, attr-instance, you], attr-arg4, [u, attr-instance, up], attr-location, [e, attr-instance, elevator]]]"
2497,2497,2497,2497,2946,1049,alex-honnold,Alex Honnold ist ein bekannter Free Solo Kletterer.,0_short,Sport|Personen|Seiten_mit_defekten_Dateilinks,2021-07-16T21:06:31Z,e54ca469914bc262b958dc327fbe1253,0:=Alex 1:=Honnold 2:=ist 3:=ein 4:=bekannter 5:=Free 6:=Solo 7:=Kletterer.,2,"[[4],[5,6,7]]",Alex Honnold is a well-known free solo climber.,"['# ::snt Alex Honnold is a well-known free solo climber.\n(k / know-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Alex""\n                  :op2 ""Honnold"")\n            :ARG0-of (c / climb-01\n                  :manner (s / solo)\n                  :ARG1-of (f / free-04)))\n      :degree (w / well))']","[k, attr-instance, know_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alex"", attr-op2, ""honnold""], attr-arg0_of, [c, attr-instance, climb_01, attr-manner, [s, attr-instance, solo], attr-arg1_of, [f, attr-instance, free_04]]], attr-degree, [w, attr-instance, well]]"
2498,2498,2498,2498,2947,1024,aleppo,"Und neue, moderne Wohn-blöcke gebaut.",11_long,Städte|Seiten_mit_defekten_Dateilinks,2016-09-26T14:57:00Z,7b5adf57ed2178795004f4c052333f37,"0:=Und 1:=neue, 2:=moderne 3:=Wohn-blöcke 4:=gebaut.",2,"[[1],[2]]","And new, modern apartment blocks were built.","['# ::snt And new, modern apartment blocks were built.\n(a / and\n      :op2 (b / build-01\n            :ARG1 (b2 / block\n                  :mod (a2 / apartment)\n                  :ARG1-of (n / new-01)\n                  :ARG1-of (m / modern-02))))']","[a, attr-instance, and, attr-op2, [b, attr-instance, build_01, attr-arg1, [b2, attr-instance, block, attr-mod, [a2, attr-instance, apartment], attr-arg1_of, [n, attr-instance, new_01], attr-arg1_of, [m, attr-instance, modern_02]]]]"
2499,2499,2499,2499,2948,5049,berliner-erklarung-alliierte,Die Siegermächte regierten ab sofort in ihrer eigenen Zone.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2015-12-16T18:40:15Z,3d503e53a51c622cb86f9b0570441d1d,0:=Die 1:=Siegermächte 2:=regierten 3:=ab 4:=sofort 5:=in 6:=ihrer 7:=eigenen 8:=Zone.,2,"[[3,4],[5,6,7,8]] ","From now on, the victorious powers ruled in their own zone.","['# ::snt From now on, the victorious powers ruled in their own zone.\n(r / rule-03\n      :ARG0 (p / power\n            :ARG0-of (w / win-01))\n      :location (z / zone\n            :poss p)\n      :time (f / from\n            :op1 (n / now)))']","[r, attr-instance, rule_03, attr-arg0, [p, attr-instance, power, attr-arg0_of, [w, attr-instance, win_01]], attr-location, [z, attr-instance, zone, attr-poss, p], attr-time, [f, attr-instance, from, attr-op1, [n, attr-instance, now]]]"
2500,2500,2500,2500,2949,38789,repair-cafe,"Sie treffen sich,  \newline um gemeinsam kaputte Dinge zu reparieren.",1_short,Umwelt|Entsorgung,2013-08-06T10:39:17Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Sie 1:=treffen 2:=sich, 3:= 4:=\newline 5:=um 6:=gemeinsam 7:=kaputte 8:=Dinge 9:=zu 10:=reparieren.",3,"[[0,1,2],[7,8,9,10],[6]]",They meet \newline to repair broken things together.,"['# ::snt They meet \\newline to repair broken things together.\n(m / meet-03\n      :ARG0 (t / they)\n      :ARG1 (c / company\n            :name (n / name\n                  :op1 ""Newline""))\n      :purpose (r / repair-01\n            :ARG0 t\n            :ARG1 (t2 / thing\n                  :ARG1-of (b / break-01))\n            :manner (t3 / together)))']","[m, attr-instance, meet_03, attr-arg0, [t, attr-instance, they], attr-arg1, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""newline""]], attr-purpose, [r, attr-instance, repair_01, attr-arg0, t, attr-arg1, [t2, attr-instance, thing, attr-arg1_of, [b, attr-instance, break_01]], attr-manner, [t3, attr-instance, together]]]"
2501,2501,2501,2501,2950,12729,elbphilharmonie,Manche sagen: \newline Die Elb-philharmonie ist ist gut.,24_long,Ort|Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-11-03T09:24:04Z,6275ee07d0785a2da491fbb224064f23,0:=Manche 1:=sagen: 2:=\newline 3:=Die 4:=Elb-philharmonie 5:=ist 6:=ist 7:=gut.,1,,Some say: \newline The Elbphilharmonie is good.,"['# ::snt Some say: \\newline The Elbphilharmonie is good.\n(s / say-01\n      :ARG0 (s2 / some)\n      :ARG1 (g / good-02\n            :ARG1 (b / broadcast-program\n                  :name (n / name\n                        :op1 ""Elbphilharmonie""))))']","[s, attr-instance, say_01, attr-arg0, [s2, attr-instance, some], attr-arg1, [g, attr-instance, good_02, attr-arg1, [b, attr-instance, broadcast_program, attr-name, [n, attr-instance, name, attr-op1, ""elbphilharmonie""]]]]"
2502,2502,2502,2502,2951,1082,alexander-graham-bell,Im Jahr 1877 heiraten Alexander Graham Bell und Mabel Hubbard.,30_long,Personen|Seiten_mit_defekten_Dateilinks,2022-03-03T19:51:00Z,28d34f2e053dee2c0e9399a7924cd978,0:=Im 1:=Jahr 2:=1877 3:=heiraten 4:=Alexander 5:=Graham 6:=Bell 7:=und 8:=Mabel 9:=Hubbard.,2,"[[0,1,2],[3,4,5,6,7,8,9]]","In 1877, Alexander Graham Bell and Mabel Hubbard married.","['# ::snt In 1877, Alexander Graham Bell and Mabel Hubbard married.\n(m / marry-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Alexander""\n                  :op2 ""Graham""\n                  :op3 ""Bell""))\n      :ARG2 (p2 / person\n            :name (n2 / name\n                  :op1 ""Mabel""\n                  :op2 ""Hubbard""))\n      :time (d / date-entity\n            :year 1877))']","[m, attr-instance, marry_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""alexander"", attr-op2, ""graham"", attr-op3, ""bell""]], attr-arg2, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""mabel"", attr-op2, ""hubbard""]], attr-time, [d, attr-instance, date_entity, attr-year, 1877]]"
2503,2503,2503,2503,2952,5002,bergwerk,In einem Berg-werk graben Menschen in der Erde.,1_short,Natur|Arbeit,2017-12-18T11:16:21Z,6897e737e0f4a3a3d2176a148dacc89b,0:=In 1:=einem 2:=Berg-werk 3:=graben 4:=Menschen 5:=in 6:=der 7:=Erde.,1,,"In a mine, people dig into the earth.","['# ::snt In a mine, people dig into the earth.\n(d / dig-01\n      :ARG0 (p / person)\n      :ARG1 (e / earth)\n      :location (m / mine))']","[d, attr-instance, dig_01, attr-arg0, [p, attr-instance, person], attr-arg1, [e, attr-instance, earth], attr-location, [m, attr-instance, mine]]"
2504,2504,2504,2504,2953,5067,berliner-fernsehturm,Der Berliner Fernsehturm ist ein Wahrzeichen der Stadt.,11_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-07-15T18:02:33Z,af7adc773949650e35f6f40ea06c535c,0:=Der 1:=Berliner 2:=Fernsehturm 3:=ist 4:=ein 5:=Wahrzeichen 6:=der 7:=Stadt.,1,,The Berlin TV Tower is a landmark of the city.,"['# ::snt The Berlin TV Tower is a landmark of the city.\n(l / landmark\n      :domain (t / tower\n            :name (n / name\n                  :op1 ""Berlin""\n                  :op2 ""TV""\n                  :op3 ""Tower""))\n      :poss (c / city))']","[l, attr-instance, landmark, attr-domain, [t, attr-instance, tower, attr-name, [n, attr-instance, name, attr-op1, ""berlin"", attr-op2, ""tv"", attr-op3, ""tower""]], attr-poss, [c, attr-instance, city]]"
2505,2505,2505,2505,2954,40,abfalltrennung,Der Abfall kommt in Tonnen oder Säcke.,6_long,Entsorgung|Öffentliche_Verwaltung|Seiten_mit_defekten_Dateilinks,2016-07-28T07:55:27Z,76bf1508c054395f67a605468d76c22f,0:=Der 1:=Abfall 2:=kommt 3:=in 4:=Tonnen 5:=oder 6:=Säcke.,2,"[[4],[6]]",The waste comes in bins or bags.,['# ::snt The waste comes in bins or bags.\n(c / come-01\n      :ARG1 (w / waste)\n      :ARG3 (o / or\n            :op1 (b / bin)\n            :op2 (b2 / bag)))'],"[c, attr-instance, come_01, attr-arg1, [w, attr-instance, waste], attr-arg3, [o, attr-instance, or, attr-op1, [b, attr-instance, bin], attr-op2, [b2, attr-instance, bag]]]"
2506,2506,2506,2506,2956,5040,berlin-blockade,Die Berlin-Blockade war vom 23. Juni 1948 bis zum 12. Mai 1949.,0_short,Politik|Seiten_mit_defekten_Dateilinks,2016-01-24T11:51:34Z,a87abd4ebcc677b326b5b117860e863b,0:=Die 1:=Berlin-Blockade 2:=war 3:=vom 4:=23. 5:=Juni 6:=1948 7:=bis 8:=zum 9:=12. 10:=Mai 11:=1949.,2,"[[3,4,5,6],[7,8,9,10,11]] ","The Berlin Blockade lasted from June 23, 1948 to May 12, 1949.","['# ::snt The Berlin Blockade lasted from June 23, 1948 to May 12, 1949.\n(l / last-01\n      :ARG1 (e / event\n            :name (n / name\n                  :op1 ""Berlin""\n                  :op2 ""Blockade""))\n      :ARG2 (d / date-interval\n            :op1 (d2 / date-entity\n                  :year 1948\n                  :month 6\n                  :day 23)\n            :op2 (d3 / date-entity\n                  :year 1949\n                  :month 5\n                  :day 12)))']","[l, attr-instance, last_01, attr-arg1, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""berlin"", attr-op2, ""blockade""]], attr-arg2, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-year, 1948, attr-month, 6, attr-day, 23], attr-op2, [d3, attr-instance, date_entity, attr-year, 1949, attr-month, 5, attr-day, 12]]]"
2507,2507,2507,2507,2957,3009,arschbombe,Eine Arsch-Bombe ist ein Wasser-Sprung.,0_short,Sport,2013-08-22T08:51:23Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Arsch-Bombe 2:=ist 3:=ein 4:=Wasser-Sprung.,1,,A butt bomb is a water jump.,['# ::snt A butt bomb is a water jump.\n(m / mean-01\n      :ARG1 (b / bomb\n            :mod (b2 / butt))\n      :ARG2 (j / jump-03\n            :ARG2 (w / water)))'],"[m, attr-instance, mean_01, attr-arg1, [b, attr-instance, bomb, attr-mod, [b2, attr-instance, butt]], attr-arg2, [j, attr-instance, jump_03, attr-arg2, [w, attr-instance, water]]]"
2508,2508,2508,2508,2958,3010,arschfax,Der Unter-hosen-zettel ist ein Pflege-symbol.,0_long,Kleider,2014-07-15T13:07:14Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Der 1:=Unter-hosen-zettel 2:=ist 3:=ein 4:=Pflege-symbol.,1,,The underwear label is a care symbol.,['# ::snt The underwear label is a care symbol.\n(s / symbolize-01\n      :ARG1 (l / label-01\n            :ARG1 (u / underwear))\n      :ARG2 (c / care-04))'],"[s, attr-instance, symbolize_01, attr-arg1, [l, attr-instance, label_01, attr-arg1, [u, attr-instance, underwear]], attr-arg2, [c, attr-instance, care_04]]"
2509,2509,2509,2509,2959,50753,usain-bolt,Die Tochter kam am 17.5.2020 auf die Welt.,22_long,Sport|Personen,2020-08-31T14:45:34Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Tochter 2:=kam 3:=am 4:=17.5.2020 5:=auf 6:=die 7:=Welt.,1,,"The daughter was born on May 17, 2020.","['# ::snt The daughter was born on May 17, 2020.\n(b / bear-02\n      :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (d / daughter)))\n      :time (d2 / date-entity\n            :year 2020\n            :month 5\n            :day 17))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg2, [d, attr-instance, daughter]]], attr-time, [d2, attr-instance, date_entity, attr-year, 2020, attr-month, 5, attr-day, 17]]"
2510,2510,2510,2510,2960,9441,couch-potato,Ein Beispiel für so eine Person ist: Homer Simpson.,6_long,Schimpfwort,2014-08-10T08:25:20Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Beispiel 2:=für 3:=so 4:=eine 5:=Person 6:=ist: 7:=Homer 8:=Simpson.,1,,An example of such a person is: Homer Simpson.,"['# ::snt An example of such a person is: Homer Simpson.\n(e / exemplify-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Homer""\n                  :op2 ""Simpson""))\n      :ARG1 (p2 / person\n            :mod (s / such)))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""homer"", attr-op2, ""simpson""]], attr-arg1, [p2, attr-instance, person, attr-mod, [s, attr-instance, such]]]"
2511,2511,2511,2511,2961,11530,drachenschlucht,Die Drachenschlucht ist in einem Natur-schutz-gebiet.,0_long,Ort|Seiten_mit_defekten_Dateilinks,2016-03-10T11:48:02Z,12c8e777393d6f1673ab5f7a7cd789da,0:=Die 1:=Drachenschlucht 2:=ist 3:=in 4:=einem 5:=Natur-schutz-gebiet.,1,,The Dragon Gorge is in a nature reserve.,"['# ::snt The Dragon Gorge is in a nature reserve.\n(r / reserve\n      :mod (n / nature)\n      :domain (g / gorge\n            :name (n2 / name\n                  :op1 ""Dragon""\n                  :op2 ""Gorge"")))']","[r, attr-instance, reserve, attr-mod, [n, attr-instance, nature], attr-domain, [g, attr-instance, gorge, attr-name, [n2, attr-instance, name, attr-op1, ""dragon"", attr-op2, ""gorge""]]]"
2512,2512,2512,2512,2962,48592,ubung-japantown,In Deutschland ist die größte Japan-town in Düsseldorf.,0_long,Stadt|Seiten_mit_defekten_Dateilinks,2023-05-12T06:56:39Z,48f66906899cc4a9477b6c9e32ff4424,0:=In 1:=Deutschland 2:=ist 3:=die 4:=größte 5:=Japan-town 6:=in 7:=Düsseldorf.,1,,"In Germany, the largest Japan-town is in Düsseldorf.","['# ::snt In Germany, the largest Japan-town is in Düsseldorf.\n(b / be-located-at-91\n      :ARG1 (c / city\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (l / large)\n                  :ARG3 (m / most)\n                  :ARG5 (c2 / city\n                        :location (c3 / country\n                              :name (n / name\n                                    :op1 ""Japan"")))))\n      :ARG2 (c4 / city\n            :name (n2 / name\n                  :op1 ""Dussseldorf""))\n      :location (c5 / country\n            :name (n3 / name\n                  :op1 ""Germany"")))']","[b, attr-instance, be_located_at_91, attr-arg1, [c, attr-instance, city, attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [l, attr-instance, large], attr-arg3, [m, attr-instance, most], attr-arg5, [c2, attr-instance, city, attr-location, [c3, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""japan""]]]]], attr-arg2, [c4, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""dussseldorf""]], attr-location, [c5, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""germany""]]]"
2513,2513,2513,2513,2963,4790,behindertenreitsport,Die Reiter können zum Beispiel schlecht sehen.,11_long,Sport|Paralympics,2012-01-11T12:08:40Z,d4171b2c36772be4cad75ef4078874bd,0:=Die 1:=Reiter 2:=können 3:=zum 4:=Beispiel 5:=schlecht 6:=sehen.,1,,"For example, the riders have poor vision.","['# ::snt For example, the riders have poor vision.\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (p / person\n                  :ARG0-of (r / ride-01))\n            :ARG1 (s / see-01\n                  :mod (p2 / poor))))']","[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-arg0_of, [r, attr-instance, ride_01]], attr-arg1, [s, attr-instance, see_01, attr-mod, [p2, attr-instance, poor]]]]"
2514,2514,2514,2514,2964,10869,dieter-hildebrandt,Er hat an der Ludwig-Maximilians-Universität in München studiert.,2_long,Personen,2013-11-24T20:10:15Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=hat 2:=an 3:=der 4:=Ludwig-Maximilians-Universität 5:=in 6:=München 7:=studiert.,2,"[[2,4],[5,6]]",He studied at the Ludwig Maximilian University in Munich.,"['# ::snt He studied at the Ludwig Maximilian University in Munich.\n(s / study-01\n      :ARG0 (h / he)\n      :location (u / university\n            :name (n / name\n                  :op1 ""Ludwig""\n                  :op2 ""Maximilian""\n                  :op3 ""University"")\n            :location (c / city\n                  :name (n2 / name\n                        :op1 ""Munich""))))']","[s, attr-instance, study_01, attr-arg0, [h, attr-instance, he], attr-location, [u, attr-instance, university, attr-name, [n, attr-instance, name, attr-op1, ""ludwig"", attr-op2, ""maximilian"", attr-op3, ""university""], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""munich""]]]]"
2515,2515,2515,2515,2965,41023,schokokuss,Ein Schoko-kuss ist eine Süßware.,0_long,Essen_und_Trinken,2015-01-25T12:49:24Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Ein 1:=Schoko-kuss 2:=ist 3:=eine 4:=Süßware.,1,,A chocolate kiss is a sweet.,['# ::snt A chocolate kiss is a sweet.\n(s / sweet-02\n      :ARG1 (k / kiss-01\n            :mod (c / chocolate)))'],"[s, attr-instance, sweet_02, attr-arg1, [k, attr-instance, kiss_01, attr-mod, [c, attr-instance, chocolate]]]"
2516,2516,2516,2516,2966,20010,groot,Groot ist ein Außerirdischer.,2_short,Comic,2017-12-20T17:47:27Z,28d34f2e053dee2c0e9399a7924cd978,0:=Groot 1:=ist 2:=ein 3:=Außerirdischer.,1,,Groot is an alien.,"['# ::snt Groot is an alien.\n(a / alien-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Groot"")))']","[a, attr-instance, alien_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""groot""]]]"
2517,2517,2517,2517,2967,13118,endal,Endal war bei sehr vielen Hunde-wettbewerben dabei.,13_long,Tiere|Geschichte,2015-03-04T13:00:44Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Endal 1:=war 2:=bei 3:=sehr 4:=vielen 5:=Hunde-wettbewerben 6:=dabei.,1,,Endal took part in many dog ​​competitions.,"['# ::snt Endal took part in many dog \u200b\u200bcompetitions.\n(p / participate-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 ""Endal""))\n      :ARG1 (c / compete-01\n            :ARG3 (d / dog)\n            :quant (m / many)))']","[p, attr-instance, participate_01, attr-arg0, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""endal""]], attr-arg1, [c, attr-instance, compete_01, attr-arg3, [d, attr-instance, dog], attr-quant, [m, attr-instance, many]]]"
2518,2518,2518,2518,2968,40092,salamitaktik,Das Ziel der Salamitaktik kann sein: • jemanden hin-halten,0_long,Ohne_Kategorie,2012-12-16T13:05:41Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Das 1:=Ziel 2:=der 3:=Salamitaktik 4:=kann 5:=sein: 6:=• 7:=jemanden 8:=hin-halten,1,,The aim of the salami tactic can be: • to hold someone off,['# ::snt The aim of the salami tactic can be: • to hold someone off\n(p / possible-01\n      :ARG1 (a / aim-01\n            :ARG0 (t / tactic\n                  :mod (s / salami))\n            :ARG1 (h / hold-off-05\n                  :ARG1 (s2 / someone))))'],"[p, attr-instance, possible_01, attr-arg1, [a, attr-instance, aim_01, attr-arg0, [t, attr-instance, tactic, attr-mod, [s, attr-instance, salami]], attr-arg1, [h, attr-instance, hold_off_05, attr-arg1, [s2, attr-instance, someone]]]]"
2519,2519,2519,2519,2969,44334,stilblute,"Leider bekomme ich keine Katze,",5_long,Sprache,2014-04-02T07:33:03Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Leider 1:=bekomme 2:=ich 3:=keine 4:=Katze,",1,,"Unfortunately I can’t get a cat,","['# ::snt Unfortunately I can’t get a cat,\n(f / fortunate-01\n      :polarity -\n      :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (g / get-01\n                  :ARG0 (ii / i)\n                  :ARG1 (c / cat))))']","[f, attr-instance, fortunate_01, attr-polarity, negative, attr-arg2, [p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [g, attr-instance, get_01, attr-arg0, [ii, attr-instance, i], attr-arg1, [c, attr-instance, cat]]]]"
