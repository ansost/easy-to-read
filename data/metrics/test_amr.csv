,Unnamed: 0.1,Unnamed: 0,sent-id,topic,phrase,phrase_number,genre,timestamp,user,phrase_tokenized,num_statements,statement_spans,english,amr,amr_prolog
0,0,0,29217,louis-braille,Louis Braille wurde am 4. Januar 1809 geboren.,0_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Louis 1:=Braille 2:=wurde 3:=am 4:=4. 5:=Januar 6:=1809 7:=geboren.,1,,"Louis Braille was born on January 4, 1809.","['# ::snt Louis Braille was born on January 4, 1809.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Louis""\n                  :op2 ""Braille""))\n      :time (d / date-entity\n            :day 4\n            :month 1\n            :year 1809))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""louis"", attr-op2, ""braille""]], attr-time, [d, attr-instance, date_entity, attr-day, 4, attr-month, 1, attr-year, 1809]]"
1,1,1,29218,louis-braille,"Das war in Coupvray, Frankreich.",1_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Das 1:=war 2:=in 3:=Coupvray, 4:=Frankreich.",2,"[[3], [4]]","This was in Coupvray, France.","['# ::snt This was in Coupvray, France.\n(b / be-located-at-91\n      :ARG1 (t / this)\n      :ARG2 (c / city\n            :name (n / name\n                  :op1 ""Coupvray"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""France""))))']","[b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, this], attr-arg2, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""coupvray""], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""france""]]]]"
2,2,2,29219,louis-braille,Er ist am 6. Januar 1852 gestorben.,2_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=ist 2:=am 3:=6. 4:=Januar 5:=1852 6:=gestorben.,1,,"He died on January 6, 1852.","['# ::snt He died on January 6, 1852.\n(d / die-01\n      :ARG1 (h / he)\n      :time (d2 / date-entity\n            :day 6\n            :month 1\n            :year 1852))']","[d, attr-instance, die_01, attr-arg1, [h, attr-instance, he], attr-time, [d2, attr-instance, date_entity, attr-day, 6, attr-month, 1, attr-year, 1852]]"
3,3,3,29220,louis-braille,"Das war in Paris, Frankreich.",3_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Das 1:=war 2:=in 3:=Paris, 4:=Frankreich.",2,"[[3], [4]]","This was in Paris, France.","['# ::snt This was in Paris, France.\n(b / be-located-at-91\n      :ARG1 (t / this)\n      :ARG2 (c / city\n            :name (n / name\n                  :op1 ""Paris"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""France""))))']","[b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, this], attr-arg2, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""paris""], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""france""]]]]"
4,4,4,29221,louis-braille,"Als Louis Braille 3 Jahre alt war, \newline hat er in der Werk-statt von seinem Vater gespielt.",4_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Als 1:=Louis 2:=Braille 3:=3 4:=Jahre 5:=alt 6:=war, 7:=\newline 8:=hat 9:=er 10:=in 11:=der 12:=Werk-statt 13:=von 14:=seinem 15:=Vater 16:=gespielt.",4,"[[0, 1, 2, 3, 4, 5, 6], [8, 9, 16], [10, 12], [12, 13, 14, 15]]","When Louis Braille was 3 years old, he was playing in his father's workshop.","['# ::snt When Louis Braille was 3 years old, he was playing in his father\'s workshop.\n(p / play-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 ""Louis""\n                  :op2 ""Braille""))\n      :location (w / workshop\n            :poss (p3 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p2\n                        :ARG2 (f / father))))\n      :time (a / age-01\n            :ARG1 p2\n            :ARG2 (t / temporal-quantity\n                  :quant 3\n                  :unit (y / year))))']","[p, attr-instance, play_01, attr-arg0, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""louis"", attr-op2, ""braille""]], attr-location, [w, attr-instance, workshop, attr-poss, [p3, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, p2, attr-arg2, [f, attr-instance, father]]]], attr-time, [a, attr-instance, age_01, attr-arg1, p2, attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 3, attr-unit, [y, attr-instance, year]]]]"
5,5,5,29222,louis-braille,Er hat mit einer Ahle gespielt.,5_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=hat 2:=mit 3:=einer 4:=Ahle 5:=gespielt.,2,"[[2, 4], [0, 1, 5]]",He played with an awl.,['# ::snt He played with an awl.\n(p / play-01\n      :ARG0 (h / he)\n      :instrument (a / awl))'],"[p, attr-instance, play_01, attr-arg0, [h, attr-instance, he], attr-instrument, [a, attr-instance, awl]]"
6,6,6,29223,louis-braille,Mit der Ahle hat er sich ein Auge schwer verletzt.,6_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Mit 1:=der 2:=Ahle 3:=hat 4:=er 5:=sich 6:=ein 7:=Auge 8:=schwer 9:=verletzt.,4,"[[0, 2], [3, 4, 5, 9], [7], [8]]",He seriously injured his eye with the awl.,['# ::snt He seriously injured his eye with the awl.\n(ii / injure-01\n      :ARG0 (h / he\n            :part (e / eye))\n      :ARG1 e\n      :ARG2 (a / awl)\n      :ARG1-of (s / serious-02))'],"[ii, attr-instance, injure_01, attr-arg0, [h, attr-instance, he, attr-part, [e, attr-instance, eye]], attr-arg1, e, attr-arg2, [a, attr-instance, awl], attr-arg1_of, [s, attr-instance, serious_02]]"
7,7,7,29224,louis-braille,Das verletzte Auge hat sich entzündet.,7_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Das 1:=verletzte 2:=Auge 3:=hat 4:=sich 5:=entzündet.,2,"[[1], [2, 3, 4, 5]]",The injured eye has become inflamed.,['# ::snt The injured eye has become inflamed.\n(b / become-01\n      :ARG1 (e / eye\n            :ARG1-of (ii / injure-01))\n      :ARG2 (ii2 / inflame-01\n            :ARG1 e))'],"[b, attr-instance, become_01, attr-arg1, [e, attr-instance, eye, attr-arg1_of, [ii, attr-instance, injure_01]], attr-arg2, [ii2, attr-instance, inflame_01, attr-arg1, e]]"
8,8,8,29225,louis-braille,Und dann das andere Auge angesteckt.,8_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Und 1:=dann 2:=das 3:=andere 4:=Auge 5:=angesteckt.,1,,And then infected the other eye.,['# ::snt And then infected the other eye.\n(a / and\n      :op2 (ii / infect-01\n            :ARG1 (e / eye\n                  :mod (o / other))\n            :time (t / then)))'],"[a, attr-instance, and, attr-op2, [ii, attr-instance, infect_01, attr-arg1, [e, attr-instance, eye, attr-mod, [o, attr-instance, other]], attr-time, [t, attr-instance, then]]]"
9,9,9,29226,louis-braille,Danach war Louis Braille blind.,9_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Danach 1:=war 2:=Louis 3:=Braille 4:=blind.,1,,"After that, Louis Braille was blind.","['# ::snt After that, Louis Braille was blind.\n(b / blind-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Louis""\n                  :op2 ""Braille""))\n      :time (a / after\n            :op1 (t / that)))']","[b, attr-instance, blind_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""louis"", attr-op2, ""braille""]], attr-time, [a, attr-instance, after, attr-op1, [t, attr-instance, that]]]"
10,10,10,29227,louis-braille,Louis Braille ging zur ersten Blinden-schule der Welt.,10_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Louis 1:=Braille 2:=ging 3:=zur 4:=ersten 5:=Blinden-schule 6:=der 7:=Welt.,1,,Louis Braille went to the world’s first school for the blind.,"['# ::snt Louis Braille went to the world’s first school for the blind.\n(g / go-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Louis""\n                  :op2 ""Braille""))\n      :ARG4 (s / school\n            :ord (o / ordinal-entity\n                  :value 1)\n            :poss (w / world)\n            :beneficiary (p2 / person\n                  :ARG1-of (b / blind-02))))']","[g, attr-instance, go_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""louis"", attr-op2, ""braille""]], attr-arg4, [s, attr-instance, school, attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1], attr-poss, [w, attr-instance, world], attr-beneficiary, [p2, attr-instance, person, attr-arg1_of, [b, attr-instance, blind_02]]]]"
11,11,11,29228,louis-braille,Das war die Schule von Valentin Haüy.,11_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Das 1:=war 2:=die 3:=Schule 4:=von 5:=Valentin 6:=Haüy.,1,,That was Valentin Haüy’s school.,"['# ::snt That was Valentin Haüy’s school.\n(s / school\n      :poss (p / person\n            :name (n / name\n                  :op1 ""Valentin""\n                  :op2 ""Haüy""))\n      :domain (t / that))']","[s, attr-instance, school, attr-poss, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""valentin"", attr-op2, ""haüy""]], attr-domain, [t, attr-instance, that]]"
12,12,12,29229,louis-braille,Valentin Haüy hat verschiedene Geräte gebaut.,12_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Valentin 1:=Haüy 2:=hat 3:=verschiedene 4:=Geräte 5:=gebaut.,1,,Valentin Haüy has built various devices.,"['# ::snt Valentin Haüy has built various devices.\n(b / build-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Valentin""\n                  :op2 ""Haüy""))\n      :ARG1 (d / device\n            :mod (v / various)))']","[b, attr-instance, build_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""valentin"", attr-op2, ""haüy""]], attr-arg1, [d, attr-instance, device, attr-mod, [v, attr-instance, various]]]"
13,13,13,29230,louis-braille,"Zum Beispiel ein Gerät, \newline dass Musik-noten auf Papier prägen konnte.",13_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Zum 1:=Beispiel 2:=ein 3:=Gerät, 4:=\newline 5:=dass 6:=Musik-noten 7:=auf 8:=Papier 9:=prägen 10:=konnte.",1,,"For example, a device that could emboss musical notes on paper.","['# ::snt For example, a device that could emboss musical notes on paper.\n(e / exemplify-01\n      :ARG0 (d / device\n            :ARG0-of (e2 / emboss-01\n                  :ARG1 (n / note\n                        :mod (m / musical))\n                  :ARG2 (p / paper)\n                  :ARG1-of (p2 / possible-01))))']","[e, attr-instance, exemplify_01, attr-arg0, [d, attr-instance, device, attr-arg0_of, [e2, attr-instance, emboss_01, attr-arg1, [n, attr-instance, note, attr-mod, [m, attr-instance, musical]], attr-arg2, [p, attr-instance, paper], attr-arg1_of, [p2, attr-instance, possible_01]]]]"
14,14,14,29231,louis-braille,So konnte man die Noten mit den Fingern fühlen.,14_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=So 1:=konnte 2:=man 3:=die 4:=Noten 5:=mit 6:=den 7:=Fingern 8:=fühlen.,1,,This meant you could feel the notes with your fingers.,['# ::snt This meant you could feel the notes with your fingers.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (p / possible-01\n            :ARG1 (f / feel-01\n                  :ARG0 (y / you\n                        :part (f2 / finger))\n                  :ARG1 (n / note)\n                  :ARG2 f2)))'],"[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [p, attr-instance, possible_01, attr-arg1, [f, attr-instance, feel_01, attr-arg0, [y, attr-instance, you, attr-part, [f2, attr-instance, finger]], attr-arg1, [n, attr-instance, note], attr-arg2, f2]]]"
15,15,15,29232,louis-braille,Louis Braille fand die Idee gut.,15_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Louis 1:=Braille 2:=fand 3:=die 4:=Idee 5:=gut.,1,,Louis Braille liked the idea.,"['# ::snt Louis Braille liked the idea.\n(l / like-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Louis""\n                  :op2 ""Braille""))\n      :ARG1 (ii / idea))']","[l, attr-instance, like_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""louis"", attr-op2, ""braille""]], attr-arg1, [ii, attr-instance, idea]]"
16,16,16,29233,louis-braille,Er hat in der Werkstatt von seinem Vater verschiedene Sachen ausprobiert.,16_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=hat 2:=in 3:=der 4:=Werkstatt 5:=von 6:=seinem 7:=Vater 8:=verschiedene 9:=Sachen 10:=ausprobiert.,3,"[[0, 1, 8, 9, 10], [2, 4], [5, 6, 7]]",He tried out different things in his father's workshop.,"[""# ::snt He tried out different things in his father's workshop.\n(t / try-out-05\n      :ARG0 (h / he)\n      :ARG1 (t2 / thing\n            :ARG1-of (d / differ-02))\n      :location (w / workshop\n            :poss (p / person\n                  :ARG0-of (h2 / have-rel-role-91\n                        :ARG1 h\n                        :ARG2 (f / father)))))""]","[t, attr-instance, try_out_05, attr-arg0, [h, attr-instance, he], attr-arg1, [t2, attr-instance, thing, attr-arg1_of, [d, attr-instance, differ_02]], attr-location, [w, attr-instance, workshop, attr-poss, [p, attr-instance, person, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, h, attr-arg2, [f, attr-instance, father]]]]]"
17,17,17,29234,louis-braille,"Zum Beispiel Dreiecke, Quadrate und Kreise in Leder stanzen.",17_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Zum 1:=Beispiel 2:=Dreiecke, 3:=Quadrate 4:=und 5:=Kreise 6:=in 7:=Leder 8:=stanzen.",3,"[[2], [3], [5]]","For example, punching triangles, squares and circles into leather.","['# ::snt For example, punching triangles, squares and circles into leather.\n(e / exemplify-01\n      :ARG0 (p / punch-01\n            :ARG1 (a / and\n                  :op1 (t / triangle)\n                  :op2 (s / square)\n                  :op3 (c / circle))\n            :ARG2 (l / leather)))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, punch_01, attr-arg1, [a, attr-instance, and, attr-op1, [t, attr-instance, triangle], attr-op2, [s, attr-instance, square], attr-op3, [c, attr-instance, circle]], attr-arg2, [l, attr-instance, leather]]]"
18,18,18,29235,louis-braille,"Als Louis Braille 11 Jahr alt ist, \newline entdeckt er die Nacht-schrift.",18_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Als 1:=Louis 2:=Braille 3:=11 4:=Jahr 5:=alt 6:=ist, 7:=\newline 8:=entdeckt 9:=er 10:=die 11:=Nacht-schrift.",2,"[[0, 1, 2, 3, 4, 5, 6], [8, 9, 11]]","When Louis Braille was 11 years old, he discovered night writing.","['# ::snt When Louis Braille was 11 years old, he discovered night writing.\n(d / discover-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Louis""\n                  :op2 ""Braille""))\n      :ARG1 (w / write-01\n            :time (d2 / date-entity\n                  :dayperiod (n2 / night)))\n      :time (a / age-01\n            :ARG1 p\n            :ARG2 (t / temporal-quantity\n                  :quant 11\n                  :unit (y / year))))']","[d, attr-instance, discover_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""louis"", attr-op2, ""braille""]], attr-arg1, [w, attr-instance, write_01, attr-time, [d2, attr-instance, date_entity, attr-dayperiod, [n2, attr-instance, night]]], attr-time, [a, attr-instance, age_01, attr-arg1, p, attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 11, attr-unit, [y, attr-instance, year]]]]"
19,19,19,29236,louis-braille,Die Nacht-schrift hat der Hauptmann Charles Barbier erfunden.,19_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Nacht-schrift 2:=hat 3:=der 4:=Hauptmann 5:=Charles 6:=Barbier 7:=erfunden.,2,"[[4], [5, 6]]",The night script was invented by Captain Charles Barbier.,"['# ::snt The night script was invented by Captain Charles Barbier.\n(ii / invent-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Captain""\n                  :op2 ""Charles""\n                  :op3 ""Barbier""))\n      :ARG1 (s / script\n            :time (d / date-entity\n                  :dayperiod (n2 / night))))']","[ii, attr-instance, invent_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""captain"", attr-op2, ""charles"", attr-op3, ""barbier""]], attr-arg1, [s, attr-instance, script, attr-time, [d, attr-instance, date_entity, attr-dayperiod, [n2, attr-instance, night]]]]"
20,20,20,29237,louis-braille,Die Nacht-schrift ist kompliziert.,20_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Nacht-schrift 2:=ist 3:=kompliziert.,1,,The night script is complicated.,['# ::snt The night script is complicated.\n(c / complicate-01\n      :ARG1 (s / script\n            :mod (n / night)))'],"[c, attr-instance, complicate_01, attr-arg1, [s, attr-instance, script, attr-mod, [n, attr-instance, night]]]"
21,21,21,29238,louis-braille,Louis Braille macht die Nacht-schrift einfacher.,21_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Louis 1:=Braille 2:=macht 3:=die 4:=Nacht-schrift 5:=einfacher.,1,,Louis Braille makes night writing easier.,"['# ::snt Louis Braille makes night writing easier.\n(m / make-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Louis""\n                  :op2 ""Braille""))\n      :ARG1 (e / easy-05\n            :ARG1 (w / write-01\n                  :time (d / date-entity\n                        :dayperiod (n2 / night)))\n            :ARG2-of (h / have-degree-91\n                  :ARG1 w\n                  :ARG3 (m2 / more))))']","[m, attr-instance, make_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""louis"", attr-op2, ""braille""]], attr-arg1, [e, attr-instance, easy_05, attr-arg1, [w, attr-instance, write_01, attr-time, [d, attr-instance, date_entity, attr-dayperiod, [n2, attr-instance, night]]], attr-arg2_of, [h, attr-instance, have_degree_91, attr-arg1, w, attr-arg3, [m2, attr-instance, more]]]]"
22,22,22,29239,louis-braille,Im Jahr 1825 ist Louis Braille fertig mit der Schrift.,22_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Im 1:=Jahr 2:=1825 3:=ist 4:=Louis 5:=Braille 6:=fertig 7:=mit 8:=der 9:=Schrift.,2,"[[0, 1, 2], [3, 4, 5, 6, 7, 9]]","In 1825, Louis Braille finished writing.","['# ::snt In 1825, Louis Braille finished writing.\n(f / finish-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Louis""\n                  :op2 ""Braille""))\n      :ARG1 (w / write-01\n            :ARG0 p)\n      :time (d / date-entity\n            :year 1825))']","[f, attr-instance, finish_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""louis"", attr-op2, ""braille""]], attr-arg1, [w, attr-instance, write_01, attr-arg0, p], attr-time, [d, attr-instance, date_entity, attr-year, 1825]]"
23,23,23,29240,louis-braille,Er hat die Blinden-schrift erfunden.,23_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=hat 2:=die 3:=Blinden-schrift 4:=erfunden.,1,,He invented Braille.,"['# ::snt He invented Braille.\n(ii / invent-01\n      :ARG0 (h / he)\n      :ARG1 (l / language\n            :name (n / name\n                  :op1 ""Braille"")))']","[ii, attr-instance, invent_01, attr-arg0, [h, attr-instance, he], attr-arg1, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""braille""]]]"
24,24,24,29241,louis-braille,Er ist jetzt 16 Jahre alt.,24_long,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=ist 2:=jetzt 3:=16 4:=Jahre 5:=alt.,1,,He is now 16 years old.,['# ::snt He is now 16 years old.\n(a / age-01\n      :ARG1 (h / he)\n      :ARG2 (t / temporal-quantity\n            :quant 16\n            :unit (y / year))\n      :time (n / now))'],"[a, attr-instance, age_01, attr-arg1, [h, attr-instance, he], attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 16, attr-unit, [y, attr-instance, year]], attr-time, [n, attr-instance, now]]"
25,25,25,29242,louis-braille,Louis Braille war ein Erfinder.,0_short,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Louis 1:=Braille 2:=war 3:=ein 4:=Erfinder.,1,,Louis Braille was an inventor.,"['# ::snt Louis Braille was an inventor.\n(p / person\n      :ARG0-of (ii / invent-01)\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Louis""\n                  :op2 ""Braille"")))']","[p, attr-instance, person, attr-arg0_of, [ii, attr-instance, invent_01], attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""louis"", attr-op2, ""braille""]]]"
26,26,26,29243,louis-braille,Er hat die Schrift für blinde Menschen erfunden.,1_short,Personen|Seiten_mit_defekten_Dateilinks,2017-01-05T18:57:57Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=hat 2:=die 3:=Schrift 4:=für 5:=blinde 6:=Menschen 7:=erfunden.,1,,He invented writing for blind people.,['# ::snt He invented writing for blind people.\n(ii / invent-01\n      :ARG0 (h / he)\n      :ARG1 (w / write-01\n            :ARG2 (p / person\n                  :ARG1-of (b / blind-02))))'],"[ii, attr-instance, invent_01, attr-arg0, [h, attr-instance, he], attr-arg1, [w, attr-instance, write_01, attr-arg2, [p, attr-instance, person, attr-arg1_of, [b, attr-instance, blind_02]]]]"
27,27,27,29244,loukanikos,Wegen der griechischen Staats-schulden-krise haben viele Menschen demonstriert.,0_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Wegen 1:=der 2:=griechischen 3:=Staats-schulden-krise 4:=haben 5:=viele 6:=Menschen 7:=demonstriert.,2,"[[0, 2, 3], [4, 5, 6, 7]]",Many people demonstrated because of the Greek national debt crisis.,"['# ::snt Many people demonstrated because of the Greek national debt crisis.\n(d / demonstrate-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1-of (c / cause-01\n            :ARG0 (c2 / crisis\n                  :mod (d2 / debt\n                        :mod (n / nation))\n                  :mod (c3 / country\n                        :name (n2 / name\n                              :op1 ""Greece"")))))']","[d, attr-instance, demonstrate_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [c2, attr-instance, crisis, attr-mod, [d2, attr-instance, debt, attr-mod, [n, attr-instance, nation]], attr-mod, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""greece""]]]]]"
28,28,28,29245,loukanikos,Loukanikos war sehr oft dabei.,1_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Loukanikos 1:=war 2:=sehr 3:=oft 4:=dabei.,1,,Loukanikos was there very often.,"['# ::snt Loukanikos was there very often.\n(b / be-located-at-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Loukanikos""))\n      :ARG2 (t / there)\n      :frequency (o / often\n            :degree (v / very)))']","[b, attr-instance, be_located_at_91, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""loukanikos""]], attr-arg2, [t, attr-instance, there], attr-frequency, [o, attr-instance, often, attr-degree, [v, attr-instance, very]]]"
29,29,29,29246,loukanikos,Dadurch wurde Loukanikos sehr bekannt.,2_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Dadurch 1:=wurde 2:=Loukanikos 3:=sehr 4:=bekannt.,1,,This made Loukanikos very famous.,"['# ::snt This made Loukanikos very famous.\n(m / make-02\n      :ARG0 (t / this)\n      :ARG1 (f / fame-01\n            :ARG1 (p / product\n                  :name (n / name\n                        :op1 ""Looskanikos""))\n            :degree (v / very)))']","[m, attr-instance, make_02, attr-arg0, [t, attr-instance, this], attr-arg1, [f, attr-instance, fame_01, attr-arg1, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""looskanikos""]], attr-degree, [v, attr-instance, very]]]"
30,30,30,29247,loukanikos,Viele Zeitungen haben über den Hund berichtet.,3_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Viele 1:=Zeitungen 2:=haben 3:=über 4:=den 5:=Hund 6:=berichtet.,1,,Many newspapers have reported about the dog.,['# ::snt Many newspapers have reported about the dog.\n(r / report-01\n      :ARG0 (n / newspaper\n            :quant (m / many))\n      :ARG1 (d / dog))'],"[r, attr-instance, report_01, attr-arg0, [n, attr-instance, newspaper, attr-quant, [m, attr-instance, many]], attr-arg1, [d, attr-instance, dog]]"
31,31,31,29248,loukanikos,Loukanikos war ein Hund der auf der Straße gelebt hat.,4_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Loukanikos 1:=war 2:=ein 3:=Hund 4:=der 5:=auf 6:=der 7:=Straße 8:=gelebt 9:=hat.,2,"[[0, 1, 3], [5, 7, 8, 9]]",Loukanikos was a dog who lived on the streets.,"['# ::snt Loukanikos was a dog who lived on the streets.\n(d / dog\n      :domain (p / person\n            :name (n / name\n                  :op1 ""Loukanikos""))\n      :ARG0-of (l / live-01\n            :location (s / street)))']","[d, attr-instance, dog, attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""loukanikos""]], attr-arg0_of, [l, attr-instance, live_01, attr-location, [s, attr-instance, street]]]"
32,32,32,29249,loukanikos,Im Jahr 2011 wurde Loukanikos zur Person of the Year gewählt.,5_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Im 1:=Jahr 2:=2011 3:=wurde 4:=Loukanikos 5:=zur 6:=Person 7:=of 8:=the 9:=Year 10:=gewählt.,2,"[[0, 1, 2], [3, 4, 5, 6, 7, 8, 9, 10]]","In 2011, Loukanikos was voted Person of the Year.","['# ::snt In 2011, Loukanikos was voted Person of the Year.\n(v / vote-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Loukanikos""))\n      :ARG2 p\n      :ARG1-of (a / award-01\n            :ARG2 (a2 / award\n                  :name n\n                  :op1 ""Person""\n                  :op2 ""of""\n                  :op3 ""the""\n                  :op4 ""Year""))\n      :time (d / date-entity\n            :year 2011))']","[v, attr-instance, vote_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""loukanikos""]], attr-arg2, p, attr-arg1_of, [a, attr-instance, award_01, attr-arg2, [a2, attr-instance, award, attr-name, n, attr-op1, ""person"", attr-op2, ""of"", attr-op3, ""the"", attr-op4, ""year""]], attr-time, [d, attr-instance, date_entity, attr-year, 2011]]"
33,33,33,29250,loukanikos,Im Jahr 2012 hat ihn eine Familie aufgenommen.,6_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Im 1:=Jahr 2:=2012 3:=hat 4:=ihn 5:=eine 6:=Familie 7:=aufgenommen.,2,"[[0, 1, 2], [3, 4, 6, 7]]","In 2012, a family took him in.","['# ::snt In 2012, a family took him in.\n(t / take-01\n      :ARG0 (f / family)\n      :ARG1 (h / he)\n      :time (d / date-entity\n            :year 2012))']","[t, attr-instance, take_01, attr-arg0, [f, attr-instance, family], attr-arg1, [h, attr-instance, he], attr-time, [d, attr-instance, date_entity, attr-year, 2012]]"
34,34,34,29251,loukanikos,Dort hat er bis zum Jahr 2014 gelebt.,7_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Dort 1:=hat 2:=er 3:=bis 4:=zum 5:=Jahr 6:=2014 7:=gelebt.,1,,He lived there until 2014.,['# ::snt He lived there until 2014.\n(l / live-01\n      :ARG0 (h / he)\n      :location (t / there)\n      :time (u / until\n            :op1 (d / date-entity\n                  :year 2014)))'],"[l, attr-instance, live_01, attr-arg0, [h, attr-instance, he], attr-location, [t, attr-instance, there], attr-time, [u, attr-instance, until, attr-op1, [d, attr-instance, date_entity, attr-year, 2014]]]"
35,35,35,29252,loukanikos,Im Oktober 2014 ist Loukanikos gestorben.,8_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Im 1:=Oktober 2:=2014 3:=ist 4:=Loukanikos 5:=gestorben.,1,,Loukanikos died in October 2014.,"['# ::snt Loukanikos died in October 2014.\n(d / die-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Loukanikos""))\n      :time (d2 / date-entity\n            :month 10\n            :year 2014))']","[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""loukanikos""]], attr-time, [d2, attr-instance, date_entity, attr-month, 10, attr-year, 2014]]"
36,36,36,29253,loukanikos,Viele sagen er hat sehr viel schlechte Mittel von den Polizisten eingeatmet.,9_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Viele 1:=sagen 2:=er 3:=hat 4:=sehr 5:=viel 6:=schlechte 7:=Mittel 8:=von 9:=den 10:=Polizisten 11:=eingeatmet.,2,"[[2, 3, 4, 5, 6, 11], [8, 10]]",Many say he inhaled a lot of bad substances from the police.,['# ::snt Many say he inhaled a lot of bad substances from the police.\n(s / say-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (ii / inhale-01\n            :ARG0 (h / he)\n            :ARG1 (s2 / substance\n                  :ARG1-of (b / bad-07)\n                  :quant (l / lot))\n            :source (p2 / police)))'],"[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [ii, attr-instance, inhale_01, attr-arg0, [h, attr-instance, he], attr-arg1, [s2, attr-instance, substance, attr-arg1_of, [b, attr-instance, bad_07], attr-quant, [l, attr-instance, lot]], attr-source, [p2, attr-instance, police]]]"
37,37,37,29254,loukanikos,Darum wurde er sehr krank.,10_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Darum 1:=wurde 2:=er 3:=sehr 4:=krank.,1,,That's why he became very sick.,"[""# ::snt That's why he became very sick.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (b / become-01\n            :ARG1 (h / he)\n            :ARG2 (s / sick-05\n                  :ARG1 h\n                  :degree (v / very))))""]","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [b, attr-instance, become_01, attr-arg1, [h, attr-instance, he], attr-arg2, [s, attr-instance, sick_05, attr-arg1, h, attr-degree, [v, attr-instance, very]]]]"
38,38,38,29255,loukanikos,Loukanikos wurde 10 Jahre alt.,11_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Loukanikos 1:=wurde 2:=10 3:=Jahre 4:=alt.,1,,Loukanikos was 10 years old.,"['# ::snt Loukanikos was 10 years old.\n(a / age-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Loukanikos""))\n      :ARG2 (t / temporal-quantity\n            :quant 10\n            :unit (y / year)))']","[a, attr-instance, age_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""loukanikos""]], attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 10, attr-unit, [y, attr-instance, year]]]"
39,39,39,29256,loukanikos,Er ist auf einem Berg begraben worden.,12_long,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Er 1:=ist 2:=auf 3:=einem 4:=Berg 5:=begraben 6:=worden.,1,,He was buried on a mountain.,['# ::snt He was buried on a mountain.\n(b / bury-01\n      :ARG1 (h / he)\n      :location (m / mountain))'],"[b, attr-instance, bury_01, attr-arg1, [h, attr-instance, he], attr-location, [m, attr-instance, mountain]]"
40,40,40,29258,loukanikos,Loukanikos war ein bekannter Hund.,0_short,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Loukanikos 1:=war 2:=ein 3:=bekannter 4:=Hund.,1,,Loukanikos was a famous dog.,"['# ::snt Loukanikos was a famous dog.\n(d / dog\n      :ARG1-of (f / fame-01)\n      :domain (p / person\n            :name (n / name\n                  :op1 ""Loukanikos"")))']","[d, attr-instance, dog, attr-arg1_of, [f, attr-instance, fame_01], attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""loukanikos""]]]"
41,41,41,29259,loukanikos,Er war dabei als Menschen in Griechenland demonstriert haben.,1_short,Tiere|Geschichte,2015-07-11T10:21:37Z,ab8b95b239ab89dbdb8f1d627a1f238a,0:=Er 1:=war 2:=dabei 3:=als 4:=Menschen 5:=in 6:=Griechenland 7:=demonstriert 8:=haben.,2,"[[0, 1, 2, 3, 4, 7, 8], [5, 6]]",He was there when people demonstrated in Greece.,"['# ::snt He was there when people demonstrated in Greece.\n(h / he\n      :location (t / there)\n      :time (d / demonstrate-01\n            :ARG0 (p / person)\n            :location (c / country\n                  :name (n / name\n                        :op1 ""Greece""))))']","[h, attr-instance, he, attr-location, [t, attr-instance, there], attr-time, [d, attr-instance, demonstrate_01, attr-arg0, [p, attr-instance, person], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""greece""]]]]"
42,42,42,29260,lowe,Löwen haben ein Fell.,0_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Löwen 1:=haben 2:=ein 3:=Fell.,1,,Lions have fur.,['# ::snt Lions have fur.\n(h / have-03\n      :ARG0 (l / lion)\n      :ARG1 (f / fur))'],"[h, attr-instance, have_03, attr-arg0, [l, attr-instance, lion], attr-arg1, [f, attr-instance, fur]]"
43,43,43,29261,lowe,Das Fell ist gold-braun oder sand-farben.,1_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Das 1:=Fell 2:=ist 3:=gold-braun 4:=oder 5:=sand-farben.,2,"[[3], [5]]",The fur is golden-brown or sand-colored.,['# ::snt The fur is golden-brown or sand-colored.\n(o / or\n      :op1 (b / brown-02\n            :ARG1 (f / fur)\n            :ARG2 (g / golden))\n      :op2 (c / color-01\n            :ARG1 f\n            :ARG2 (s / sand)))'],"[o, attr-instance, or, attr-op1, [b, attr-instance, brown_02, attr-arg1, [f, attr-instance, fur], attr-arg2, [g, attr-instance, golden]], attr-op2, [c, attr-instance, color_01, attr-arg1, f, attr-arg2, [s, attr-instance, sand]]]"
44,44,44,29262,lowe,Ein männlicher Löwen hat eine Mähne.,2_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Ein 1:=männlicher 2:=Löwen 3:=hat 4:=eine 5:=Mähne.,1,,A male lion has a mane.,['# ::snt A male lion has a mane.\n(h / have-03\n      :ARG0 (l / lion\n            :mod (m / male))\n      :ARG1 (m2 / mane))'],"[h, attr-instance, have_03, attr-arg0, [l, attr-instance, lion, attr-mod, [m, attr-instance, male]], attr-arg1, [m2, attr-instance, mane]]"
45,45,45,29263,lowe,Ein Männchen kann bis zu 250 kg wiegen.,3_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Ein 1:=Männchen 2:=kann 3:=bis 4:=zu 5:=250 6:=kg 7:=wiegen.,1,,A male can weigh up to 250 kg.,['# ::snt A male can weigh up to 250 kg.\n(p / possible-01\n      :ARG1 (w / weigh-01\n            :ARG1 (m / male)\n            :ARG3 (u / up-to\n                  :op1 (m2 / mass-quantity\n                        :quant 250\n                        :unit (k / kilogram)))))'],"[p, attr-instance, possible_01, attr-arg1, [w, attr-instance, weigh_01, attr-arg1, [m, attr-instance, male], attr-arg3, [u, attr-instance, up_to, attr-op1, [m2, attr-instance, mass_quantity, attr-quant, 250, attr-unit, [k, attr-instance, kilogram]]]]]"
46,46,46,29264,lowe,Löwen leben in Rudeln.,4_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Löwen 1:=leben 2:=in 3:=Rudeln.,1,,Lions live in packs.,['# ::snt Lions live in packs.\n(l / live-01\n      :ARG0 (l2 / lion)\n      :manner (p / pack))'],"[l, attr-instance, live_01, attr-arg0, [l2, attr-instance, lion], attr-manner, [p, attr-instance, pack]]"
47,47,47,29265,lowe,Ein Rudel ist eine Gruppe Tiere einer Art.,5_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Ein 1:=Rudel 2:=ist 3:=eine 4:=Gruppe 5:=Tiere 6:=einer 7:=Art.,2,"[[1, 2, 4], [5, 7]]",A pack is a group of animals of one species.,['# ::snt A pack is a group of animals of one species.\n(g / group\n      :consist-of (a / animal\n            :mod (s / species\n                  :quant 1))\n      :domain (p / pack))'],"[g, attr-instance, group, attr-consist_of, [a, attr-instance, animal, attr-mod, [s, attr-instance, species, attr-quant, 1]], attr-domain, [p, attr-instance, pack]]"
48,48,48,29266,lowe,Löwen essen Fleisch.,6_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Löwen 1:=essen 2:=Fleisch.,1,,Lions eat meat.,['# ::snt Lions eat meat.\n(e / eat-01\n      :ARG0 (l / lion)\n      :ARG1 (m / meat))'],"[e, attr-instance, eat_01, attr-arg0, [l, attr-instance, lion], attr-arg1, [m, attr-instance, meat]]"
49,49,49,29267,lowe,Sie jagen andere Tiere.,7_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Sie 1:=jagen 2:=andere 3:=Tiere.,1,,They hunt other animals.,['# ::snt They hunt other animals.\n(h / hunt-01\n      :ARG0 (t / they)\n      :ARG1 (a / animal\n            :mod (o / other)))'],"[h, attr-instance, hunt_01, attr-arg0, [t, attr-instance, they], attr-arg1, [a, attr-instance, animal, attr-mod, [o, attr-instance, other]]]"
50,50,50,29268,lowe,Löwen können schnell rennen.,8_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Löwen 1:=können 2:=schnell 3:=rennen.,1,,Lions can run fast.,['# ::snt Lions can run fast.\n(p / possible-01\n      :ARG1 (r / run-02\n            :ARG0 (l / lion)\n            :ARG1-of (f / fast-02)))'],"[p, attr-instance, possible_01, attr-arg1, [r, attr-instance, run_02, attr-arg0, [l, attr-instance, lion], attr-arg1_of, [f, attr-instance, fast_02]]]"
51,51,51,29269,lowe,Löwen sind nachtaktiv.,9_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Löwen 1:=sind 2:=nachtaktiv.,1,,Lions are nocturnal.,['# ::snt Lions are nocturnal.\n(n / nocturnal\n      :domain (l / lion))'],"[n, attr-instance, nocturnal, attr-domain, [l, attr-instance, lion]]"
52,52,52,29270,lowe,Sie schlafen tagsüber.,10_long,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Sie 1:=schlafen 2:=tagsüber.,1,,They sleep during the day.,['# ::snt They sleep during the day.\n(s / sleep-01\n      :ARG0 (t / they)\n      :time (d / day))'],"[s, attr-instance, sleep_01, attr-arg0, [t, attr-instance, they], attr-time, [d, attr-instance, day]]"
53,53,53,29271,lowe,Ein Löwe ist ein Tier.,0_short,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Ein 1:=Löwe 2:=ist 3:=ein 4:=Tier.,1,,A lion is an animal.,['# ::snt A lion is an animal.\n(a / animal\n      :domain (l / lion))'],"[a, attr-instance, animal, attr-domain, [l, attr-instance, lion]]"
54,54,54,29272,lowe,Genauer: Der Löwe ist ein Säuge-tier.,1_short,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Genauer: 1:=Der 2:=Löwe 3:=ist 4:=ein 5:=Säuge-tier.,1,,More precisely: The lion is a mammal.,['# ::snt More precisely: The lion is a mammal.\n(m / mammal\n      :domain (l / lion)\n      :manner (p / precise\n            :ARG2-of (h / have-degree-91\n                  :ARG1 (s / say-01\n                        :ARG3 (m2 / more)))))'],"[m, attr-instance, mammal, attr-domain, [l, attr-instance, lion], attr-manner, [p, attr-instance, precise, attr-arg2_of, [h, attr-instance, have_degree_91, attr-arg1, [s, attr-instance, say_01, attr-arg3, [m2, attr-instance, more]]]]]"
55,55,55,29273,lowe,Er gehört zu den Groß-katzen.,2_short,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Er 1:=gehört 2:=zu 3:=den 4:=Groß-katzen.,1,,He is one of the big cats.,['# ::snt He is one of the big cats.\n(ii / include-91\n      :ARG1 (h / he)\n      :ARG2 (c / cat\n            :mod (b / big)))'],"[ii, attr-instance, include_91, attr-arg1, [h, attr-instance, he], attr-arg2, [c, attr-instance, cat, attr-mod, [b, attr-instance, big]]]"
56,56,56,29274,lowe,Der Löwe gehört zu der Familie der Katzen.,3_short,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Der 1:=Löwe 2:=gehört 3:=zu 4:=der 5:=Familie 6:=der 7:=Katzen.,1,,The lion belongs to the cat family.,['# ::snt The lion belongs to the cat family.\n(b / belong-01\n      :ARG0 (l / lion)\n      :ARG1 (f / family\n            :mod (c / cat)))'],"[b, attr-instance, belong_01, attr-arg0, [l, attr-instance, lion], attr-arg1, [f, attr-instance, family, attr-mod, [c, attr-instance, cat]]]"
57,57,57,29276,lowe,Löwen leben in Afrika.,5_short,Tiere|Seiten_mit_defekten_Dateilinks,2023-06-29T12:17:58Z,ab62fc4b1975a3ebc0bd2c4dccf571d8,0:=Löwen 1:=leben 2:=in 3:=Afrika.,1,,Lions live in Africa.,"['# ::snt Lions live in Africa.\n(l / live-01\n      :ARG0 (l2 / lion)\n      :location (c / continent\n            :name (n / name\n                  :op1 ""Africa"")))']","[l, attr-instance, live_01, attr-arg0, [l2, attr-instance, lion], attr-location, [c, attr-instance, continent, attr-name, [n, attr-instance, name, attr-op1, ""africa""]]]"
58,58,58,29279,lsd,Und LSD macht nicht süchtig.,1_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-27T12:04:22Z,e800bebc9060331edfac65e663a55570,0:=Und 1:=LSD 2:=macht 3:=nicht 4:=süchtig.,1,,And LSD is not addictive.,"['# ::snt And LSD is not addictive.\n(a / and\n      :op2 (a2 / addictive-02\n            :polarity -\n            :ARG0 (s / small-molecule\n                  :name (n / name\n                        :op1 ""LSD""))))']","[a, attr-instance, and, attr-op2, [a2, attr-instance, addictive_02, attr-polarity, negative, attr-arg0, [s, attr-instance, small_molecule, attr-name, [n, attr-instance, name, attr-op1, ""lsd""]]]]"
59,59,59,29283,lsd,Viele von ihnen überprüfen ihre Glaubens-systeme.,5_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-27T12:04:22Z,e800bebc9060331edfac65e663a55570,0:=Viele 1:=von 2:=ihnen 3:=überprüfen 4:=ihre 5:=Glaubens-systeme.,1,,Many of them are examining their belief systems.,['# ::snt Many of them are examining their belief systems.\n(e / examine-01\n      :ARG0 (p / person\n            :quant (m / many)\n            :ARG1-of (ii / include-91\n                  :ARG2 (t / they)))\n      :ARG1 (s / system\n            :mod (b / believe-01)\n            :poss t))'],"[e, attr-instance, examine_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many], attr-arg1_of, [ii, attr-instance, include_91, attr-arg2, [t, attr-instance, they]]], attr-arg1, [s, attr-instance, system, attr-mod, [b, attr-instance, believe_01], attr-poss, t]]"
60,60,60,29284,lsd,Im Jahr 1971. \newline Die Vereinten Nationen verbieten LSD.,6_long,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-27T12:04:22Z,e800bebc9060331edfac65e663a55570,0:=Im 1:=Jahr 2:=1971. 3:=\newline 4:=Die 5:=Vereinten 6:=Nationen 7:=verbieten 8:=LSD.,2,"[[0, 1, 2], [5, 6, 7, 8]]",In 1971. \newline The United Nations bans LSD.,"['# ::snt In 1971.\n(d / date-entity\n      :year 1971)', '# ::snt \\newline The United Nations bans LSD.\n(b / ban-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 ""United""\n                  :op2 ""Nations""))\n      :ARG1 (s / small-molecule\n            :name (n2 / name\n                  :op1 ""LSD""))\n      :mod (n3 / newsline))']","[d, attr-instance, date_entity, attr-year, 1971]"
61,61,61,29285,lsd,Lyserg-säure-diethylamid ist ein künstlicher Wirk-stoff.,0_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-27T12:04:22Z,e800bebc9060331edfac65e663a55570,0:=Lyserg-säure-diethylamid 1:=ist 2:=ein 3:=künstlicher 4:=Wirk-stoff.,1,,Lysergic acid diethylamide is a synthetic active ingredient.,"['# ::snt Lysergic acid diethylamide is a synthetic active ingredient.\n(ii / ingredient\n      :ARG0-of (a / activity-06)\n      :mod (s / synthetic)\n      :domain (s2 / small-molecule\n            :name (n / name\n                  :op1 ""Lysergic""\n                  :op2 ""acid"")\n            :mod (d / diethylamide)))']","[ii, attr-instance, ingredient, attr-arg0_of, [a, attr-instance, activity_06], attr-mod, [s, attr-instance, synthetic], attr-domain, [s2, attr-instance, small_molecule, attr-name, [n, attr-instance, name, attr-op1, ""lysergic"", attr-op2, ""acid""], attr-mod, [d, attr-instance, diethylamide]]]"
62,62,62,29286,lsd,In natürlicher Form kommt LSD im Mutterkorn-alkaloiden vor.,1_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-27T12:04:22Z,e800bebc9060331edfac65e663a55570,0:=In 1:=natürlicher 2:=Form 3:=kommt 4:=LSD 5:=im 6:=Mutterkorn-alkaloiden 7:=vor.,2,"[[0, 1, 2], [3, 4, 5, 6, 7]]","In its natural form, LSD occurs in ergot alkaloids.","['# ::snt In its natural form, LSD occurs in ergot alkaloids.\n(h / have-part-91\n      :ARG1 (a / alkaloid\n            :mod (e / ergot))\n      :ARG2 (s / small-molecule\n            :name (n / name\n                  :op1 ""LSD""))\n      :manner (f / form\n            :ARG1-of (n2 / natural-03)\n            :poss s))']","[h, attr-instance, have_part_91, attr-arg1, [a, attr-instance, alkaloid, attr-mod, [e, attr-instance, ergot]], attr-arg2, [s, attr-instance, small_molecule, attr-name, [n, attr-instance, name, attr-op1, ""lsd""]], attr-manner, [f, attr-instance, form, attr-arg1_of, [n2, attr-instance, natural_03], attr-poss, s]]"
63,63,63,29287,lsd,Der LSD Wirk-stoff löst Halluzinationen aus.,2_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-27T12:04:22Z,e800bebc9060331edfac65e663a55570,0:=Der 1:=LSD 2:=Wirk-stoff 3:=löst 4:=Halluzinationen 5:=aus.,1,,The active ingredient LSD triggers hallucinations.,"['# ::snt The active ingredient LSD triggers hallucinations.\n(t / trigger-01\n      :ARG0 (ii / ingredient\n            :name (n / name\n                  :op1 ""LSD"")\n            :ARG0-of (a / activity-06))\n      :ARG1 (h / hallucinate-01))']","[t, attr-instance, trigger_01, attr-arg0, [ii, attr-instance, ingredient, attr-name, [n, attr-instance, name, attr-op1, ""lsd""], attr-arg0_of, [a, attr-instance, activity_06]], attr-arg1, [h, attr-instance, hallucinate_01]]"
64,64,64,29288,lsd,LSD gilt als Droge.,3_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-27T12:04:22Z,e800bebc9060331edfac65e663a55570,0:=LSD 1:=gilt 2:=als 3:=Droge.,1,,LSD is considered a drug.,"['# ::snt LSD is considered a drug.\n(c / consider-01\n      :ARG1 (d / drug\n            :domain (s / small-molecule\n                  :name (n / name\n                        :op1 ""LSD""))))']","[c, attr-instance, consider_01, attr-arg1, [d, attr-instance, drug, attr-domain, [s, attr-instance, small_molecule, attr-name, [n, attr-instance, name, attr-op1, ""lsd""]]]]"
65,65,65,29289,lsd,Und ist durch das Betäubungs-mittel-gesetz verboten.,4_short,Seiten_mit_defekten_Dateilinks|Ohne_Kategorie,2022-02-27T12:04:22Z,e800bebc9060331edfac65e663a55570,0:=Und 1:=ist 2:=durch 3:=das 4:=Betäubungs-mittel-gesetz 5:=verboten.,2,"[[1, 5], [2, 4]]",And is prohibited by the Narcotics Act.,"['# ::snt And is prohibited by the Narcotics Act.\n(a / and\n      :op2 (p / prohibit-01\n            :ARG0 (l / law\n                  :name (n / name\n                        :op1 ""Narcotics""\n                        :op2 ""Act""))\n            :ARG1 (ii / it)))']","[a, attr-instance, and, attr-op2, [p, attr-instance, prohibit_01, attr-arg0, [l, attr-instance, law, attr-name, [n, attr-instance, name, attr-op1, ""narcotics"", attr-op2, ""act""]], attr-arg1, [ii, attr-instance, it]]]"
66,66,66,29290,luddismus,"Menschen die an Luddismus glauben,  \newline nennt man Ludditen.",0_long,Geschichte|Politik|Technik,2021-06-26T08:51:07Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Menschen 1:=die 2:=an 3:=Luddismus 4:=glauben, 5:= 6:=\newline 7:=nennt 8:=man 9:=Ludditen.",2,"[[0, 7, 8, 9], [1, 2, 3, 4]]",People who believe in Luddism\newline are called Luddites.,"['# ::snt People who believe in Luddism\\newline are called Luddites.\n(c / call-01\n      :ARG1 (p / person\n            :ARG0-of (b / believe-01\n                  :ARG1 (t / thing\n                        :name (n / name\n                              :op1 ""Luddism""))))\n      :ARG2 (l / luddite))']","[c, attr-instance, call_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [b, attr-instance, believe_01, attr-arg1, [t, attr-instance, thing, attr-name, [n, attr-instance, name, attr-op1, ""luddism""]]]], attr-arg2, [l, attr-instance, luddite]]"
67,67,67,29291,luddismus,Eine einzelene Person nennt man Luddist.,1_long,Geschichte|Politik|Technik,2021-06-26T08:51:07Z,48f66906899cc4a9477b6c9e32ff4424,0:=Eine 1:=einzelene 2:=Person 3:=nennt 4:=man 5:=Luddist.,1,,An individual is called a Luddist.,['# ::snt An individual is called a Luddist.\n(c / call-01\n      :ARG1 (ii / individual)\n      :ARG2 (l / luddist))'],"[c, attr-instance, call_01, attr-arg1, [ii, attr-instance, individual], attr-arg2, [l, attr-instance, luddist]]"
68,68,68,29293,luddismus,Ein Luddit möchte lieber ohne viel Technik leben.,3_long,Geschichte|Politik|Technik,2021-06-26T08:51:07Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ein 1:=Luddit 2:=möchte 3:=lieber 4:=ohne 5:=viel 6:=Technik 7:=leben.,1,,A Luddite would rather live without much technology.,['# ::snt A Luddite would rather live without much technology.\n(p / prefer-01\n      :ARG0 (l / luddite)\n      :ARG1 (l2 / live-01\n            :ARG0 l\n            :manner (t / technology\n                  :polarity -\n                  :quant (m / much))))'],"[p, attr-instance, prefer_01, attr-arg0, [l, attr-instance, luddite], attr-arg1, [l2, attr-instance, live_01, attr-arg0, l, attr-manner, [t, attr-instance, technology, attr-polarity, negative, attr-quant, [m, attr-instance, much]]]]"
69,69,69,29295,luddismus,Das Wort Luddismus gibt es seit dem 19. Jahr-hundert.,5_long,Geschichte|Politik|Technik,2021-06-26T08:51:07Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Wort 2:=Luddismus 3:=gibt 4:=es 5:=seit 6:=dem 7:=19. 8:=Jahr-hundert.,1,,The word Luddism has been around since the 19th century.,"['# ::snt The word Luddism has been around since the 19th century.\n(e / exist-01\n      :ARG1 (w / word\n            :mod (s / string-entity\n                  :value ""Luddism""))\n      :time (s2 / since\n            :op1 (d / date-entity\n                  :century 19)))']","[e, attr-instance, exist_01, attr-arg1, [w, attr-instance, word, attr-mod, [s, attr-instance, string_entity, attr-value, ""luddism""]], attr-time, [s2, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-century, 19]]]"
70,70,70,29297,luddismus,Und sie wollen Maschinen kaputt machen.,7_long,Geschichte|Politik|Technik,2021-06-26T08:51:07Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=wollen 3:=Maschinen 4:=kaputt 5:=machen.,1,,And they want to break machines.,['# ::snt And they want to break machines.\n(a / and\n      :op2 (w / want-01\n            :ARG0 (t / they)\n            :ARG1 (b / break-01\n                  :ARG0 t\n                  :ARG1 (m / machine))))'],"[a, attr-instance, and, attr-op2, [w, attr-instance, want_01, attr-arg0, [t, attr-instance, they], attr-arg1, [b, attr-instance, break_01, attr-arg0, t, attr-arg1, [m, attr-instance, machine]]]]"
71,71,71,29298,luddismus,Und sie machen Proteste gegen Technik.,8_long,Geschichte|Politik|Technik,2021-06-26T08:51:07Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=sie 2:=machen 3:=Proteste 4:=gegen 5:=Technik.,1,,And they protest against technology.,['# ::snt And they protest against technology.\n(a / and\n      :op2 (p / protest-01\n            :ARG0 (t / they)\n            :ARG1 (t2 / technology)))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, protest_01, attr-arg0, [t, attr-instance, they], attr-arg1, [t2, attr-instance, technology]]]"
72,72,72,29299,luddismus,Luddismus ist wenn man neue Technik schlecht findet.,0_short,Geschichte|Politik|Technik,2021-06-26T08:51:07Z,48f66906899cc4a9477b6c9e32ff4424,0:=Luddismus 1:=ist 2:=wenn 3:=man 4:=neue 5:=Technik 6:=schlecht 7:=findet.,2,"[[0, 1], [2, 3, 4, 5, 6, 7]]",Luddism is when you think new technology is bad.,"['# ::snt Luddism is when you think new technology is bad.\n(t / thing\n      :name (n / name\n            :op1 ""Luddism"")\n      :domain (t2 / think-01\n            :ARG0 (y / you)\n            :ARG1 (b / bad-07\n                  :ARG1 (t3 / technology\n                        :ARG1-of (n2 / new-01)))))']","[t, attr-instance, thing, attr-name, [n, attr-instance, name, attr-op1, ""luddism""], attr-domain, [t2, attr-instance, think_01, attr-arg0, [y, attr-instance, you], attr-arg1, [b, attr-instance, bad_07, attr-arg1, [t3, attr-instance, technology, attr-arg1_of, [n2, attr-instance, new_01]]]]]"
73,73,73,29300,ludwig-lugmeier,Ludwig Lugmeier ist in Kochel geboren.,0_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ludwig 1:=Lugmeier 2:=ist 3:=in 4:=Kochel 5:=geboren.,1,,Ludwig Lugmeier was born in Kochel.,"['# ::snt Ludwig Lugmeier was born in Kochel.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Ludwig""\n                  :op2 ""Lugar""))\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""Kochel"")))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""ludwig"", attr-op2, ""lugar""]], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""kochel""]]]"
74,74,74,29301,ludwig-lugmeier,Er ist am 31. Juli geboren.,1_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=ist 2:=am 3:=31. 4:=Juli 5:=geboren.,1,,He was born on July 31st.,['# ::snt He was born on July 31st.\n(b / bear-02\n      :ARG1 (h / he)\n      :time (d / date-entity\n            :day 31\n            :month 7))'],"[b, attr-instance, bear_02, attr-arg1, [h, attr-instance, he], attr-time, [d, attr-instance, date_entity, attr-day, 31, attr-month, 7]]"
75,75,75,29302,ludwig-lugmeier,Im Jahr 1949. \newline Ludwig Lugmeier ist 59 Jahre alt.,2_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Im 1:=Jahr 2:=1949. 3:=\newline 4:=Ludwig 5:=Lugmeier 6:=ist 7:=59 8:=Jahre 9:=alt.,2,"[[0, 1, 2], [4, 5, 6, 7, 8, 9]]",In the year 1949. \newline Ludwig Lugmeier is 59 years old.,"['# ::snt In the year 1949.\n(d / date-entity\n      :year 1949)', '# ::snt \\newline Ludwig Lugmeier is 59 years old.\n(a / age-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Ludwig""\n                  :op2 ""Lugar"")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (l / line\n                        :ARG1-of (n2 / new-01))))\n      :ARG2 (t / temporal-quantity\n            :quant 59\n            :unit (y / year)))']","[d, attr-instance, date_entity, attr-year, 1949]"
76,76,76,29303,ludwig-lugmeier,Ludwig Lugmeier ist Schriftsteller.,3_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ludwig 1:=Lugmeier 2:=ist 3:=Schriftsteller.,1,,Ludwig Lugmeier is a writer.,"['# ::snt Ludwig Lugmeier is a writer.\n(p / person\n      :ARG0-of (w / write-01)\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Ludwig""\n                  :op2 ""Lugar"")))']","[p, attr-instance, person, attr-arg0_of, [w, attr-instance, write_01], attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""ludwig"", attr-op2, ""lugar""]]]"
77,77,77,29304,ludwig-lugmeier,Und er ist ein Millionen-dieb.,4_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=er 2:=ist 3:=ein 4:=Millionen-dieb.,1,,And he is a million dollar thief.,['# ::snt And he is a million dollar thief.\n(a / and\n      :op2 (p / person\n            :ARG0-of (s / steal-01\n                  :ARG1 (m / monetary-quantity\n                        :quant 1000000\n                        :unit (d / dollar)))\n            :domain (h / he)))'],"[a, attr-instance, and, attr-op2, [p, attr-instance, person, attr-arg0_of, [s, attr-instance, steal_01, attr-arg1, [m, attr-instance, monetary_quantity, attr-quant, 1000000, attr-unit, [d, attr-instance, dollar]]], attr-domain, [h, attr-instance, he]]]"
78,78,78,29305,ludwig-lugmeier,Weil er sehr viel Geld geklaut hat.,5_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Weil 1:=er 2:=sehr 3:=viel 4:=Geld 5:=geklaut 6:=hat.,1,,Because he stole a lot of money.,['# ::snt Because he stole a lot of money.\n(c / cause-01\n      :ARG0 (s / steal-01\n            :ARG0 (h / he)\n            :ARG1 (m / money\n                  :quant (l / lot))))'],"[c, attr-instance, cause_01, attr-arg0, [s, attr-instance, steal_01, attr-arg0, [h, attr-instance, he], attr-arg1, [m, attr-instance, money, attr-quant, [l, attr-instance, lot]]]]"
79,79,79,29306,ludwig-lugmeier,Er hat mit anderen zusammen einen Geld-transport über-fallen.,6_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=mit 3:=anderen 4:=zusammen 5:=einen 6:=Geld-transport 7:=über-fallen.,2,"[[0, 1, 6, 7], [2, 3, 4]]",He and others robbed a money transport.,['# ::snt He and others robbed a money transport.\n(r / rob-01\n      :ARG0 (a / and\n            :op1 (h / he)\n            :op2 (o / other))\n      :ARG1 (t / transport-01\n            :ARG1 (m / money)))'],"[r, attr-instance, rob_01, attr-arg0, [a, attr-instance, and, attr-op1, [h, attr-instance, he], attr-op2, [o, attr-instance, other]], attr-arg1, [t, attr-instance, transport_01, attr-arg1, [m, attr-instance, money]]]"
80,80,80,29307,ludwig-lugmeier,Er hat über 2 Millionen DM ge-klaut.,7_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Er 1:=hat 2:=über 3:=2 4:=Millionen 5:=DM 6:=ge-klaut.,1,,He stole over 2 million DM.,['# ::snt He stole over 2 million DM.\n(s / steal-01\n      :ARG0 (h / he)\n      :ARG1 (o / over\n            :op1 (m / monetary-quantity\n                  :quant 2000000\n                  :unit (d / DM))))'],"[s, attr-instance, steal_01, attr-arg0, [h, attr-instance, he], attr-arg1, [o, attr-instance, over, attr-op1, [m, attr-instance, monetary_quantity, attr-quant, 2000000, attr-unit, [d, attr-instance, dm]]]]"
81,81,81,29308,ludwig-lugmeier,Für seine Über-fälle musste er ins Gefängnis.,8_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Für 1:=seine 2:=Über-fälle 3:=musste 4:=er 5:=ins 6:=Gefängnis.,2,"[[0, 1, 2], [3, 4, 5, 6]]",He had to go to prison for his robberies.,['# ::snt He had to go to prison for his robberies.\n(o / obligate-01\n      :ARG2 (ii / imprison-01\n            :ARG1 (h / he)\n            :ARG3 (r / rob-01\n                  :ARG0 h)))'],"[o, attr-instance, obligate_01, attr-arg2, [ii, attr-instance, imprison_01, attr-arg1, [h, attr-instance, he], attr-arg3, [r, attr-instance, rob_01, attr-arg0, h]]]"
82,82,82,29311,ludwig-lugmeier,Und viele Sachen ge-klaut.,11_long,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=viele 2:=Sachen 3:=ge-klaut.,1,,And a lot of things were stolen.,['# ::snt And a lot of things were stolen.\n(a / and\n      :op2 (s / steal-01\n            :ARG1 (t / thing\n                  :quant (l / lot))))'],"[a, attr-instance, and, attr-op2, [s, attr-instance, steal_01, attr-arg1, [t, attr-instance, thing, attr-quant, [l, attr-instance, lot]]]]"
83,83,83,29312,ludwig-lugmeier,Ludwig Lugmeier ist ein bekannter Mann.,0_short,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ludwig 1:=Lugmeier 2:=ist 3:=ein 4:=bekannter 5:=Mann.,1,,Ludwig Lugmeier is a well-known man.,"['# ::snt Ludwig Lugmeier is a well-known man.\n(m / man\n      :ARG1-of (k / know-02\n            :degree (w / well))\n      :domain (p / person\n            :name (n / name\n                  :op1 ""Ludwig""\n                  :op2 ""Lugar"")))']","[m, attr-instance, man, attr-arg1_of, [k, attr-instance, know_02, attr-degree, [w, attr-instance, well]], attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""ludwig"", attr-op2, ""lugar""]]]"
84,84,84,29313,ludwig-lugmeier,"Er ist bekannt, weil er viel Geld ge-klaut hat.",1_short,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Er 1:=ist 2:=bekannt, 3:=weil 4:=er 5:=viel 6:=Geld 7:=ge-klaut 8:=hat.",2,"[[0, 1, 2], [3, 4, 5, 6, 7, 8]]",He is known for stealing a lot of money.,['# ::snt He is known for stealing a lot of money.\n(k / know-02\n      :ARG1 (h / he)\n      :ARG3 (s / steal-01\n            :ARG0 h\n            :ARG1 (m / money\n                  :quant (l / lot))))'],"[k, attr-instance, know_02, attr-arg1, [h, attr-instance, he], attr-arg3, [s, attr-instance, steal_01, attr-arg0, h, attr-arg1, [m, attr-instance, money, attr-quant, [l, attr-instance, lot]]]]"
85,85,85,29314,ludwig-lugmeier,Und weil er aus einem Fenster springt.,2_short,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Und 1:=weil 2:=er 3:=aus 4:=einem 5:=Fenster 6:=springt.,1,,And because he jumps out of a window.,['# ::snt And because he jumps out of a window.\n(a / and\n      :op2 (c / cause-01\n            :ARG0 (j / jump-03\n                  :ARG0 (h / he)\n                  :direction (o / out-of\n                        :op1 (w / window)))))'],"[a, attr-instance, and, attr-op2, [c, attr-instance, cause_01, attr-arg0, [j, attr-instance, jump_03, attr-arg0, [h, attr-instance, he], attr-direction, [o, attr-instance, out_of, attr-op1, [w, attr-instance, window]]]]]"
86,86,86,29315,ludwig-lugmeier,Während er im Gerichts-saal eine Strafe bekommt.,3_short,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Während 1:=er 2:=im 3:=Gerichts-saal 4:=eine 5:=Strafe 6:=bekommt.,2,"[[0, 1, 5, 6], [2, 3]]",While he is being punished in the courtroom.,['# ::snt While he is being punished in the courtroom.\n(b / be-temporally-at-91\n      :ARG2 (p / punish-01\n            :ARG1 (h / he)\n            :location (c / courtroom)))'],"[b, attr-instance, be_temporally_at_91, attr-arg2, [p, attr-instance, punish_01, attr-arg1, [h, attr-instance, he], attr-location, [c, attr-instance, courtroom]]]"
87,87,87,29316,ludwig-lugmeier,Nach dem Fenster-sprung flüchtet er.,4_short,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Nach 1:=dem 2:=Fenster-sprung 3:=flüchtet 4:=er.,1,,After jumping out of the window he escapes.,['# ::snt After jumping out of the window he escapes.\n(e / escape-01\n      :ARG0 (h / he)\n      :time (a / after\n            :op1 (j / jump-03\n                  :ARG0 h\n                  :direction (o / out-of\n                        :op1 (w / window)))))'],"[e, attr-instance, escape_01, attr-arg0, [h, attr-instance, he], attr-time, [a, attr-instance, after, attr-op1, [j, attr-instance, jump_03, attr-arg0, h, attr-direction, [o, attr-instance, out_of, attr-op1, [w, attr-instance, window]]]]]"
88,88,88,29317,ludwig-lugmeier,Ludwig Lugmeier schreibt Bücher.,5_short,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Ludwig 1:=Lugmeier 2:=schreibt 3:=Bücher.,1,,Ludwig Lugmeier writes books.,"['# ::snt Ludwig Lugmeier writes books.\n(w / write-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Ludwig""\n                  :op2 ""Lugar""))\n      :ARG1 (b / book))']","[w, attr-instance, write_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""ludwig"", attr-op2, ""lugar""]], attr-arg1, [b, attr-instance, book]]"
89,89,89,29318,ludwig-lugmeier,Bekannt sind die Bücher über sein Leben.,6_short,Personen,2018-07-20T10:42:43Z,48f66906899cc4a9477b6c9e32ff4424,0:=Bekannt 1:=sind 2:=die 3:=Bücher 4:=über 5:=sein 6:=Leben.,1,,The books about his life are well known.,['# ::snt The books about his life are well known.\n(k / know-02\n      :ARG1 (b / book\n            :topic (l / life\n                  :poss (h / he)))\n      :degree (w / well))'],"[k, attr-instance, know_02, attr-arg1, [b, attr-instance, book, attr-topic, [l, attr-instance, life, attr-poss, [h, attr-instance, he]]], attr-degree, [w, attr-instance, well]]"
90,90,90,29319,ludwik-lejzer-zamenhof,Ludwik Lejzer Zamenhof kommt am 15. Dezember 1859 auf die Welt.,0_long,Personen,2022-02-22T09:57:25Z,e800bebc9060331edfac65e663a55570,0:=Ludwik 1:=Lejzer 2:=Zamenhof 3:=kommt 4:=am 5:=15. 6:=Dezember 7:=1859 8:=auf 9:=die 10:=Welt.,1,,"Ludwik Lejzer Zamenhof was born on December 15, 1859.","['# ::snt Ludwik Lejzer Zamenhof was born on December 15, 1859.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Ludwik""\n                  :op2 ""Lejzer""\n                  :op3 ""Zamenhof""))\n      :time (d / date-entity\n            :year 1859\n            :month 12\n            :day 15))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""ludwik"", attr-op2, ""lejzer"", attr-op3, ""zamenhof""]], attr-time, [d, attr-instance, date_entity, attr-year, 1859, attr-month, 12, attr-day, 15]]"
91,91,91,29321,ludwik-lejzer-zamenhof,"Er stirbt am 14. April 1917 in Warschau, Polen.",2_long,Personen,2022-02-22T09:57:25Z,e800bebc9060331edfac65e663a55570,"0:=Er 1:=stirbt 2:=am 3:=14. 4:=April 5:=1917 6:=in 7:=Warschau, 8:=Polen.",3,"[[2, 3, 4, 5], [6, 7], [6, 8]]","He died on April 14, 1917 in Warsaw, Poland.","['# ::snt He died on April 14, 1917 in Warsaw, Poland.\n(d / die-01\n      :ARG1 (h / he)\n      :time (d2 / date-entity\n            :year 1917\n            :month 4\n            :day 14)\n      :location (c / city\n            :name (n / name\n                  :op1 ""Warsaw"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""Poland""))))']","[d, attr-instance, die_01, attr-arg1, [h, attr-instance, he], attr-time, [d2, attr-instance, date_entity, attr-year, 1917, attr-month, 4, attr-day, 14], attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""warsaw""], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""poland""]]]]"
92,92,92,29322,ludwik-lejzer-zamenhof,Im Jahr 1887. \newline Zamenhof gründet die Plan-sprache Esperanto.,3_long,Personen,2022-02-22T09:57:25Z,e800bebc9060331edfac65e663a55570,0:=Im 1:=Jahr 2:=1887. 3:=\newline 4:=Zamenhof 5:=gründet 6:=die 7:=Plan-sprache 8:=Esperanto.,2,"[[0, 1, 2], [4, 5, 7, 8]]",In the year 1887. \newline Zamenhof founded the planned language Esperanto.,"['# ::snt In the year 1887.\n(d / date-entity\n      :year 1887)', '# ::snt \\newline Zamenhof founded the planned language Esperanto.\n(f / found-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Newline""\n                  :op2 ""Zamenhof""))\n      :ARG1 (l / language\n            :name (n2 / name\n                  :op1 ""Es Esperanto"")\n            :ARG1-of (p2 / plan-01)))']","[d, attr-instance, date_entity, attr-year, 1887]"
93,93,93,29323,ludwik-lejzer-zamenhof,Er gebraucht das Pseudonym: \newline  \newline Doktoro Esperanto.,4_long,Personen,2022-02-22T09:57:25Z,e800bebc9060331edfac65e663a55570,0:=Er 1:=gebraucht 2:=das 3:=Pseudonym: 4:=\newline 5:= 6:=\newline 7:=Doktoro 8:=Esperanto.,1,,He uses the pseudonym: \newline \newline Doktoro Esperanto.,"['# ::snt He uses the pseudonym: \\newline \\newline Doktoro Esperanto.\n(u / use-01\n      :ARG0 (h / he)\n      :ARG1 (n / name\n            :op1 ""Doktoro""\n            :op2 ""Esanto"")\n      :ARG2-of (n2 / name-01\n            :ARG1 h))']","[u, attr-instance, use_01, attr-arg0, [h, attr-instance, he], attr-arg1, [n, attr-instance, name, attr-op1, ""doktoro"", attr-op2, ""esanto""], attr-arg2_of, [n2, attr-instance, name_01, attr-arg1, h]]"
94,94,94,29325,ludwik-lejzer-zamenhof,Sie nenne ihn den Zamenhof-tag.,6_long,Personen,2022-02-22T09:57:25Z,e800bebc9060331edfac65e663a55570,0:=Sie 1:=nenne 2:=ihn 3:=den 4:=Zamenhof-tag.,1,,They call it Zamenhof Day.,"['# ::snt They call it Zamenhof Day.\n(c / call-01\n      :ARG0 (t / they)\n      :ARG1 (ii / it)\n      :ARG2 (d / day\n            :name (n / name\n                  :op1 ""Zamenhof""\n                  :op2 ""Day"")))']","[c, attr-instance, call_01, attr-arg0, [t, attr-instance, they], attr-arg1, [ii, attr-instance, it], attr-arg2, [d, attr-instance, day, attr-name, [n, attr-instance, name, attr-op1, ""zamenhof"", attr-op2, ""day""]]]"
95,95,95,29326,ludwik-lejzer-zamenhof,Zamenhof macht seine Menschheits-lehre bekannt.,7_long,Personen,2022-02-22T09:57:25Z,e800bebc9060331edfac65e663a55570,0:=Zamenhof 1:=macht 2:=seine 3:=Menschheits-lehre 4:=bekannt.,1,,Zamenhof makes his teachings about humanity known.,"['# ::snt Zamenhof makes his teachings about humanity known.\n(m / make-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Zamenhof""))\n      :ARG1 (k / know-02\n            :ARG1 (t / teach-01\n                  :ARG0 p\n                  :ARG2 (h / humanity))))']","[m, attr-instance, make_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""zamenhof""]], attr-arg1, [k, attr-instance, know_02, attr-arg1, [t, attr-instance, teach_01, attr-arg0, p, attr-arg2, [h, attr-instance, humanity]]]]"
96,96,96,29328,ludwik-lejzer-zamenhof,Und zeit-weise ist er ein Zionist.,9_long,Personen,2022-02-22T09:57:25Z,e800bebc9060331edfac65e663a55570,0:=Und 1:=zeit-weise 2:=ist 3:=er 4:=ein 5:=Zionist.,1,,And at times he is a Zionist.,"['# ::snt And at times he is a Zionist.\n(a / and\n      :op2 (p / person\n            :mod (p2 / political-movement\n                  :name (n / name\n                        :op1 ""Zionism""))\n            :domain (h / he)\n            :frequency (a2 / at-times)))']","[a, attr-instance, and, attr-op2, [p, attr-instance, person, attr-mod, [p2, attr-instance, political_movement, attr-name, [n, attr-instance, name, attr-op1, ""zionism""]], attr-domain, [h, attr-instance, he], attr-frequency, [a2, attr-instance, at_times]]]"
97,97,97,29329,ludwik-lejzer-zamenhof,Er verfasst eine frühe Grammatik.,10_long,Personen,2022-02-22T09:57:25Z,e800bebc9060331edfac65e663a55570,0:=Er 1:=verfasst 2:=eine 3:=frühe 4:=Grammatik.,1,,He wrote an early grammar.,['# ::snt He wrote an early grammar.\n(w / write-01\n      :ARG0 (h / he)\n      :ARG1 (g / grammar\n            :time (e / early)))'],"[w, attr-instance, write_01, attr-arg0, [h, attr-instance, he], attr-arg1, [g, attr-instance, grammar, attr-time, [e, attr-instance, early]]]"
98,98,98,29331,ludwik-lejzer-zamenhof,Ludwik Lejzer Zamenhof war ein Augen-arzt.,0_short,Personen,2022-02-22T09:57:25Z,e800bebc9060331edfac65e663a55570,0:=Ludwik 1:=Lejzer 2:=Zamenhof 3:=war 4:=ein 5:=Augen-arzt.,1,,Ludwik Lejzer Zamenhof was an ophthalmologist.,"['# ::snt Ludwik Lejzer Zamenhof was an ophthalmologist.\n(h / have-org-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Ludwik""\n                  :op2 ""Lejzer""\n                  :op3 ""Zamenhof""))\n      :ARG2 (o / ophthalmologist))']","[h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""ludwik"", attr-op2, ""lejzer"", attr-op3, ""zamenhof""]], attr-arg2, [o, attr-instance, ophthalmologist]]"
99,99,99,29333,luftmatratze,"Eine Luftmatratze ist zum drauf-liegen, drauf-sitzen oder schwimmen.",0_long,Ohne_Kategorie,2014-08-04T09:39:39Z,af28a20dfb151690981ee13d72ce655c,"0:=Eine 1:=Luftmatratze 2:=ist 3:=zum 4:=drauf-liegen, 5:=drauf-sitzen 6:=oder 7:=schwimmen.",3,"[[4], [5], [7]]","An air mattress is for lying on, sitting on or floating.","['# ::snt An air mattress is for lying on, sitting on or floating.\n(h / have-purpose-91\n      :ARG1 (m / mattress\n            :mod (a / air))\n      :ARG2 (o / or\n            :op1 (l / lie-07\n                  :ARG2 m)\n            :op2 (s / sit-01\n                  :ARG1 m\n                  :ARG2 (o2 / on))\n            :op3 (f / float-01\n                  :ARG1 m)))']","[h, attr-instance, have_purpose_91, attr-arg1, [m, attr-instance, mattress, attr-mod, [a, attr-instance, air]], attr-arg2, [o, attr-instance, or, attr-op1, [l, attr-instance, lie_07, attr-arg2, m], attr-op2, [s, attr-instance, sit_01, attr-arg1, m, attr-arg2, [o2, attr-instance, on]], attr-op3, [f, attr-instance, float_01, attr-arg1, m]]]"
100,100,100,29334,luftmatratze,Luftmatratzen sind meistens aus Gummi.,1_long,Ohne_Kategorie,2014-08-04T09:39:39Z,af28a20dfb151690981ee13d72ce655c,0:=Luftmatratzen 1:=sind 2:=meistens 3:=aus 4:=Gummi.,1,,Air mattresses are mostly made of rubber.,['# ::snt Air mattresses are mostly made of rubber.\n(m / make-01\n      :ARG1 (m2 / mattress\n            :mod (a / air))\n      :ARG2 (r / rubber)\n      :mod (m3 / most))'],"[m, attr-instance, make_01, attr-arg1, [m2, attr-instance, mattress, attr-mod, [a, attr-instance, air]], attr-arg2, [r, attr-instance, rubber], attr-mod, [m3, attr-instance, most]]"
101,101,101,29335,luftmatratze,Sie haben ein Loch zum auf-blasen.,2_long,Ohne_Kategorie,2014-08-04T09:39:39Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=haben 2:=ein 3:=Loch 4:=zum 5:=auf-blasen.,2,"[[0, 1], [4, 5]]",They have a hole for inflating.,['# ::snt They have a hole for inflating.\n(h / have-03\n      :ARG0 (t / they)\n      :ARG1 (h2 / hole\n            :ARG2-of (ii / inflame-01)))'],"[h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [h2, attr-instance, hole, attr-arg2_of, [ii, attr-instance, inflame_01]]]"
102,102,102,29336,luftmatratze,Das Wort Luftmatratze ist ein Substantiv.,3_long,Ohne_Kategorie,2014-08-04T09:39:39Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=Wort 2:=Luftmatratze 3:=ist 4:=ein 5:=Substantiv.,2,"[[1], [5]]",The word air mattress is a noun.,['# ::snt The word air mattress is a noun.\n(n / noun\n      :domain (w / word\n            :mod (m / mattress\n                  :mod (a / air))))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [m, attr-instance, mattress, attr-mod, [a, attr-instance, air]]]]"
103,103,103,29337,luftmatratze,Es hat 2 Wörter: • Luft (damit wird sie gefüllt  zum Beispiel durch pusten),4_long,Ohne_Kategorie,2014-08-04T09:39:39Z,af28a20dfb151690981ee13d72ce655c,0:=Es 1:=hat 2:=2 3:=Wörter: 4:=• 5:=Luft 6:=(damit 7:=wird 8:=sie 9:=gefüllt 10:= 11:=zum 12:=Beispiel 13:=durch 14:=pusten),3,"[[0, 1, 2, 3, 5], [6, 7, 8, 9], [11, 12, 13, 14]]","It has 2 words: • Air (this is what it is filled with, for example by blowing)","['# ::snt It has 2 words: • Air (this is what it is filled with, for example by blowing)\n(w / word-01\n      :quant 2\n      :ARG1 (a / and\n            :op1 (a2 / air\n                  :ARG2-of (f / fill-01\n                        :ARG1 (ii / it)\n                        :ARG0-of (e / exemplify-01\n                              :ARG1 (b / blow-01))))\n            :op2 a2)\n      :ARG2 ii)']","[w, attr-instance, word_01, attr-quant, 2, attr-arg1, [a, attr-instance, and, attr-op1, [a2, attr-instance, air, attr-arg2_of, [f, attr-instance, fill_01, attr-arg1, [ii, attr-instance, it], attr-arg0_of, [e, attr-instance, exemplify_01, attr-arg1, [b, attr-instance, blow_01]]]], attr-op2, a2], attr-arg2, ii]"
104,104,104,29338,luftmatratze,Es hat 2 Wörter: • Matratze (zum drauf liegen),5_long,Ohne_Kategorie,2014-08-04T09:39:39Z,af28a20dfb151690981ee13d72ce655c,0:=Es 1:=hat 2:=2 3:=Wörter: 4:=• 5:=Matratze 6:=(zum 7:=drauf 8:=liegen),2,"[[0, 1, 2, 3, 4], [6, 7, 8]]",It has 2 words: • mattress (to lie on),['# ::snt It has 2 words: • mattress (to lie on)\n(w / word-01\n      :quant 2\n      :ARG1 (a / and\n            :op1 (m / mattress\n                  :purpose (l / lie-07\n                        :ARG2 (o / on)\n                        :op2-of a)))\n      :ARG2 (ii / it))'],"[w, attr-instance, word_01, attr-quant, 2, attr-arg1, [a, attr-instance, and, attr-op1, [m, attr-instance, mattress, attr-purpose, [l, attr-instance, lie_07, attr-arg2, [o, attr-instance, on], attr-op2_of, a]]], attr-arg2, [ii, attr-instance, it]]"
105,105,105,29339,luftmatratze,Eine Luftmatratze ist eine Matratze zum auf-blasen.,0_short,Ohne_Kategorie,2014-08-04T09:39:39Z,af28a20dfb151690981ee13d72ce655c,0:=Eine 1:=Luftmatratze 2:=ist 3:=eine 4:=Matratze 5:=zum 6:=auf-blasen.,2,"[[4], [5, 6]]",An air mattress is a mattress that can be inflated.,['# ::snt An air mattress is a mattress that can be inflated.\n(m / mattress\n      :mod (a / air)\n      :domain (m2 / mattress\n            :ARG1-of (ii / inflate-01\n                  :ARG1-of (p / possible-01))))'],"[m, attr-instance, mattress, attr-mod, [a, attr-instance, air], attr-domain, [m2, attr-instance, mattress, attr-arg1_of, [ii, attr-instance, inflate_01, attr-arg1_of, [p, attr-instance, possible_01]]]]"
106,106,106,29340,luftpolsterfolie,Die Luft-polster-folie hat Luft-blasen.,0_long,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Luft-polster-folie 2:=hat 3:=Luft-blasen.,1,,The bubble wrap has air bubbles.,['# ::snt The bubble wrap has air bubbles.\n(h / have-03\n      :ARG0 (w / wrap-01\n            :ARG1 (b / bubble))\n      :ARG1 (b2 / bubble\n            :mod (a / air)))'],"[h, attr-instance, have_03, attr-arg0, [w, attr-instance, wrap_01, attr-arg1, [b, attr-instance, bubble]], attr-arg1, [b2, attr-instance, bubble, attr-mod, [a, attr-instance, air]]]"
107,107,107,29341,luftpolsterfolie,Dadurch ist sie besunders gut zum: • verpacken,1_long,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Dadurch 1:=ist 2:=sie 3:=besunders 4:=gut 5:=zum: 6:=• 7:=verpacken,1,,This makes it particularly suitable for: • packing,['# ::snt This makes it particularly suitable for: • packing\n(m / make-02\n      :ARG0 (t / this)\n      :ARG1 (s / suitable-04\n            :ARG1 (ii / it)\n            :ARG2 (p / pack-01\n                  :ARG1 ii)\n            :mod (p2 / particular)))'],"[m, attr-instance, make_02, attr-arg0, [t, attr-instance, this], attr-arg1, [s, attr-instance, suitable_04, attr-arg1, [ii, attr-instance, it], attr-arg2, [p, attr-instance, pack_01, attr-arg1, ii], attr-mod, [p2, attr-instance, particular]]]"
108,108,108,29342,luftpolsterfolie,Dadurch ist sie besunders gut zum: • schützen,2_long,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Dadurch 1:=ist 2:=sie 3:=besunders 4:=gut 5:=zum: 6:=• 7:=schützen,1,,This makes it particularly good for: • protecting,['# ::snt This makes it particularly good for: • protecting\n(m / make-02\n      :ARG0 (t / this)\n      :ARG1 (g / good-04\n            :ARG1 (ii / it)\n            :ARG2 (p / protect-01)\n            :mod (p2 / particular)))'],"[m, attr-instance, make_02, attr-arg0, [t, attr-instance, this], attr-arg1, [g, attr-instance, good_04, attr-arg1, [ii, attr-instance, it], attr-arg2, [p, attr-instance, protect_01], attr-mod, [p2, attr-instance, particular]]]"
109,109,109,29343,luftpolsterfolie,Die Luftpolsterfolie wurde von diesen 2 Personen erfunden:,3_long,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Die 1:=Luftpolsterfolie 2:=wurde 3:=von 4:=diesen 5:=2 6:=Personen 7:=erfunden:,1,,Bubble wrap was invented by these 2 people:,['# ::snt Bubble wrap was invented by these 2 people:\n(ii / invent-01\n      :ARG0 (p / person\n            :quant 2\n            :mod (t / this))\n      :ARG1 (w / wrap-01\n            :ARG1 (b / bubble)))'],"[ii, attr-instance, invent_01, attr-arg0, [p, attr-instance, person, attr-quant, 2, attr-mod, [t, attr-instance, this]], attr-arg1, [w, attr-instance, wrap_01, attr-arg1, [b, attr-instance, bubble]]]"
110,110,110,29347,luftpolsterfolie,Spielen mit Luftpolsterfolie macht Spaß.,7_long,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Spielen 1:=mit 2:=Luftpolsterfolie 3:=macht 4:=Spaß.,1,,Playing with bubble wrap is fun.,['# ::snt Playing with bubble wrap is fun.\n(f / fun-01\n      :ARG1 (p / play-01\n            :ARG2 (w / wrap-01\n                  :ARG1 (b / bubble))))'],"[f, attr-instance, fun_01, attr-arg1, [p, attr-instance, play_01, attr-arg2, [w, attr-instance, wrap_01, attr-arg1, [b, attr-instance, bubble]]]]"
111,111,111,29348,luftpolsterfolie,Dabei werden die Blasen (mit Luft drinne) ausgedrückt.,8_long,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Dabei 1:=werden 2:=die 3:=Blasen 4:=(mit 5:=Luft 6:=drinne) 7:=ausgedrückt.,2,"[[0, 1, 3, 7], [4, 5, 6]]",The bubbles (with air inside) are squeezed out.,['# ::snt The bubbles (with air inside) are squeezed out.\n(s / squeeze-01\n      :ARG1 (b / bubble\n            :ARG0-of (h / have-03\n                  :ARG1 (a / air\n                        :location (ii / inside))))\n      :direction (o / out))'],"[s, attr-instance, squeeze_01, attr-arg1, [b, attr-instance, bubble, attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [a, attr-instance, air, attr-location, [ii, attr-instance, inside]]]], attr-direction, [o, attr-instance, out]]"
112,112,112,29349,luftpolsterfolie,Das gibt einen Knall.,9_long,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Das 1:=gibt 2:=einen 3:=Knall.,1,,That'll make a bang.,"[""# ::snt That'll make a bang.\n(m / make-02\n      :ARG0 (t / that)\n      :ARG1 (b / bang))""]","[m, attr-instance, make_02, attr-arg0, [t, attr-instance, that], attr-arg1, [b, attr-instance, bang]]"
113,113,113,29350,luftpolsterfolie,Für manche ist dieses Spiel Entspannung.,10_long,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Für 1:=manche 2:=ist 3:=dieses 4:=Spiel 5:=Entspannung.,1,,"For some, this game is relaxation.","['# ::snt For some, this game is relaxation.\n(r / relax-01\n      :ARG1 (s / some)\n      :domain (g / game\n            :mod (t / this)))']","[r, attr-instance, relax_01, attr-arg1, [s, attr-instance, some], attr-domain, [g, attr-instance, game, attr-mod, [t, attr-instance, this]]]"
114,114,114,29351,luftpolsterfolie,Kleider \newline Manche basteln sich aus Luftpolsterfolie Kleider zum anziehen.,11_long,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Kleider 1:=\newline 2:=Manche 3:=basteln 4:=sich 5:=aus 6:=Luftpolsterfolie 7:=Kleider 8:=zum 9:=anziehen.,2,"[[5, 6], [7, 8, 9]]",Dresses \newline Some people make dresses out of bubble wrap.,['# ::snt Dresses \\newline Some people make dresses out of bubble wrap.\n(m / multi-sentence\n      :snt1 (d / dress)\n      :snt2 (m2 / make-01\n            :ARG0 (p / person\n                  :mod (s / some))\n            :ARG1 (d2 / dress)\n            :ARG2 (w / wrap\n                  :mod (b / bubble))))'],"[m, attr-instance, multi_sentence, attr-snt1, [d, attr-instance, dress], attr-snt2, [m2, attr-instance, make_01, attr-arg0, [p, attr-instance, person, attr-mod, [s, attr-instance, some]], attr-arg1, [d2, attr-instance, dress], attr-arg2, [w, attr-instance, wrap, attr-mod, [b, attr-instance, bubble]]]]"
115,115,115,29352,luftpolsterfolie,Eine Luftpolsterfolie wird benutzt um: • etwas zu verpacken (zum Beispiel in einem Karton),0_short,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Luftpolsterfolie 2:=wird 3:=benutzt 4:=um: 5:=• 6:=etwas 7:=zu 8:=verpacken 9:=(zum 10:=Beispiel 11:=in 12:=einem 13:=Karton),3,"[[1, 2, 3], [4, 6, 7, 8], [9, 10, 11, 13]]",Bubble wrap is used to: • pack something (for example in a box),['# ::snt Bubble wrap is used to: • pack something (for example in a box)\n(u / use-02\n      :ARG1 (w / wrap-01\n            :ARG1 (b / bubble))\n      :ARG2 (p / pack-01\n            :ARG1 (s / something\n                  :example (b2 / box)\n                  :ARG2-of p)))'],"[u, attr-instance, use_02, attr-arg1, [w, attr-instance, wrap_01, attr-arg1, [b, attr-instance, bubble]], attr-arg2, [p, attr-instance, pack_01, attr-arg1, [s, attr-instance, something, attr-example, [b2, attr-instance, box], attr-arg2_of, p]]]"
116,116,116,29353,luftpolsterfolie,Eine Luftpolsterfolie wird benutzt um: • etwas zu schützen (damit es nicht kaputt geht),1_short,Verpackung,2014-04-21T08:23:12Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Luftpolsterfolie 2:=wird 3:=benutzt 4:=um: 5:=• 6:=etwas 7:=zu 8:=schützen 9:=(damit 10:=es 11:=nicht 12:=kaputt 13:=geht),3,"[[1, 2, 3], [4, 6, 7, 8], [9, 10, 11, 12, 13]]",Bubble wrap is used to: • protect something (so that it doesn't break),"[""# ::snt Bubble wrap is used to: • protect something (so that it doesn't break)\n(u / use-02\n      :ARG1 (w / wrap-01\n            :ARG1 (u2 / ubble))\n      :ARG2 (p / protect-01\n            :ARG1 (s / something)\n            :purpose (b / break-01\n                  :polarity -\n                  :ARG1 s)))""]","[u, attr-instance, use_02, attr-arg1, [w, attr-instance, wrap_01, attr-arg1, [u2, attr-instance, ubble]], attr-arg2, [p, attr-instance, protect_01, attr-arg1, [s, attr-instance, something], attr-purpose, [b, attr-instance, break_01, attr-polarity, negative, attr-arg1, s]]]"
117,117,117,29354,luft,Wir brauchen Luft zum Atmen.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-06-21T10:12:18Z,a9e8f3b2ca9f3480d32cb3faf77aabb9,0:=Wir 1:=brauchen 2:=Luft 3:=zum 4:=Atmen.,1,,We need air to breathe.,['# ::snt We need air to breathe.\n(n / need-01\n      :ARG0 (w / we)\n      :ARG1 (a / air)\n      :purpose (b / breathe-01\n            :ARG0 w))'],"[n, attr-instance, need_01, attr-arg0, [w, attr-instance, we], attr-arg1, [a, attr-instance, air], attr-purpose, [b, attr-instance, breathe_01, attr-arg0, w]]"
118,118,118,29357,luft,Diese Stoffe brauchen wir zum Über-leben.,3_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-06-21T10:12:18Z,a9e8f3b2ca9f3480d32cb3faf77aabb9,0:=Diese 1:=Stoffe 2:=brauchen 3:=wir 4:=zum 5:=Über-leben.,1,,We need these substances to survive.,['# ::snt We need these substances to survive.\n(n / need-01\n      :ARG0 (w / we)\n      :ARG1 (s / substance\n            :mod (t / this))\n      :purpose (s2 / survive-01\n            :ARG0 w))'],"[n, attr-instance, need_01, attr-arg0, [w, attr-instance, we], attr-arg1, [s, attr-instance, substance, attr-mod, [t, attr-instance, this]], attr-purpose, [s2, attr-instance, survive_01, attr-arg0, w]]"
119,119,119,29358,luft,Luft kann man nicht sehen.,4_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-06-21T10:12:18Z,a9e8f3b2ca9f3480d32cb3faf77aabb9,0:=Luft 1:=kann 2:=man 3:=nicht 4:=sehen.,1,,You can't see air.,"[""# ::snt You can't see air.\n(p / possible-01\n      :polarity -\n      :ARG1 (s / see-01\n            :ARG0 (y / you)\n            :ARG1 (a / air)))""]","[p, attr-instance, possible_01, attr-polarity, negative, attr-arg1, [s, attr-instance, see_01, attr-arg0, [y, attr-instance, you], attr-arg1, [a, attr-instance, air]]]"
120,120,120,29359,luft,Luft ist überall um uns herum.,5_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-06-21T10:12:18Z,a9e8f3b2ca9f3480d32cb3faf77aabb9,0:=Luft 1:=ist 2:=überall 3:=um 4:=uns 5:=herum.,2,"[[2], [3, 4, 5]]",Air is all around us.,['# ::snt Air is all around us.\n(b / be-located-at-91\n      :ARG1 (a / air)\n      :ARG2 (a2 / around\n            :op1 (w / we)\n            :mod (a3 / all)))'],"[b, attr-instance, be_located_at_91, attr-arg1, [a, attr-instance, air], attr-arg2, [a2, attr-instance, around, attr-op1, [w, attr-instance, we], attr-mod, [a3, attr-instance, all]]]"
121,121,121,29360,luft,Wir spüren die Luft als Wind.,6_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2021-06-21T10:12:18Z,a9e8f3b2ca9f3480d32cb3faf77aabb9,0:=Wir 1:=spüren 2:=die 3:=Luft 4:=als 5:=Wind.,1,,We feel the air as wind.,['# ::snt We feel the air as wind.\n(f / feel-01\n      :ARG0 (w / we)\n      :ARG1 (a / air)\n      :ARG2 (w2 / wind))'],"[f, attr-instance, feel_01, attr-arg0, [w, attr-instance, we], attr-arg1, [a, attr-instance, air], attr-arg2, [w2, attr-instance, wind]]"
122,122,122,29361,lugenpresse,Das Wort wird oft von PEGIDA benutzt.,0_long,Ohne_Kategorie,2015-01-13T10:59:41Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=Wort 2:=wird 3:=oft 4:=von 5:=PEGIDA 6:=benutzt.,1,,The word is often used by PEGIDA.,"['# ::snt The word is often used by PEGIDA.\n(u / use-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 ""PEGIDA""))\n      :ARG1 (w / word)\n      :frequency (o2 / often))']","[u, attr-instance, use_01, attr-arg0, [o, attr-instance, organization, attr-name, [n, attr-instance, name, attr-op1, ""pegida""]], attr-arg1, [w, attr-instance, word], attr-frequency, [o2, attr-instance, often]]"
123,123,123,29362,lugenpresse,PEGIDA sagt: alles was in der Zeitung über PEGIDA steht ist falsch.,1_long,Ohne_Kategorie,2015-01-13T10:59:41Z,af28a20dfb151690981ee13d72ce655c,0:=PEGIDA 1:=sagt: 2:=alles 3:=was 4:=in 5:=der 6:=Zeitung 7:=über 8:=PEGIDA 9:=steht 10:=ist 11:=falsch.,3,"[[0, 1], [2, 3, 4, 6, 7, 8, 9], [2, 10, 11]]",PEGIDA says: everything that is written in the newspaper about PEGIDA is wrong.,"['# ::snt PEGIDA says: everything that is written in the newspaper about PEGIDA is wrong.\n(s / say-01\n      :ARG0 (c / city\n            :name (n / name\n                  :op1 ""PEGIDA""))\n      :ARG1 (w / wrong-04\n            :ARG1 (e / everything\n                  :ARG1-of (w2 / write-01\n                        :medium (n2 / newspaper\n                              :topic c)))))']","[s, attr-instance, say_01, attr-arg0, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""pegida""]], attr-arg1, [w, attr-instance, wrong_04, attr-arg1, [e, attr-instance, everything, attr-arg1_of, [w2, attr-instance, write_01, attr-medium, [n2, attr-instance, newspaper, attr-topic, c]]]]]"
124,124,124,29363,lugenpresse,Sie sagen: die Zeitungen wollen etwas verstecken.,2_long,Ohne_Kategorie,2015-01-13T10:59:41Z,af28a20dfb151690981ee13d72ce655c,0:=Sie 1:=sagen: 2:=die 3:=Zeitungen 4:=wollen 5:=etwas 6:=verstecken.,2,"[[0, 1], [3, 4, 5, 6]]",They say the newspapers want to hide something.,['# ::snt They say the newspapers want to hide something.\n(s / say-01\n      :ARG0 (t / they)\n      :ARG1 (w / want-01\n            :ARG0 (n / newspaper)\n            :ARG1 (h / hide-01\n                  :ARG0 n\n                  :ARG1 (s2 / something))))'],"[s, attr-instance, say_01, attr-arg0, [t, attr-instance, they], attr-arg1, [w, attr-instance, want_01, attr-arg0, [n, attr-instance, newspaper], attr-arg1, [h, attr-instance, hide_01, attr-arg0, n, attr-arg1, [s2, attr-instance, something]]]]"
125,125,125,29364,lugenpresse,Darum sagen sie: Lügen-presse.,3_long,Ohne_Kategorie,2015-01-13T10:59:41Z,af28a20dfb151690981ee13d72ce655c,0:=Darum 1:=sagen 2:=sie: 3:=Lügen-presse.,1,,That's why they say: lying press.,"[""# ::snt That's why they say: lying press.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (s / say-01\n            :ARG0 (t2 / they)\n            :ARG1 (p / press\n                  :ARG0-of (l / lie-08))))""]","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [s, attr-instance, say_01, attr-arg0, [t2, attr-instance, they], attr-arg1, [p, attr-instance, press, attr-arg0_of, [l, attr-instance, lie_08]]]]"
126,126,126,29365,lugenpresse,Das Wort wird oft beim Thema Nationalsozialismus benutzt.,4_long,Ohne_Kategorie,2015-01-13T10:59:41Z,af28a20dfb151690981ee13d72ce655c,0:=Das 1:=Wort 2:=wird 3:=oft 4:=beim 5:=Thema 6:=Nationalsozialismus 7:=benutzt.,1,,The word is often used in connection with National Socialism.,"['# ::snt The word is often used in connection with National Socialism.\n(u / use-01\n      :ARG1 (w / word)\n      :ARG2 (c / connect-01\n            :ARG1 w\n            :ARG2 (p / political-movement\n                  :name (n / name\n                        :op1 ""National""\n                        :op2 ""Socialism"")))\n      :frequency (o / often))']","[u, attr-instance, use_01, attr-arg1, [w, attr-instance, word], attr-arg2, [c, attr-instance, connect_01, attr-arg1, w, attr-arg2, [p, attr-instance, political_movement, attr-name, [n, attr-instance, name, attr-op1, ""national"", attr-op2, ""socialism""]]], attr-frequency, [o, attr-instance, often]]"
127,127,127,29366,lugenpresse,"Das heißt: jemand der etwas böses oder schlechtes macht, \newline möchte nicht das andere darüber schreiben.",5_long,Ohne_Kategorie,2015-01-13T10:59:41Z,af28a20dfb151690981ee13d72ce655c,"0:=Das 1:=heißt: 2:=jemand 3:=der 4:=etwas 5:=böses 6:=oder 7:=schlechtes 8:=macht, 9:=\newline 10:=möchte 11:=nicht 12:=das 13:=andere 14:=darüber 15:=schreiben.",4,"[[2, 10, 11], [12, 13, 14, 15], [3, 4, 5, 8], [3, 4, 7, 8]]","That is, someone who does something evil or bad doesn't want others to write about it.","[""# ::snt That is, someone who does something evil or bad doesn't want others to write about it.\n(m / mean-01\n      :ARG2 (w / want-01\n            :polarity -\n            :ARG0 (s / someone\n                  :ARG0-of (d / do-02\n                        :ARG1 (s2 / something\n                              :mod (o / or\n                                    :op1 (e / evil)\n                                    :op2 (b / bad-07)))))\n            :ARG1 (w2 / write-01\n                  :ARG0 (o2 / other)\n                  :ARG1 s2)))""]","[m, attr-instance, mean_01, attr-arg2, [w, attr-instance, want_01, attr-polarity, negative, attr-arg0, [s, attr-instance, someone, attr-arg0_of, [d, attr-instance, do_02, attr-arg1, [s2, attr-instance, something, attr-mod, [o, attr-instance, or, attr-op1, [e, attr-instance, evil], attr-op2, [b, attr-instance, bad_07]]]]], attr-arg1, [w2, attr-instance, write_01, attr-arg0, [o2, attr-instance, other], attr-arg1, s2]]]"
128,128,128,29367,lugenpresse,Darum benutzen solche Menschen manchmal das Wort Lügen-presse.,6_long,Ohne_Kategorie,2015-01-13T10:59:41Z,af28a20dfb151690981ee13d72ce655c,0:=Darum 1:=benutzen 2:=solche 3:=Menschen 4:=manchmal 5:=das 6:=Wort 7:=Lügen-presse.,1,,That is why such people sometimes use the term “lying press”.,['# ::snt That is why such people sometimes use the term “lying press”.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (u / use-01\n            :ARG0 (p / person\n                  :mod (s / such))\n            :ARG1 (t2 / term-01\n                  :ARG1 (p2 / press\n                        :ARG0-of (l / lie-08)))\n            :frequency (s2 / sometimes)))'],"[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [u, attr-instance, use_01, attr-arg0, [p, attr-instance, person, attr-mod, [s, attr-instance, such]], attr-arg1, [t2, attr-instance, term_01, attr-arg1, [p2, attr-instance, press, attr-arg0_of, [l, attr-instance, lie_08]]], attr-frequency, [s2, attr-instance, sometimes]]]"
129,129,129,29368,lugenpresse,Lügenpresse ist ein Unwort.,0_short,Ohne_Kategorie,2015-01-13T10:59:41Z,af28a20dfb151690981ee13d72ce655c,0:=Lügenpresse 1:=ist 2:=ein 3:=Unwort.,1,,Lying press is a dirty word.,['# ::snt Lying press is a dirty word.\n(w / word\n      :ARG1-of (d / dirty-02)\n      :domain (l / lie-08\n            :ARG1 (p / press)))'],"[w, attr-instance, word, attr-arg1_of, [d, attr-instance, dirty_02], attr-domain, [l, attr-instance, lie_08, attr-arg1, [p, attr-instance, press]]]"
130,130,130,29369,lugenpresse,Es heißt: was in der Zeitung steht ist falsch.,1_short,Ohne_Kategorie,2015-01-13T10:59:41Z,af28a20dfb151690981ee13d72ce655c,0:=Es 1:=heißt: 2:=was 3:=in 4:=der 5:=Zeitung 6:=steht 7:=ist 8:=falsch.,2,"[[1, 2, 5, 6], [7, 8]]",They say: what is in the newspaper is wrong.,['# ::snt They say: what is in the newspaper is wrong.\n(s / say-01\n      :ARG0 (t / they)\n      :ARG1 (w / wrong-04\n            :ARG1 (t2 / thing\n                  :location (n / newspaper))))'],"[s, attr-instance, say_01, attr-arg0, [t, attr-instance, they], attr-arg1, [w, attr-instance, wrong_04, attr-arg1, [t2, attr-instance, thing, attr-location, [n, attr-instance, newspaper]]]]"
131,131,131,29370,luge,Eine Lüge ist: \newline Wenn Menschen den Inhalt vom Satz für falsch halten.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Eine 1:=Lüge 2:=ist: 3:=\newline 4:=Wenn 5:=Menschen 6:=den 7:=Inhalt 8:=vom 9:=Satz 10:=für 11:=falsch 12:=halten.,2,"[[1, 2], [4, 5, 7, 8, 9, 10, 11, 12]]",A lie is: \newline When people believe the content of the sentence to be false.,"['# ::snt A lie is: \\newline When people believe the content of the sentence to be false.\n(l / lie-08\n      :ARG1 (s / string-entity\n            :value ""newline""\n            :time (b / believe-01\n                  :ARG0 (p / person)\n                  :ARG1 (f / false\n                        :domain (t / thing\n                              :ARG1-of (c / contain-01\n                                    :ARG0 (s2 / sentence)))))))']","[l, attr-instance, lie_08, attr-arg1, [s, attr-instance, string_entity, attr-value, ""newline"", attr-time, [b, attr-instance, believe_01, attr-arg0, [p, attr-instance, person], attr-arg1, [f, attr-instance, false, attr-domain, [t, attr-instance, thing, attr-arg1_of, [c, attr-instance, contain_01, attr-arg0, [s2, attr-instance, sentence]]]]]]]"
132,132,132,29371,luge,"Die Menschen denken dann, dass der Inhalt vom Satz mit Absicht falsch ist.",1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,"0:=Die 1:=Menschen 2:=denken 3:=dann, 4:=dass 5:=der 6:=Inhalt 7:=vom 8:=Satz 9:=mit 10:=Absicht 11:=falsch 12:=ist.",1,,People then think that the content of the sentence is intentionally false.,['# ::snt People then think that the content of the sentence is intentionally false.\n(t / think-01\n      :ARG0 (p / person)\n      :ARG1 (f / false\n            :domain (t2 / thing\n                  :ARG1-of (c / contain-01\n                        :ARG0 (s / sentence)))\n            :ARG1-of (ii / intend-01))\n      :time (t3 / then))'],"[t, attr-instance, think_01, attr-arg0, [p, attr-instance, person], attr-arg1, [f, attr-instance, false, attr-domain, [t2, attr-instance, thing, attr-arg1_of, [c, attr-instance, contain_01, attr-arg0, [s, attr-instance, sentence]]], attr-arg1_of, [ii, attr-instance, intend_01]], attr-time, [t3, attr-instance, then]]"
133,133,133,29372,luge,Man sagt auch: \newline Der Inhalt vom Satz ist gelogen.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Man 1:=sagt 2:=auch: 3:=\newline 4:=Der 5:=Inhalt 6:=vom 7:=Satz 8:=ist 9:=gelogen.,1,,One also says: \newline The content of the sentence is a lie.,['# ::snt One also says: \\newline The content of the sentence is a lie.\n(s / say-01\n      :ARG0 (o / one)\n      :ARG1 (l / lie-08\n            :ARG1 (t / thing\n                  :ARG1-of (c / contain-01\n                        :ARG0 (s2 / sentence))))\n      :mod (a / also))'],"[s, attr-instance, say_01, attr-arg0, [o, attr-instance, one], attr-arg1, [l, attr-instance, lie_08, attr-arg1, [t, attr-instance, thing, attr-arg1_of, [c, attr-instance, contain_01, attr-arg0, [s2, attr-instance, sentence]]]], attr-mod, [a, attr-instance, also]]"
134,134,134,29373,luge,"Wer entscheidet, was eine Lüge ist?",3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,"0:=Wer 1:=entscheidet, 2:=was 3:=eine 4:=Lüge 5:=ist?",2,"[[0, 1], [2, 4, 5]]",Who decides what is a lie?,['# ::snt Who decides what is a lie?\n(d / decide-01\n      :ARG0 (a / amr-unknown)\n      :ARG1 (t / thing\n            :ARG1-of (l / lie-08)))'],"[d, attr-instance, decide_01, attr-arg0, [a, attr-instance, amr_unknown], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [l, attr-instance, lie_08]]]"
135,135,135,29374,luge,"Wer entscheidet, was Wahrheit ist?",4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,"0:=Wer 1:=entscheidet, 2:=was 3:=Wahrheit 4:=ist?",2,"[[0, 1], [2, 3, 4]]",Who decides what is truth?,['# ::snt Who decides what is truth?\n(d / decide-01\n      :ARG0 (a / amr-unknown)\n      :ARG1 (t / truth))'],"[d, attr-instance, decide_01, attr-arg0, [a, attr-instance, amr_unknown], attr-arg1, [t, attr-instance, truth]]"
136,136,136,29375,luge,Das hängt vom Glauben und vom Wissen der Menschen ab.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Das 1:=hängt 2:=vom 3:=Glauben 4:=und 5:=vom 6:=Wissen 7:=der 8:=Menschen 9:=ab.,2,"[[2, 3], [5, 6]]",That depends on people's faith and knowledge.,"[""# ::snt That depends on people's faith and knowledge.\n(d / depend-01\n      :ARG0 (t / that)\n      :ARG1 (a / and\n            :op1 (f / faith\n                  :poss (p / person))\n            :op2 (k / know-01\n                  :ARG0 p)))""]","[d, attr-instance, depend_01, attr-arg0, [t, attr-instance, that], attr-arg1, [a, attr-instance, and, attr-op1, [f, attr-instance, faith, attr-poss, [p, attr-instance, person]], attr-op2, [k, attr-instance, know_01, attr-arg0, p]]]"
137,137,137,29376,luge,Lügen sind zum Beispiel: • Gras ist blau.,6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Lügen 1:=sind 2:=zum 3:=Beispiel: 4:=• 5:=Gras 6:=ist 7:=blau.,2,"[[0, 1, 2, 3], [5, 6, 7]]",Examples of lies include: • Grass is blue.,['# ::snt Examples of lies include: • Grass is blue.\n(ii / include-01\n      :ARG1 (b / blue\n            :domain (g / grass))\n      :ARG2 (t / thing\n            :ARG1-of (l / lie-08)))'],"[ii, attr-instance, include_01, attr-arg1, [b, attr-instance, blue, attr-domain, [g, attr-instance, grass]], attr-arg2, [t, attr-instance, thing, attr-arg1_of, [l, attr-instance, lie_08]]]"
138,138,138,29377,luge, • Nach Montag kommt Mittwoch.,7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:= 1:=• 2:=Nach 3:=Montag 4:=kommt 5:=Mittwoch.,1,,• After Monday comes Wednesday.,['# ::snt • After Monday comes Wednesday.\n(c / come-01\n      :ARG1 (d / date-entity\n            :weekday (w / wednesday))\n      :time (a / after\n            :op1 (d2 / date-entity\n                  :weekday (m / monday))))'],"[c, attr-instance, come_01, attr-arg1, [d, attr-instance, date_entity, attr-weekday, [w, attr-instance, wednesday]], attr-time, [a, attr-instance, after, attr-op1, [d2, attr-instance, date_entity, attr-weekday, [m, attr-instance, monday]]]]"
139,139,139,29378,luge, • Schnee ist nicht weiß.,8_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:= 1:=• 2:=Schnee 3:=ist 4:=nicht 5:=weiß.,1,,• Snow is not white.,['# ::snt • Snow is not white.\n(w / white-02\n      :polarity -\n      :ARG1 (s / snow))'],"[w, attr-instance, white_02, attr-polarity, negative, attr-arg1, [s, attr-instance, snow]]"
140,140,140,29379,luge,Wer eine Lüge sagt oder schreibt weiß: \newline Das ist nicht die Wahrheit.,9_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Wer 1:=eine 2:=Lüge 3:=sagt 4:=oder 5:=schreibt 6:=weiß: 7:=\newline 8:=Das 9:=ist 10:=nicht 11:=die 12:=Wahrheit.,4,"[[0, 2, 3], [0, 2, 5], [6], [8, 9, 10, 12]]",Whoever says or writes a lie knows: \newline That is not the truth.,['# ::snt Whoever says or writes a lie knows: \\newline That is not the truth.\n(k / know-01\n      :ARG0 (o / or\n            :op1 (p / person\n                  :ARG0-of (s / say-01\n                        :ARG1 (l / lie-08)))\n            :op2 (p2 / person\n                  :ARG0-of (w / write-01\n                        :ARG1 (l2 / lie-08))))\n      :ARG1 (t / true-01\n            :polarity -\n            :ARG1 (t2 / that))\n      :ARG1-of (n / new-line-04))'],"[k, attr-instance, know_01, attr-arg0, [o, attr-instance, or, attr-op1, [p, attr-instance, person, attr-arg0_of, [s, attr-instance, say_01, attr-arg1, [l, attr-instance, lie_08]]], attr-op2, [p2, attr-instance, person, attr-arg0_of, [w, attr-instance, write_01, attr-arg1, [l2, attr-instance, lie_08]]]], attr-arg1, [t, attr-instance, true_01, attr-polarity, negative, attr-arg1, [t2, attr-instance, that]], attr-arg1_of, [n, attr-instance, new_line_04]]"
141,141,141,29380,luge,Die Person lügt um andere Menschen zu täuschen.,10_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Die 1:=Person 2:=lügt 3:=um 4:=andere 5:=Menschen 6:=zu 7:=täuschen.,2,"[[1, 2], [3, 4, 5, 6, 7]]",The person lies to deceive other people.,['# ::snt The person lies to deceive other people.\n(l / lie-08\n      :ARG0 (p / person)\n      :purpose (d / deceive-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                  :mod (o / other))))'],"[l, attr-instance, lie_08, attr-arg0, [p, attr-instance, person], attr-purpose, [d, attr-instance, deceive_01, attr-arg0, p, attr-arg1, [p2, attr-instance, person, attr-mod, [o, attr-instance, other]]]]"
142,142,142,29381,luge,Man nennt die Person Lügner.,11_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Man 1:=nennt 2:=die 3:=Person 4:=Lügner.,1,,The person is called a liar.,['# ::snt The person is called a liar.\n(c / call-01\n      :ARG1 (p / person)\n      :ARG2 (l / lie-08\n            :ARG0 p))'],"[c, attr-instance, call_01, attr-arg1, [p, attr-instance, person], attr-arg2, [l, attr-instance, lie_08, attr-arg0, p]]"
143,143,143,29382,luge,In Märchen und Geschichten gibt es auch Lügner.,12_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=In 1:=Märchen 2:=und 3:=Geschichten 4:=gibt 5:=es 6:=auch 7:=Lügner.,2,"[[1], [3]]",There are also liars in fairy tales and stories.,['# ::snt There are also liars in fairy tales and stories.\n(p / person\n      :ARG0-of (l / lie-08)\n      :location (a / and\n            :op1 (t / tale\n                  :mod (f / fairy))\n            :op2 (s / story))\n      :mod (a2 / also))'],"[p, attr-instance, person, attr-arg0_of, [l, attr-instance, lie_08], attr-location, [a, attr-instance, and, attr-op1, [t, attr-instance, tale, attr-mod, [f, attr-instance, fairy]], attr-op2, [s, attr-instance, story]], attr-mod, [a2, attr-instance, also]]"
144,144,144,29387,luge,Es gibt viele Gründe für Lügen.,17_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Es 1:=gibt 2:=viele 3:=Gründe 4:=für 5:=Lügen.,1,,There are many reasons for lying.,['# ::snt There are many reasons for lying.\n(r / reason\n      :quant (m / many)\n      :ARG0-of (c / cause-01\n            :ARG1 (l / lie-08)))'],"[r, attr-instance, reason, attr-quant, [m, attr-instance, many], attr-arg0_of, [c, attr-instance, cause_01, attr-arg1, [l, attr-instance, lie_08]]]"
145,145,145,29391,luge,Eine Lüge ist eine absichtlich falsche Aussage.,0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Eine 1:=Lüge 2:=ist 3:=eine 4:=absichtlich 5:=falsche 6:=Aussage.,2,"[[1, 2, 6], [4]]",A lie is an intentionally false statement.,['# ::snt A lie is an intentionally false statement.\n(f / false\n      :domain (t / thing\n            :ARG1-of (l / lie-08))\n      :ARG1-of (ii / intend-01))'],"[f, attr-instance, false, attr-domain, [t, attr-instance, thing, attr-arg1_of, [l, attr-instance, lie_08]], attr-arg1_of, [ii, attr-instance, intend_01]]"
146,146,146,29392,luge,Man will andere damit täuschen.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2023-03-01T17:39:00Z,017ecada082ed42bbfc77d89d4b14406,0:=Man 1:=will 2:=andere 3:=damit 4:=täuschen.,1,,People want to deceive others with it.,['# ::snt People want to deceive others with it.\n(w / want-01\n      :ARG0 (p / person)\n      :ARG1 (d / deceive-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                  :mod (o / other))\n            :instrument (ii / it)))'],"[w, attr-instance, want_01, attr-arg0, [p, attr-instance, person], attr-arg1, [d, attr-instance, deceive_01, attr-arg0, p, attr-arg1, [p2, attr-instance, person, attr-mod, [o, attr-instance, other]], attr-instrument, [ii, attr-instance, it]]]"
147,147,147,29393,luiz-inacio-lula-da-silva,Viele sagen zu Luiz Inácio Lula da Silva einfach nur Lula.,0_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Viele 1:=sagen 2:=zu 3:=Luiz 4:=Inácio 5:=Lula 6:=da 7:=Silva 8:=einfach 9:=nur 10:=Lula.,1,,Many people simply call Luiz Inácio Lula da Silva Lula.,"['# ::snt Many people simply call Luiz Inácio Lula da Silva Lula.\n(c / call-01\n      :ARG0 (p / person\n            :quant (m / many)\n            :ARG1-of c)\n      :name (n / name\n            :op1 ""Luiz""\n            :op2 ""Inácio""\n            :op3 ""Lula""\n            :op4 ""da""\n            :op5 ""Silva""\n            :op6 ""Lula"")\n      :ARG1-of (s / simple-02))']","[c, attr-instance, call_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many], attr-arg1_of, c], attr-name, [n, attr-instance, name, attr-op1, ""luiz"", attr-op2, ""inácio"", attr-op3, ""lula"", attr-op4, ""da"", attr-op5, ""silva"", attr-op6, ""lula""], attr-arg1_of, [s, attr-instance, simple_02]]"
148,148,148,29394,luiz-inacio-lula-da-silva,Lula kommt am 27. Oktober 1945 auf die Welt.,1_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Lula 1:=kommt 2:=am 3:=27. 4:=Oktober 5:=1945 6:=auf 7:=die 8:=Welt.,1,,"Lula was born on October 27, 1945.","['# ::snt Lula was born on October 27, 1945.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :time (d / date-entity\n            :day 27\n            :month 10\n            :year 1945))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-time, [d, attr-instance, date_entity, attr-day, 27, attr-month, 10, attr-year, 1945]]"
149,149,149,29395,luiz-inacio-lula-da-silva,"Das war in Caetés, Brasilien.",2_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,"0:=Das 1:=war 2:=in 3:=Caetés, 4:=Brasilien.",2,"[[3], [4]]","Das war in Caetés, Brasilien.","['# ::snt Das war in Caetés, Brasilien.\n(w / war-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Caetés"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""Brasilien""))))']","[w, attr-instance, war_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""caetés""], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""brasilien""]]]]"
150,150,150,29396,luiz-inacio-lula-da-silva,Aufgewachsen ist Lula in São Paulo.,3_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Aufgewachsen 1:=ist 2:=Lula 3:=in 4:=São 5:=Paulo.,1,,Lula grew up in São Paulo.,"['# ::snt Lula grew up in São Paulo.\n(g / grow-up-04\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""São""\n                  :op2 ""Paulo"")))']","[g, attr-instance, grow_up_04, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""são"", attr-op2, ""paulo""]]]"
151,151,151,29397,luiz-inacio-lula-da-silva,Seine Familie ist arm.,4_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Seine 1:=Familie 2:=ist 3:=arm.,1,,His family is poor.,['# ::snt His family is poor.\n(p / poor\n      :domain (f / family\n            :ARG1-of (h / have-org-role-91\n                  :ARG0 (h2 / he)\n                  :ARG2 (m / member))))'],"[p, attr-instance, poor, attr-domain, [f, attr-instance, family, attr-arg1_of, [h, attr-instance, have_org_role_91, attr-arg0, [h2, attr-instance, he], attr-arg2, [m, attr-instance, member]]]]"
152,152,152,29398,luiz-inacio-lula-da-silva,Sein Vater stirbt an Alkoholismus.,5_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Sein 1:=Vater 2:=stirbt 3:=an 4:=Alkoholismus.,1,,His father dies of alcoholism.,['# ::snt His father dies of alcoholism.\n(d / die-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (h2 / he)\n                  :ARG2 (f / father)))\n      :ARG1-of (c / cause-01\n            :ARG0 (a / alcoholic\n                  :domain p)))'],"[d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, [h2, attr-instance, he], attr-arg2, [f, attr-instance, father]]], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [a, attr-instance, alcoholic, attr-domain, p]]]"
153,153,153,29399,luiz-inacio-lula-da-silva,Alkoholismus heißt: Jemand ist süchtig nach Alkohol.,6_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Alkoholismus 1:=heißt: 2:=Jemand 3:=ist 4:=süchtig 5:=nach 6:=Alkohol.,1,,Alcoholism means someone is addicted to alcohol.,['# ::snt Alcoholism means someone is addicted to alcohol.\n(m / mean-01\n      :ARG1 (a / alcoholism)\n      :ARG2 (a2 / addict-01\n            :ARG1 (s / someone)\n            :ARG2 (a3 / alcohol)))'],"[m, attr-instance, mean_01, attr-arg1, [a, attr-instance, alcoholism], attr-arg2, [a2, attr-instance, addict_01, attr-arg1, [s, attr-instance, someone], attr-arg2, [a3, attr-instance, alcohol]]]"
154,154,154,29400,luiz-inacio-lula-da-silva,Lula geht zur Schule.,7_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Lula 1:=geht 2:=zur 3:=Schule.,1,,Lula goes to school.,"['# ::snt Lula goes to school.\n(g / go-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG4 (s / school))']","[g, attr-instance, go_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg4, [s, attr-instance, school]]"
155,155,155,29401,luiz-inacio-lula-da-silva,Aber nur bis zu der zweiten Klasse.,8_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Aber 1:=nur 2:=bis 3:=zu 4:=der 5:=zweiten 6:=Klasse.,1,,But only up to the second class.,['# ::snt But only up to the second class.\n(c / contrast-01\n      :ARG2 (u / up-to\n            :op1 (c2 / class\n                  :ord (o / ordinal-entity\n                        :value 2))\n            :mod (o2 / only)))'],"[c, attr-instance, contrast_01, attr-arg2, [u, attr-instance, up_to, attr-op1, [c2, attr-instance, class, attr-ord, [o, attr-instance, ordinal_entity, attr-value, 2]], attr-mod, [o2, attr-instance, only]]]"
156,156,156,29402,luiz-inacio-lula-da-silva,Dann geht Lula nicht mehr zu Schule.,9_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Dann 1:=geht 2:=Lula 3:=nicht 4:=mehr 5:=zu 6:=Schule.,1,,Then Lula won't go to school anymore.,"['# ::snt Then Lula won\'t go to school anymore.\n(g / go-02\n      :polarity -\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG4 (s / school)\n      :time (a / anymore)\n      :time (t / then))']","[g, attr-instance, go_02, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg4, [s, attr-instance, school], attr-time, [a, attr-instance, anymore], attr-time, [t, attr-instance, then]]"
157,157,157,29403,luiz-inacio-lula-da-silva,Lula geht arbeiten.,10_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Lula 1:=geht 2:=arbeiten.,1,,Lula goes to work.,"['# ::snt Lula goes to work.\n(g / go-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG4 (w / work-01\n            :ARG0 p))']","[g, attr-instance, go_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg4, [w, attr-instance, work_01, attr-arg0, p]]"
158,158,158,29404,luiz-inacio-lula-da-silva,Damit er seiner Familie helfen kann.,11_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Damit 1:=er 2:=seiner 3:=Familie 4:=helfen 5:=kann.,1,,So he can help his family.,['# ::snt So he can help his family.\n(c / cause-01\n      :ARG1 (p / possible-01\n            :ARG1 (h / help-01\n                  :ARG0 (h2 / he)\n                  :ARG2 (f / family\n                        :ARG1-of (h3 / have-org-role-91\n                              :ARG0 h2\n                              :ARG2 (m / member))))))'],"[c, attr-instance, cause_01, attr-arg1, [p, attr-instance, possible_01, attr-arg1, [h, attr-instance, help_01, attr-arg0, [h2, attr-instance, he], attr-arg2, [f, attr-instance, family, attr-arg1_of, [h3, attr-instance, have_org_role_91, attr-arg0, h2, attr-arg2, [m, attr-instance, member]]]]]]"
159,159,159,29405,luiz-inacio-lula-da-silva,Lesen lernt Lula erst mit 10 Jahren.,12_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Lesen 1:=lernt 2:=Lula 3:=erst 4:=mit 5:=10 6:=Jahren.,1,,Lula only learned to read when she was 10 years old.,"['# ::snt Lula only learned to read when she was 10 years old.\n(l / learn-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG1 (r / read-01\n            :ARG0 p)\n      :mod (o / only)\n      :time (a / age-01\n            :ARG1 p\n            :ARG2 (t / temporal-quantity\n                  :quant 10\n                  :unit (y / year))))']","[l, attr-instance, learn_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [r, attr-instance, read_01, attr-arg0, p], attr-mod, [o, attr-instance, only], attr-time, [a, attr-instance, age_01, attr-arg1, p, attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 10, attr-unit, [y, attr-instance, year]]]]"
160,160,160,29406,luiz-inacio-lula-da-silva,Später macht Lula eine Ausbildung als Metallarbeiter.,13_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Später 1:=macht 2:=Lula 3:=eine 4:=Ausbildung 5:=als 6:=Metallarbeiter.,1,,Lula later trained as a metalworker.,"['# ::snt Lula later trained as a metalworker.\n(t / train-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG1 (p2 / person\n            :ARG0-of (w / work-01\n                  :ARG1 (m / metal)))\n      :time (a / after))']","[t, attr-instance, train_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [p2, attr-instance, person, attr-arg0_of, [w, attr-instance, work_01, attr-arg1, [m, attr-instance, metal]]], attr-time, [a, attr-instance, after]]"
161,161,161,29407,luiz-inacio-lula-da-silva,Im Jahr 1969 heiraten Lula und Maria de Lourdes.,14_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Im 1:=Jahr 2:=1969 3:=heiraten 4:=Lula 5:=und 6:=Maria 7:=de 8:=Lourdes.,2,"[[0, 1, 2], [3, 4, 5, 6, 7, 8]]","In 1969, Lula and Maria de Lourdes married.","['# ::snt In 1969, Lula and Maria de Lourdes married.\n(m / marry-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG2 (p2 / person\n            :name (n2 / name\n                  :op1 ""Maria""\n                  :op2 ""de""\n                  :op3 ""Lourdes""))\n      :time (d / date-entity\n            :year 1969))']","[m, attr-instance, marry_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg2, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""maria"", attr-op2, ""de"", attr-op3, ""lourdes""]], attr-time, [d, attr-instance, date_entity, attr-year, 1969]]"
162,162,162,29408,luiz-inacio-lula-da-silva,Im Jahr 1971 ist Maria de Lourdes schwanger.,15_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Im 1:=Jahr 2:=1971 3:=ist 4:=Maria 5:=de 6:=Lourdes 7:=schwanger.,2,"[[0, 1, 2], [3, 4, 5, 6, 7]]","In 1971, Maria de Lourdes is pregnant.","['# ::snt In 1971, Maria de Lourdes is pregnant.\n(ii / impregnate-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Maria""\n                  :op2 ""de""\n                  :op3 ""Lourdes""))\n      :time (d / date-entity\n            :year 1971))']","[ii, attr-instance, impregnate_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""maria"", attr-op2, ""de"", attr-op3, ""lourdes""]], attr-time, [d, attr-instance, date_entity, attr-year, 1971]]"
163,163,163,29409,luiz-inacio-lula-da-silva,Maria ist krank.,16_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Maria 1:=ist 2:=krank.1,1,,Mary is sick.,"['# ::snt Mary is sick.\n(s / sick-05\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Mary"")))']","[s, attr-instance, sick_05, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mary""]]]"
164,164,164,29410,luiz-inacio-lula-da-silva,Sie hat eine Hepatitis-infektion.,17_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Sie 1:=hat 2:=eine 3:=Hepatitis-infektion.1,1,,She has a hepatitis infection.,"['# ::snt She has a hepatitis infection.\n(ii / infect-01\n      :ARG1 (s / she)\n      :ARG2 (d / disease\n            :name (n / name\n                  :op1 ""Hepatitis"")))']","[ii, attr-instance, infect_01, attr-arg1, [s, attr-instance, she], attr-arg2, [d, attr-instance, disease, attr-name, [n, attr-instance, name, attr-op1, ""hepatitis""]]]"
165,165,165,29411,luiz-inacio-lula-da-silva,Die Familie hat kein Geld für einen Arzt.,18_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Familie 2:=hat 3:=kein 4:=Geld 5:=für 6:=einen 7:=Arzt.,2,"[[1, 2, 3], [5, 7]]",The family has no money for a doctor.,['# ::snt The family has no money for a doctor.\n(h / have-03\n      :ARG0 (f / family)\n      :ARG1 (m / money\n            :polarity -\n            :purpose (d / doctor)))'],"[h, attr-instance, have_03, attr-arg0, [f, attr-instance, family], attr-arg1, [m, attr-instance, money, attr-polarity, negative, attr-purpose, [d, attr-instance, doctor]]]"
166,166,166,29412,luiz-inacio-lula-da-silva,Deswegen stirbt Maria.,19_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Deswegen 1:=stirbt 2:=Maria.,1,,That's why Mary dies.,"['# ::snt That\'s why Mary dies.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (d / die-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 ""Mary""))))']","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [d, attr-instance, die_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mary""]]]]"
167,167,167,29413,luiz-inacio-lula-da-silva,Im Jahr 1974 heirateten Lula und Marisa Letícia Rocco.,20_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Im 1:=Jahr 2:=1974 3:=heirateten 4:=Lula 5:=und 6:=Marisa 7:=Letícia 8:=Rocco.,2,"[[0, 1, 2], [3, 4, 5, 6, 7, 8]]","In 1974, Lula and Marisa Letícia Rocco married.","['# ::snt In 1974, Lula and Marisa Letícia Rocco married.\n(m / marry-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG2 (p2 / person\n            :name (n2 / name\n                  :op1 ""Marisa""\n                  :op2 ""Letícia""\n                  :op3 ""Rocco""))\n      :time (d / date-entity\n            :year 1974))']","[m, attr-instance, marry_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg2, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""marisa"", attr-op2, ""letícia"", attr-op3, ""rocco""]], attr-time, [d, attr-instance, date_entity, attr-year, 1974]]"
168,168,168,29414,luiz-inacio-lula-da-silva,Zusammen haben sie 5 Kinder.,21_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Zusammen 1:=haben 2:=sie 3:=5 4:=Kinder.,1,,Together they have 5 children.,['# ::snt Together they have 5 children.\n(h / have-03\n      :ARG0 (t / they)\n      :ARG1 (p / person\n            :quant 5\n            :ARG0-of (h2 / have-rel-role-91\n                  :ARG1 t\n                  :ARG2 (c / child)))\n      :mod (t2 / together))'],"[h, attr-instance, have_03, attr-arg0, [t, attr-instance, they], attr-arg1, [p, attr-instance, person, attr-quant, 5, attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, t, attr-arg2, [c, attr-instance, child]]], attr-mod, [t2, attr-instance, together]]"
169,169,169,29416,luiz-inacio-lula-da-silva,"Im Jahr 2022 heiraten Lula und Rosangela ""Janja"" Silva.",23_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,"0:=Im 1:=Jahr 2:=2022 3:=heiraten 4:=Lula 5:=und 6:=Rosangela 7:=""Janja"" 8:=Silva.",2,"[[0, 1, 2], [3, 4, 5, 6, 7, 8]]","In 2022, Lula and Rosangela ""Janja"" Silva will marry.","['# ::snt In 2022, Lula and Rosangela ""Janja"" Silva will marry.\n(m / marry-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG2 (p2 / person\n            :name (n2 / name\n                  :op1 ""Rosangela""\n                  :op2 ""Janja""\n                  :op3 ""Silva""))\n      :time (d / date-entity\n            :year 2022))']","[m, attr-instance, marry_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg2, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""rosangela"", attr-op2, ""janja"", attr-op3, ""silva""]], attr-time, [d, attr-instance, date_entity, attr-year, 2022]]"
170,170,170,29417,luiz-inacio-lula-da-silva,Als Metall-arbeiter geht Lula in die Gewerkschaft.,24_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Als 1:=Metall-arbeiter 2:=geht 3:=Lula 4:=in 5:=die 6:=Gewerkschaft.,2,"[[0, 1], [4, 6]]","As a metalworker, Lula joins the union.","['# ::snt As a metalworker, Lula joins the union.\n(j / join-04\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG1 (u / union)\n      :ARG1-of (c / cause-01\n            :ARG0 (w / work-01\n                  :ARG0 p\n                  :ARG1 (m / metal))))']","[j, attr-instance, join_04, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [u, attr-instance, union], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [w, attr-instance, work_01, attr-arg0, p, attr-arg1, [m, attr-instance, metal]]]]"
171,171,171,29418,luiz-inacio-lula-da-silva,Im Jahr 1969 wird Lula in den Vorstand gewählt.,25_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Im 1:=Jahr 2:=1969 3:=wird 4:=Lula 5:=in 6:=den 7:=Vorstand 8:=gewählt.,2,"[[0, 1, 2], [3, 4, 5, 7, 8]]","In 1969, Lula was elected to the board.","['# ::snt In 1969, Lula was elected to the board.\n(e / elect-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG2 (b / board)\n      :time (d / date-entity\n            :year 1969))']","[e, attr-instance, elect_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg2, [b, attr-instance, board], attr-time, [d, attr-instance, date_entity, attr-year, 1969]]"
172,172,172,29420,luiz-inacio-lula-da-silva,Später wird er Generalsekretär in der Gewerkschaft.,27_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Später 1:=wird 2:=er 3:=Generalsekretär 4:=in 5:=der 6:=Gewerkschaft.,1,,He later became general secretary of the union.,['# ::snt He later became general secretary of the union.\n(b / become-01\n      :ARG1 (h / he)\n      :ARG2 (s / secretary\n            :mod (g / general)\n            :ARG2-of (h2 / have-org-role-91\n                  :ARG1 (u / union)))\n      :time (a / after))'],"[b, attr-instance, become_01, attr-arg1, [h, attr-instance, he], attr-arg2, [s, attr-instance, secretary, attr-mod, [g, attr-instance, general], attr-arg2_of, [h2, attr-instance, have_org_role_91, attr-arg1, [u, attr-instance, union]]], attr-time, [a, attr-instance, after]]"
173,173,173,29421,luiz-inacio-lula-da-silva,Und im Jahr 1975 wird er zum Vorsitzenden der Gewerkschaft gewählt.,28_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=im 2:=Jahr 3:=1975 4:=wird 5:=er 6:=zum 7:=Vorsitzenden 8:=der 9:=Gewerkschaft 10:=gewählt.,2,"[[1, 2, 3], [4, 5, 6, 7, 9, 10]]",And in 1975 he was elected chairman of the union.,['# ::snt And in 1975 he was elected chairman of the union.\n(a / and\n      :op2 (e / elect-01\n            :ARG1 (h / he)\n            :ARG2 (c / chairman\n                  :ARG2-of (h2 / have-org-role-91\n                        :ARG1 (u / union)))\n            :time (d / date-entity\n                  :year 1975)))'],"[a, attr-instance, and, attr-op2, [e, attr-instance, elect_01, attr-arg1, [h, attr-instance, he], attr-arg2, [c, attr-instance, chairman, attr-arg2_of, [h2, attr-instance, have_org_role_91, attr-arg1, [u, attr-instance, union]]], attr-time, [d, attr-instance, date_entity, attr-year, 1975]]]"
174,174,174,29422,luiz-inacio-lula-da-silva,Er bekommt bei der Wahl 92 Prozent der Stimmen.,29_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=bekommt 2:=bei 3:=der 4:=Wahl 5:=92 6:=Prozent 7:=der 8:=Stimmen.,1,,He receives 92 percent of the votes in the election.,['# ::snt He receives 92 percent of the votes in the election.\n(r / receive-01\n      :ARG0 (h / he)\n      :ARG1 (v / vote-01\n            :ARG1 h\n            :ARG3 (p / percentage-entity\n                  :value 92))\n      :ARG2 (e / elect-01))'],"[r, attr-instance, receive_01, attr-arg0, [h, attr-instance, he], attr-arg1, [v, attr-instance, vote_01, attr-arg1, h, attr-arg3, [p, attr-instance, percentage_entity, attr-value, 92]], attr-arg2, [e, attr-instance, elect_01]]"
175,175,175,29423,luiz-inacio-lula-da-silva,In der Gewerkschaft sind 100 Tausend Arbeiter.,30_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=In 1:=der 2:=Gewerkschaft 3:=sind 4:=100 5:=Tausend 6:=Arbeiter.,1,,There are 100 thousand workers in the union.,['# ::snt There are 100 thousand workers in the union.\n(h / have-org-role-91\n      :ARG0 (p / person\n            :quant 100000\n            :ARG0-of (w / work-01))\n      :ARG1 (u / union))'],"[h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person, attr-quant, 100000, attr-arg0_of, [w, attr-instance, work_01]], attr-arg1, [u, attr-instance, union]]"
176,176,176,29424,luiz-inacio-lula-da-silva,Während der 1970er Jahre organisiert Lula viele große Streiks.,31_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Während 1:=der 2:=1970er 3:=Jahre 4:=organisiert 5:=Lula 6:=viele 7:=große 8:=Streiks.,2,"[[0, 2, 3], [4, 5, 6, 7, 8]]","During the 1970s, Lula organized many major strikes.","['# ::snt During the 1970s, Lula organized many major strikes.\n(o / organize-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG1 (s / strike-01\n            :ARG1-of (m / major-02)\n            :quant (m2 / many))\n      :time (d / date-entity\n            :decade 1970))']","[o, attr-instance, organize_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [s, attr-instance, strike_01, attr-arg1_of, [m, attr-instance, major_02], attr-quant, [m2, attr-instance, many]], attr-time, [d, attr-instance, date_entity, attr-decade, 1970]]"
177,177,177,29425,luiz-inacio-lula-da-silva,Damals war Brasilien eine Militärdiktatur.,32_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Damals 1:=war 2:=Brasilien 3:=eine 4:=Militärdiktatur.,1,,"At that time, Brazil was a military dictatorship.","['# ::snt At that time, Brazil was a military dictatorship.\n(d / dictatorship\n      :mod (m / military)\n      :domain (c / country\n            :name (n / name\n                  :op1 ""Brazil""))\n      :time (t / time\n            :mod (t2 / that)))']","[d, attr-instance, dictatorship, attr-mod, [m, attr-instance, military], attr-domain, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""brazil""]], attr-time, [t, attr-instance, time, attr-mod, [t2, attr-instance, that]]]"
178,178,178,29426,luiz-inacio-lula-da-silva,Die Auto-firma Volkswagen hat auch Fabriken in Brasilien.,33_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Auto-firma 2:=Volkswagen 3:=hat 4:=auch 5:=Fabriken 6:=in 7:=Brasilien.,2,"[[5], [6, 7]]",The car company Volkswagen also has factories in Brazil.,"['# ::snt The car company Volkswagen also has factories in Brazil.\n(h / have-03\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 ""Volkswagen"")\n            :mod (c2 / car))\n      :ARG1 (f / factory\n            :location (c3 / country\n                  :name (n2 / name\n                        :op1 ""Brazil"")))\n      :mod (a / also))']","[h, attr-instance, have_03, attr-arg0, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""volkswagen""], attr-mod, [c2, attr-instance, car]], attr-arg1, [f, attr-instance, factory, attr-location, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""brazil""]]], attr-mod, [a, attr-instance, also]]"
179,179,179,29427,luiz-inacio-lula-da-silva,Volkswagen spioniert Lula aus.,34_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Volkswagen 1:=spioniert 2:=Lula 3:=aus.,1,,Volkswagen spies on Lula.,"['# ::snt Volkswagen spies on Lula.\n(s / spy-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 ""Volkswagen""))\n      :ARG1 (s2 / spaceship\n            :name (n2 / name\n                  :op1 ""Lula"")))']","[s, attr-instance, spy_01, attr-arg0, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""volkswagen""]], attr-arg1, [s2, attr-instance, spaceship, attr-name, [n2, attr-instance, name, attr-op1, ""lula""]]]"
180,180,180,29428,luiz-inacio-lula-da-silva,Dann gibt Volkswagen die Informationen an die Polizei von der Militärdiktatur.,35_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Dann 1:=gibt 2:=Volkswagen 3:=die 4:=Informationen 5:=an 6:=die 7:=Polizei 8:=von 9:=der 10:=Militärdiktatur.,2,"[[0, 1, 2, 4, 5], [8, 10]]",Volkswagen then passes the information to the police of the military dictatorship.,"['# ::snt Volkswagen then passes the information to the police of the military dictatorship.\n(p / pass-05\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 ""Volkswagen""))\n      :ARG1 (ii / information)\n      :ARG2 (p2 / police\n            :mod (d / dictatorship\n                  :mod (m / military)))\n      :time (t / then))']","[p, attr-instance, pass_05, attr-arg0, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""volkswagen""]], attr-arg1, [ii, attr-instance, information], attr-arg2, [p2, attr-instance, police, attr-mod, [d, attr-instance, dictatorship, attr-mod, [m, attr-instance, military]]], attr-time, [t, attr-instance, then]]"
181,181,181,29429,luiz-inacio-lula-da-silva,Im Jahr 1980 muss Lula ins Gefängnis.,36_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Im 1:=Jahr 2:=1980 3:=muss 4:=Lula 5:=ins 6:=Gefängnis.,2,"[[0, 1, 2], [3, 4, 5, 6]]","In 1980, Lula goes to prison.","['# ::snt In 1980, Lula goes to prison.\n(ii / imprison-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :time (d / date-entity\n            :year 1980))']","[ii, attr-instance, imprison_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-time, [d, attr-instance, date_entity, attr-year, 1980]]"
182,182,182,29430,luiz-inacio-lula-da-silva,Nach 31 Tagen wird Lula wieder freigelassen.,37_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Nach 1:=31 2:=Tagen 3:=wird 4:=Lula 5:=wieder 6:=freigelassen.,2,"[[0, 1, 2], [3, 4, 5, 6]]","After 31 days, Lula is released again.","['# ::snt After 31 days, Lula is released again.\n(r / release-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :mod (a / again)\n      :time (a2 / after\n            :quant (t / temporal-quantity\n                  :quant 31\n                  :unit (d / day))))']","[r, attr-instance, release_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-mod, [a, attr-instance, again], attr-time, [a2, attr-instance, after, attr-quant, [t, attr-instance, temporal_quantity, attr-quant, 31, attr-unit, [d, attr-instance, day]]]]"
183,183,183,29431,luiz-inacio-lula-da-silva,Danach tut sich Lula mit anderen Gewerkschaften zusammen.,38_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Danach 1:=tut 2:=sich 3:=Lula 4:=mit 5:=anderen 6:=Gewerkschaften 7:=zusammen.,1,,"Afterwards, Lula joins forces with other unions.","['# ::snt Afterwards, Lula joins forces with other unions.\n(j / join-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG1 (f / force\n            :accompanier (u / union\n                  :mod (o / other)))\n      :time (a / after))']","[j, attr-instance, join_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [f, attr-instance, force, attr-accompanier, [u, attr-instance, union, attr-mod, [o, attr-instance, other]]], attr-time, [a, attr-instance, after]]"
184,184,184,29432,luiz-inacio-lula-da-silva,Am 10. Februar 1980 gründen sie eine neue Partei.,39_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Am 1:=10. 2:=Februar 3:=1980 4:=gründen 5:=sie 6:=eine 7:=neue 8:=Partei.,2,"[[0, 1, 2, 3], [4, 5, 7, 8]]","On February 10, 1980, they founded a new party.","['# ::snt On February 10, 1980, they founded a new party.\n(f / found-01\n      :ARG0 (t / they)\n      :ARG1 (p / party\n            :ARG1-of (n / new-01))\n      :time (d / date-entity\n            :day 10\n            :month 2\n            :year 1980))']","[f, attr-instance, found_01, attr-arg0, [t, attr-instance, they], attr-arg1, [p, attr-instance, party, attr-arg1_of, [n, attr-instance, new_01]], attr-time, [d, attr-instance, date_entity, attr-day, 10, attr-month, 2, attr-year, 1980]]"
185,185,185,29433,luiz-inacio-lula-da-silva,Die Partei heißt Partido dos Trabalhadores.,40_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Partei 2:=heißt 3:=Partido 4:=dos 5:=Trabalhadores.,1,,Die Partei heißt Workers Party.,"['# ::snt Die Partei heißt Workers Party.\n(h / heißt\n      :part-of (p / political-party\n            :name (n / name\n                  :op1 ""Die""\n                  :op2 ""Partei"")))']","[h, attr-instance, heißt, attr-part_of, [p, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""die"", attr-op2, ""partei""]]]"
186,186,186,29435,luiz-inacio-lula-da-silva,Die Partei hat 400 Tausend Mitglieder.,42_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Partei 2:=hat 3:=400 4:=Tausend 5:=Mitglieder.,1,,The party has 400 thousand members.,['# ::snt The party has 400 thousand members.\n(h / have-03\n      :ARG0 (p / party)\n      :ARG1 (m / member\n            :quant 400000))'],"[h, attr-instance, have_03, attr-arg0, [p, attr-instance, party], attr-arg1, [m, attr-instance, member, attr-quant, 400000]]"
187,187,187,29436,luiz-inacio-lula-da-silva,Im Jahr 1986 ist Wahl in Brasilien.,43_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Im 1:=Jahr 2:=1986 3:=ist 4:=Wahl 5:=in 6:=Brasilien.,1,,In 1986 there are elections in Brazil.,"['# ::snt In 1986 there are elections in Brazil.\n(e / elect-01\n      :location (c / country\n            :name (n / name\n                  :op1 ""Brazil""))\n      :time (d / date-entity\n            :year 1986))']","[e, attr-instance, elect_01, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""brazil""]], attr-time, [d, attr-instance, date_entity, attr-year, 1986]]"
188,188,188,29437,luiz-inacio-lula-da-silva,Sehr viele Menschen wählen Lula.,44_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Sehr 1:=viele 2:=Menschen 3:=wählen 4:=Lula.,1,,A lot of people vote for Lula.,"['# ::snt A lot of people vote for Lula.\n(v / vote-01\n      :ARG0 (p / person\n            :quant (l / lot))\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 ""Lula"")))']","[v, attr-instance, vote_01, attr-arg0, [p, attr-instance, person, attr-quant, [l, attr-instance, lot]], attr-arg1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]]]"
189,189,189,29438,luiz-inacio-lula-da-silva,Lula wird in den Natrional-kongress gewählt.,45_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Lula 1:=wird 2:=in 3:=den 4:=Natrional-kongress 5:=gewählt.,1,,Lula is elected to the National Congress.,"['# ::snt Lula is elected to the National Congress.\n(e / elect-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG2 (p2 / political-party\n            :name (n2 / name\n                  :op1 ""National""\n                  :op2 ""Congress"")))']","[e, attr-instance, elect_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg2, [p2, attr-instance, political_party, attr-name, [n2, attr-instance, name, attr-op1, ""national"", attr-op2, ""congress""]]]"
190,190,190,29439,luiz-inacio-lula-da-silva,Er vertritt Bundes-staat São Paulo.,46_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=vertritt 2:=Bundes-staat 3:=São 4:=Paulo.,1,,It is returned to the Bundes-state of São Paulo.,"['# ::snt It is returned to the Bundes-state of São Paulo.\n(r / return-02\n      :ARG1 (ii / it)\n      :ARG2 (s / state\n            :name (n / name\n                  :op1 ""São""\n                  :op2 ""Paulo"")\n            :part-of (g / government-organization\n                  :name (n2 / name\n                        :op1 ""Bundes""))))']","[r, attr-instance, return_02, attr-arg1, [ii, attr-instance, it], attr-arg2, [s, attr-instance, state, attr-name, [n, attr-instance, name, attr-op1, ""são"", attr-op2, ""paulo""], attr-part_of, [g, attr-instance, government_organization, attr-name, [n2, attr-instance, name, attr-op1, ""bundes""]]]]"
191,191,191,29440,luiz-inacio-lula-da-silva,"Die Partei PT hilft mit, damit es eine neue Verfassung in Brasilien gibt.",47_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,"0:=Die 1:=Partei 2:=PT 3:=hilft 4:=mit, 5:=damit 6:=es 7:=eine 8:=neue 9:=Verfassung 10:=in 11:=Brasilien 12:=gibt.",2,"[[1, 2, 3, 4], [5, 6, 8, 9, 10, 11, 12]]",The PT party is helping to ensure that there is a new constitution in Brazil.,"['# ::snt The PT party is helping to ensure that there is a new constitution in Brazil.\n(h / help-01\n      :ARG0 (p / political-party\n            :name (n / name\n                  :op1 ""PT""))\n      :ARG1 (e / ensure-01\n            :ARG0 p\n            :ARG1 (c / constitution\n                  :ARG1-of (n2 / new-01)\n                  :location (c2 / country\n                        :name (n3 / name\n                              :op1 ""Brazil"")))))']","[h, attr-instance, help_01, attr-arg0, [p, attr-instance, political_party, attr-name, [n, attr-instance, name, attr-op1, ""pt""]], attr-arg1, [e, attr-instance, ensure_01, attr-arg0, p, attr-arg1, [c, attr-instance, constitution, attr-arg1_of, [n2, attr-instance, new_01], attr-location, [c2, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""brazil""]]]]]"
192,192,192,29441,luiz-inacio-lula-da-silva,Zum Beispiel: In der neuen Verfassung stehen viele Rechte für die Arbeiter.,48_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Zum 1:=Beispiel: 2:=In 3:=der 4:=neuen 5:=Verfassung 6:=stehen 7:=viele 8:=Rechte 9:=für 10:=die 11:=Arbeiter.,2,"[[2, 5, 6, 7, 8, 9, 11], [4]]",For example: The new constitution contains many rights for workers.,['# ::snt For example: The new constitution contains many rights for workers.\n(e / exemplify-01\n      :ARG0 (c / contain-01\n            :ARG0 (c2 / constitution\n                  :ARG1-of (n / new-01))\n            :ARG1 (r / right-05\n                  :ARG1 (p / person\n                        :ARG0-of (w / work-01))\n                  :quant (m / many))))'],"[e, attr-instance, exemplify_01, attr-arg0, [c, attr-instance, contain_01, attr-arg0, [c2, attr-instance, constitution, attr-arg1_of, [n, attr-instance, new_01]], attr-arg1, [r, attr-instance, right_05, attr-arg1, [p, attr-instance, person, attr-arg0_of, [w, attr-instance, work_01]], attr-quant, [m, attr-instance, many]]]]"
193,193,193,29442,luiz-inacio-lula-da-silva,Im Jahr 1989 sind Wahlen in Brasilien.,49_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Im 1:=Jahr 2:=1989 3:=sind 4:=Wahlen 5:=in 6:=Brasilien.,1,,In 1989 there are elections in Brazil.,"['# ::snt In 1989 there are elections in Brazil.\n(e / elect-01\n      :location (c / country\n            :name (n / name\n                  :op1 ""Brazil""))\n      :time (d / date-entity\n            :year 1989))']","[e, attr-instance, elect_01, attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""brazil""]], attr-time, [d, attr-instance, date_entity, attr-year, 1989]]"
194,194,194,29443,luiz-inacio-lula-da-silva,Der Präsident soll gewählt werden.,50_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Der 1:=Präsident 2:=soll 3:=gewählt 4:=werden.,1,,The president is to be elected.,['# ::snt The president is to be elected.\n(e / elect-01\n      :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (p2 / president))))'],"[e, attr-instance, elect_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg2, [p2, attr-instance, president]]]]"
195,195,195,29444,luiz-inacio-lula-da-silva,Lula will Präsident werden.,51_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Lula 1:=will 2:=Präsident 3:=werden.,1,,Lula wants to become president.,"['# ::snt Lula wants to become president.\n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG1 (b / become-01\n            :ARG1 p\n            :ARG2 (p2 / president)))']","[w, attr-instance, want_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [b, attr-instance, become_01, attr-arg1, p, attr-arg2, [p2, attr-instance, president]]]"
196,196,196,29445,luiz-inacio-lula-da-silva,Viele Leute in Brasilien finden Lula gut.,52_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Viele 1:=Leute 2:=in 3:=Brasilien 4:=finden 5:=Lula 6:=gut.,1,,Many people in Brazil like Lula.,"['# ::snt Many people in Brazil like Lula.\n(p / person\n      :quant (m / many)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Brazil""))\n      :example (p2 / person\n            :name (n2 / name\n                  :op1 ""Lula"")))']","[p, attr-instance, person, attr-quant, [m, attr-instance, many], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""brazil""]], attr-example, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""lula""]]]"
197,197,197,29446,luiz-inacio-lula-da-silva,Manche Leute sagen aber: \newline Lula ist ein Sozialist.,53_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Manche 1:=Leute 2:=sagen 3:=aber: 4:=\newline 5:=Lula 6:=ist 7:=ein 8:=Sozialist.,2,"[[0, 1, 2], [5, 6, 8]]",But some people say: \newline Lula is a socialist.,"['# ::snt But some people say: \\newline Lula is a socialist.\n(c / contrast-01\n      :ARG2 (s / say-01\n            :ARG0 (p / person\n                  :mod (s2 / some))\n            :ARG1 (p2 / person\n                  :mod (p3 / political-movement\n                        :name (n / name\n                              :op1 ""socialism""))\n                  :domain (p4 / person\n                        :name (n2 / name\n                              :op1 ""Newline""\n                              :op2 ""Lula"")))))']","[c, attr-instance, contrast_01, attr-arg2, [s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-mod, [s2, attr-instance, some]], attr-arg1, [p2, attr-instance, person, attr-mod, [p3, attr-instance, political_movement, attr-name, [n, attr-instance, name, attr-op1, ""socialism""]], attr-domain, [p4, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""newline"", attr-op2, ""lula""]]]]]"
198,198,198,29447,luiz-inacio-lula-da-silva,Deswegen ist Lula schlecht für die Industrie \newline Und die Banken.,54_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Deswegen 1:=ist 2:=Lula 3:=schlecht 4:=für 5:=die 6:=Industrie 7:=\newline 8:=Und 9:=die 10:=Banken.,2,"[[4, 6], [10]]",That's why Lula is bad for industry \newline And the banks.,"['# ::snt That\'s why Lula is bad for industry \\newline And the banks.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (b / bad-04\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 ""Lula""))\n            :ARG2 (a / and\n                  :op1 (ii / industry)\n                  :op2 (b2 / bank))))']","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [b, attr-instance, bad_04, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg2, [a, attr-instance, and, attr-op1, [ii, attr-instance, industry], attr-op2, [b2, attr-instance, bank]]]]"
199,199,199,29449,luiz-inacio-lula-da-silva,Lula wird nicht gewählt.,56_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Lula 1:=wird 2:=nicht 3:=gewählt.,1,,Lula is not elected.,"['# ::snt Lula is not elected.\n(e / elect-01\n      :polarity -\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula"")))']","[e, attr-instance, elect_01, attr-polarity, negative, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]]]"
200,200,200,29450,luiz-inacio-lula-da-silva,Im Jahr 2002 macht Lula wieder mit bei der Prösidenten-wahl.,57_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Im 1:=Jahr 2:=2002 3:=macht 4:=Lula 5:=wieder 6:=mit 7:=bei 8:=der 9:=Prösidenten-wahl.,2,"[[0, 1, 2], [3, 4, 5, 6, 7, 9]]","In 2002, Lula again took part in the presidential election.","['# ::snt In 2002, Lula again took part in the presidential election.\n(p / participate-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG1 (e / elect-01\n            :ARG1 p2\n            :ARG2 (p3 / president))\n      :mod (a / again)\n      :time (d / date-entity\n            :year 2002))']","[p, attr-instance, participate_01, attr-arg0, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [e, attr-instance, elect_01, attr-arg1, p2, attr-arg2, [p3, attr-instance, president]], attr-mod, [a, attr-instance, again], attr-time, [d, attr-instance, date_entity, attr-year, 2002]]"
201,201,201,29451,luiz-inacio-lula-da-silva,Er zieht jetzt andere Kleider an.,58_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=zieht 2:=jetzt 3:=andere 4:=Kleider 5:=an.,1,,He is wearing different clothes now.,['# ::snt He is wearing different clothes now.\n(w / wear-01\n      :ARG0 (h / he)\n      :ARG1 (c / clothes\n            :ARG1-of (d / differ-02))\n      :time (n / now))'],"[w, attr-instance, wear_01, attr-arg0, [h, attr-instance, he], attr-arg1, [c, attr-instance, clothes, attr-arg1_of, [d, attr-instance, differ_02]], attr-time, [n, attr-instance, now]]"
202,202,202,29452,luiz-inacio-lula-da-silva,Lula zieht einen Anzug und eine Krawatte an.,59_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Lula 1:=zieht 2:=einen 3:=Anzug 4:=und 5:=eine 6:=Krawatte 7:=an.,2,"[[3], [6]]",Lula puts on a suit and tie.,"['# ::snt Lula puts on a suit and tie.\n(p / put-on-08\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG1 (a / and\n            :op1 (s / suit)\n            :op2 (t / tie)))']","[p, attr-instance, put_on_08, attr-arg0, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [a, attr-instance, and, attr-op1, [s, attr-instance, suit], attr-op2, [t, attr-instance, tie]]]"
203,203,203,29453,luiz-inacio-lula-da-silva,Er sagt: \newline  \newline Hunger und Armut müssen weg.,60_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=sagt: 2:=\newline 3:= 4:=\newline 5:=Hunger 6:=und 7:=Armut 8:=müssen 9:=weg.,3,"[[0, 1], [5, 8, 9], [7, 8, 9]]",He says: \newline \newline Hunger and poverty must go away.,['# ::snt He says: \\newline \\newline Hunger and poverty must go away.\n(s / say-01\n      :ARG0 (h / he)\n      :ARG1 (o / obligate-01\n            :ARG2 (g / go-02\n                  :ARG0 (a / and\n                        :op1 (h2 / hunger-01)\n                        :op2 (p / poor))\n                  :ARG4 (a2 / away))))'],"[s, attr-instance, say_01, attr-arg0, [h, attr-instance, he], attr-arg1, [o, attr-instance, obligate_01, attr-arg2, [g, attr-instance, go_02, attr-arg0, [a, attr-instance, and, attr-op1, [h2, attr-instance, hunger_01], attr-op2, [p, attr-instance, poor]], attr-arg4, [a2, attr-instance, away]]]]"
204,204,204,29454,luiz-inacio-lula-da-silva,Und die Menschen brauchen eine bessere Ausbildung.,61_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=die 2:=Menschen 3:=brauchen 4:=eine 5:=bessere 6:=Ausbildung.,2,"[[2, 3], [5]]",And people need better education.,['# ::snt And people need better education.\n(a / and\n      :op2 (n / need-01\n            :ARG0 (p / person)\n            :ARG1 (e / educate-01\n                  :ARG1 p\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (g / good-02\n                              :ARG1 e)\n                        :ARG3 (m / more)))))'],"[a, attr-instance, and, attr-op2, [n, attr-instance, need_01, attr-arg0, [p, attr-instance, person], attr-arg1, [e, attr-instance, educate_01, attr-arg1, p, attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [g, attr-instance, good_02, attr-arg1, e], attr-arg3, [m, attr-instance, more]]]]]"
205,205,205,29455,luiz-inacio-lula-da-silva,Am 27. Oktober 2002 wird Lula Präsident von Brasilien.,62_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Am 1:=27. 2:=Oktober 3:=2002 4:=wird 5:=Lula 6:=Präsident 7:=von 8:=Brasilien.,3,"[[0, 1, 2, 3], [4, 5, 6], [6, 7, 8]]","On October 27, 2002, Lula becomes President of Brazil.","['# ::snt On October 27, 2002, Lula becomes President of Brazil.\n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG2 (p2 / president\n            :ARG2-of (h / have-org-role-91\n                  :ARG0 p\n                  :ARG1 (c / country\n                        :name (n2 / name\n                              :op1 ""Brazil""))))\n      :time (d / date-entity\n            :year 2002\n            :month 10\n            :day 27))']","[b, attr-instance, become_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg2, [p2, attr-instance, president, attr-arg2_of, [h, attr-instance, have_org_role_91, attr-arg0, p, attr-arg1, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""brazil""]]]], attr-time, [d, attr-instance, date_entity, attr-year, 2002, attr-month, 10, attr-day, 27]]"
206,206,206,29456,luiz-inacio-lula-da-silva,Und am 29. Oktober 2006 wird Lula wieder zum Präsidenten gewählt.,63_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Und 1:=am 2:=29. 3:=Oktober 4:=2006 5:=wird 6:=Lula 7:=wieder 8:=zum 9:=Präsidenten 10:=gewählt.,2,"[[1, 2, 3, 4], [5, 6, 7, 8, 9, 10]]","And on October 29, 2006, Lula was re-elected president.","['# ::snt And on October 29, 2006, Lula was re-elected president.\n(a / and\n      :op2 (r / reelect-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 ""Lula""))\n            :ARG2 (p2 / president)\n            :time (d / date-entity\n                  :day 29\n                  :month 10\n                  :year 2006)))']","[a, attr-instance, and, attr-op2, [r, attr-instance, reelect_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg2, [p2, attr-instance, president], attr-time, [d, attr-instance, date_entity, attr-day, 29, attr-month, 10, attr-year, 2006]]]"
207,207,207,29457,luiz-inacio-lula-da-silva,In Brasilien gibt es eine Verfassung.,64_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=In 1:=Brasilien 2:=gibt 3:=es 4:=eine 5:=Verfassung.,1,,There is a constitution in Brazil.,"['# ::snt There is a constitution in Brazil.\n(c / constitution\n      :location (c2 / country\n            :name (n / name\n                  :op1 ""Brazil"")))']","[c, attr-instance, constitution, attr-location, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""brazil""]]]"
208,208,208,29458,luiz-inacio-lula-da-silva,In der Verfassung steht: \newline Man darf nur 2 mal hintereinander Präsident sein.,65_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=In 1:=der 2:=Verfassung 3:=steht: 4:=\newline 5:=Man 6:=darf 7:=nur 8:=2 9:=mal 10:=hintereinander 11:=Präsident 12:=sein.,3,"[[0, 2, 3], [5, 6, 7, 8, 11, 12], [8, 9, 10]]",The constitution states: \newline A person may only serve twice as president.,"['# ::snt The constitution states:\n(s / state-01\n      :ARG0 (c / constitution))', '# ::snt \\newline A person may only serve twice as president.\n(p / possible-01\n      :ARG1 (s / serve-01\n            :frequency 2\n            :ARG0 (p2 / person)\n            :ARG1 (p3 / president)\n            :mod (o / only))\n      :ARG1-of (n / newline-07))']","[s, attr-instance, state_01, attr-arg0, [c, attr-instance, constitution]]"
209,209,209,29459,luiz-inacio-lula-da-silva,Deswegen hat Lula bei der Wahl im Jahr 2010 nicht mit gemacht.,66_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Deswegen 1:=hat 2:=Lula 3:=bei 4:=der 5:=Wahl 6:=im 7:=Jahr 8:=2010 9:=nicht 10:=mit 11:=gemacht.,2,"[[0, 1, 2, 3, 5, 9, 10, 11], [6, 7, 8]]",That is why Lula did not take part in the 2010 election.,"['# ::snt That is why Lula did not take part in the 2010 election.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (p / participate-01\n            :polarity -\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 ""Lula""))\n            :ARG1 (e / elect-01\n                  :time (d / date-entity\n                        :year 2010))))']","[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [p, attr-instance, participate_01, attr-polarity, negative, attr-arg0, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [e, attr-instance, elect_01, attr-time, [d, attr-instance, date_entity, attr-year, 2010]]]]"
210,210,210,29460,luiz-inacio-lula-da-silva,Die Wahl gewinnt Dilma Rousseff.,67_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Die 1:=Wahl 2:=gewinnt 3:=Dilma 4:=Rousseff.,1,,Dilma Rousseff wins the election.,"['# ::snt Dilma Rousseff wins the election.\n(w / win-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Dilma""\n                  :op2 ""R Rousseff""))\n      :ARG1 (e / elect-01))']","[w, attr-instance, win_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""dilma"", attr-op2, ""r, rousseff""]], attr-arg1, [e, attr-instance, elect_01]]"
211,211,211,29462,luiz-inacio-lula-da-silva,Seit dem 30. Oktober 2022 ist Lula wieder der Präsident von Brasilien.,69_long,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Seit 1:=dem 2:=30. 3:=Oktober 4:=2022 5:=ist 6:=Lula 7:=wieder 8:=der 9:=Präsident 10:=von 11:=Brasilien.,3,"[[0, 2, 3, 4], [9], [10, 11]]","Since October 30, 2022, Lula is again the President of Brazil.","['# ::snt Since October 30, 2022, Lula is again the President of Brazil.\n(h / have-org-role-91\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Lula""))\n      :ARG1 (c / country\n            :name (n2 / name\n                  :op1 ""Brazil""))\n      :ARG2 (p2 / president)\n      :mod (a / again)\n      :time (s / since\n            :op1 (d / date-entity\n                  :year 2022\n                  :month 10\n                  :day 30)))']","[h, attr-instance, have_org_role_91, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""lula""]], attr-arg1, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""brazil""]], attr-arg2, [p2, attr-instance, president], attr-mod, [a, attr-instance, again], attr-time, [s, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-year, 2022, attr-month, 10, attr-day, 30]]]"
212,212,212,29463,luiz-inacio-lula-da-silva,Luiz Inácio Lula da Silva ist der Präsident von Brasilien.,0_short,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Luiz 1:=Inácio 2:=Lula 3:=da 4:=Silva 5:=ist 6:=der 7:=Präsident 8:=von 9:=Brasilien.,2,"[[7], [8, 9]]",Luiz Inácio Lula da Silva is the President of Brazil.,"['# ::snt Luiz Inácio Lula da Silva is the President of Brazil.\n(p / person\n      :name (n / name\n            :op1 ""Luiz""\n            :op2 ""Inácio""\n            :op3 ""Lula""\n            :op4 ""da""\n            :op5 ""Silva"")\n      :ARG0-of (h / have-org-role-91\n            :ARG1 (c / country\n                  :name (n2 / name\n                        :op1 ""Brazil""))\n            :ARG2 (p2 / president)))']","[p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""luiz"", attr-op2, ""inácio"", attr-op3, ""lula"", attr-op4, ""da"", attr-op5, ""silva""], attr-arg0_of, [h, attr-instance, have_org_role_91, attr-arg1, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""brazil""]], attr-arg2, [p2, attr-instance, president]]]"
213,213,213,29464,luiz-inacio-lula-da-silva,Er ist seit dem 30. Oktober 2022 der Präsident.,1_short,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=ist 2:=seit 3:=dem 4:=30. 5:=Oktober 6:=2022 7:=der 8:=Präsident.,1,,"He has been the President since October 30, 2022.","['# ::snt He has been the President since October 30, 2022.\n(h / have-org-role-91\n      :ARG0 (h2 / he)\n      :ARG2 (p / president)\n      :time (s / since\n            :op1 (d / date-entity\n                  :year 2022\n                  :month 10\n                  :day 30)))']","[h, attr-instance, have_org_role_91, attr-arg0, [h2, attr-instance, he], attr-arg2, [p, attr-instance, president], attr-time, [s, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-year, 2022, attr-month, 10, attr-day, 30]]]"
214,214,214,29465,luiz-inacio-lula-da-silva,Er war schon einmal Präsident von Brasilien.,2_short,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Er 1:=war 2:=schon 3:=einmal 4:=Präsident 5:=von 6:=Brasilien.,1,,He was once president of Brazil.,"['# ::snt He was once president of Brazil.\n(h / have-org-role-91\n      :ARG0 (h2 / he)\n      :ARG1 (c / country\n            :name (n / name\n                  :op1 ""Brazil""))\n      :ARG2 (p / president)\n      :time (o / once))']","[h, attr-instance, have_org_role_91, attr-arg0, [h2, attr-instance, he], attr-arg1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""brazil""]], attr-arg2, [p, attr-instance, president], attr-time, [o, attr-instance, once]]"
215,215,215,29466,luiz-inacio-lula-da-silva,Das war vom 1. Januar 2003 bis zum 1. Januar 2011.,3_short,Politik|Personen|Seiten_mit_defekten_Dateilinks,2022-10-31T19:09:35Z,6275ee07d0785a2da491fbb224064f23,0:=Das 1:=war 2:=vom 3:=1. 4:=Januar 5:=2003 6:=bis 7:=zum 8:=1. 9:=Januar 10:=2011.,2,"[[2, 3, 4, 5], [6, 7, 8, 9, 10]]","That was from January 1, 2003 to January 1, 2011.","['# ::snt That was from January 1, 2003 to January 1, 2011.\n(t / that\n      :time (d / date-interval\n            :op1 (d2 / date-entity\n                  :day 1\n                  :month 1\n                  :year 2003)\n            :op2 (d3 / date-entity\n                  :day 1\n                  :month 1\n                  :year 2011)))']","[t, attr-instance, that, attr-time, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-day, 1, attr-month, 1, attr-year, 2003], attr-op2, [d3, attr-instance, date_entity, attr-day, 1, attr-month, 1, attr-year, 2011]]]"
216,216,216,29467,lupe,Mit einer Lupe \newline sieht man Sachen größer.,0_long,Technik|Hilfsmittel,2014-02-21T20:21:19Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Mit 1:=einer 2:=Lupe 3:=\newline 4:=sieht 5:=man 6:=Sachen 7:=größer.,1,,With a magnifying glass \newline you can see things bigger.,['# ::snt With a magnifying glass \\newline you can see things bigger.\n(p / possible-01\n      :ARG1 (s / see-01\n            :ARG0 (y / you)\n            :ARG1 (h / have-degree-91\n                  :ARG1 (t / thing)\n                  :ARG2 (b / big)\n                  :ARG3 (m / more))\n            :instrument (g / glass\n                  :ARG0-of (m2 / magnify-01))))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, see_01, attr-arg0, [y, attr-instance, you], attr-arg1, [h, attr-instance, have_degree_91, attr-arg1, [t, attr-instance, thing], attr-arg2, [b, attr-instance, big], attr-arg3, [m, attr-instance, more]], attr-instrument, [g, attr-instance, glass, attr-arg0_of, [m2, attr-instance, magnify_01]]]]"
217,217,217,29468,lupe,Zum Beispiel kann man einen kleinen Text besser lesen.,1_long,Technik|Hilfsmittel,2014-02-21T20:21:19Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel 2:=kann 3:=man 4:=einen 5:=kleinen 6:=Text 7:=besser 8:=lesen.,2,"[[0, 1, 2, 3, 7, 8], [5]]","For example, you can read a small text better.","['# ::snt For example, you can read a small text better.\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :ARG1 (r / read-01\n                  :ARG0 (y / you)\n                  :ARG1 (t / text\n                        :mod (s / small))\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (g / good-02)\n                        :ARG3 (m / more)))))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [r, attr-instance, read_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, text, attr-mod, [s, attr-instance, small]], attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [g, attr-instance, good_02], attr-arg3, [m, attr-instance, more]]]]]"
218,218,218,29470,lupe,Es gibt auch Redewendungen mit dem Wort Lupe.,3_long,Technik|Hilfsmittel,2014-02-21T20:21:19Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Es 1:=gibt 2:=auch 3:=Redewendungen 4:=mit 5:=dem 6:=Wort 7:=Lupe.,1,,There are also sayings with the word magnifying glass.,['# ::snt There are also sayings with the word magnifying glass.\n(s / say-01\n      :ARG1 (g / glass\n            :ARG0-of (m / magnify-01))\n      :mod (a / also))'],"[s, attr-instance, say_01, attr-arg1, [g, attr-instance, glass, attr-arg0_of, [m, attr-instance, magnify_01]], attr-mod, [a, attr-instance, also]]"
219,219,219,29474,lupe,"Eine Lupe ist ein Glas, \newline das zum Ver-größern benutzt wird.",0_short,Technik|Hilfsmittel,2014-02-21T20:21:19Z,eaab3232dd7a824a6a774fd2f2814e47,"0:=Eine 1:=Lupe 2:=ist 3:=ein 4:=Glas, 5:=\newline 6:=das 7:=zum 8:=Ver-größern 9:=benutzt 10:=wird.",2,"[[1, 2, 4], [6, 7, 8, 9, 10]]",A magnifying glass is a glass \newline that is used for magnifying.,['# ::snt A magnifying glass is a glass \\newline that is used for magnifying.\n(g / glass\n      :ARG0-of (m / magnify-01)\n      :domain (g2 / glass\n            :mod (n / newline)\n            :ARG1-of (u / use-01\n                  :ARG2 (m2 / magnify-01))))'],"[g, attr-instance, glass, attr-arg0_of, [m, attr-instance, magnify_01], attr-domain, [g2, attr-instance, glass, attr-mod, [n, attr-instance, newline], attr-arg1_of, [u, attr-instance, use_01, attr-arg2, [m2, attr-instance, magnify_01]]]]"
220,220,220,29475,lupe,Zum Beispiel: \newline um einen Text größer zu sehen,1_short,Technik|Hilfsmittel,2014-02-21T20:21:19Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Zum 1:=Beispiel: 2:=\newline 3:=um 4:=einen 5:=Text 6:=größer 7:=zu 8:=sehen,2,"[[0, 1, 3, 5, 6, 7], [6]]",For example: \newline to see a text larger,['# ::snt For example: \\newline to see a text larger\n(e / exemplify-01\n      :ARG0 (l / line\n            :mod (n / newline)\n            :ARG0-of (s / see-01\n                  :ARG1 (t / text\n                        :ARG1-of (h / have-degree-91\n                              :ARG2 (l2 / large)\n                              :ARG3 (m / more))))))'],"[e, attr-instance, exemplify_01, attr-arg0, [l, attr-instance, line, attr-mod, [n, attr-instance, newline], attr-arg0_of, [s, attr-instance, see_01, attr-arg1, [t, attr-instance, text, attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [l2, attr-instance, large], attr-arg3, [m, attr-instance, more]]]]]]"
221,221,221,29476,lurker,Das Wort Lurker sagt man im Internet oft als Schimpfwort.,0_long,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,0:=Das 1:=Wort 2:=Lurker 3:=sagt 4:=man 5:=im 6:=Internet 7:=oft 8:=als 9:=Schimpfwort.,2,"[[5, 6], [7, 8, 9]]",The word lurker is often used as a swear word on the Internet.,['# ::snt The word lurker is often used as a swear word on the Internet.\n(u / use-01\n      :ARG1 (w / word\n            :mod (l / lurk-01))\n      :ARG2 (w2 / word\n            :mod (s / swear))\n      :frequency (o / often)\n      :location (ii / internet))'],"[u, attr-instance, use_01, attr-arg1, [w, attr-instance, word, attr-mod, [l, attr-instance, lurk_01]], attr-arg2, [w2, attr-instance, word, attr-mod, [s, attr-instance, swear]], attr-frequency, [o, attr-instance, often], attr-location, [ii, attr-instance, internet]]"
222,222,222,29477,lurker,"Ein Lurker nimmt, \newline aber gibt nichts.",1_long,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Ein 1:=Lurker 2:=nimmt, 3:=\newline 4:=aber 5:=gibt 6:=nichts.",2,"[[1, 2], [4, 5, 6]]","A lurker takes, \newline but gives nothing.","['# ::snt A lurker takes, \\newline but gives nothing.\n(c / contrast-01\n      :ARG1 (t / take-01\n            :ARG0 (p / person\n                  :ARG0-of (l / lurk-01))\n            :ARG1 (l2 / line\n                  :mod (n / newline)))\n      :ARG2 (g / give-01\n            :ARG0 p\n            :ARG1 (n2 / nothing)))']","[c, attr-instance, contrast_01, attr-arg1, [t, attr-instance, take_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [l, attr-instance, lurk_01]], attr-arg1, [l2, attr-instance, line, attr-mod, [n, attr-instance, newline]]], attr-arg2, [g, attr-instance, give_01, attr-arg0, p, attr-arg1, [n2, attr-instance, nothing]]]"
223,223,223,29480,lurker,In einer Internet  Tauschbörse macht ein Lurker einen Download.,4_long,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,0:=In 1:=einer 2:=Internet 3:= 4:=Tauschbörse 5:=macht 6:=ein 7:=Lurker 8:=einen 9:=Download.,2,"[[0, 2, 4], [5, 7, 9]]",A lurker makes a download on an Internet file sharing platform.,['# ::snt A lurker makes a download on an Internet file sharing platform.\n(d / download-01\n      :ARG0 (p / person\n            :ARG0-of (l / lurk-01))\n      :medium (p2 / platform\n            :ARG0-of (s / share-01\n                  :ARG1 (f / file))\n            :mod (ii / internet)))'],"[d, attr-instance, download_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [l, attr-instance, lurk_01]], attr-medium, [p2, attr-instance, platform, attr-arg0_of, [s, attr-instance, share_01, attr-arg1, [f, attr-instance, file]], attr-mod, [ii, attr-instance, internet]]]"
224,224,224,29481,lurker,Ein Luker macht in der Tauschbörse keinen Upload.,5_long,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=Luker 2:=macht 3:=in 4:=der 5:=Tauschbörse 6:=keinen 7:=Upload.,2,"[[1, 2, 6, 7], [3, 5]]",A Luker does not upload anything to the exchange.,"['# ::snt A Luker does not upload anything to the exchange.\n(u / upload-01\n      :polarity -\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""A""\n                  :op2 ""Luker""))\n      :ARG1 (a / anything)\n      :ARG2 (e / exchange))']","[u, attr-instance, upload_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""a"", attr-op2, ""luker""]], attr-arg1, [a, attr-instance, anything], attr-arg2, [e, attr-instance, exchange]]"
225,225,225,29483,lurker,Ein Lurker liest in einem Wiki.,7_long,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=Lurker 2:=liest 3:=in 4:=einem 5:=Wiki.,1,,A lurker reading a wiki.,"['# ::snt A lurker reading a wiki.\n(p / person\n      :ARG0-of (l / lurk-01)\n      :ARG0-of (r / read-01\n            :ARG1 (p2 / publication\n                  :name (n / name\n                        :op1 ""Wikipedia""))))']","[p, attr-instance, person, attr-arg0_of, [l, attr-instance, lurk_01], attr-arg0_of, [r, attr-instance, read_01, attr-arg1, [p2, attr-instance, publication, attr-name, [n, attr-instance, name, attr-op1, ""wikipedia""]]]]"
226,226,226,29484,lurker,Ein Lurker schreibt selbst keine Artikel in einem Wiki.,8_long,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=Lurker 2:=schreibt 3:=selbst 4:=keine 5:=Artikel 6:=in 7:=einem 8:=Wiki.,2,"[[1, 2, 3, 4, 5], [6, 8]]",A lurker does not write articles in a wiki himself.,"['# ::snt A lurker does not write articles in a wiki himself.\n(w / write-01\n      :polarity -\n      :ARG0 (p / person\n            :ARG0-of (l / lurk-01))\n      :ARG1 (a / article)\n      :location (p2 / publication\n            :name (n / name\n                  :op1 ""Wikipedia"")))']","[w, attr-instance, write_01, attr-polarity, negative, attr-arg0, [p, attr-instance, person, attr-arg0_of, [l, attr-instance, lurk_01]], attr-arg1, [a, attr-instance, article], attr-location, [p2, attr-instance, publication, attr-name, [n, attr-instance, name, attr-op1, ""wikipedia""]]]"
227,227,227,29485,lurker,Lurker ist ein englisches Wort.,0_short,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,0:=Lurker 1:=ist 2:=ein 3:=englisches 4:=Wort.,1,,Lurker is an English word.,"['# ::snt Lurker is an English word.\n(w / word\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English""))\n      :domain (s / string-entity\n            :value ""Lurker""))']","[w, attr-instance, word, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-domain, [s, attr-instance, string_entity, attr-value, ""lurker""]]"
228,228,228,29486,lurker,Das Wort wird meistens im Internet benutzt.,1_short,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,0:=Das 1:=Wort 2:=wird 3:=meistens 4:=im 5:=Internet 6:=benutzt.,1,,The word is mostly used on the Internet.,['# ::snt The word is mostly used on the Internet.\n(u / use-01\n      :ARG1 (w / word)\n      :location (ii / internet)\n      :mod (m / most))'],"[u, attr-instance, use_01, attr-arg1, [w, attr-instance, word], attr-location, [ii, attr-instance, internet], attr-mod, [m, attr-instance, most]]"
229,229,229,29487,lurker,"Zum Beispiel sind damit Internetbenutzer gemeint, \newline die in einem Forum nur lesen und beobachten.",2_short,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Zum 1:=Beispiel 2:=sind 3:=damit 4:=Internetbenutzer 5:=gemeint, 6:=\newline 7:=die 8:=in 9:=einem 10:=Forum 11:=nur 12:=lesen 13:=und 14:=beobachten.",3,"[[0, 1, 2, 3, 5], [7, 8, 10, 11, 12], [7, 8, 10, 11, 14]]","For example, this refers to Internet users \newline who only read and observe in a forum.","['# ::snt For example, this refers to Internet users \\newline who only read and observe in a forum.\n(r / refer-01\n      :ARG0 (t / this)\n      :ARG1 (p / person\n            :ARG0-of (u / use-01\n                  :ARG1 (ii / internet))\n            :name (n / name\n                  :op1 ""newline"")\n            :ARG0-of (r2 / read-01\n                  :ARG1 (f / forum)\n                  :mod (o / only))\n            :ARG0-of (o2 / observe-01\n                  :location f))\n      :ARG0-of (e / exemplify-01))']","[r, attr-instance, refer_01, attr-arg0, [t, attr-instance, this], attr-arg1, [p, attr-instance, person, attr-arg0_of, [u, attr-instance, use_01, attr-arg1, [ii, attr-instance, internet]], attr-name, [n, attr-instance, name, attr-op1, ""newline""], attr-arg0_of, [r2, attr-instance, read_01, attr-arg1, [f, attr-instance, forum], attr-mod, [o, attr-instance, only]], attr-arg0_of, [o2, attr-instance, observe_01, attr-location, f]], attr-arg0_of, [e, attr-instance, exemplify_01]]"
230,230,230,29488,lurker,Ein Lurker diskutiert nicht mit.,3_short,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=Lurker 2:=diskutiert 3:=nicht 4:=mit.,1,,A lurker does not participate in discussions.,['# ::snt A lurker does not participate in discussions.\n(p / participate-01\n      :polarity -\n      :ARG0 (p2 / person\n            :ARG0-of (l / lurk-01))\n      :ARG1 (d / discuss-01))'],"[p, attr-instance, participate_01, attr-polarity, negative, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [l, attr-instance, lurk_01]], attr-arg1, [d, attr-instance, discuss_01]]"
231,231,231,29489,lurker,Ein Lurker bleibt lieber versteckt.,4_short,Schimpfwort,2012-11-22T08:39:34Z,28d34f2e053dee2c0e9399a7924cd978,0:=Ein 1:=Lurker 2:=bleibt 3:=lieber 4:=versteckt.,1,,A lurker prefers to stay hidden.,['# ::snt A lurker prefers to stay hidden.\n(p / prefer-01\n      :ARG0 (p2 / person\n            :ARG0-of (l / lurk-01))\n      :ARG1 (s / stay-01\n            :ARG1 p2\n            :ARG3 (h / hide-01\n                  :ARG1 p2)))'],"[p, attr-instance, prefer_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [l, attr-instance, lurk_01]], attr-arg1, [s, attr-instance, stay_01, attr-arg1, p2, attr-arg3, [h, attr-instance, hide_01, attr-arg1, p2]]]"
232,232,232,29490,ma-getrank,In eine Maß passt 1 Liter Bier.,0_long,Essen_und_Trinken,2013-09-22T10:25:00Z,eaab3232dd7a824a6a774fd2f2814e47,0:=In 1:=eine 2:=Maß 3:=passt 4:=1 5:=Liter 6:=Bier.,1,,One Maß holds 1 liter of beer.,"['# ::snt One Maß holds 1 liter of beer.\n(h / hold-01\n      :ARG0 (t / thing\n            :quant 1\n            :name (n / name\n                  :op1 ""Maß""))\n      :ARG1 (b / beer\n            :quant (v / volume-quantity\n                  :quant 1\n                  :unit (l / liter))))']","[h, attr-instance, hold_01, attr-arg0, [t, attr-instance, thing, attr-quant, 1, attr-name, [n, attr-instance, name, attr-op1, ""maß""]], attr-arg1, [b, attr-instance, beer, attr-quant, [v, attr-instance, volume_quantity, attr-quant, 1, attr-unit, [l, attr-instance, liter]]]]"
233,233,233,29491,ma-getrank,Besonders bekannt ist die Maß beim Oktoberfest.,1_long,Essen_und_Trinken,2013-09-22T10:25:00Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Besonders 1:=bekannt 2:=ist 3:=die 4:=Maß 5:=beim 6:=Oktoberfest.,2,"[[0, 1, 2, 4], [5, 6]]",The Maß is particularly well-known at the Oktoberfest.,"['# ::snt The Maß is particularly well-known at the Oktoberfest.\n(k / know-02\n      :ARG1 (e / event\n            :name (n / name\n                  :op1 ""Oktoberfest""))\n      :ARG2 e\n      :name (n2 / name\n            :op1 ""Maß"")\n      :degree (w / well-09)\n      :mod (p / particular))']","[k, attr-instance, know_02, attr-arg1, [e, attr-instance, event, attr-name, [n, attr-instance, name, attr-op1, ""oktoberfest""]], attr-arg2, e, attr-name, [n2, attr-instance, name, attr-op1, ""maß""], attr-degree, [w, attr-instance, well_09], attr-mod, [p, attr-instance, particular]]"
234,234,234,29492,ma-getrank,Eine Maß ist ein sehr großes Glas.,0_short,Essen_und_Trinken,2013-09-22T10:25:00Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Eine 1:=Maß 2:=ist 3:=ein 4:=sehr 5:=großes 6:=Glas.,1,,A Maß is a very large glass.,"['# ::snt A Maß is a very large glass.\n(g / glass\n      :mod (l / large\n            :degree (v / very))\n      :domain (p / product\n            :name (n / name\n                  :op1 ""A""\n                  :op2 ""Maß"")))']","[g, attr-instance, glass, attr-mod, [l, attr-instance, large, attr-degree, [v, attr-instance, very]], attr-domain, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""a"", attr-op2, ""maß""]]]"
235,235,235,29494,mac-os-x,Mac OS X gehört der Firma Apple.,0_long,Computer,2009-10-12T06:33:30Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Mac 1:=OS 2:=X 3:=gehört 4:=der 5:=Firma 6:=Apple.,1,,Mac OS X is owned by Apple.,"['# ::snt Mac OS X is owned by Apple.\n(o / own-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 ""Apple""))\n      :ARG1 (p / product\n            :name (n2 / name\n                  :op1 ""Mac""\n                  :op2 ""OS""\n                  :op3 ""X"")))']","[o, attr-instance, own_01, attr-arg0, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""apple""]], attr-arg1, [p, attr-instance, product, attr-name, [n2, attr-instance, name, attr-op1, ""mac"", attr-op2, ""os"", attr-op3, ""x""]]]"
236,236,236,29495,mac-os-x,Mac OS X ist ein Betriebssystem für den Computer.,0_short,Computer,2009-10-12T06:33:30Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Mac 1:=OS 2:=X 3:=ist 4:=ein 5:=Betriebssystem 6:=für 7:=den 8:=Computer.,2,"[[5], [6, 8]]",Mac OS X is an operating system for the computer.,"['# ::snt Mac OS X is an operating system for the computer.\n(s / system\n      :ARG0-of (o / operate-01)\n      :purpose (c / computer)\n      :domain (p / product\n            :name (n / name\n                  :op1 ""Mac""\n                  :op2 ""OS""\n                  :op3 ""X"")))']","[s, attr-instance, system, attr-arg0_of, [o, attr-instance, operate_01], attr-purpose, [c, attr-instance, computer], attr-domain, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""mac"", attr-op2, ""os"", attr-op3, ""x""]]]"
237,237,237,29496,mac-os-x,Es funktioniert nur auf Computern der Firma Apple.,1_short,Computer,2009-10-12T06:33:30Z,1165823e29d5567f66ef3bbbcbfabcad,0:=Es 1:=funktioniert 2:=nur 3:=auf 4:=Computern 5:=der 6:=Firma 7:=Apple.,1,,It only works on Apple computers.,"['# ::snt It only works on Apple computers.\n(w / work-09\n      :ARG1 (ii / it)\n      :ARG2 (c / computer\n            :mod (c2 / company\n                  :name (n / name\n                        :op1 ""Apple"")))\n      :mod (o / only))']","[w, attr-instance, work_09, attr-arg1, [ii, attr-instance, it], attr-arg2, [c, attr-instance, computer, attr-mod, [c2, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""apple""]]], attr-mod, [o, attr-instance, only]]"
238,238,238,29497,machthaber,Machthaber können auch mehrere Personen sein.,0_long,Politik,2014-03-28T10:33:08Z,a9f29492ed8786de5125371472bcc003,0:=Machthaber 1:=können 2:=auch 3:=mehrere 4:=Personen 5:=sein.,1,,There can also be several people in power.,['# ::snt There can also be several people in power.\n(p / possible-01\n      :ARG1 (p2 / powerful-02\n            :ARG1 (p3 / person\n                  :quant (s / several)))\n      :mod (a / also))'],"[p, attr-instance, possible_01, attr-arg1, [p2, attr-instance, powerful_02, attr-arg1, [p3, attr-instance, person, attr-quant, [s, attr-instance, several]]], attr-mod, [a, attr-instance, also]]"
239,239,239,29498,machthaber,Beispiele für Deutschland: \newline Der Bundeskanzler ist ein Machthaber.,1_long,Politik,2014-03-28T10:33:08Z,a9f29492ed8786de5125371472bcc003,0:=Beispiele 1:=für 2:=Deutschland: 3:=\newline 4:=Der 5:=Bundeskanzler 6:=ist 7:=ein 8:=Machthaber.,1,,Examples for Germany: \newline The Chancellor is a ruler.,"['# ::snt Examples for Germany:\n(e / exemplify-01\n      :ARG1 (c / country\n            :name (n / name\n                  :op1 ""Germany"")))', '# ::snt \\newline The Chancellor is a ruler.\n(l / line\n      :mod (n / newline)\n      :topic (r / rule-03\n            :ARG0 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG2 (c / chancellor)))))']","[e, attr-instance, exemplify_01, attr-arg1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""germany""]]]"
240,240,240,29499,machthaber,Die Bundesregierung ist ein Machthaber.,2_long,Politik,2014-03-28T10:33:08Z,a9f29492ed8786de5125371472bcc003,0:=Die 1:=Bundesregierung 2:=ist 3:=ein 4:=Machthaber.,1,,The federal government is a ruler.,['# ::snt The federal government is a ruler.\n(r / rule-03\n      :ARG0 (g / government-organization\n            :ARG0-of (g2 / govern-01)\n            :mod (f / federal)))'],"[r, attr-instance, rule_03, attr-arg0, [g, attr-instance, government_organization, attr-arg0_of, [g2, attr-instance, govern_01], attr-mod, [f, attr-instance, federal]]]"
241,241,241,29500,machthaber,Das Wort Machthaber ist nicht immer gut gemeint.,3_long,Politik,2014-03-28T10:33:08Z,a9f29492ed8786de5125371472bcc003,0:=Das 1:=Wort 2:=Machthaber 3:=ist 4:=nicht 5:=immer 6:=gut 7:=gemeint.,1,,The word ruler is not always well-intentioned.,['# ::snt The word ruler is not always well-intentioned.\n(ii / intend-01\n      :polarity -\n      :ARG0 (w / word\n            :mod (p / person\n                  :ARG0-of (r / rule-03)))\n      :ARG1 (w2 / well-09)\n      :time (a / always))'],"[ii, attr-instance, intend_01, attr-polarity, negative, attr-arg0, [w, attr-instance, word, attr-mod, [p, attr-instance, person, attr-arg0_of, [r, attr-instance, rule_03]]], attr-arg1, [w2, attr-instance, well_09], attr-time, [a, attr-instance, always]]"
242,242,242,29501,machthaber,"Die meisten, die das Wort benutzen,  \newline meinen damit einen ""schlechten oder bösen Chef"".",4_long,Politik,2014-03-28T10:33:08Z,a9f29492ed8786de5125371472bcc003,"0:=Die 1:=meisten, 2:=die 3:=das 4:=Wort 5:=benutzen, 6:= 7:=\newline 8:=meinen 9:=damit 10:=einen 11:=""schlechten 12:=oder 13:=bösen 14:=Chef"".",4,"[[1, 8, 9, 14], [11], [13], [2, 4, 5]]","Most people who use the word \newline mean a ""bad or evil boss"".","['# ::snt Most people who use the word \\newline mean a ""bad or evil boss"".\n(p / person\n      :mod (m / most)\n      :ARG0-of (u / use-01\n            :ARG1 (w / word\n                  :mod (s / string-entity\n                        :value ""newline""))\n            :ARG2 (m2 / mean-01\n                  :ARG1 s\n                  :ARG2 (b / boss\n                        :ARG1-of (b2 / bad-07)\n                        :mod (e / evil)))))']","[p, attr-instance, person, attr-mod, [m, attr-instance, most], attr-arg0_of, [u, attr-instance, use_01, attr-arg1, [w, attr-instance, word, attr-mod, [s, attr-instance, string_entity, attr-value, ""newline""]], attr-arg2, [m2, attr-instance, mean_01, attr-arg1, s, attr-arg2, [b, attr-instance, boss, attr-arg1_of, [b2, attr-instance, bad_07], attr-mod, [e, attr-instance, evil]]]]]"
243,243,243,29502,machthaber,"Ein Machthaber ist jemand, der die Macht hat, ein Chef.",0_short,Politik,2014-03-28T10:33:08Z,a9f29492ed8786de5125371472bcc003,"0:=Ein 1:=Machthaber 2:=ist 3:=jemand, 4:=der 5:=die 6:=Macht 7:=hat, 8:=ein 9:=Chef.",2,"[[3, 4, 6, 7], [9]]","A ruler is someone who has power, a boss.","['# ::snt A ruler is someone who has power, a boss.\n(s / someone\n      :ARG0-of (r / rule-03)\n      :ARG0-of (h / have-03\n            :ARG1 (p / power))\n      :ARG0-of (h2 / have-rel-role-91\n            :ARG2 (b / boss)))']","[s, attr-instance, someone, attr-arg0_of, [r, attr-instance, rule_03], attr-arg0_of, [h, attr-instance, have_03, attr-arg1, [p, attr-instance, power]], attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg2, [b, attr-instance, boss]]]"
244,244,244,29504,macht,Macht ist eine Fähigkeit von Menschen.,0_short,,2020-10-14T20:18:28Z,4ff2e716a7d06ce5274b4090b39abad3,0:=Macht 1:=ist 2:=eine 3:=Fähigkeit 4:=von 5:=Menschen.,1,,Power is a human ability.,['# ::snt Power is a human ability.\n(c / capable-01\n      :ARG1 (h / human)\n      :ARG2 (p / power))'],"[c, attr-instance, capable_01, attr-arg1, [h, attr-instance, human], attr-arg2, [p, attr-instance, power]]"
245,245,245,29505,macht,Ein Mensch mit Macht beeinflusst andere Menschen.,1_short,,2020-10-14T20:18:28Z,4ff2e716a7d06ce5274b4090b39abad3,0:=Ein 1:=Mensch 2:=mit 3:=Macht 4:=beeinflusst 5:=andere 6:=Menschen.,1,,A person with power influences other people.,['# ::snt A person with power influences other people.\n(ii / influence-01\n      :ARG0 (p / person\n            :ARG0-of (p2 / power-01))\n      :ARG1 (p3 / person\n            :mod (o / other)))'],"[ii, attr-instance, influence_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, power_01]], attr-arg1, [p3, attr-instance, person, attr-mod, [o, attr-instance, other]]]"
246,246,246,29506,macht,Macht ist manchmal gut und manchmal schlecht.,2_short,,2020-10-14T20:18:28Z,4ff2e716a7d06ce5274b4090b39abad3,0:=Macht 1:=ist 2:=manchmal 3:=gut 4:=und 5:=manchmal 6:=schlecht.,2,"[[2, 3], [5, 6]]",Power is sometimes good and sometimes bad.,['# ::snt Power is sometimes good and sometimes bad.\n(a / and\n      :op1 (g / good-02\n            :ARG1 (p / power)\n            :frequency (s / sometimes))\n      :op2 (b / bad-07\n            :ARG1 p\n            :frequency (s2 / sometimes)))'],"[a, attr-instance, and, attr-op1, [g, attr-instance, good_02, attr-arg1, [p, attr-instance, power], attr-frequency, [s, attr-instance, sometimes]], attr-op2, [b, attr-instance, bad_07, attr-arg1, p, attr-frequency, [s2, attr-instance, sometimes]]]"
247,247,247,29507,macht,Das Wort benutzt man bei Politik.,3_short,,2020-10-14T20:18:28Z,4ff2e716a7d06ce5274b4090b39abad3,0:=Das 1:=Wort 2:=benutzt 3:=man 4:=bei 5:=Politik.,1,,The word is used in politics.,['# ::snt The word is used in politics.\n(u / use-01\n      :ARG1 (w / word)\n      :ARG2 (p / politics))'],"[u, attr-instance, use_01, attr-arg1, [w, attr-instance, word], attr-arg2, [p, attr-instance, politics]]"
248,248,248,29508,macht,Menschen haben unterschiedlich viel Macht.,4_short,,2020-10-14T20:18:28Z,4ff2e716a7d06ce5274b4090b39abad3,0:=Menschen 1:=haben 2:=unterschiedlich 3:=viel 4:=Macht.,1,,People have different amounts of power.,['# ::snt People have different amounts of power.\n(p / power\n      :quant (a / amount\n            :ARG1-of (d / differ-02))\n      :poss (p2 / person))'],"[p, attr-instance, power, attr-quant, [a, attr-instance, amount, attr-arg1_of, [d, attr-instance, differ_02]], attr-poss, [p2, attr-instance, person]]"
249,249,249,29509,macke,Jeder Mensch hat eine Macke.,0_long,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,0:=Jeder 1:=Mensch 2:=hat 3:=eine 4:=Macke.,1,,Everyone has a flaw.,['# ::snt Everyone has a flaw.\n(f / flaw-01\n      :ARG1 (e / everyone))'],"[f, attr-instance, flaw_01, attr-arg1, [e, attr-instance, everyone]]"
250,250,250,29510,macke,"Eine Macke kann ein Tick sein, eine Eigenart oder eine Behinderung.",1_long,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,"0:=Eine 1:=Macke 2:=kann 3:=ein 4:=Tick 5:=sein, 6:=eine 7:=Eigenart 8:=oder 9:=eine 10:=Behinderung.",3,"[[4], [7], [10]]","A quirk can be a tick, a peculiarity or a disability.","['# ::snt A quirk can be a tick, a peculiarity or a disability.\n(p / possible-01\n      :ARG1 (o / or\n            :op1 (t / tick)\n            :op2 (p2 / peculiarity)\n            :op3 (d / disability)\n            :domain (q / quirk)))']","[p, attr-instance, possible_01, attr-arg1, [o, attr-instance, or, attr-op1, [t, attr-instance, tick], attr-op2, [p2, attr-instance, peculiarity], attr-op3, [d, attr-instance, disability], attr-domain, [q, attr-instance, quirk]]]"
251,251,251,29511,macke,Viele Menschen haben die-selben Macken.,2_long,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,0:=Viele 1:=Menschen 2:=haben 3:=die-selben 4:=Macken.,1,,Many people have the same quirks.,['# ::snt Many people have the same quirks.\n(h / have-03\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (t / thing\n            :ARG1-of (r / resemble-01\n                  :ARG2 (b / bug))))'],"[h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [r, attr-instance, resemble_01, attr-arg2, [b, attr-instance, bug]]]]"
252,252,252,29512,macke,Sie unterscheiden sich nicht besonders.,3_long,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,0:=Sie 1:=unterscheiden 2:=sich 3:=nicht 4:=besonders.,1,,They are not particularly different.,['# ::snt They are not particularly different.\n(d / differ-02\n      :polarity -\n      :ARG1 (t / they)\n      :mod (p / particular))'],"[d, attr-instance, differ_02, attr-polarity, negative, attr-arg1, [t, attr-instance, they], attr-mod, [p, attr-instance, particular]]"
253,253,253,29513,macke,Manche Menschen haben besondere Macken.,4_long,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,0:=Manche 1:=Menschen 2:=haben 3:=besondere 4:=Macken.,1,,Some people have special quirks.,['# ::snt Some people have special quirks.\n(h / have-03\n      :ARG0 (p / person\n            :mod (s / some))\n      :ARG1 (q / quirk\n            :ARG1-of (s2 / special-02)))'],"[h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-mod, [s, attr-instance, some]], attr-arg1, [q, attr-instance, quirk, attr-arg1_of, [s2, attr-instance, special_02]]]"
254,254,254,29514,macke,Eine Macke macht jemand einzigartig.,5_long,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,0:=Eine 1:=Macke 2:=macht 3:=jemand 4:=einzigartig.,1,,A quirk makes someone unique.,['# ::snt A quirk makes someone unique.\n(m / make-02\n      :ARG0 (q / quirk)\n      :ARG1 (u / unique-01\n            :ARG1 (s / someone)))'],"[m, attr-instance, make_02, attr-arg0, [q, attr-instance, quirk], attr-arg1, [u, attr-instance, unique_01, attr-arg1, [s, attr-instance, someone]]]"
255,255,255,29515,macke,"Man kann jemand besonders mögen, weil er eine Macke hat.",6_long,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,"0:=Man 1:=kann 2:=jemand 3:=besonders 4:=mögen, 5:=weil 6:=er 7:=eine 8:=Macke 9:=hat.",2,"[[0, 1, 2, 3, 4], [5, 6, 8, 9]]",You can like someone especially because they have a quirk.,['# ::snt You can like someone especially because they have a quirk.\n(p / possible-01\n      :ARG1 (l / like-01\n            :ARG0 (y / you)\n            :ARG1 (s / someone))\n      :ARG1-of (c / cause-01\n            :ARG0 (q / quirk-01\n                  :ARG0 s)\n            :mod (e / especially)))'],"[p, attr-instance, possible_01, attr-arg1, [l, attr-instance, like_01, attr-arg0, [y, attr-instance, you], attr-arg1, [s, attr-instance, someone]], attr-arg1_of, [c, attr-instance, cause_01, attr-arg0, [q, attr-instance, quirk_01, attr-arg0, s], attr-mod, [e, attr-instance, especially]]]"
256,256,256,29516,macke,"Je mehr Menschen stolz sind auf ihre Macken,  \newline um so normaler wird es,  \newline eine Macke zu haben.",7_long,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,"0:=Je 1:=mehr 2:=Menschen 3:=stolz 4:=sind 5:=auf 6:=ihre 7:=Macken, 8:= 9:=\newline 10:=um 11:=so 12:=normaler 13:=wird 14:=es, 15:= 16:=\newline 17:=eine 18:=Macke 19:=zu 20:=haben.",3,"[[0, 1, 2, 3, 4, 5, 6, 7], [10, 11, 12, 13, 14], [18, 19, 20]]","The more people are proud of their quirks, \newline the more normal it becomes to have a quirk.","['# ::snt The more people are proud of their quirks, \\newline the more normal it becomes to have a quirk.\n(c / correlate-91\n      :ARG1 (m / more\n            :ARG3-of (h / have-quant-91\n                  :ARG1 (p / pride-01\n                        :ARG0 (p2 / person)\n                        :ARG1 (q / quirk\n                              :poss p2))))\n      :ARG2 (m2 / more\n            :ARG3-of (h2 / have-quant-91\n                  :ARG1 (b / become-01\n                        :ARG1 (ii / it)\n                        :ARG2 (h3 / have-03\n                              :ARG0 ii\n                              :ARG1 (q2 / quirk))))))']","[c, attr-instance, correlate_91, attr-arg1, [m, attr-instance, more, attr-arg3_of, [h, attr-instance, have_quant_91, attr-arg1, [p, attr-instance, pride_01, attr-arg0, [p2, attr-instance, person], attr-arg1, [q, attr-instance, quirk, attr-poss, p2]]]], attr-arg2, [m2, attr-instance, more, attr-arg3_of, [h2, attr-instance, have_quant_91, attr-arg1, [b, attr-instance, become_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [h3, attr-instance, have_03, attr-arg0, ii, attr-arg1, [q2, attr-instance, quirk]]]]]]"
257,257,257,29517,macke,Eine Macke ist ein Kratzer oder eine Delle.,0_short,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,0:=Eine 1:=Macke 2:=ist 3:=ein 4:=Kratzer 5:=oder 6:=eine 7:=Delle.,2,"[[4], [7]]",A blemish is a scratch or a dent.,['# ::snt A blemish is a scratch or a dent.\n(b / blemish-01\n      :ARG1 (o / or\n            :op1 (s / scratch)\n            :op2 (d / dent)))'],"[b, attr-instance, blemish_01, attr-arg1, [o, attr-instance, or, attr-op1, [s, attr-instance, scratch], attr-op2, [d, attr-instance, dent]]]"
258,258,258,29518,macke,Bei Menschen ist eine Macke eine Besonderheit.,1_short,Wörter_mit_verschiedenen_Bedeutungen|Redewendungen,2014-12-03T16:45:06Z,2ea1a8ea6b2bfe94c51d6422d4cdaad4,0:=Bei 1:=Menschen 2:=ist 3:=eine 4:=Macke 5:=eine 6:=Besonderheit.,1,,"In humans, a quirk is a special characteristic.","['# ::snt In humans, a quirk is a special characteristic.\n(c / characteristic-02\n      :ARG1 (q / quirk-01)\n      :ARG1-of (s / special-02)\n      :location (h / human))']","[c, attr-instance, characteristic_02, attr-arg1, [q, attr-instance, quirk_01], attr-arg1_of, [s, attr-instance, special_02], attr-location, [h, attr-instance, human]]"
259,259,259,29519,mac,Der Mac ist eine Art von Computer.,0_short,Computer|Seiten_mit_defekten_Dateilinks,2020-04-11T18:45:04Z,cdd271e9ea4695b160b24ff6aef9b112,0:=Der 1:=Mac 2:=ist 3:=eine 4:=Art 5:=von 6:=Computer.,1,,The Mac is a type of computer.,"['# ::snt The Mac is a type of computer.\n(c / computer\n      :mod (t / type)\n      :domain (p / product\n            :name (n / name\n                  :op1 ""Mac"")))']","[c, attr-instance, computer, attr-mod, [t, attr-instance, type], attr-domain, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""mac""]]]"
260,260,260,29520,mac,"Das wird so gesprochen: ""Mäck"".",1_short,Computer|Seiten_mit_defekten_Dateilinks,2020-04-11T18:45:04Z,cdd271e9ea4695b160b24ff6aef9b112,"0:=Das 1:=wird 2:=so 3:=gesprochen: 4:=""Mäck"".",1,,"It is pronounced like this: ""Mäck"".","['# ::snt It is pronounced like this: ""Mäck"".\n(p / pronounce-01\n      :ARG1 (ii / it)\n      :ARG2 (s / string-entity\n            :value ""Mäck""))']","[p, attr-instance, pronounce_01, attr-arg1, [ii, attr-instance, it], attr-arg2, [s, attr-instance, string_entity, attr-value, ""mäck""]]"
261,261,261,29521,mac,Die Firma Apple verkauft die Computer.,2_short,Computer|Seiten_mit_defekten_Dateilinks,2020-04-11T18:45:04Z,cdd271e9ea4695b160b24ff6aef9b112,0:=Die 1:=Firma 2:=Apple 3:=verkauft 4:=die 5:=Computer.,1,,The company Apple sells the computers.,"['# ::snt The company Apple sells the computers.\n(s / sell-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 ""Apple""))\n      :ARG1 (c2 / computer))']","[s, attr-instance, sell_01, attr-arg0, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""apple""]], attr-arg1, [c2, attr-instance, computer]]"
262,262,262,29522,madchenname,Eine Frau hat bei ihrer Geburt den gleichen Nach-namen wie ihre Eltern.,0_long,Familie,2018-08-01T19:53:07Z,8e7384e75d1b209269510d9b5cd29494,0:=Eine 1:=Frau 2:=hat 3:=bei 4:=ihrer 5:=Geburt 6:=den 7:=gleichen 8:=Nach-namen 9:=wie 10:=ihre 11:=Eltern.,2,"[[1, 2, 7, 8, 9, 10, 11], [3, 4, 5]]","At birth, a woman has the same surname as her parents.","['# ::snt At birth, a woman has the same surname as her parents.\n(s / same-01\n      :ARG1 (w / woman)\n      :ARG2 (s2 / surname\n            :poss (p / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 w\n                        :ARG2 (p2 / parent))))\n      :time (b / bear-02\n            :ARG1 w))']","[s, attr-instance, same_01, attr-arg1, [w, attr-instance, woman], attr-arg2, [s2, attr-instance, surname, attr-poss, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, w, attr-arg2, [p2, attr-instance, parent]]]], attr-time, [b, attr-instance, bear_02, attr-arg1, w]]"
263,263,263,29523,madchenname,Später heiratet sie vielleicht einen Mann.,1_long,Familie,2018-08-01T19:53:07Z,8e7384e75d1b209269510d9b5cd29494,0:=Später 1:=heiratet 2:=sie 3:=vielleicht 4:=einen 5:=Mann.,1,,Later she may marry a man.,['# ::snt Later she may marry a man.\n(p / possible-01\n      :ARG1 (m / marry-01\n            :ARG1 (s / she)\n            :ARG2 (m2 / man)\n            :time (a / after)))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, marry_01, attr-arg1, [s, attr-instance, she], attr-arg2, [m2, attr-instance, man], attr-time, [a, attr-instance, after]]]"
264,264,264,29524,madchenname,Dann bekommt sie meistens den Nach-namen von ihrem Mann.,2_long,Familie,2018-08-01T19:53:07Z,8e7384e75d1b209269510d9b5cd29494,0:=Dann 1:=bekommt 2:=sie 3:=meistens 4:=den 5:=Nach-namen 6:=von 7:=ihrem 8:=Mann.,1,,Then she usually gets her husband’s last name.,['# ::snt Then she usually gets her husband’s last name.\n(g / get-01\n      :ARG0 (s / she)\n      :ARG1 (n / name\n            :poss (p / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 s\n                        :ARG2 (h2 / husband)))\n            :mod (l / last))\n      :mod (u / usual)\n      :time (t / then))'],"[g, attr-instance, get_01, attr-arg0, [s, attr-instance, she], attr-arg1, [n, attr-instance, name, attr-poss, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, s, attr-arg2, [h2, attr-instance, husband]]], attr-mod, [l, attr-instance, last]], attr-mod, [u, attr-instance, usual], attr-time, [t, attr-instance, then]]"
265,265,265,29525,madchenname,Ihr alter Nach-name ist dann ihr Mädchen-name.,3_long,Familie,2018-08-01T19:53:07Z,8e7384e75d1b209269510d9b5cd29494,0:=Ihr 1:=alter 2:=Nach-name 3:=ist 4:=dann 5:=ihr 6:=Mädchen-name.,1,,Her old surname will then be her maiden name.,['# ::snt Her old surname will then be her maiden name.\n(n / name-01\n      :ARG1 (s / surname\n            :poss (s2 / she)\n            :mod (o / old))\n      :ARG2 (m / maiden\n            :poss s2)\n      :time (t / then))'],"[n, attr-instance, name_01, attr-arg1, [s, attr-instance, surname, attr-poss, [s2, attr-instance, she], attr-mod, [o, attr-instance, old]], attr-arg2, [m, attr-instance, maiden, attr-poss, s2], attr-time, [t, attr-instance, then]]"
266,266,266,29526,madchenname,"Der Mädchen-name ist der Nach-name, den sie als Mädchen hatte.",4_long,Familie,2018-08-01T19:53:07Z,8e7384e75d1b209269510d9b5cd29494,"0:=Der 1:=Mädchen-name 2:=ist 3:=der 4:=Nach-name, 5:=den 6:=sie 7:=als 8:=Mädchen 9:=hatte.",2,"[[1, 2, 4], [5, 6, 7, 8, 9]]",The maiden name is the last name she had as a girl.,['# ::snt The maiden name is the last name she had as a girl.\n(n / name\n      :mod (m / maiden)\n      :domain (n2 / name\n            :mod (l / last)\n            :ARG1-of (h / have-03\n                  :ARG0 (s / she)\n                  :time (g / girl))))'],"[n, attr-instance, name, attr-mod, [m, attr-instance, maiden], attr-domain, [n2, attr-instance, name, attr-mod, [l, attr-instance, last], attr-arg1_of, [h, attr-instance, have_03, attr-arg0, [s, attr-instance, she], attr-time, [g, attr-instance, girl]]]]"
267,267,267,29527,madchenname,Der Mädchen-name kann auch eine andere Bedeutung haben.,5_long,Familie,2018-08-01T19:53:07Z,8e7384e75d1b209269510d9b5cd29494,0:=Der 1:=Mädchen-name 2:=kann 3:=auch 4:=eine 5:=andere 6:=Bedeutung 7:=haben.,1,,The girl's name can also have another meaning.,"[""# ::snt The girl's name can also have another meaning.\n(p / possible-01\n      :ARG1 (m / mean-01\n            :ARG1 (n / name\n                  :poss (g / girl))\n            :mod (a / another))\n      :mod (a2 / also))""]","[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, mean_01, attr-arg1, [n, attr-instance, name, attr-poss, [g, attr-instance, girl]], attr-mod, [a, attr-instance, another]], attr-mod, [a2, attr-instance, also]]"
268,268,268,29528,madchenname,Manche meinen mit Mädchen-name einen weiblichen Vornamen.,6_long,Familie,2018-08-01T19:53:07Z,8e7384e75d1b209269510d9b5cd29494,0:=Manche 1:=meinen 2:=mit 3:=Mädchen-name 4:=einen 5:=weiblichen 6:=Vornamen.,1,,Some people mean a female first name by girl’s name.,['# ::snt Some people mean a female first name by girl’s name.\n(m / mean-01\n      :ARG0 (p / person\n            :mod (s / some))\n      :ARG1 (n / name\n            :poss (f / female)\n            :ord (o / ordinal-entity\n                  :value 1))\n      :ARG2 (n2 / name\n            :poss (g / girl)))'],"[m, attr-instance, mean_01, attr-arg0, [p, attr-instance, person, attr-mod, [s, attr-instance, some]], attr-arg1, [n, attr-instance, name, attr-poss, [f, attr-instance, female], attr-ord, [o, attr-instance, ordinal_entity, attr-value, 1]], attr-arg2, [n2, attr-instance, name, attr-poss, [g, attr-instance, girl]]]"
269,269,269,29529,madchenname,Der Mädchen-name ist der Nach-name von einer Frau.,0_short,Familie,2018-08-01T19:53:07Z,8e7384e75d1b209269510d9b5cd29494,0:=Der 1:=Mädchen-name 2:=ist 3:=der 4:=Nach-name 5:=von 6:=einer 7:=Frau.,2,"[[4], [5, 7]]",The maiden name is the last name of a woman.,['# ::snt The maiden name is the last name of a woman.\n(n / name\n      :mod (m / maiden)\n      :domain (n2 / name\n            :mod (l / last)\n            :poss (w / woman)))'],"[n, attr-instance, name, attr-mod, [m, attr-instance, maiden], attr-domain, [n2, attr-instance, name, attr-mod, [l, attr-instance, last], attr-poss, [w, attr-instance, woman]]]"
270,270,270,29530,madchenname,Bevor sie einen Mann heiratet.,1_short,Familie,2018-08-01T19:53:07Z,8e7384e75d1b209269510d9b5cd29494,0:=Bevor 1:=sie 2:=einen 3:=Mann 4:=heiratet.,1,,Before she marries a man.,['# ::snt Before she marries a man.\n(b / be-temporally-at-91\n      :ARG2 (b2 / before\n            :op1 (m / marry-01\n                  :ARG1 (s / she)\n                  :ARG2 (m2 / man))))'],"[b, attr-instance, be_temporally_at_91, attr-arg2, [b2, attr-instance, before, attr-op1, [m, attr-instance, marry_01, attr-arg1, [s, attr-instance, she], attr-arg2, [m2, attr-instance, man]]]]"
271,271,271,29531,madonna-kunstlerin,"Madonna wurde am 16. August 1958 in Bay City, USA geboren.",0_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Madonna 1:=wurde 2:=am 3:=16. 4:=August 5:=1958 6:=in 7:=Bay 8:=City, 9:=USA 10:=geboren.",3,"[[2, 3, 4, 5], [6, 7, 8], [6, 9]]","Madonna was born on August 16, 1958 in Bay City, USA.","['# ::snt Madonna was born on August 16, 1958 in Bay City, USA.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Madonna""))\n      :time (d / date-entity\n            :day 16\n            :month 8\n            :year 1958)\n      :location (c / city\n            :name (n2 / name\n                  :op1 ""Bay""\n                  :op2 ""City"")\n            :location (c2 / country\n                  :name (n3 / name\n                        :op1 ""USA""))))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]], attr-time, [d, attr-instance, date_entity, attr-day, 16, attr-month, 8, attr-year, 1958], attr-location, [c, attr-instance, city, attr-name, [n2, attr-instance, name, attr-op1, ""bay"", attr-op2, ""city""], attr-location, [c2, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""usa""]]]]"
272,272,272,29532,madonna-kunstlerin,Vom Jahr 1985 bis zum Jahr 1989 war sie mit Sean Penn verheiratet.,1_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Vom 1:=Jahr 2:=1985 3:=bis 4:=zum 5:=Jahr 6:=1989 7:=war 8:=sie 9:=mit 10:=Sean 11:=Penn 12:=verheiratet.,2,"[[0, 1, 2], [3, 4, 5, 6]]",From 1985 to 1989 she was married to Sean Penn.,"['# ::snt From 1985 to 1989 she was married to Sean Penn.\n(m / marry-01\n      :ARG1 (s / she)\n      :ARG2 (p / person\n            :name (n / name\n                  :op1 ""Sean""\n                  :op2 ""Penn""))\n      :time (d / date-interval\n            :op1 (d2 / date-entity\n                  :year 1985)\n            :op2 (d3 / date-entity\n                  :year 1989)))']","[m, attr-instance, marry_01, attr-arg1, [s, attr-instance, she], attr-arg2, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""sean"", attr-op2, ""penn""]], attr-time, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-year, 1985], attr-op2, [d3, attr-instance, date_entity, attr-year, 1989]]]"
273,273,273,29533,madonna-kunstlerin,Vom 2000 bis zum Jahr 2008 war sie mit Guy Ritchie verheiratet.,2_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Vom 1:=2000 2:=bis 3:=zum 4:=Jahr 5:=2008 6:=war 7:=sie 8:=mit 9:=Guy 10:=Ritchie 11:=verheiratet.,2,"[[0, 1], [2, 3, 4, 5]]",From 2000 to 2008 she was married to Guy Ritchie.,"['# ::snt From 2000 to 2008 she was married to Guy Ritchie.\n(m / marry-01\n      :ARG1 (s / she)\n      :ARG2 (p / person\n            :name (n / name\n                  :op1 ""Guy""\n                  :op2 ""Ritchie""))\n      :time (d / date-interval\n            :op1 (d2 / date-entity\n                  :year 2000)\n            :op2 (d3 / date-entity\n                  :year 2008)))']","[m, attr-instance, marry_01, attr-arg1, [s, attr-instance, she], attr-arg2, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""guy"", attr-op2, ""ritchie""]], attr-time, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-year, 2000], attr-op2, [d3, attr-instance, date_entity, attr-year, 2008]]]"
274,274,274,29534,madonna-kunstlerin,Zusammen mit Carlos Leon hat sie eine Tochter.,3_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zusammen 1:=mit 2:=Carlos 3:=Leon 4:=hat 5:=sie 6:=eine 7:=Tochter.,2,"[[0, 1, 2, 3], [4, 5, 7]]",She has a daughter with Carlos Leon.,"['# ::snt She has a daughter with Carlos Leon.\n(h / have-rel-role-91\n      :ARG0 (s / she)\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Carlos""\n                  :op2 ""Leon""))\n      :ARG2 (d / daughter))']","[h, attr-instance, have_rel_role_91, attr-arg0, [s, attr-instance, she], attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""carlos"", attr-op2, ""leon""]], attr-arg2, [d, attr-instance, daughter]]"
275,275,275,29535,madonna-kunstlerin,Sie ist am 14. Oktober 1996 geboren worden.,4_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Sie 1:=ist 2:=am 3:=14. 4:=Oktober 5:=1996 6:=geboren 7:=worden.,1,,"She was born on October 14, 1996.","['# ::snt She was born on October 14, 1996.\n(b / bear-02\n      :ARG1 (s / she)\n      :time (d / date-entity\n            :day 14\n            :month 10\n            :year 1996))']","[b, attr-instance, bear_02, attr-arg1, [s, attr-instance, she], attr-time, [d, attr-instance, date_entity, attr-day, 14, attr-month, 10, attr-year, 1996]]"
276,276,276,29536,madonna-kunstlerin,Sie heißt: Lourdes Maria Ciccone Leon.,5_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Sie 1:=heißt: 2:=Lourdes 3:=Maria 4:=Ciccone 5:=Leon.,1,,Her name is: Lourdes Maria Ciccone Leon.,"['# ::snt Her name is: Lourdes Maria Ciccone Leon.\n(n / name-01\n      :ARG1 (s / she)\n      :ARG2 (p / person\n            :name (n2 / name\n                  :op1 ""Lourdes""\n                  :op2 ""Maria""\n                  :op3 ""Ciccone""\n                  :op4 ""Leon"")))']","[n, attr-instance, name_01, attr-arg1, [s, attr-instance, she], attr-arg2, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""lourdes"", attr-op2, ""maria"", attr-op3, ""ciccone"", attr-op4, ""leon""]]]"
277,277,277,29537,madonna-kunstlerin,Zusammen mit Guy Ritchie hat sie einen Sohn.,6_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Zusammen 1:=mit 2:=Guy 3:=Ritchie 4:=hat 5:=sie 6:=einen 7:=Sohn.,2,"[[0, 1, 2, 3], [4, 5, 7]]",She has a son with Guy Ritchie.,"['# ::snt She has a son with Guy Ritchie.\n(h / have-rel-role-91\n      :ARG0 (s / she)\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Guy""\n                  :op2 ""Ritchie""))\n      :ARG2 (s2 / son))']","[h, attr-instance, have_rel_role_91, attr-arg0, [s, attr-instance, she], attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""guy"", attr-op2, ""ritchie""]], attr-arg2, [s2, attr-instance, son]]"
278,278,278,29538,madonna-kunstlerin,Er ist am 11. August 2000 geboren worden.,7_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=ist 2:=am 3:=11. 4:=August 5:=2000 6:=geboren 7:=worden.,1,,"He was born on August 11, 2000.","['# ::snt He was born on August 11, 2000.\n(b / bear-02\n      :ARG1 (h / he)\n      :time (d / date-entity\n            :year 2000\n            :month 8\n            :day 11))']","[b, attr-instance, bear_02, attr-arg1, [h, attr-instance, he], attr-time, [d, attr-instance, date_entity, attr-year, 2000, attr-month, 8, attr-day, 11]]"
279,279,279,29539,madonna-kunstlerin,Er heißt: Rocco John Ciccone Ritchie.,8_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=heißt: 2:=Rocco 3:=John 4:=Ciccone 5:=Ritchie.,1,,His name is: Rocco John Ciccone Ritchie.,"['# ::snt His name is: Rocco John Ciccone Ritchie.\n(n / name-01\n      :ARG1 (h / he)\n      :ARG2 (p / person\n            :name (n2 / name\n                  :op1 ""Rocco""\n                  :op2 ""John""\n                  :op3 ""Ciccone""\n                  :op4 ""Ritchie"")))']","[n, attr-instance, name_01, attr-arg1, [h, attr-instance, he], attr-arg2, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""rocco"", attr-op2, ""john"", attr-op3, ""ciccone"", attr-op4, ""ritchie""]]]"
280,280,280,29540,madonna-kunstlerin,Außerdem hat Madonna 2 Kinder adoptiert.,9_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Außerdem 1:=hat 2:=Madonna 3:=2 4:=Kinder 5:=adoptiert.,1,,Madonna has also adopted 2 children.,"['# ::snt Madonna has also adopted 2 children.\n(a / adopt-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Madonna""))\n      :ARG1 (c / child\n            :quant 2)\n      :mod (a2 / also))']","[a, attr-instance, adopt_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]], attr-arg1, [c, attr-instance, child, attr-quant, 2], attr-mod, [a2, attr-instance, also]]"
281,281,281,29541,madonna-kunstlerin,Die Kinder sind aus Malawi.,10_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Die 1:=Kinder 2:=sind 3:=aus 4:=Malawi.,1,,The children are from Malawi.,"['# ::snt The children are from Malawi.\n(c / child\n      :source (c2 / country\n            :name (n / name\n                  :op1 ""Malawi"")))']","[c, attr-instance, child, attr-source, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""malawi""]]]"
282,282,282,29542,madonna-kunstlerin,Madonna hat 300 Millionen Ton-träger verkauft.,11_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Madonna 1:=hat 2:=300 3:=Millionen 4:=Ton-träger 5:=verkauft.,1,,Madonna has sold 300 million records.,"['# ::snt Madonna has sold 300 million records.\n(s / sell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Madonna""))\n      :ARG1 (r / record\n            :quant 300000000))']","[s, attr-instance, sell_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]], attr-arg1, [r, attr-instance, record, attr-quant, 300000000]]"
283,283,283,29543,madonna-kunstlerin,Das heißt: Madonna ist die erfolgreichste Sängerin der Welt.,12_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Das 1:=heißt: 2:=Madonna 3:=ist 4:=die 5:=erfolgreichste 6:=Sängerin 7:=der 8:=Welt.,1,,This means: Madonna is the most successful singer in the world.,"['# ::snt This means: Madonna is the most successful singer in the world.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (h / have-degree-91\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 ""Madonna""))\n            :ARG2 (s / succeed-01\n                  :ARG0 p)\n            :ARG3 (m2 / most)\n            :ARG5 (p2 / person\n                  :ARG0-of (s2 / sing-01)\n                  :location (w / world))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [h, attr-instance, have_degree_91, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]], attr-arg2, [s, attr-instance, succeed_01, attr-arg0, p], attr-arg3, [m2, attr-instance, most], attr-arg5, [p2, attr-instance, person, attr-arg0_of, [s2, attr-instance, sing_01], attr-location, [w, attr-instance, world]]]]"
284,284,284,29544,madonna-kunstlerin,Seit dem Jahr 1983 gibt es Musik Alben von Madonna.,13_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Seit 1:=dem 2:=Jahr 3:=1983 4:=gibt 5:=es 6:=Musik 7:=Alben 8:=von 9:=Madonna.,3,"[[0, 2, 3], [4, 5, 6, 7], [6, 7, 8, 9]]",Madonna has been releasing music albums since 1983.,"['# ::snt Madonna has been releasing music albums since 1983.\n(r / release-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Madonna""))\n      :ARG1 (a / album\n            :mod (m / music))\n      :time (s / since\n            :op1 (d / date-entity\n                  :year 1983)))']","[r, attr-instance, release_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]], attr-arg1, [a, attr-instance, album, attr-mod, [m, attr-instance, music]], attr-time, [s, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-year, 1983]]]"
285,285,285,29545,madonna-kunstlerin,Alle Alben waren in den Charts.,14_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Alle 1:=Alben 2:=waren 3:=in 4:=den 5:=Charts.,1,,All albums were in the charts.,['# ::snt All albums were in the charts.\n(b / be-located-at-91\n      :ARG1 (a / album\n            :mod (a2 / all))\n      :ARG2 (c / chart))'],"[b, attr-instance, be_located_at_91, attr-arg1, [a, attr-instance, album, attr-mod, [a2, attr-instance, all]], attr-arg2, [c, attr-instance, chart]]"
286,286,286,29550,madonna-kunstlerin,Madonna ist auch Schauspielerin.,19_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Madonna 1:=ist 2:=auch 3:=Schauspielerin.,1,,Madonna is also an actress.,"['# ::snt Madonna is also an actress.\n(p / person\n      :ARG0-of (a / act-01)\n      :domain (p2 / person\n            :name (n / name\n                  :op1 ""Madonna""))\n      :mod (a2 / also))']","[p, attr-instance, person, attr-arg0_of, [a, attr-instance, act_01], attr-domain, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]], attr-mod, [a2, attr-instance, also]]"
287,287,287,29551,madonna-kunstlerin,Sie hat in verschiedenen Filmen mitgespielt.,20_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Sie 1:=hat 2:=in 3:=verschiedenen 4:=Filmen 5:=mitgespielt.,1,,She has acted in various films.,['# ::snt She has acted in various films.\n(a / act-01\n      :ARG0 (s / she)\n      :ARG1 (f / film\n            :mod (v / various)))'],"[a, attr-instance, act_01, attr-arg0, [s, attr-instance, she], attr-arg1, [f, attr-instance, film, attr-mod, [v, attr-instance, various]]]"
288,288,288,29558,madonna-kunstlerin,Madonna ist auch Autorin.,27_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Madonna 1:=ist 2:=auch 3:=Autorin.,1,,Madonna is also an author.,"['# ::snt Madonna is also an author.\n(a / author-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Madonna""))\n      :mod (a2 / also))']","[a, attr-instance, author_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]], attr-mod, [a2, attr-instance, also]]"
289,289,289,29559,madonna-kunstlerin,Sie hat Kinder-bücher gemacht.,28_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Sie 1:=hat 2:=Kinder-bücher 3:=gemacht.,1,,She made children's books.,"[""# ::snt She made children's books.\n(m / make-01\n      :ARG0 (s / she)\n      :ARG1 (b / book\n            :topic (c / child)))""]","[m, attr-instance, make_01, attr-arg0, [s, attr-instance, she], attr-arg1, [b, attr-instance, book, attr-topic, [c, attr-instance, child]]]"
290,290,290,29563,madonna-kunstlerin,Madonna ist der Name für die Mutter Gottes im Christentum.,32_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Madonna 1:=ist 2:=der 3:=Name 4:=für 5:=die 6:=Mutter 7:=Gottes 8:=im 9:=Christentum.,3,"[[0, 1], [4, 6, 7], [8, 9]]",Madonna is the name for the mother of God in Christianity.,"['# ::snt Madonna is the name for the mother of God in Christianity.\n(n / name\n      :domain (p / person\n            :name (n2 / name\n                  :op1 ""Madonna""))\n      :ARG1-of (m / mean-01\n            :ARG2 (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 (p3 / person\n                              :name (n3 / name\n                                    :op1 ""God""))\n                        :ARG2 (m2 / mother))\n                  :location (r / religious-group\n                        :name (n4 / name\n                              :op1 ""Christianity"")))))']","[n, attr-instance, name, attr-domain, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""madonna""]], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [p2, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, [p3, attr-instance, person, attr-name, [n3, attr-instance, name, attr-op1, ""god""]], attr-arg2, [m2, attr-instance, mother]], attr-location, [r, attr-instance, religious_group, attr-name, [n4, attr-instance, name, attr-op1, ""christianity""]]]]]"
291,291,291,29564,madonna-kunstlerin,Das war über sehr lange Zeit der einzige Gebrauch dieses Namens.,33_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Das 1:=war 2:=über 3:=sehr 4:=lange 5:=Zeit 6:=der 7:=einzige 8:=Gebrauch 9:=dieses 10:=Namens.,2,"[[0, 1, 7, 8, 9, 10], [2, 3, 4, 5]]",That was the only use of this name for a very long time.,['# ::snt That was the only use of this name for a very long time.\n(u / use-01\n      :ARG1 (n / name\n            :mod (t / this))\n      :ARG2 (t2 / that)\n      :mod (o / only)\n      :ARG1-of (l / long-03\n            :degree (v / very)))'],"[u, attr-instance, use_01, attr-arg1, [n, attr-instance, name, attr-mod, [t, attr-instance, this]], attr-arg2, [t2, attr-instance, that], attr-mod, [o, attr-instance, only], attr-arg1_of, [l, attr-instance, long_03, attr-degree, [v, attr-instance, very]]]"
292,292,292,29565,madonna-kunstlerin,"Als eine Sängerin sich vor einigen Jahren so genannt hat, haben sich viele Christen sehr geärgert.",34_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Als 1:=eine 2:=Sängerin 3:=sich 4:=vor 5:=einigen 6:=Jahren 7:=so 8:=genannt 9:=hat, 10:=haben 11:=sich 12:=viele 13:=Christen 14:=sehr 15:=geärgert.",3,"[[0, 2, 3, 7, 8, 9], [4, 5, 6], [10, 11, 12, 13, 14, 15]]","When a singer called herself that a few years ago, many Christians were very angry.","['# ::snt When a singer called herself that a few years ago, many Christians were very angry.\n(a / anger-01\n      :ARG1 (p / person\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Christian""))\n            :quant (m / many))\n      :degree (v / very)\n      :time (c / call-01\n            :ARG0 (p2 / person\n                  :ARG0-of (s / sing-01))\n            :ARG1 p\n            :ARG2 (t / that)\n            :time (b / before\n                  :op1 (n2 / now)\n                  :quant (f / few\n                        :op1 (t2 / temporal-quantity\n                              :quant 1\n                              :unit (y / year))))))']","[a, attr-instance, anger_01, attr-arg1, [p, attr-instance, person, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""christian""]], attr-quant, [m, attr-instance, many]], attr-degree, [v, attr-instance, very], attr-time, [c, attr-instance, call_01, attr-arg0, [p2, attr-instance, person, attr-arg0_of, [s, attr-instance, sing_01]], attr-arg1, p, attr-arg2, [t, attr-instance, that], attr-time, [b, attr-instance, before, attr-op1, [n2, attr-instance, now], attr-quant, [f, attr-instance, few, attr-op1, [t2, attr-instance, temporal_quantity, attr-quant, 1, attr-unit, [y, attr-instance, year]]]]]]"
293,293,293,29566,madonna-kunstlerin,Aber das hat die Sängerin nicht gestört.,35_long,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Aber 1:=das 2:=hat 3:=die 4:=Sängerin 5:=nicht 6:=gestört.,1,,But that didn’t bother the singer.,['# ::snt But that didn’t bother the singer.\n(c / contrast-01\n      :ARG2 (b / bother-01\n            :polarity -\n            :ARG0 (t / that)\n            :ARG1 (p / person\n                  :ARG0-of (s / sing-01))))'],"[c, attr-instance, contrast_01, attr-arg2, [b, attr-instance, bother_01, attr-polarity, negative, attr-arg0, [t, attr-instance, that], attr-arg1, [p, attr-instance, person, attr-arg0_of, [s, attr-instance, sing_01]]]]"
294,294,294,29567,madonna-kunstlerin,Madonna ist eine Sängerin.,0_short,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Madonna 1:=ist 2:=eine 3:=Sängerin.,1,,Madonna is a singer.,"['# ::snt Madonna is a singer.\n(s / sing-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Madonna"")))']","[s, attr-instance, sing_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]]]"
295,295,295,29568,madonna-kunstlerin,"Sie ist auch eine • Song-schreiberin,",1_short,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Sie 1:=ist 2:=auch 3:=eine 4:=• 5:=Song-schreiberin,",1,,"She is also a • songwriter,","['# ::snt She is also a • songwriter,\n(p / person\n      :ARG0-of (w / write-01\n            :ARG1 (s / song))\n      :domain (s2 / she)\n      :mod (a / also))']","[p, attr-instance, person, attr-arg0_of, [w, attr-instance, write_01, attr-arg1, [s, attr-instance, song]], attr-domain, [s2, attr-instance, she], attr-mod, [a, attr-instance, also]]"
296,296,296,29569,madonna-kunstlerin,"Sie ist auch eine • Schauspielerin,",2_short,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Sie 1:=ist 2:=auch 3:=eine 4:=• 5:=Schauspielerin,",1,,"She is also an • actress,","['# ::snt She is also an • actress,\n(p / person\n      :ARG0-of (a / act-01)\n      :domain (s / she)\n      :mod (a2 / also))']","[p, attr-instance, person, attr-arg0_of, [a, attr-instance, act_01], attr-domain, [s, attr-instance, she], attr-mod, [a2, attr-instance, also]]"
297,297,297,29570,madonna-kunstlerin,"Sie ist auch eine • Autorin,",3_short,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Sie 1:=ist 2:=auch 3:=eine 4:=• 5:=Autorin,",1,,"She is also an • Author,","['# ::snt She is also an • Author,\n(a / author-01\n      :ARG0 (s / she)\n      :mod (a2 / also))']","[a, attr-instance, author_01, attr-arg0, [s, attr-instance, she], attr-mod, [a2, attr-instance, also]]"
298,298,298,29571,madonna-kunstlerin,"Sie ist auch eine • Regisseurin,",4_short,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Sie 1:=ist 2:=auch 3:=eine 4:=• 5:=Regisseurin,",1,,"She is also a • director,","['# ::snt She is also a • director,\n(h / have-org-role-91\n      :ARG0 (s / she)\n      :ARG2 (d / director)\n      :mod (a / also))']","[h, attr-instance, have_org_role_91, attr-arg0, [s, attr-instance, she], attr-arg2, [d, attr-instance, director], attr-mod, [a, attr-instance, also]]"
299,299,299,29572,madonna-kunstlerin,Sie ist auch eine • Produzentin,5_short,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Sie 1:=ist 2:=auch 3:=eine 4:=• 5:=Produzentin,1,,She is also a • Producer,['# ::snt She is also a • Producer\n(p / person\n      :ARG0-of (p2 / produce-01)\n      :mod (a / also)\n      :domain (s / she))'],"[p, attr-instance, person, attr-arg0_of, [p2, attr-instance, produce_01], attr-mod, [a, attr-instance, also], attr-domain, [s, attr-instance, she]]"
300,300,300,29573,madonna-kunstlerin,Sie ist auch eine • und Designerin.,6_short,Personen|Musik,2014-08-16T08:48:07Z,28d34f2e053dee2c0e9399a7924cd978,0:=Sie 1:=ist 2:=auch 3:=eine 4:=• 5:=und 6:=Designerin.,1,,She is also a • and designer.,['# ::snt She is also a • and designer.\n(a / and\n      :op1 (p / person\n            :domain (s / she)\n            :mod (a2 / also))\n      :op2 (p2 / person\n            :ARG0-of (d / design-01)\n            :domain s\n            :mod (a3 / also)))'],"[a, attr-instance, and, attr-op1, [p, attr-instance, person, attr-domain, [s, attr-instance, she], attr-mod, [a2, attr-instance, also]], attr-op2, [p2, attr-instance, person, attr-arg0_of, [d, attr-instance, design_01], attr-domain, s, attr-mod, [a3, attr-instance, also]]]"
301,301,301,29574,madonna-wortklarung,Madonna kann verschiedene Bedeutungen haben.,0_short,Wörter_mit_verschiedenen_Bedeutungen,2020-03-26T16:28:10Z,28d34f2e053dee2c0e9399a7924cd978,0:=Madonna 1:=kann 2:=verschiedene 3:=Bedeutungen 4:=haben.,1,,Madonna can have different meanings.,"['# ::snt Madonna can have different meanings.\n(p / possible-01\n      :ARG1 (m / mean-01\n            :ARG1 (p2 / person\n                  :name (n / name\n                        :op1 ""Madonna""))\n            :ARG1-of (d / differ-02)))']","[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, mean_01, attr-arg1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]], attr-arg1_of, [d, attr-instance, differ_02]]]"
302,302,302,29575,madonna-wortklarung," • Mit Madonna ist Maria, die Mutter von Jesus gemeint: Maria (Mutter Jesu)",1_short,Wörter_mit_verschiedenen_Bedeutungen,2020-03-26T16:28:10Z,28d34f2e053dee2c0e9399a7924cd978,"0:= 1:=• 2:=Mit 3:=Madonna 4:=ist 5:=Maria, 6:=die 7:=Mutter 8:=von 9:=Jesus 10:=gemeint: 11:=Maria 12:=(Mutter 13:=Jesu)",4,"[[2, 3, 4, 5, 10], [6, 7, 8, 9], [11], [12, 13]]","• Madonna means Mary, the mother of Jesus: Mary (Mother of Jesus)","['# ::snt • Madonna means Mary, the mother of Jesus: Mary (Mother of Jesus)\n(m / mean-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Madonna""))\n      :ARG2 (p2 / person\n            :name (n2 / name\n                  :op1 ""Mary"")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p3 / person\n                        :name (n3 / name\n                              :op1 ""Jesus""))\n                  :ARG2 (m2 / mother)))\n      :ARG1-of m\n      :ARG2 (p4 / person\n            :name (n4 / name\n                  :op1 ""Mary"")\n            :ARG0-of (h2 / have-rel-role-91\n                  :ARG1 p3\n                  :ARG2 (m3 / mother))))']","[m, attr-instance, mean_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""madonna""]], attr-arg2, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""mary""], attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, [p3, attr-instance, person, attr-name, [n3, attr-instance, name, attr-op1, ""jesus""]], attr-arg2, [m2, attr-instance, mother]]], attr-arg1_of, m, attr-arg2, [p4, attr-instance, person, attr-name, [n4, attr-instance, name, attr-op1, ""mary""], attr-arg0_of, [h2, attr-instance, have_rel_role_91, attr-arg1, p3, attr-arg2, [m3, attr-instance, mother]]]]"
303,303,303,29577,magenknurren,"Magenknurren kann zum Beispiel enstehen,  \newline wenn man einen leeren Magen hat.",0_long,Gesundheit,2012-11-23T08:45:29Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,"0:=Magenknurren 1:=kann 2:=zum 3:=Beispiel 4:=enstehen, 5:= 6:=\newline 7:=wenn 8:=man 9:=einen 10:=leeren 11:=Magen 12:=hat.",2,"[[0, 1, 4], [7, 8, 10, 11, 12]]","For example, stomach growling can occur when you have an empty stomach.","['# ::snt For example, stomach growling can occur when you have an empty stomach.\n(e / exemplify-01\n      :ARG0 (p / possible-01\n            :ARG1 (g / growl-01\n                  :ARG1 (s / stomach)\n                  :time (h / have-03\n                        :ARG0 (y / you)\n                        :ARG1 (s2 / stomach\n                              :ARG1-of (e2 / empty-02))))))']","[e, attr-instance, exemplify_01, attr-arg0, [p, attr-instance, possible_01, attr-arg1, [g, attr-instance, growl_01, attr-arg1, [s, attr-instance, stomach], attr-time, [h, attr-instance, have_03, attr-arg0, [y, attr-instance, you], attr-arg1, [s2, attr-instance, stomach, attr-arg1_of, [e2, attr-instance, empty_02]]]]]]"
304,304,304,29578,magenknurren,Also wenn wir Hunger haben.,1_long,Gesundheit,2012-11-23T08:45:29Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Also 1:=wenn 2:=wir 3:=Hunger 4:=haben.,1,,So when we are hungry.,['# ::snt So when we are hungry.\n(ii / infer-01\n      :ARG1 (b / be-temporally-at-91\n            :ARG2 (h / hunger-01\n                  :ARG0 (w / we))))'],"[ii, attr-instance, infer_01, attr-arg1, [b, attr-instance, be_temporally_at_91, attr-arg2, [h, attr-instance, hunger_01, attr-arg0, [w, attr-instance, we]]]]"
305,305,305,29579,magenknurren,Die Geräusche entstehen durch die leere Bewegung des Darms.,2_long,Gesundheit,2012-11-23T08:45:29Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Die 1:=Geräusche 2:=entstehen 3:=durch 4:=die 5:=leere 6:=Bewegung 7:=des 8:=Darms.,2,"[[1, 2, 3, 7, 8], [5]]",The noises are caused by the empty movement of the intestine.,['# ::snt The noises are caused by the empty movement of the intestine.\n(c / cause-01\n      :ARG0 (m / move-01\n            :ARG0 (ii / intestine)\n            :ARG1-of (e / empty-02))\n      :ARG1 (n / noise))'],"[c, attr-instance, cause_01, attr-arg0, [m, attr-instance, move_01, attr-arg0, [ii, attr-instance, intestine], attr-arg1_of, [e, attr-instance, empty_02]], attr-arg1, [n, attr-instance, noise]]"
306,306,306,29581,magenknurren,"Wenn Luft und Flüssigkeit bewegt werden, gibt es Geräusche.",4_long,Gesundheit,2012-11-23T08:45:29Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,"0:=Wenn 1:=Luft 2:=und 3:=Flüssigkeit 4:=bewegt 5:=werden, 6:=gibt 7:=es 8:=Geräusche.",3,"[[0, 1, 4, 5], [0, 3, 4, 5], [6, 7, 8]]","When air and liquid move, there is noise.","['# ::snt When air and liquid move, there is noise.\n(n / noise\n      :time (m / move-01\n            :ARG0 (a / and\n                  :op1 (a2 / air)\n                  :op2 (l / liquid))))']","[n, attr-instance, noise, attr-time, [m, attr-instance, move_01, attr-arg0, [a, attr-instance, and, attr-op1, [a2, attr-instance, air], attr-op2, [l, attr-instance, liquid]]]]"
307,307,307,29582,magenknurren,Magenknurren ist ein Geräusch aus dem Bauch.,0_short,Gesundheit,2012-11-23T08:45:29Z,72fb5f8156adf1b638fc9bd1fa6cdbcf,0:=Magenknurren 1:=ist 2:=ein 3:=Geräusch 4:=aus 5:=dem 6:=Bauch.,2,"[[0, 1, 3], [4, 6]]",Stomach growling is a noise coming from the abdomen.,['# ::snt Stomach growling is a noise coming from the abdomen.\n(n / noise\n      :domain (g / growl-01\n            :ARG0 (s / stomach))\n      :ARG1-of (c / come-03\n            :ARG3 (t / thorax)))'],"[n, attr-instance, noise, attr-domain, [g, attr-instance, growl_01, attr-arg0, [s, attr-instance, stomach]], attr-arg1_of, [c, attr-instance, come_03, attr-arg3, [t, attr-instance, thorax]]]"
308,308,308,29583,maghreb,Die Maghreb-staaten sind in Afrika.,0_long,Länder|Seiten_mit_defekten_Dateilinks,2016-02-27T16:58:57Z,7b5adf57ed2178795004f4c052333f37,0:=Die 1:=Maghreb-staaten 2:=sind 3:=in 4:=Afrika.,1,,The Maghreb states are in Africa.,"['# ::snt The Maghreb states are in Africa.\n(b / be-located-at-91\n      :ARG1 (s / state\n            :mod (r / religious-group\n                  :name (n / name\n                        :op1 ""Maghreb"")))\n      :ARG2 (c / continent\n            :name (n2 / name\n                  :op1 ""Africa"")))']","[b, attr-instance, be_located_at_91, attr-arg1, [s, attr-instance, state, attr-mod, [r, attr-instance, religious_group, attr-name, [n, attr-instance, name, attr-op1, ""maghreb""]]], attr-arg2, [c, attr-instance, continent, attr-name, [n2, attr-instance, name, attr-op1, ""africa""]]]"
309,309,309,29585,maghreb,Bei den Maghreb-staaten sind manche Sachen gleich.,2_long,Länder|Seiten_mit_defekten_Dateilinks,2016-02-27T16:58:57Z,7b5adf57ed2178795004f4c052333f37,0:=Bei 1:=den 2:=Maghreb-staaten 3:=sind 4:=manche 5:=Sachen 6:=gleich.,1,,Some things are the same in the Maghreb states.,"['# ::snt Some things are the same in the Maghreb states.\n(s / same-01\n      :ARG1 (t / thing\n            :mod (s2 / some))\n      :location (s3 / state\n            :name (n / name\n                  :op1 ""Maghreb"")))']","[s, attr-instance, same_01, attr-arg1, [t, attr-instance, thing, attr-mod, [s2, attr-instance, some]], attr-location, [s3, attr-instance, state, attr-name, [n, attr-instance, name, attr-op1, ""maghreb""]]]"
310,310,310,29586,maghreb,Zum Beispiel: • die Länder haben alle ein ähnliches Klima,3_long,Länder|Seiten_mit_defekten_Dateilinks,2016-02-27T16:58:57Z,7b5adf57ed2178795004f4c052333f37,0:=Zum 1:=Beispiel: 2:=• 3:=die 4:=Länder 5:=haben 6:=alle 7:=ein 8:=ähnliches 9:=Klima,1,,For example: • the countries all have a similar climate,['# ::snt For example: • the countries all have a similar climate\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (c / country\n                  :mod (a / all))\n            :ARG1 (c2 / climate\n                  :ARG1-of (r / resemble-01))))'],"[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [c, attr-instance, country, attr-mod, [a, attr-instance, all]], attr-arg1, [c2, attr-instance, climate, attr-arg1_of, [r, attr-instance, resemble_01]]]]"
311,311,311,29587,maghreb,Zum Beispiel: • die Länder liegen am Mittel-meer (außer Mauretanien),4_long,Länder|Seiten_mit_defekten_Dateilinks,2016-02-27T16:58:57Z,7b5adf57ed2178795004f4c052333f37,0:=Zum 1:=Beispiel: 2:=• 3:=die 4:=Länder 5:=liegen 6:=am 7:=Mittel-meer 8:=(außer 9:=Mauretanien),2,"[[4, 5, 6, 7], [8, 9]]",For example: • the countries are located on the Mediterranean (except Mauritania),"['# ::snt For example: • the countries are located on the Mediterranean (except Mauritania)\n(e / exemplify-01\n      :ARG0 (l / locate-01\n            :ARG1 (c / country\n                  :ARG2-of (e2 / except-01\n                        :ARG1 (c2 / country\n                              :name (n / name\n                                    :op1 ""Mauritania""))))\n            :location (s / sea\n                  :name (n2 / name\n                        :op1 ""Mediterranean""))))']","[e, attr-instance, exemplify_01, attr-arg0, [l, attr-instance, locate_01, attr-arg1, [c, attr-instance, country, attr-arg2_of, [e2, attr-instance, except_01, attr-arg1, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""mauritania""]]]], attr-location, [s, attr-instance, sea, attr-name, [n2, attr-instance, name, attr-op1, ""mediterranean""]]]]"
312,312,312,29588,maghreb,Zum Beispiel: • in den Ländern sprechen die Menschen meistens Maghrebinisches Arabisch,5_long,Länder|Seiten_mit_defekten_Dateilinks,2016-02-27T16:58:57Z,7b5adf57ed2178795004f4c052333f37,0:=Zum 1:=Beispiel: 2:=• 3:=in 4:=den 5:=Ländern 6:=sprechen 7:=die 8:=Menschen 9:=meistens 10:=Maghrebinisches 11:=Arabisch,1,,For example: • in the countries people mostly speak Maghrebi Arabic,"['# ::snt For example: • in the countries people mostly speak Maghrebi Arabic\n(e / exemplify-01\n      :ARG0 (s / speak-01\n            :ARG0 (p / person)\n            :ARG3 (l / language\n                  :name (n / name\n                        :op1 ""Maghrebi"")\n                  :mod (l2 / language\n                        :name (n2 / name\n                              :op1 ""Arabic"")))\n            :location (c / country)\n            :mod (m / most)))']","[e, attr-instance, exemplify_01, attr-arg0, [s, attr-instance, speak_01, attr-arg0, [p, attr-instance, person], attr-arg3, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""maghrebi""], attr-mod, [l2, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""arabic""]]], attr-location, [c, attr-instance, country], attr-mod, [m, attr-instance, most]]]"
313,313,313,29589,maghreb,Zum Beispiel: • die Länder haben eine ähnliche Geschichte,6_long,Länder|Seiten_mit_defekten_Dateilinks,2016-02-27T16:58:57Z,7b5adf57ed2178795004f4c052333f37,0:=Zum 1:=Beispiel: 2:=• 3:=die 4:=Länder 5:=haben 6:=eine 7:=ähnliche 8:=Geschichte,1,,For example: • the countries have a similar history,['# ::snt For example: • the countries have a similar history\n(e / exemplify-01\n      :ARG0 (h / have-03\n            :ARG0 (c / country)\n            :ARG1 (h2 / history\n                  :ARG1-of (r / resemble-01))))'],"[e, attr-instance, exemplify_01, attr-arg0, [h, attr-instance, have_03, attr-arg0, [c, attr-instance, country], attr-arg1, [h2, attr-instance, history, attr-arg1_of, [r, attr-instance, resemble_01]]]]"
314,314,314,29597,maghreb,Mit Maghreb sind 3 Länder zusammen gemeint.,0_short,Länder|Seiten_mit_defekten_Dateilinks,2016-02-27T16:58:57Z,7b5adf57ed2178795004f4c052333f37,0:=Mit 1:=Maghreb 2:=sind 3:=3 4:=Länder 5:=zusammen 6:=gemeint.,1,,Maghreb refers to three countries together.,"['# ::snt Maghreb refers to three countries together.\n(r / refer-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Maghreb""))\n      :ARG1 (c / country\n            :quant 3\n            :mod (t / together)))']","[r, attr-instance, refer_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""maghreb""]], attr-arg1, [c, attr-instance, country, attr-quant, 3, attr-mod, [t, attr-instance, together]]]"
315,315,315,29604,magnus-carlsen,Magnus Carlsen wurde am 30. November 1990 in geboren.,0_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Magnus 1:=Carlsen 2:=wurde 3:=am 4:=30. 5:=November 6:=1990 7:=in 8:=geboren.,1,,"Magnus Carlsen was born on November 30, 1990 in.","['# ::snt Magnus Carlsen was born on November 30, 1990 in.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Magnus""\n                  :op2 ""Carlsen""))\n      :time (d / date-entity\n            :year 1990\n            :month 11\n            :day 30))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""magnus"", attr-op2, ""carlsen""]], attr-time, [d, attr-instance, date_entity, attr-year, 1990, attr-month, 11, attr-day, 30]]"
316,316,316,29605,magnus-carlsen,"Das war in Tønsberg, Norwegen.",1_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Das 1:=war 2:=in 3:=Tønsberg, 4:=Norwegen.",2,"[[3], [4]]","This was in Tønsberg, Norway.","['# ::snt This was in Tønsberg, Norway.\n(b / be-located-at-91\n      :ARG1 (t / this)\n      :ARG2 (c / city\n            :name (n / name\n                  :op1 ""Tønsberg"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""Norway""))))']","[b, attr-instance, be_located_at_91, attr-arg1, [t, attr-instance, this], attr-arg2, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""tønsberg""], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""norway""]]]]"
317,317,317,29606,magnus-carlsen,Magnus Carlsens Vater hat ihm die Spiel-regeln für Schach beigebracht.,2_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Magnus 1:=Carlsens 2:=Vater 3:=hat 4:=ihm 5:=die 6:=Spiel-regeln 7:=für 8:=Schach 9:=beigebracht.,1,,Magnus Carlsen's father taught him the rules of chess.,"['# ::snt Magnus Carlsen\'s father taught him the rules of chess.\n(t / teach-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :name (n / name\n                              :op1 ""Magnus""\n                              :op2 ""Carlsen""))\n                  :ARG2 (f / father)))\n      :ARG1 (r / rule-01\n            :ARG1 (c / chess))\n      :ARG2 p2)']","[t, attr-instance, teach_01, attr-arg0, [p, attr-instance, person, attr-arg0_of, [h, attr-instance, have_rel_role_91, attr-arg1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""magnus"", attr-op2, ""carlsen""]], attr-arg2, [f, attr-instance, father]]], attr-arg1, [r, attr-instance, rule_01, attr-arg1, [c, attr-instance, chess]], attr-arg2, p2]"
318,318,318,29607,magnus-carlsen,Da war Magnus Carlsen 5 Jahre alt.,3_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Da 1:=war 2:=Magnus 3:=Carlsen 4:=5 5:=Jahre 6:=alt.,1,,Magnus Carlsen was 5 years old.,"['# ::snt Magnus Carlsen was 5 years old.\n(a / age-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Magnus""\n                  :op2 ""Carlsen""))\n      :ARG2 (t / temporal-quantity\n            :quant 5\n            :unit (y / year)))']","[a, attr-instance, age_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""magnus"", attr-op2, ""carlsen""]], attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 5, attr-unit, [y, attr-instance, year]]]"
319,319,319,29608,magnus-carlsen,"Seit er 9 Jahre alt ist, \newline macht er bei Schach-Turnieren mit.",4_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,"0:=Seit 1:=er 2:=9 3:=Jahre 4:=alt 5:=ist, 6:=\newline 7:=macht 8:=er 9:=bei 10:=Schach-Turnieren 11:=mit.",2,"[[0, 1, 2, 3, 4, 5], [7, 8, 9, 10, 11]]","Since he was 9 years old, \newline he has been taking part in chess tournaments.","['# ::snt Since he was 9 years old, \\newline he has been taking part in chess tournaments.\n(p / participate-01\n      :ARG0 (h / he)\n      :ARG1 (t / tournament\n            :mod (c / chess))\n      :time (s / since\n            :op1 (a / age-01\n                  :ARG1 h\n                  :ARG2 (t2 / temporal-quantity\n                        :quant 9\n                        :unit (y / year))))\n      :mod (n / newline))']","[p, attr-instance, participate_01, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, tournament, attr-mod, [c, attr-instance, chess]], attr-time, [s, attr-instance, since, attr-op1, [a, attr-instance, age_01, attr-arg1, h, attr-arg2, [t2, attr-instance, temporal_quantity, attr-quant, 9, attr-unit, [y, attr-instance, year]]]], attr-mod, [n, attr-instance, newline]]"
320,320,320,29609,magnus-carlsen,Er hat den Titel: Schach-Großmeister.,5_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=hat 2:=den 3:=Titel: 4:=Schach-Großmeister.,1,,He has the title: Chess Grandmaster.,['# ::snt He has the title: Chess Grandmaster.\n(t / title-01\n      :ARG1 (h / he)\n      :ARG2 (m / master\n            :mod (c / chess)))'],"[t, attr-instance, title_01, attr-arg1, [h, attr-instance, he], attr-arg2, [m, attr-instance, master, attr-mod, [c, attr-instance, chess]]]"
321,321,321,29610,magnus-carlsen,Seit dem 22. November 2013 ist er Schachweltmeister.,6_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Seit 1:=dem 2:=22. 3:=November 4:=2013 5:=ist 6:=er 7:=Schachweltmeister.,2,"[[0, 2, 3, 4], [5, 6, 7]]","He has been World Chess Champion since November 22, 2013.","['# ::snt He has been World Chess Champion since November 22, 2013.\n(h / have-org-role-91\n      :ARG0 (h2 / he)\n      :ARG1 (g / game\n            :name (n / name\n                  :op1 ""World""\n                  :op2 ""Chess""))\n      :ARG2 (c / champion)\n      :time (s / since\n            :op1 (d / date-entity\n                  :year 2013\n                  :month 11\n                  :day 22)))']","[h, attr-instance, have_org_role_91, attr-arg0, [h2, attr-instance, he], attr-arg1, [g, attr-instance, game, attr-name, [n, attr-instance, name, attr-op1, ""world"", attr-op2, ""chess""]], attr-arg2, [c, attr-instance, champion], attr-time, [s, attr-instance, since, attr-op1, [d, attr-instance, date_entity, attr-year, 2013, attr-month, 11, attr-day, 22]]]"
322,322,322,29611,magnus-carlsen,Magnus Carlsen ist einer der besten Schachspieler der Welt.,7_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Magnus 1:=Carlsen 2:=ist 3:=einer 4:=der 5:=besten 6:=Schachspieler 7:=der 8:=Welt.,1,,Magnus Carlsen is one of the best chess players in the world.,"['# ::snt Magnus Carlsen is one of the best chess players in the world.\n(ii / include-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Magnus""\n                  :op2 ""Carlsen""))\n      :ARG2 (p2 / person\n            :ARG0-of (p3 / play-01\n                  :ARG1 (c / chess))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (g / good-03\n                        :ARG1 p3)\n                  :ARG3 (m / most)\n                  :ARG5 (p4 / person\n                        :location (w / world)))))']","[ii, attr-instance, include_91, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""magnus"", attr-op2, ""carlsen""]], attr-arg2, [p2, attr-instance, person, attr-arg0_of, [p3, attr-instance, play_01, attr-arg1, [c, attr-instance, chess]], attr-arg1_of, [h, attr-instance, have_degree_91, attr-arg2, [g, attr-instance, good_03, attr-arg1, p3], attr-arg3, [m, attr-instance, most], attr-arg5, [p4, attr-instance, person, attr-location, [w, attr-instance, world]]]]]"
323,323,323,29612,magnus-carlsen,Für Schachspieler gibt es eine Weltrangliste.,8_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Für 1:=Schachspieler 2:=gibt 3:=es 4:=eine 5:=Weltrangliste.,1,,There is a world ranking list for chess players.,['# ::snt There is a world ranking list for chess players.\n(l / list-01\n      :ARG1 (r / rank-01\n            :ARG1 (p / person\n                  :ARG0-of (p2 / play-01\n                        :ARG1 (c / chess)))\n            :mod (w / world)))'],"[l, attr-instance, list_01, attr-arg1, [r, attr-instance, rank_01, attr-arg1, [p, attr-instance, person, attr-arg0_of, [p2, attr-instance, play_01, attr-arg1, [c, attr-instance, chess]]], attr-mod, [w, attr-instance, world]]]"
324,324,324,29613,magnus-carlsen,Im Februar 2013 hatte er in dieser Liste 2872 Punkte.,9_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Im 1:=Februar 2:=2013 3:=hatte 4:=er 5:=in 6:=dieser 7:=Liste 8:=2872 9:=Punkte.,3,"[[0, 1, 2], [3, 4, 8, 9], [5, 7]]","In February 2013, he had 2872 points on this list.","['# ::snt In February 2013, he had 2872 points on this list.\n(h / have-03\n      :ARG0 (h2 / he)\n      :ARG1 (p / point\n            :quant 2872)\n      :location (l / list\n            :mod (t / this))\n      :time (d / date-entity\n            :month 2\n            :year 2013))']","[h, attr-instance, have_03, attr-arg0, [h2, attr-instance, he], attr-arg1, [p, attr-instance, point, attr-quant, 2872], attr-location, [l, attr-instance, list, attr-mod, [t, attr-instance, this]], attr-time, [d, attr-instance, date_entity, attr-month, 2, attr-year, 2013]]"
325,325,325,29614,magnus-carlsen,So viele Punkte hat noch niemand vor ihm gehabt.,10_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=So 1:=viele 2:=Punkte 3:=hat 4:=noch 5:=niemand 6:=vor 7:=ihm 8:=gehabt.,1,,No one before him has ever had so many points.,['# ::snt No one before him has ever had so many points.\n(h / have-03\n      :ARG0 (n / no-one\n            :time (b / before\n                  :op1 (h2 / he)))\n      :ARG1 (p / point\n            :ARG1-of (h3 / have-quant-91\n                  :ARG2 (m / many)\n                  :ARG3 (s / so)))\n      :time (e / ever))'],"[h, attr-instance, have_03, attr-arg0, [n, attr-instance, no_one, attr-time, [b, attr-instance, before, attr-op1, [h2, attr-instance, he]]], attr-arg1, [p, attr-instance, point, attr-arg1_of, [h3, attr-instance, have_quant_91, attr-arg2, [m, attr-instance, many], attr-arg3, [s, attr-instance, so]]], attr-time, [e, attr-instance, ever]]"
326,326,326,29615,magnus-carlsen,Bis dahin hatte Garri Kimowitsch Kasparow die meisten Punkte in der Liste.,11_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Bis 1:=dahin 2:=hatte 3:=Garri 4:=Kimowitsch 5:=Kasparow 6:=die 7:=meisten 8:=Punkte 9:=in 10:=der 11:=Liste.,1,,"Until then, Garry Kimovich Kasparov had the most points on the list.","['# ::snt Until then, Garry Kimovich Kasparov had the most points on the list.\n(h / have-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Garry""\n                  :op2 ""Kimovich""\n                  :op3 ""Kasparov""))\n      :ARG1 (p2 / point\n            :ARG1-of (l / list-01)\n            :ARG1-of (h2 / have-quant-91\n                  :ARG3 (m / most)))\n      :time (u / until\n            :op1 (t / then)))']","[h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""garry"", attr-op2, ""kimovich"", attr-op3, ""kasparov""]], attr-arg1, [p2, attr-instance, point, attr-arg1_of, [l, attr-instance, list_01], attr-arg1_of, [h2, attr-instance, have_quant_91, attr-arg3, [m, attr-instance, most]]], attr-time, [u, attr-instance, until, attr-op1, [t, attr-instance, then]]]"
327,327,327,29616,magnus-carlsen,Garri Kasparow hatte im Juli 1999 in dieser Liste 2851 Punkte.,12_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Garri 1:=Kasparow 2:=hatte 3:=im 4:=Juli 5:=1999 6:=in 7:=dieser 8:=Liste 9:=2851 10:=Punkte.,3,"[[0, 1, 2, 9, 10], [3, 4, 5], [6, 7, 8]]",Garry Kasparov had 2851 points on this list in July 1999.,"['# ::snt Garry Kasparov had 2851 points on this list in July 1999.\n(h / have-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Garry""\n                  :op2 ""Kasparov""))\n      :ARG1 (p2 / point\n            :quant 2851)\n      :location (l / list\n            :mod (t / this))\n      :time (d / date-entity\n            :month 7\n            :year 1999))']","[h, attr-instance, have_03, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""garry"", attr-op2, ""kasparov""]], attr-arg1, [p2, attr-instance, point, attr-quant, 2851], attr-location, [l, attr-instance, list, attr-mod, [t, attr-instance, this]], attr-time, [d, attr-instance, date_entity, attr-month, 7, attr-year, 1999]]"
328,328,328,29617,magnus-carlsen,Magnus Carlsen ist auch ein Model.,13_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Magnus 1:=Carlsen 2:=ist 3:=auch 4:=ein 5:=Model.,1,,Magnus Carlsen is also a model.,"['# ::snt Magnus Carlsen is also a model.\n(m / model\n      :domain (p / person\n            :name (n / name\n                  :op1 ""Magnus""\n                  :op2 ""Carlsen""))\n      :mod (a / also))']","[m, attr-instance, model, attr-domain, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""magnus"", attr-op2, ""carlsen""]], attr-mod, [a, attr-instance, also]]"
329,329,329,29618,magnus-carlsen,Das heißt er arbeitet auch für die Kleider-Firma G-Star.,14_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Das 1:=heißt 2:=er 3:=arbeitet 4:=auch 5:=für 6:=die 7:=Kleider-Firma 8:=G-Star.,2,"[[7], [8]]",This means he also works for the clothing company G-Star.,"['# ::snt This means he also works for the clothing company G-Star.\n(m / mean-01\n      :ARG1 (t / this)\n      :ARG2 (w / work-01\n            :ARG0 (h / he)\n            :ARG2 (c / company\n                  :name (n / name\n                        :op1 ""G-Star"")\n                  :ARG0-of (c2 / clothe-01))\n            :mod (a / also)))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, this], attr-arg2, [w, attr-instance, work_01, attr-arg0, [h, attr-instance, he], attr-arg2, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""g_star""], attr-arg0_of, [c2, attr-instance, clothe_01]], attr-mod, [a, attr-instance, also]]]"
330,330,330,29619,magnus-carlsen,Er zieht die Kleider von der Firma an.,15_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Er 1:=zieht 2:=die 3:=Kleider 4:=von 5:=der 6:=Firma 7:=an.,2,"[[0, 1, 7], [4, 6]]",He puts on the company clothes.,['# ::snt He puts on the company clothes.\n(p / put-on-08\n      :ARG0 (h / he)\n      :ARG1 (c / clothes\n            :poss (c2 / company)))'],"[p, attr-instance, put_on_08, attr-arg0, [h, attr-instance, he], attr-arg1, [c, attr-instance, clothes, attr-poss, [c2, attr-instance, company]]]"
331,331,331,29620,magnus-carlsen,"So können andere sehen, wie die Kleider aussehen.",16_long,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,"0:=So 1:=können 2:=andere 3:=sehen, 4:=wie 5:=die 6:=Kleider 7:=aussehen.",2,"[[0, 1, 2, 3], [4, 6, 7]]",This way others can see what the clothes look like.,['# ::snt This way others can see what the clothes look like.\n(p / possible-01\n      :ARG1 (s / see-01\n            :ARG0 (o / other)\n            :ARG1 (t / thing\n                  :ARG2-of (l / look-02\n                        :ARG0 (c / clothes))))\n      :manner (w / way\n            :mod (t2 / this)))'],"[p, attr-instance, possible_01, attr-arg1, [s, attr-instance, see_01, attr-arg0, [o, attr-instance, other], attr-arg1, [t, attr-instance, thing, attr-arg2_of, [l, attr-instance, look_02, attr-arg0, [c, attr-instance, clothes]]]], attr-manner, [w, attr-instance, way, attr-mod, [t2, attr-instance, this]]]"
332,332,332,29621,magnus-carlsen,Magnus Carlsen ist ein Schach-spieler.,0_short,Personen,2013-11-21T07:26:20Z,28d34f2e053dee2c0e9399a7924cd978,0:=Magnus 1:=Carlsen 2:=ist 3:=ein 4:=Schach-spieler.,1,,Magnus Carlsen is a chess player.,"['# ::snt Magnus Carlsen is a chess player.\n(p / person\n      :name (n / name\n            :op1 ""Magnus""\n            :op2 ""Carlsen"")\n      :ARG0-of (p2 / play-01\n            :ARG1 (c / chess)))']","[p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""magnus"", attr-op2, ""carlsen""], attr-arg0_of, [p2, attr-instance, play_01, attr-arg1, [c, attr-instance, chess]]]"
333,333,333,29622,mahatma-gandhi,Mahatma Gandhi wurde am 2. Oktober 1869 geboren.,0_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Mahatma 1:=Gandhi 2:=wurde 3:=am 4:=2. 5:=Oktober 6:=1869 7:=geboren.,1,,"Mahatma Gandhi was born on October 2, 1869.","['# ::snt Mahatma Gandhi was born on October 2, 1869.\n(b / bear-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Mahatma""\n                  :op2 ""Gandhi""))\n      :time (d / date-entity\n            :day 2\n            :month 10\n            :year 1869))']","[b, attr-instance, bear_02, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]], attr-time, [d, attr-instance, date_entity, attr-day, 2, attr-month, 10, attr-year, 1869]]"
334,334,334,29623,mahatma-gandhi,"Das war in Porbandar, Indien.",1_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,"0:=Das 1:=war 2:=in 3:=Porbandar, 4:=Indien.",2,"[[3], [4]]","Das war in Porbandar, India.","['# ::snt Das war in Porbandar, India.\n(w / war-01\n      :location (c / city\n            :name (n / name\n                  :op1 ""Porbandar"")\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 ""India""))))']","[w, attr-instance, war_01, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""porbandar""], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""india""]]]]"
335,335,335,29624,mahatma-gandhi,Er ist gestorben.,2_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Er 1:=ist 2:=gestorben.,1,,He died.,['# ::snt He died.\n(d / die-01\n      :ARG1 (h / he))'],"[d, attr-instance, die_01, attr-arg1, [h, attr-instance, he]]"
336,336,336,29626,mahatma-gandhi,Mahatma Gandhi war mit Kasturba Makthaji verheiratet.,4_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Mahatma 1:=Gandhi 2:=war 3:=mit 4:=Kasturba 5:=Makthaji 6:=verheiratet.,1,,Mahatma Gandhi was married to Kasturba Makthaji.,"['# ::snt Mahatma Gandhi was married to Kasturba Makthaji.\n(m / marry-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Mahatma""\n                  :op2 ""Gandhi""))\n      :ARG2 (p2 / person\n            :name (n2 / name\n                  :op1 ""Kasturba""\n                  :op2 ""Makthaji"")))']","[m, attr-instance, marry_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]], attr-arg2, [p2, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""kasturba"", attr-op2, ""makthaji""]]]"
337,337,337,29627,mahatma-gandhi,Zusammen hatten sie 4 Kinder.,5_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Zusammen 1:=hatten 2:=sie 3:=4 4:=Kinder.,1,,Together they had 4 children.,['# ::snt Together they had 4 children.\n(h / have-rel-role-91\n      :ARG0 (p / person\n            :quant 4)\n      :ARG1 (t / they)\n      :ARG2 (c / child)\n      :mod (t2 / together))'],"[h, attr-instance, have_rel_role_91, attr-arg0, [p, attr-instance, person, attr-quant, 4], attr-arg1, [t, attr-instance, they], attr-arg2, [c, attr-instance, child], attr-mod, [t2, attr-instance, together]]"
338,338,338,29628,mahatma-gandhi,Sein richtiger Name ist Mohandas Karamchand Gandhi.,6_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Sein 1:=richtiger 2:=Name 3:=ist 4:=Mohandas 5:=Karamchand 6:=Gandhi.,1,,His real name is Mohandas Karamchand Gandhi.,"['# ::snt His real name is Mohandas Karamchand Gandhi.\n(n / name-01\n      :ARG1 (h / he)\n      :ARG2 (p / person\n            :name (n2 / name\n                  :op1 ""Mohandas""\n                  :op2 ""Karamchand""\n                  :op3 ""Gandhi""))\n      :ARG1-of (r / real-04))']","[n, attr-instance, name_01, attr-arg1, [h, attr-instance, he], attr-arg2, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""mohandas"", attr-op2, ""karamchand"", attr-op3, ""gandhi""]], attr-arg1_of, [r, attr-instance, real_04]]"
339,339,339,29630,mahatma-gandhi,Die meisten Leute sagen aber Mahatma Gandhi.,8_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Die 1:=meisten 2:=Leute 3:=sagen 4:=aber 5:=Mahatma 6:=Gandhi.,1,,But most people say Mahatma Gandhi.,"['# ::snt But most people say Mahatma Gandhi.\n(c / contrast-01\n      :ARG2 (s / say-01\n            :ARG0 (p / person\n                  :mod (m / most))\n            :ARG1 (p2 / person\n                  :name (n / name\n                        :op1 ""Mahatma""\n                        :op2 ""Gandhi""))))']","[c, attr-instance, contrast_01, attr-arg2, [s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-mod, [m, attr-instance, most]], attr-arg1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]]]]"
340,340,340,29631,mahatma-gandhi,Sanskrit ist eine indische Sprache.,9_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Sanskrit 1:=ist 2:=eine 3:=indische 4:=Sprache.,1,,Sanskrit is an Indian language.,"['# ::snt Sanskrit is an Indian language.\n(l / language\n      :name (n / name\n            :op1 ""Sanskrit"")\n      :domain (l2 / language\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 ""India""))))']","[l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""sanskrit""], attr-domain, [l2, attr-instance, language, attr-mod, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""india""]]]]"
341,341,341,29632,mahatma-gandhi,"In Sanskrit heißt Mahatma ""Große Seele"".",10_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,"0:=In 1:=Sanskrit 2:=heißt 3:=Mahatma 4:=""Große 5:=Seele"".",2,"[[0, 1, 2, 3], [4, 5]]","In Sanskrit, Mahatma means “great soul”.","['# ::snt In Sanskrit, Mahatma means “great soul”.\n(m / mean-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Mahatma""))\n      :ARG2 (s / soul\n            :mod (g / great))\n      :medium (l / language\n            :name (n2 / name\n                  :op1 ""Sri"")))']","[m, attr-instance, mean_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma""]], attr-arg2, [s, attr-instance, soul, attr-mod, [g, attr-instance, great]], attr-medium, [l, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""sri""]]]"
342,342,342,29633,mahatma-gandhi,Nach der Schule ging Mahatma Gandhi nach Großbritannien.,11_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Nach 1:=der 2:=Schule 3:=ging 4:=Mahatma 5:=Gandhi 6:=nach 7:=Großbritannien.,2,"[[0, 2], [6, 7]]","After school, Mahatma Gandhi went to Great Britain.","['# ::snt After school, Mahatma Gandhi went to Great Britain.\n(g / go-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Mahatma""\n                  :op2 ""Gandhi""))\n      :ARG4 (c / country\n            :name (n2 / name\n                  :op1 ""Great""\n                  :op2 ""Britain""))\n      :time (a / after\n            :op1 (s / school)))']","[g, attr-instance, go_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]], attr-arg4, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""great"", attr-op2, ""britain""]], attr-time, [a, attr-instance, after, attr-op1, [s, attr-instance, school]]]"
343,343,343,29634,mahatma-gandhi,In Großbritannien hat er studiert.,12_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=In 1:=Großbritannien 2:=hat 3:=er 4:=studiert.,1,,He studied in Great Britain.,"['# ::snt He studied in Great Britain.\n(s / study-01\n      :ARG0 (h / he)\n      :location (c / country\n            :name (n / name\n                  :op1 ""Great""\n                  :op2 ""Britain"")))']","[s, attr-instance, study_01, attr-arg0, [h, attr-instance, he], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""great"", attr-op2, ""britain""]]]"
344,344,344,29635,mahatma-gandhi,Er hat das Fach Jura studiert.,13_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Er 1:=hat 2:=das 3:=Fach 4:=Jura 5:=studiert.,1,,He studied law.,['# ::snt He studied law.\n(s / study-01\n      :ARG0 (h / he)\n      :ARG1 (l / law))'],"[s, attr-instance, study_01, attr-arg0, [h, attr-instance, he], attr-arg1, [l, attr-instance, law]]"
345,345,345,29636,mahatma-gandhi,Er wurde Rechts-anwalt.,14_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Er 1:=wurde 2:=Rechts-anwalt.,1,,He became a lawyer.,['# ::snt He became a lawyer.\n(b / become-01\n      :ARG1 (h / he)\n      :ARG2 (l / lawyer))'],"[b, attr-instance, become_01, attr-arg1, [h, attr-instance, he], attr-arg2, [l, attr-instance, lawyer]]"
346,346,346,29637,mahatma-gandhi,"Nach dem Studium, \newline ist er zurück nach Süd-afrika und nach Indien.",15_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,"0:=Nach 1:=dem 2:=Studium, 3:=\newline 4:=ist 5:=er 6:=zurück 7:=nach 8:=Süd-afrika 9:=und 10:=nach 11:=Indien.",3,"[[0, 2], [4, 5, 6, 7, 8], [4, 5, 6, 10, 11]]","After completing his studies, he returned to South Africa and India.","['# ::snt After completing his studies, he returned to South Africa and India.\n(r / return-01\n      :ARG1 (h / he)\n      :ARG4 (a / and\n            :op1 (c / country\n                  :name (n / name\n                        :op1 ""South""\n                        :op2 ""Africa""))\n            :op2 (c2 / country\n                  :name (n2 / name\n                        :op1 ""India"")))\n      :time (a2 / after\n            :op1 (c3 / complete-01\n                  :ARG0 h\n                  :ARG1 (s / study-01\n                        :ARG0 h))))']","[r, attr-instance, return_01, attr-arg1, [h, attr-instance, he], attr-arg4, [a, attr-instance, and, attr-op1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""south"", attr-op2, ""africa""]], attr-op2, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""india""]]], attr-time, [a2, attr-instance, after, attr-op1, [c3, attr-instance, complete_01, attr-arg0, h, attr-arg1, [s, attr-instance, study_01, attr-arg0, h]]]]"
347,347,347,29638,mahatma-gandhi,Süd-afrika und Indien waren damals eine Kolonie von Großbritannien.,16_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Süd-afrika 1:=und 2:=Indien 3:=waren 4:=damals 5:=eine 6:=Kolonie 7:=von 8:=Großbritannien.,3,"[[0, 3, 4], [2, 3, 4], [7, 8]]",South Africa and India were then colonies of Great Britain.,"['# ::snt South Africa and India were then colonies of Great Britain.\n(c / colony\n      :poss (c2 / country\n            :name (n / name\n                  :op1 ""Great""\n                  :op2 ""Britain""))\n      :domain (a / and\n            :op1 (c3 / country\n                  :name (n2 / name\n                        :op1 ""South""\n                        :op2 ""Africa""))\n            :op2 (c4 / country\n                  :name (n3 / name\n                        :op1 ""India"")))\n      :time (t / then))']","[c, attr-instance, colony, attr-poss, [c2, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""great"", attr-op2, ""britain""]], attr-domain, [a, attr-instance, and, attr-op1, [c3, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""south"", attr-op2, ""africa""]], attr-op2, [c4, attr-instance, country, attr-name, [n3, attr-instance, name, attr-op1, ""india""]]], attr-time, [t, attr-instance, then]]"
348,348,348,29639,mahatma-gandhi,Die Engländer haben die Gesetze in Indien gemacht.,17_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Die 1:=Engländer 2:=haben 3:=die 4:=Gesetze 5:=in 6:=Indien 7:=gemacht.,2,"[[1, 2, 4, 7], [5, 6]]",The English made the laws in India.,"['# ::snt The English made the laws in India.\n(m / make-01\n      :ARG0 (p / person\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""England"")))\n      :ARG1 (l / law)\n      :location (c2 / country\n            :name (n2 / name\n                  :op1 ""India"")))']","[m, attr-instance, make_01, attr-arg0, [p, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""england""]]], attr-arg1, [l, attr-instance, law], attr-location, [c2, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""india""]]]"
349,349,349,29640,mahatma-gandhi,Die Gesetze waren für viele Inder schlecht.,18_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Die 1:=Gesetze 2:=waren 3:=für 4:=viele 5:=Inder 6:=schlecht.,1,,The laws were bad for many Indians.,"['# ::snt The laws were bad for many Indians.\n(b / bad-04\n      :ARG1 (l / law)\n      :ARG2 (p / person\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""India""))\n            :quant (m / many)))']","[b, attr-instance, bad_04, attr-arg1, [l, attr-instance, law], attr-arg2, [p, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]], attr-quant, [m, attr-instance, many]]]"
350,350,350,29641,mahatma-gandhi,Die Gesetze waren ungerecht.,19_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Die 1:=Gesetze 2:=waren 3:=ungerecht.,1,,The laws were unfair.,['# ::snt The laws were unfair.\n(f / fair-01\n      :polarity -\n      :ARG1 (l / law))'],"[f, attr-instance, fair_01, attr-polarity, negative, attr-arg1, [l, attr-instance, law]]"
351,351,351,29642,mahatma-gandhi,Die Inder sind unterdrückt worden.,20_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Die 1:=Inder 2:=sind 3:=unterdrückt 4:=worden.,1,,The Indians have been oppressed.,"['# ::snt The Indians have been oppressed.\n(o / oppress-01\n      :ARG1 (p / person\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""India""))))']","[o, attr-instance, oppress_01, attr-arg1, [p, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]]]]"
352,352,352,29643,mahatma-gandhi,Und sie sind ausgebeutet worden.,21_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Und 1:=sie 2:=sind 3:=ausgebeutet 4:=worden.,1,,And they have been exploited.,['# ::snt And they have been exploited.\n(a / and\n      :op2 (e / exploit-01\n            :ARG1 (t / they)))'],"[a, attr-instance, and, attr-op2, [e, attr-instance, exploit_01, attr-arg1, [t, attr-instance, they]]]"
353,353,353,29644,mahatma-gandhi,"Mahatma Gandhi wollte, \newline dass Indien unabhängig wird.",22_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,"0:=Mahatma 1:=Gandhi 2:=wollte, 3:=\newline 4:=dass 5:=Indien 6:=unabhängig 7:=wird.",2,"[[0, 1, 2], [4, 5, 6, 7]]",Mahatma Gandhi wanted India to become independent.,"['# ::snt Mahatma Gandhi wanted India to become independent.\n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Mahatma""\n                  :op2 ""Gandhi""))\n      :ARG1 (b / become-01\n            :ARG1 (c / country\n                  :name (n2 / name\n                        :op1 ""India""))\n            :ARG2 (d / depend-01\n                  :polarity -\n                  :ARG0 c)))']","[w, attr-instance, want_01, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]], attr-arg1, [b, attr-instance, become_01, attr-arg1, [c, attr-instance, country, attr-name, [n2, attr-instance, name, attr-op1, ""india""]], attr-arg2, [d, attr-instance, depend_01, attr-polarity, negative, attr-arg0, c]]]"
354,354,354,29645,mahatma-gandhi,Und dass die Inder selbst über ihr Land entscheiden können.,23_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Und 1:=dass 2:=die 3:=Inder 4:=selbst 5:=über 6:=ihr 7:=Land 8:=entscheiden 9:=können.,2,"[[0, 1, 3, 4, 8, 9], [5, 6, 7]]",And that Indians can decide for themselves about their country.,"['# ::snt And that Indians can decide for themselves about their country.\n(a / and\n      :op2 (p / possible-01\n            :ARG1 (d / decide-01\n                  :ARG0 (p2 / person\n                        :mod (c / country\n                              :name (n / name\n                                    :op1 ""India"")))\n                  :ARG3 (c2 / country\n                        :poss p2)\n                  :mod (b / by-oneself))))']","[a, attr-instance, and, attr-op2, [p, attr-instance, possible_01, attr-arg1, [d, attr-instance, decide_01, attr-arg0, [p2, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]]], attr-arg3, [c2, attr-instance, country, attr-poss, p2], attr-mod, [b, attr-instance, by_oneself]]]]"
355,355,355,29646,mahatma-gandhi,Er hat gesagt.,24_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Er 1:=hat 2:=gesagt.,1,,He said.,['# ::snt He said.\n(s / say-01\n      :ARG0 (h / he))'],"[s, attr-instance, say_01, attr-arg0, [h, attr-instance, he]]"
356,356,356,29647,mahatma-gandhi,Die Inder sollen ungehorsam sein.,25_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Die 1:=Inder 2:=sollen 3:=ungehorsam 4:=sein.,1,,The Indians are said to be disobedient.,"['# ::snt The Indians are said to be disobedient.\n(s / say-01\n      :ARG1 (d / disobey-01\n            :ARG0 (p / person\n                  :mod (c / country\n                        :name (n / name\n                              :op1 ""India"")))))']","[s, attr-instance, say_01, attr-arg1, [d, attr-instance, disobey_01, attr-arg0, [p, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]]]]]"
357,357,357,29648,mahatma-gandhi,Sie sollen den Engländern nicht gehorchen.,26_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Sie 1:=sollen 2:=den 3:=Engländern 4:=nicht 5:=gehorchen.,1,,They should not obey the English.,"['# ::snt They should not obey the English.\n(r / recommend-01\n      :ARG1 (o / obey-01\n            :polarity -\n            :ARG0 (t / they)\n            :ARG1 (p / person\n                  :mod (c / country\n                        :name (n / name\n                              :op1 ""England"")))))']","[r, attr-instance, recommend_01, attr-arg1, [o, attr-instance, obey_01, attr-polarity, negative, attr-arg0, [t, attr-instance, they], attr-arg1, [p, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""england""]]]]]"
358,358,358,29649,mahatma-gandhi,Und sie sollen sich nicht an die ungerechten Gesetze halten.,27_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Und 1:=sie 2:=sollen 3:=sich 4:=nicht 5:=an 6:=die 7:=ungerechten 8:=Gesetze 9:=halten.,1,,And they should not obey the unjust laws.,['# ::snt And they should not obey the unjust laws.\n(a / and\n      :op2 (r / recommend-01\n            :ARG1 (o / obey-01\n                  :polarity -\n                  :ARG0 (t / they)\n                  :ARG1 (l / law\n                        :ARG1-of (j / just-02\n                              :polarity -)))))'],"[a, attr-instance, and, attr-op2, [r, attr-instance, recommend_01, attr-arg1, [o, attr-instance, obey_01, attr-polarity, negative, attr-arg0, [t, attr-instance, they], attr-arg1, [l, attr-instance, law, attr-arg1_of, [j, attr-instance, just_02, attr-polarity, negative]]]]]"
359,359,359,29651,mahatma-gandhi,Die Engländer haben gesagt.,29_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Die 1:=Engländer 2:=haben 3:=gesagt.,1,,The English said.,"['# ::snt The English said.\n(s / say-01\n      :ARG0 (p / person\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""England""))))']","[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""england""]]]]"
360,360,360,29652,mahatma-gandhi,Die Inder müssen für Salz eine Steuer zahlen.,30_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Die 1:=Inder 2:=müssen 3:=für 4:=Salz 5:=eine 6:=Steuer 7:=zahlen.,1,,Indians have to pay a tax on salt.,"['# ::snt Indians have to pay a tax on salt.\n(o / obligate-01\n      :ARG1 (p / person\n            :mod (e / ethnic-group\n                  :name (n / name\n                        :op1 ""Indian"")))\n      :ARG2 (p2 / pay-01\n            :ARG0 p\n            :ARG1 (t / tax-01\n                  :ARG3 (s / salt))))']","[o, attr-instance, obligate_01, attr-arg1, [p, attr-instance, person, attr-mod, [e, attr-instance, ethnic_group, attr-name, [n, attr-instance, name, attr-op1, ""indian""]]], attr-arg2, [p2, attr-instance, pay_01, attr-arg0, p, attr-arg1, [t, attr-instance, tax_01, attr-arg3, [s, attr-instance, salt]]]]"
361,361,361,29654,mahatma-gandhi,Inder durften selbst kein Salz machen.,32_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Inder 1:=durften 2:=selbst 3:=kein 4:=Salz 5:=machen.,1,,Indians were not allowed to make salt themselves.,"['# ::snt Indians were not allowed to make salt themselves.\n(a / allow-01\n      :polarity -\n      :ARG1 (m / make-01\n            :ARG0 (p / person\n                  :mod (e / ethnic-group\n                        :name (n / name\n                              :op1 ""Indian"")))\n            :ARG1 (s / salt)))']","[a, attr-instance, allow_01, attr-polarity, negative, attr-arg1, [m, attr-instance, make_01, attr-arg0, [p, attr-instance, person, attr-mod, [e, attr-instance, ethnic_group, attr-name, [n, attr-instance, name, attr-op1, ""indian""]]], attr-arg1, [s, attr-instance, salt]]]"
362,362,362,29656,mahatma-gandhi,Er ist zusammen mit anderen an das Meer marschiert.,34_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Er 1:=ist 2:=zusammen 3:=mit 4:=anderen 5:=an 6:=das 7:=Meer 8:=marschiert.,2,"[[0, 1, 5, 7, 8], [2, 3, 4]]",He marched to the sea together with others.,['# ::snt He marched to the sea together with others.\n(m / march-01\n      :ARG0 (h / he)\n      :destination (s / sea)\n      :accompanier (o / other))'],"[m, attr-instance, march_01, attr-arg0, [h, attr-instance, he], attr-destination, [s, attr-instance, sea], attr-accompanier, [o, attr-instance, other]]"
363,363,363,29657,mahatma-gandhi,Sie sind 24 Tage lang marschiert.,35_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Sie 1:=sind 2:=24 3:=Tage 4:=lang 5:=marschiert.,1,,They marched for 24 days.,['# ::snt They marched for 24 days.\n(m / march-01\n      :ARG0 (t / they)\n      :duration (t2 / temporal-quantity\n            :quant 24\n            :unit (d / day)))'],"[m, attr-instance, march_01, attr-arg0, [t, attr-instance, they], attr-duration, [t2, attr-instance, temporal_quantity, attr-quant, 24, attr-unit, [d, attr-instance, day]]]"
364,364,364,29658,mahatma-gandhi,Viele sagen dazu: Salz-marsch.,36_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Viele 1:=sagen 2:=dazu: 3:=Salz-marsch.,1,,Many people call it a salt march.,['# ::snt Many people call it a salt march.\n(c / call-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (ii / it)\n      :ARG2 (m2 / march-01\n            :mod (s / salt)))'],"[c, attr-instance, call_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [ii, attr-instance, it], attr-arg2, [m2, attr-instance, march_01, attr-mod, [s, attr-instance, salt]]]"
365,365,365,29659,mahatma-gandhi,"Am Meer haben die Inder aus Salz-wasser, \newline Salz gemacht.",37_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,"0:=Am 1:=Meer 2:=haben 3:=die 4:=Inder 5:=aus 6:=Salz-wasser, 7:=\newline 8:=Salz 9:=gemacht.",3,"[[0, 1], [2, 4, 8, 9], [5, 6]]","At the sea, the Indians made salt from salt water, \newline.","['# ::snt At the sea, the Indians made salt from salt water, \\newline.\n(m / make-01\n      :ARG0 (p / person\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""India"")))\n      :ARG1 (s / salt)\n      :ARG2 (w / water\n            :mod (s2 / salt))\n      :location (s3 / sea)\n      :ARG1-of (m2 / mean-01\n            :ARG2 n\n            :op1 ""Newline""))']","[m, attr-instance, make_01, attr-arg0, [p, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]]], attr-arg1, [s, attr-instance, salt], attr-arg2, [w, attr-instance, water, attr-mod, [s2, attr-instance, salt]], attr-location, [s3, attr-instance, sea], attr-arg1_of, [m2, attr-instance, mean_01, attr-arg2, n, attr-op1, ""newline""]]"
366,366,366,29660,mahatma-gandhi,Sie haben das Salz verkauft.,38_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Sie 1:=haben 2:=das 3:=Salz 4:=verkauft.,1,,They sold the salt.,['# ::snt They sold the salt.\n(s / sell-01\n      :ARG0 (t / they)\n      :ARG1 (s2 / salt))'],"[s, attr-instance, sell_01, attr-arg0, [t, attr-instance, they], attr-arg1, [s2, attr-instance, salt]]"
367,367,367,29661,mahatma-gandhi,Sie haben keine Steuern gezahlt.,39_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Sie 1:=haben 2:=keine 3:=Steuern 4:=gezahlt.,1,,You have not paid any taxes.,['# ::snt You have not paid any taxes.\n(p / pay-01\n      :polarity -\n      :ARG0 (y / you)\n      :ARG1 (t / tax-01\n            :ARG2 y\n            :mod (a / any)))'],"[p, attr-instance, pay_01, attr-polarity, negative, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, tax_01, attr-arg2, y, attr-mod, [a, attr-instance, any]]]"
368,368,368,29662,mahatma-gandhi,Mahatma Gandhi hat noch andere Aktionen gemacht.,40_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Mahatma 1:=Gandhi 2:=hat 3:=noch 4:=andere 5:=Aktionen 6:=gemacht.,1,,Mahatma Gandhi did other things too.,"['# ::snt Mahatma Gandhi did other things too.\n(d / do-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 ""Mahatma""\n                  :op2 ""Gandhi""))\n      :ARG1 (t / thing\n            :mod (o / other))\n      :mod (t2 / too))']","[d, attr-instance, do_02, attr-arg0, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]], attr-arg1, [t, attr-instance, thing, attr-mod, [o, attr-instance, other]], attr-mod, [t2, attr-instance, too]]"
369,369,369,29663,mahatma-gandhi,Für die Aktionen haben die Engländer ihn immer wieder ins Gefängnis gebracht.,41_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Für 1:=die 2:=Aktionen 3:=haben 4:=die 5:=Engländer 6:=ihn 7:=immer 8:=wieder 9:=ins 10:=Gefängnis 11:=gebracht.,1,,The English repeatedly put him in prison for his actions.,"['# ::snt The English repeatedly put him in prison for his actions.\n(p / put-01\n      :ARG0 (p2 / person\n            :mod (c / country\n                  :name (n / name\n                        :op1 ""England"")))\n      :ARG1 (h / he)\n      :ARG2 (p3 / prison)\n      :ARG1-of (r / repeat-01)\n      :ARG1-of (c2 / cause-01\n            :ARG0 (a / act-02\n                  :ARG0 h)))']","[p, attr-instance, put_01, attr-arg0, [p2, attr-instance, person, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""england""]]], attr-arg1, [h, attr-instance, he], attr-arg2, [p3, attr-instance, prison], attr-arg1_of, [r, attr-instance, repeat_01], attr-arg1_of, [c2, attr-instance, cause_01, attr-arg0, [a, attr-instance, act_02, attr-arg0, h]]]"
370,370,370,29664,mahatma-gandhi,Insgesamt war Mahatma Gandhi 8 Jahre im Gefängnis.,42_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Insgesamt 1:=war 2:=Mahatma 3:=Gandhi 4:=8 5:=Jahre 6:=im 7:=Gefängnis.,1,,"In total, Mahatma Gandhi was in prison for 8 years.","['# ::snt In total, Mahatma Gandhi was in prison for 8 years.\n(ii / imprison-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Mahatma""\n                  :op2 ""Gandhi""))\n      :ARG2 (t / temporal-quantity\n            :quant 8\n            :unit (y / year)\n            :ARG2-of (t2 / total-01)))']","[ii, attr-instance, imprison_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]], attr-arg2, [t, attr-instance, temporal_quantity, attr-quant, 8, attr-unit, [y, attr-instance, year], attr-arg2_of, [t2, attr-instance, total_01]]]"
371,371,371,29665,mahatma-gandhi,Am 3. Juni 1947 wurde Indien unabhängig.,43_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Am 1:=3. 2:=Juni 3:=1947 4:=wurde 5:=Indien 6:=unabhängig.,2,"[[0, 1, 2, 3], [4, 5, 6]]","On June 3, 1947, India became independent.","['# ::snt On June 3, 1947, India became independent.\n(b / become-01\n      :ARG1 (c / country\n            :name (n / name\n                  :op1 ""India""))\n      :ARG2 (d / depend-01\n            :polarity -\n            :ARG0 c)\n      :time (d2 / date-entity\n            :year 1947\n            :month 6\n            :day 3))']","[b, attr-instance, become_01, attr-arg1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]], attr-arg2, [d, attr-instance, depend_01, attr-polarity, negative, attr-arg0, c], attr-time, [d2, attr-instance, date_entity, attr-year, 1947, attr-month, 6, attr-day, 3]]"
372,372,372,29666,mahatma-gandhi,Indien wurde in 2 Staaten geteilt.,44_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Indien 1:=wurde 2:=in 3:=2 4:=Staaten 5:=geteilt.,1,,India was divided into 2 states.,"['# ::snt India was divided into 2 states.\n(d / divide-02\n      :ARG1 (c / country\n            :name (n / name\n                  :op1 ""India""))\n      :ARG2 (s / state\n            :quant 2))']","[d, attr-instance, divide_02, attr-arg1, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]], attr-arg2, [s, attr-instance, state, attr-quant, 2]]"
373,373,373,29668,mahatma-gandhi,Am 30. Januar 1948 hat ein Attentäter Mahatma Gandhi erschossen.,46_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Am 1:=30. 2:=Januar 3:=1948 4:=hat 5:=ein 6:=Attentäter 7:=Mahatma 8:=Gandhi 9:=erschossen.,2,"[[0, 1, 2, 3], [4, 6, 7, 8, 9]]","On January 30, 1948, an assassin shot Mahatma Gandhi.","['# ::snt On January 30, 1948, an assassin shot Mahatma Gandhi.\n(s / shoot-02\n      :ARG0 (p / person\n            :ARG0-of (a / assassinate-01))\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 ""Mahatma""\n                  :op2 ""Gandhi""))\n      :time (d / date-entity\n            :day 30\n            :month 1\n            :year 1948))']","[s, attr-instance, shoot_02, attr-arg0, [p, attr-instance, person, attr-arg0_of, [a, attr-instance, assassinate_01]], attr-arg1, [p2, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]], attr-time, [d, attr-instance, date_entity, attr-day, 30, attr-month, 1, attr-year, 1948]]"
374,374,374,29669,mahatma-gandhi,Das war in der Stadt New Delhi.,47_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Das 1:=war 2:=in 3:=der 4:=Stadt 5:=New 6:=Delhi.,1,,This was in the city of New Delhi.,"['# ::snt This was in the city of New Delhi.\n(t / this\n      :location (c / city\n            :name (n / name\n                  :op1 ""New""\n                  :op2 ""Delhi"")))']","[t, attr-instance, this, attr-location, [c, attr-instance, city, attr-name, [n, attr-instance, name, attr-op1, ""new"", attr-op2, ""delhi""]]]"
375,375,375,29670,mahatma-gandhi,Mahatma Gandhi wurde eingeäschert.,48_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Mahatma 1:=Gandhi 2:=wurde 3:=eingeäschert.,1,,Mahatma Gandhi was cremated.,"['# ::snt Mahatma Gandhi was cremated.\n(c / cremate-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 ""Mahatma""\n                  :op2 ""Gandhi"")))']","[c, attr-instance, cremate_01, attr-arg1, [p, attr-instance, person, attr-name, [n, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]]]"
376,376,376,29671,mahatma-gandhi,Viele sagen er wurde verbrannt.,49_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Viele 1:=sagen 2:=er 3:=wurde 4:=verbrannt.,1,,Many say he was burned.,['# ::snt Many say he was burned.\n(s / say-01\n      :ARG0 (p / person\n            :quant (m / many))\n      :ARG1 (b / burn-01\n            :ARG1 (h / he)))'],"[s, attr-instance, say_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-arg1, [b, attr-instance, burn_01, attr-arg1, [h, attr-instance, he]]]"
377,377,377,29672,mahatma-gandhi,Die Asche wurde im Fluss Ganges verstreut.,50_long,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Die 1:=Asche 2:=wurde 3:=im 4:=Fluss 5:=Ganges 6:=verstreut.,2,"[[1, 2, 6], [3, 4, 5]]",The ashes were scattered in the river Ganges.,"['# ::snt The ashes were scattered in the river Ganges.\n(s / scatter-01\n      :ARG1 (a / ash)\n      :location (r / river\n            :name (n / name\n                  :op1 ""Ganges"")))']","[s, attr-instance, scatter_01, attr-arg1, [a, attr-instance, ash], attr-location, [r, attr-instance, river, attr-name, [n, attr-instance, name, attr-op1, ""ganges""]]]"
378,378,378,29673,mahatma-gandhi,Mahatma Gandhi war ein indischer Rechts-anwalt.,0_short,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Mahatma 1:=Gandhi 2:=war 3:=ein 4:=indischer 5:=Rechts-anwalt.,2,"[[0, 1, 2, 5], [4]]",Mahatma Gandhi was an Indian lawyer.,"['# ::snt Mahatma Gandhi was an Indian lawyer.\n(l / lawyer\n      :mod (c / country\n            :name (n / name\n                  :op1 ""India""))\n      :domain (p / person\n            :name (n2 / name\n                  :op1 ""Mahatma""\n                  :op2 ""Gandhi"")))']","[l, attr-instance, lawyer, attr-mod, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]], attr-domain, [p, attr-instance, person, attr-name, [n2, attr-instance, name, attr-op1, ""mahatma"", attr-op2, ""gandhi""]]]"
379,379,379,29674,mahatma-gandhi,Er hat in Indien gelebt.,1_short,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Er 1:=hat 2:=in 3:=Indien 4:=gelebt.,1,,He lived in India.,"['# ::snt He lived in India.\n(l / live-01\n      :ARG0 (h / he)\n      :location (c / country\n            :name (n / name\n                  :op1 ""India"")))']","[l, attr-instance, live_01, attr-arg0, [h, attr-instance, he], attr-location, [c, attr-instance, country, attr-name, [n, attr-instance, name, attr-op1, ""india""]]]"
380,380,380,29675,mahatma-gandhi,Er hat vom Jahr 1869 bis zum Jahr 1948 gelebt.,2_short,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Er 1:=hat 2:=vom 3:=Jahr 4:=1869 5:=bis 6:=zum 7:=Jahr 8:=1948 9:=gelebt.,2,"[[2, 3, 4], [5, 6, 7, 8]]",He lived from 1869 to 1948.,['# ::snt He lived from 1869 to 1948.\n(l / live-01\n      :ARG0 (h / he)\n      :time (d / date-interval\n            :op1 (d2 / date-entity\n                  :year 1869)\n            :op2 (d3 / date-entity\n                  :year 1948)))'],"[l, attr-instance, live_01, attr-arg0, [h, attr-instance, he], attr-time, [d, attr-instance, date_interval, attr-op1, [d2, attr-instance, date_entity, attr-year, 1869], attr-op2, [d3, attr-instance, date_entity, attr-year, 1948]]]"
381,381,381,29676,mahatma-gandhi,"Er war auch ein Widerstands-kämpfer, Publizist, Politiker, Asket und Pazifist.",3_short,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,"0:=Er 1:=war 2:=auch 3:=ein 4:=Widerstands-kämpfer, 5:=Publizist, 6:=Politiker, 7:=Asket 8:=und 9:=Pazifist.",5,"[[4], [5], [6], [7], [9]]","He was also a resistance fighter, publicist, politician, ascetic and pacifist.","['# ::snt He was also a resistance fighter, publicist, politician, ascetic and pacifist.\n(a / and\n      :op1 (p / person\n            :ARG0-of (f / fight-01\n                  :ARG2 (r / resist-01)))\n      :op2 (p2 / publicist)\n      :op3 (p3 / politician)\n      :op4 (a2 / ascetic)\n      :op5 (p4 / pacifist)\n      :domain (h / he)\n      :mod (a3 / also))']","[a, attr-instance, and, attr-op1, [p, attr-instance, person, attr-arg0_of, [f, attr-instance, fight_01, attr-arg2, [r, attr-instance, resist_01]]], attr-op2, [p2, attr-instance, publicist], attr-op3, [p3, attr-instance, politician], attr-op4, [a2, attr-instance, ascetic], attr-op5, [p4, attr-instance, pacifist], attr-domain, [h, attr-instance, he], attr-mod, [a3, attr-instance, also]]"
382,382,382,29677,mahatma-gandhi,Er hat für die Rechte und die Befreiung seines Volkes gekämpft.,4_short,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Er 1:=hat 2:=für 3:=die 4:=Rechte 5:=und 6:=die 7:=Befreiung 8:=seines 9:=Volkes 10:=gekämpft.,2,"[[4], [7]]",He fought for the rights and liberation of his people.,['# ::snt He fought for the rights and liberation of his people.\n(f / fight-01\n      :ARG0 (h / he)\n      :ARG2 (a / and\n            :op1 (r / right-05\n                  :ARG1 (p / people\n                        :poss h))\n            :op2 (l / liberate-01\n                  :ARG1 p)))'],"[f, attr-instance, fight_01, attr-arg0, [h, attr-instance, he], attr-arg2, [a, attr-instance, and, attr-op1, [r, attr-instance, right_05, attr-arg1, [p, attr-instance, people, attr-poss, h]], attr-op2, [l, attr-instance, liberate_01, attr-arg1, p]]]"
383,383,383,29678,mahatma-gandhi,Das hat er ohne Gewalt gemacht.,5_short,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Das 1:=hat 2:=er 3:=ohne 4:=Gewalt 5:=gemacht.,1,,He did this without violence.,['# ::snt He did this without violence.\n(d / do-02\n      :ARG0 (h / he)\n      :ARG1 (t / this)\n      :manner (v / violence\n            :polarity -))'],"[d, attr-instance, do_02, attr-arg0, [h, attr-instance, he], attr-arg1, [t, attr-instance, this], attr-manner, [v, attr-instance, violence, attr-polarity, negative]]"
384,384,384,29679,mahatma-gandhi,Deshalb ist er für viele ein Vorbild.,6_short,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Deshalb 1:=ist 2:=er 3:=für 4:=viele 5:=ein 6:=Vorbild.,1,,That is why he is a role model for many.,['# ::snt That is why he is a role model for many.\n(c / cause-01\n      :ARG0 (t / that)\n      :ARG1 (r / role-model\n            :domain (h / he)\n            :beneficiary (m / many)))'],"[c, attr-instance, cause_01, attr-arg0, [t, attr-instance, that], attr-arg1, [r, attr-instance, role_model, attr-domain, [h, attr-instance, he], attr-beneficiary, [m, attr-instance, many]]]"
385,385,385,29680,mahatma-gandhi,Ein Vorbild für gewaltfreien Widerstand.,7_short,Personen|Geschichte|Hurraki:Überarbeiten,2016-01-24T14:10:25Z,ab8e1e48a3f3355687558d8cb4fd204d,0:=Ein 1:=Vorbild 2:=für 3:=gewaltfreien 4:=Widerstand.,2,"[[3], [4]]",A model for non-violent resistance.,['# ::snt A model for non-violent resistance.\n(m / model-01\n      :ARG1 (r / resist-01\n            :mod (v / violent\n                  :polarity -)))'],"[m, attr-instance, model_01, attr-arg1, [r, attr-instance, resist_01, attr-mod, [v, attr-instance, violent, attr-polarity, negative]]]"
386,386,386,29681,mail-apple,Mail gehört zu dem Betriebssystem Mac OS X.,0_long,Computer,2010-04-23T09:30:28Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Mail 1:=gehört 2:=zu 3:=dem 4:=Betriebssystem 5:=Mac 6:=OS 7:=X.,2,"[[4], [5, 6, 7]]",Mail is part of the Mac OS X operating system.,"['# ::snt Mail is part of the Mac OS X operating system.\n(h / have-part-91\n      :ARG1 (s / system\n            :ARG0-of (o / operate-01)\n            :mod (p / product\n                  :name (n / name\n                        :op1 ""Mac""\n                        :op2 ""OS""\n                        :op3 ""X"")))\n      :ARG2 (m / mail))']","[h, attr-instance, have_part_91, attr-arg1, [s, attr-instance, system, attr-arg0_of, [o, attr-instance, operate_01], attr-mod, [p, attr-instance, product, attr-name, [n, attr-instance, name, attr-op1, ""mac"", attr-op2, ""os"", attr-op3, ""x""]]], attr-arg2, [m, attr-instance, mail]]"
387,387,387,29682,mail-apple,Mail ist ein E-Mail-Programm.,0_short,Computer,2010-04-23T09:30:28Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Mail 1:=ist 2:=ein 3:=E-Mail-Programm.,1,,Mail is an email program.,['# ::snt Mail is an email program.\n(p / program\n      :mod (e / email)\n      :domain (m / mail))'],"[p, attr-instance, program, attr-mod, [e, attr-instance, email], attr-domain, [m, attr-instance, mail]]"
388,388,388,29683,mail-apple,Es wurde von dem Unternehmen Apple hergestellt.,1_short,Computer,2010-04-23T09:30:28Z,eaab3232dd7a824a6a774fd2f2814e47,0:=Es 1:=wurde 2:=von 3:=dem 4:=Unternehmen 5:=Apple 6:=hergestellt.,1,,It was manufactured by the company Apple.,"['# ::snt It was manufactured by the company Apple.\n(m / manufacture-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 ""Apple""))\n      :ARG1 (ii / it))']","[m, attr-instance, manufacture_01, attr-arg0, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""apple""]], attr-arg1, [ii, attr-instance, it]]"
389,389,389,29684,mail,Mail ist englisch.,0_short,Wörter_mit_verschiedenen_Bedeutungen,2010-04-19T09:26:26Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Mail 1:=ist 2:=englisch.,1,,Mail is English.,"['# ::snt Mail is English.\n(m / mail\n      :mod (l / language\n            :name (n / name\n                  :op1 ""English"")))']","[m, attr-instance, mail, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]]]"
390,390,390,29685,mail,"Auf deutsch heißt Mail ""Post"".",1_short,Wörter_mit_verschiedenen_Bedeutungen,2010-04-19T09:26:26Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,"0:=Auf 1:=deutsch 2:=heißt 3:=Mail 4:=""Post"".",1,,"In German, mail means ""post"".","['# ::snt In German, mail means ""post"".\n(m / mean-01\n      :ARG1 (m2 / mail-01)\n      :ARG2 (p / post-01)\n      :medium (l / language\n            :name (n / name\n                  :op1 ""German"")))']","[m, attr-instance, mean_01, attr-arg1, [m2, attr-instance, mail_01], attr-arg2, [p, attr-instance, post_01], attr-medium, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""german""]]]"
391,391,391,29686,mail,Das Wort Mail kann verschiedene Bedeutungen haben.,2_short,Wörter_mit_verschiedenen_Bedeutungen,2010-04-19T09:26:26Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Das 1:=Wort 2:=Mail 3:=kann 4:=verschiedene 5:=Bedeutungen 6:=haben.,1,,The word mail can have different meanings.,['# ::snt The word mail can have different meanings.\n(p / possible-01\n      :ARG1 (m / mean-01\n            :ARG1 (w / word\n                  :mod (m2 / mail))\n            :ARG2 (t / thing\n                  :ARG1-of (d / differ-02))))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, mean_01, attr-arg1, [w, attr-instance, word, attr-mod, [m2, attr-instance, mail]], attr-arg2, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, differ_02]]]]"
392,392,392,29687,mail,Es gibt die elektronische Post.,3_short,Wörter_mit_verschiedenen_Bedeutungen,2010-04-19T09:26:26Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Es 1:=gibt 2:=die 3:=elektronische 4:=Post.,1,,There is electronic mail.,['# ::snt There is electronic mail.\n(m / mail\n      :mod (e / electronic))'],"[m, attr-instance, mail, attr-mod, [e, attr-instance, electronic]]"
393,393,393,29688,mail,Informationen findet man unter E-Mail.,4_short,Wörter_mit_verschiedenen_Bedeutungen,2010-04-19T09:26:26Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Informationen 1:=findet 2:=man 3:=unter 4:=E-Mail.,1,,Information can be found under E-Mail.,"['# ::snt Information can be found under E-Mail.\n(p / possible-01\n      :ARG1 (f / find-01\n            :ARG1 (ii / information)\n            :location (c / company\n                  :name (n / name\n                        :op1 ""E-Mail""))))']","[p, attr-instance, possible_01, attr-arg1, [f, attr-instance, find_01, attr-arg1, [ii, attr-instance, information], attr-location, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""e_mail""]]]]"
394,394,394,29689,mail,Es gibt ein E-Mail-Programm.,5_short,Wörter_mit_verschiedenen_Bedeutungen,2010-04-19T09:26:26Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Es 1:=gibt 2:=ein 3:=E-Mail-Programm.,1,,There is an email program.,['# ::snt There is an email program.\n(p / program\n      :mod (e / email))'],"[p, attr-instance, program, attr-mod, [e, attr-instance, email]]"
395,395,395,29690,mail,Informationen findet man unter Mail (Apple).,6_short,Wörter_mit_verschiedenen_Bedeutungen,2010-04-19T09:26:26Z,58d6d1d5aca5e9e6ed470dcf6dafeb4e,0:=Informationen 1:=findet 2:=man 3:=unter 4:=Mail 5:=(Apple).,2,"[[0, 1, 2, 3, 4], [5]]",Information can be found under Mail (Apple).,"['# ::snt Information can be found under Mail (Apple).\n(p / possible-01\n      :ARG1 (f / find-01\n            :ARG1 (ii / information)\n            :location (u / under\n                  :op1 (c / company\n                        :name (n / name\n                              :op1 ""Mail"")\n                        :source (c2 / company\n                              :name (n2 / name\n                                    :op1 ""Apple""))))))']","[p, attr-instance, possible_01, attr-arg1, [f, attr-instance, find_01, attr-arg1, [ii, attr-instance, information], attr-location, [u, attr-instance, under, attr-op1, [c, attr-instance, company, attr-name, [n, attr-instance, name, attr-op1, ""mail""], attr-source, [c2, attr-instance, company, attr-name, [n2, attr-instance, name, attr-op1, ""apple""]]]]]]"
396,396,396,29691,mainstream,Main-stream ist der Geschmack von vielen Menschen.,0_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,0:=Main-stream 1:=ist 2:=der 3:=Geschmack 4:=von 5:=vielen 6:=Menschen.,1,,Mainstream is the taste of many people.,['# ::snt Mainstream is the taste of many people.\n(t / taste\n      :poss (p / person\n            :quant (m / many))\n      :domain (m2 / mainstream))'],"[t, attr-instance, taste, attr-poss, [p, attr-instance, person, attr-quant, [m, attr-instance, many]], attr-domain, [m2, attr-instance, mainstream]]"
397,397,397,29692,mainstream,"Das heißt, \newline sehr viele Menschen finden etwas gut oder schlecht.",1_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Das 1:=heißt, 2:=\newline 3:=sehr 4:=viele 5:=Menschen 6:=finden 7:=etwas 8:=gut 9:=oder 10:=schlecht.",2,"[[8], [10]]","That means, \newline very many people find something good or bad.","['# ::snt That means, \\newline very many people find something good or bad.\n(m / mean-01\n      :ARG1 (t / that)\n      :ARG2 (f / find-01\n            :ARG0 (p / person\n                  :quant (m2 / many\n                        :degree (v / very)))\n            :ARG1 (s / something\n                  :ARG1-of (o / or\n                        :op1 (g / good-02)\n                        :op2 (b / bad-07)))\n            :source (l / line\n                  :mod (n / newline))))']","[m, attr-instance, mean_01, attr-arg1, [t, attr-instance, that], attr-arg2, [f, attr-instance, find_01, attr-arg0, [p, attr-instance, person, attr-quant, [m2, attr-instance, many, attr-degree, [v, attr-instance, very]]], attr-arg1, [s, attr-instance, something, attr-arg1_of, [o, attr-instance, or, attr-op1, [g, attr-instance, good_02], attr-op2, [b, attr-instance, bad_07]]], attr-source, [l, attr-instance, line, attr-mod, [n, attr-instance, newline]]]]"
398,398,398,29693,mainstream,Wenn es sehr viele Menschen sind ist es ein Main-stream.,2_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,0:=Wenn 1:=es 2:=sehr 3:=viele 4:=Menschen 5:=sind 6:=ist 7:=es 8:=ein 9:=Main-stream.,2,"[[0, 1, 2, 3, 4, 5], [6, 7, 9]]",If there are a lot of people it is mainstream.,['# ::snt If there are a lot of people it is mainstream.\n(m / mainstream-02\n      :ARG1 (ii / it)\n      :condition (p / person\n            :quant (l / lot)))'],"[m, attr-instance, mainstream_02, attr-arg1, [ii, attr-instance, it], attr-condition, [p, attr-instance, person, attr-quant, [l, attr-instance, lot]]]"
399,399,399,29694,mainstream,"Main-stream kann zum Beispiel Musik, eine Zeitung oder ein Fernseh-programm sein.",3_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Main-stream 1:=kann 2:=zum 3:=Beispiel 4:=Musik, 5:=eine 6:=Zeitung 7:=oder 8:=ein 9:=Fernseh-programm 10:=sein.",3,"[[4], [6], [9]]","Mainstream can be, for example, music, a newspaper or a television program.","['# ::snt Mainstream can be, for example, music, a newspaper or a television program.\n(p / possible-01\n      :ARG1 (o / or\n            :op1 (m / music)\n            :op2 (n / newspaper)\n            :op3 (p2 / program\n                  :mod (t / television))\n            :domain (s / stream)\n            :ARG0-of (e / exemplify-01)))']","[p, attr-instance, possible_01, attr-arg1, [o, attr-instance, or, attr-op1, [m, attr-instance, music], attr-op2, [n, attr-instance, newspaper], attr-op3, [p2, attr-instance, program, attr-mod, [t, attr-instance, television]], attr-domain, [s, attr-instance, stream], attr-arg0_of, [e, attr-instance, exemplify_01]]]"
400,400,400,29695,mainstream,Das Gegenteil von einem Main-stream ist eine Sub-kultur.,4_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Gegenteil 2:=von 3:=einem 4:=Main-stream 5:=ist 6:=eine 7:=Sub-kultur.,1,,The opposite of a mainstream is a sub-culture.,['# ::snt The opposite of a mainstream is a sub-culture.\n(o / opposite-01\n      :ARG1 (m / mainstream-02)\n      :ARG2 (s / subculture))'],"[o, attr-instance, opposite_01, attr-arg1, [m, attr-instance, mainstream_02], attr-arg2, [s, attr-instance, subculture]]"
401,401,401,29696,mainstream,Das Wort Main-stream ist ein Substantiv.,5_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,0:=Das 1:=Wort 2:=Main-stream 3:=ist 4:=ein 5:=Substantiv.,2,"[[1], [5]]",The word mainstream is a noun.,['# ::snt The word mainstream is a noun.\n(n / noun\n      :domain (w / word\n            :mod (m / mainstream-02)))'],"[n, attr-instance, noun, attr-domain, [w, attr-instance, word, attr-mod, [m, attr-instance, mainstream_02]]]"
402,402,402,29697,mainstream,Es hat die 2 englischen Wörter: • Main (heißt auf Deutsch Haupt  damit sind viele Menschen gemeint),6_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=hat 2:=die 3:=2 4:=englischen 5:=Wörter: 6:=• 7:=Main 8:=(heißt 9:=auf 10:=Deutsch 11:=Haupt 12:= 13:=damit 14:=sind 15:=viele 16:=Menschen 17:=gemeint),3,"[[0, 1, 3, 4, 5, 7], [8, 9, 10, 11], [13, 14, 15, 16, 17]]","It has the 2 English words: • Main (in German it means main, meaning many people)","['# ::snt It has the 2 English words: • Main (in German it means main, meaning many people)\n(h / have-03\n      :ARG0 (ii / it)\n      :ARG1 (w / word\n            :quant 2\n            :mod (l / language\n                  :name (n / name\n                        :op1 ""English""))\n            :ARG1-of (m / mean-01\n                  :ARG2 (s / string-entity\n                        :value ""Main"")\n                  :ARG1-of (m2 / mean-01\n                        :ARG2 (p / person\n                              :quant (m3 / many))\n                        :medium (l2 / language\n                              :name (n2 / name\n                                    :op1 ""German""))))))']","[h, attr-instance, have_03, attr-arg0, [ii, attr-instance, it], attr-arg1, [w, attr-instance, word, attr-quant, 2, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, [s, attr-instance, string_entity, attr-value, ""main""], attr-arg1_of, [m2, attr-instance, mean_01, attr-arg2, [p, attr-instance, person, attr-quant, [m3, attr-instance, many]], attr-medium, [l2, attr-instance, language, attr-name, [n2, attr-instance, name, attr-op1, ""german""]]]]]]"
403,403,403,29698,mainstream,Es hat die 2 englischen Wörter: • Stream (heißt auf Deutsch Strom  damit ist ein bestimmter Geschmack gemeint),7_long,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,0:=Es 1:=hat 2:=die 3:=2 4:=englischen 5:=Wörter: 6:=• 7:=Stream 8:=(heißt 9:=auf 10:=Deutsch 11:=Strom 12:= 13:=damit 14:=ist 15:=ein 16:=bestimmter 17:=Geschmack 18:=gemeint),3,"[[0, 1, 3, 4, 5, 7], [8, 9, 10, 11], [13, 14, 16, 17, 18]]","It has the 2 English words: • Stream (in German it means Strom, which means a certain taste)","['# ::snt It has the 2 English words: • Stream (in German it means Strom, which means a certain taste)\n(h / have-03\n      :ARG0 (ii / it)\n      :ARG1 (w / word\n            :quant 2\n            :mod (l / language\n                  :name (n / name\n                        :op1 ""English""))\n            :consist-of (s / string-entity\n                  :value ""Stream"")\n            :ARG1-of (m / mean-01\n                  :ARG2 s\n                  :value ""Strom"")\n            :ARG1-of (m2 / mean-01\n                  :ARG2 (t / taste\n                        :mod (c / certain)))))']","[h, attr-instance, have_03, attr-arg0, [ii, attr-instance, it], attr-arg1, [w, attr-instance, word, attr-quant, 2, attr-mod, [l, attr-instance, language, attr-name, [n, attr-instance, name, attr-op1, ""english""]], attr-consist_of, [s, attr-instance, string_entity, attr-value, ""stream""], attr-arg1_of, [m, attr-instance, mean_01, attr-arg2, s, attr-value, ""strom""], attr-arg1_of, [m2, attr-instance, mean_01, attr-arg2, [t, attr-instance, taste, attr-mod, [c, attr-instance, certain]]]]]"
404,404,404,29699,mainstream,"Wenn viele Menschen das gleiche gut finden, \newline gehören sie zum Mainstream.",0_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,"0:=Wenn 1:=viele 2:=Menschen 3:=das 4:=gleiche 5:=gut 6:=finden, 7:=\newline 8:=gehören 9:=sie 10:=zum 11:=Mainstream.",2,"[[0, 1, 2, 4, 5, 6], [8, 9, 10, 11]]","If many people like the same thing, \newline they are part of the mainstream.","['# ::snt If many people like the same thing, \\newline they are part of the mainstream.\n(h / have-condition-91\n      :ARG1 (h2 / have-part-91\n            :ARG1 (m / mainstream-02)\n            :ARG2 (p / person\n                  :quant (m2 / many)))\n      :ARG2 (l / like-01\n            :ARG0 p\n            :ARG1 (t / thing\n                  :ARG1-of (s / same-01)))\n      :mod (n / newline))']","[h, attr-instance, have_condition_91, attr-arg1, [h2, attr-instance, have_part_91, attr-arg1, [m, attr-instance, mainstream_02], attr-arg2, [p, attr-instance, person, attr-quant, [m2, attr-instance, many]]], attr-arg2, [l, attr-instance, like_01, attr-arg0, p, attr-arg1, [t, attr-instance, thing, attr-arg1_of, [s, attr-instance, same_01]]], attr-mod, [n, attr-instance, newline]]"
405,405,405,29700,mainstream,Main-stream ist alles was sehr viele gut finden.,1_short,Ohne_Kategorie|Seiten_mit_defekten_Dateilinks,2016-05-30T16:05:05Z,48f66906899cc4a9477b6c9e32ff4424,0:=Main-stream 1:=ist 2:=alles 3:=was 4:=sehr 5:=viele 6:=gut 7:=finden.,2,"[[0, 1, 2], [3, 4, 5, 6, 7]]",Mainstream is everything that many people like.,['# ::snt Mainstream is everything that many people like.\n(e / everything\n      :ARG1-of (l / like-01\n            :ARG0 (p / person\n                  :quant (m / many)))\n      :domain (m2 / mainstream))'],"[e, attr-instance, everything, attr-arg1_of, [l, attr-instance, like_01, attr-arg0, [p, attr-instance, person, attr-quant, [m, attr-instance, many]]], attr-domain, [m2, attr-instance, mainstream]]"
406,406,406,29702,mais,Aus den Mais-körnern kann man verschiedene Sachen machen.,0_long,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=Aus 1:=den 2:=Mais-körnern 3:=kann 4:=man 5:=verschiedene 6:=Sachen 7:=machen.,1,,You can make different things from the corn kernels.,['# ::snt You can make different things from the corn kernels.\n(p / possible-01\n      :ARG1 (m / make-01\n            :ARG0 (y / you)\n            :ARG1 (t / thing\n                  :ARG1-of (d / differ-02\n                        :ARG2 (c / crop\n                              :consist-of (c2 / corn))))))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, make_01, attr-arg0, [y, attr-instance, you], attr-arg1, [t, attr-instance, thing, attr-arg1_of, [d, attr-instance, differ_02, attr-arg2, [c, attr-instance, crop, attr-consist_of, [c2, attr-instance, corn]]]]]]"
407,407,407,29710,mais,Mais kann auch Tier-futter sein.,8_long,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=Mais 1:=kann 2:=auch 3:=Tier-futter 4:=sein.,1,,Corn can also be animal feed.,['# ::snt Corn can also be animal feed.\n(p / possible-01\n      :ARG1 (f / feed-01\n            :ARG1 (c / corn)\n            :ARG2 (a / animal)\n            :mod (a2 / also)))'],"[p, attr-instance, possible_01, attr-arg1, [f, attr-instance, feed_01, attr-arg1, [c, attr-instance, corn], attr-arg2, [a, attr-instance, animal], attr-mod, [a2, attr-instance, also]]]"
408,408,408,29713,mais,Aus Mais kann man auch Bio-ethanol machen.,11_long,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=Aus 1:=Mais 2:=kann 3:=man 4:=auch 5:=Bio-ethanol 6:=machen.,1,,Bioethanol can also be made from corn.,['# ::snt Bioethanol can also be made from corn.\n(p / possible-01\n      :ARG1 (m / make-01\n            :ARG1 (b / bioethanol)\n            :ARG2 (c / corn)\n            :mod (a / also)))'],"[p, attr-instance, possible_01, attr-arg1, [m, attr-instance, make_01, attr-arg1, [b, attr-instance, bioethanol], attr-arg2, [c, attr-instance, corn], attr-mod, [a, attr-instance, also]]]"
409,409,409,29715,mais,Mais ist eine Getreide-pflanze.,0_short,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=Mais 1:=ist 2:=eine 3:=Getreide-pflanze.,1,,Corn is a cereal plant.,['# ::snt Corn is a cereal plant.\n(p / plant\n      :mod (c / cereal)\n      :domain (c2 / corn))'],"[p, attr-instance, plant, attr-mod, [c, attr-instance, cereal], attr-domain, [c2, attr-instance, corn]]"
410,410,410,29716,mais,Mais kommt aus Mittel-amerika.,1_short,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=Mais 1:=kommt 2:=aus 3:=Mittel-amerika.,1,,Corn comes from Central America.,"['# ::snt Corn comes from Central America.\n(c / come-01\n      :ARG1 (c2 / corn)\n      :ARG3 (w / world-region\n            :name (n / name\n                  :op1 ""Central""\n                  :op2 ""America"")))']","[c, attr-instance, come_01, attr-arg1, [c2, attr-instance, corn], attr-arg3, [w, attr-instance, world_region, attr-name, [n, attr-instance, name, attr-op1, ""central"", attr-op2, ""america""]]]"
411,411,411,29717,mais,Mais ist eine hoch-wachsende Pflanze.,2_short,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=Mais 1:=ist 2:=eine 3:=hoch-wachsende 4:=Pflanze.,1,,Corn is a tall growing plant.,['# ::snt Corn is a tall growing plant.\n(p / plant\n      :ARG1-of (g / grow-03\n            :ARG2 (t / tall))\n      :domain (c / corn))'],"[p, attr-instance, plant, attr-arg1_of, [g, attr-instance, grow_03, attr-arg2, [t, attr-instance, tall]], attr-domain, [c, attr-instance, corn]]"
412,412,412,29718,mais,Mais hat lange und breite Blätter.,3_short,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=Mais 1:=hat 2:=lange 3:=und 4:=breite 5:=Blätter.,2,"[[2], [4]]",Corn has long and broad leaves.,['# ::snt Corn has long and broad leaves.\n(h / have-03\n      :ARG0 (c / corn)\n      :ARG1 (l / leaf\n            :ARG1-of (l2 / long-03)\n            :ARG1-of (b / broad-02)))'],"[h, attr-instance, have_03, attr-arg0, [c, attr-instance, corn], attr-arg1, [l, attr-instance, leaf, attr-arg1_of, [l2, attr-instance, long_03], attr-arg1_of, [b, attr-instance, broad_02]]]"
413,413,413,29719,mais,Die Mais-pflanze ist grün.,4_short,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=Die 1:=Mais-pflanze 2:=ist 3:=grün.,1,,The corn plant is green.,['# ::snt The corn plant is green.\n(g / green-03\n      :ARG1 (p / plant\n            :mod (c / corn)))'],"[g, attr-instance, green_03, attr-arg1, [p, attr-instance, plant, attr-mod, [c, attr-instance, corn]]]"
414,414,414,29720,mais,An der Pflanze wachsen Kolben.,5_short,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=An 1:=der 2:=Pflanze 3:=wachsen 4:=Kolben.,1,,Cobs grow on the plant.,['# ::snt Cobs grow on the plant.\n(g / grow-03\n      :ARG1 (c / cob)\n      :location (p / plant))'],"[g, attr-instance, grow_03, attr-arg1, [c, attr-instance, cob], attr-location, [p, attr-instance, plant]]"
415,415,415,29721,mais,Im Mais-kolben sind gelbe Körner.,6_short,Natur|Pflanzen|Essen_und_Trinken|Bäcker|Seiten_mit_defekten_Dateilinks,2020-07-15T18:52:04Z,cfbe77d115cd524def4ccbe596a54842,0:=Im 1:=Mais-kolben 2:=sind 3:=gelbe 4:=Körner.,1,,There are yellow kernels in the corn cob.,['# ::snt There are yellow kernels in the corn cob.\n(b / be-located-at-91\n      :ARG1 (c / crop\n            :ARG1-of (y / yellow-02))\n      :ARG2 (c2 / cob\n            :mod (c3 / corn)))'],"[b, attr-instance, be_located_at_91, attr-arg1, [c, attr-instance, crop, attr-arg1_of, [y, attr-instance, yellow_02]], attr-arg2, [c2, attr-instance, cob, attr-mod, [c3, attr-instance, corn]]]"
